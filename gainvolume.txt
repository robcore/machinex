/root/machinex/sound/aoa/aoa.h
/root/machinex/sound/aoa/codecs/onyx.c
/root/machinex/sound/aoa/codecs/onyx.h
/root/machinex/sound/aoa/codecs/tas.c
/root/machinex/sound/aoa/codecs/tas-gain-table.h
/root/machinex/sound/aoa/codecs/tas.h
/root/machinex/sound/aoa/soundbus/i2sbus/pcm.c
/root/machinex/sound/built-in.o
/root/machinex/sound/core/built-in.o
/root/machinex/sound/core/control.c
/root/machinex/sound/core/device.c
/root/machinex/sound/core/hwdep.c
/root/machinex/sound/core/isadma.c
/root/machinex/sound/core/memalloc.c
/root/machinex/sound/core/oss/mixer_oss.c
/root/machinex/sound/core/oss/pcm_oss.c
/root/machinex/sound/core/pcm.c
/root/machinex/sound/core/pcm_compat.c
/root/machinex/sound/core/pcm_lib.c
/root/machinex/sound/core/pcm_lib.o
/root/machinex/sound/core/pcm_native.c
/root/machinex/sound/core/rawmidi.c
/root/machinex/sound/core/seq/oss/seq_oss_event.c
/root/machinex/sound/core/seq/oss/seq_oss_readq.c
/root/machinex/sound/core/seq/oss/seq_oss_rw.c
/root/machinex/sound/core/seq/oss/seq_oss_synth.c
/root/machinex/sound/core/seq/seq_clientmgr.c
/root/machinex/sound/core/seq/seq_fifo.c
/root/machinex/sound/core/seq/seq_memory.c
/root/machinex/sound/core/seq/seq_midi_emul.c
/root/machinex/sound/core/seq/seq_queue.c
/root/machinex/sound/core/seq/seq_queue.h
/root/machinex/sound/core/snd-pcm.o
/root/machinex/sound/core/timer.c
/root/machinex/sound/core/vmaster.c
/root/machinex/sound/drivers/dummy.c
/root/machinex/sound/drivers/ml403-ac97cr.c
/root/machinex/sound/drivers/mpu401/mpu401_uart.c
/root/machinex/sound/drivers/opl3/opl3_drums.c
/root/machinex/sound/drivers/opl3/opl3_midi.c
/root/machinex/sound/drivers/opl3/opl3_synth.c
/root/machinex/sound/drivers/opl3/opl3_voice.h
/root/machinex/sound/drivers/opl4/opl4_local.h
/root/machinex/sound/drivers/opl4/opl4_seq.c
/root/machinex/sound/drivers/opl4/opl4_synth.c
/root/machinex/sound/drivers/pcm-indirect2.c
/root/machinex/sound/drivers/vx/vx_mixer.c
/root/machinex/sound/drivers/vx/vx_pcm.c
/root/machinex/sound/firewire/cmp.c
/root/machinex/sound/firewire/isight.c
/root/machinex/sound/firewire/iso-resources.c
/root/machinex/sound/firewire/speakers.c
/root/machinex/sound/i2c/cs8427.c
/root/machinex/sound/i2c/other/ak4xxx-adda.c
/root/machinex/sound/i2c/other/pt2258.c
/root/machinex/sound/i2c/other/tea575x-tuner.c
/root/machinex/sound/i2c/tea6330t.c
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c
/root/machinex/sound/isa/cmi8330.c
/root/machinex/sound/isa/cs423x/cs4236_lib.c
/root/machinex/sound/isa/es1688/es1688_lib.c
/root/machinex/sound/isa/es18xx.c
/root/machinex/sound/isa/galaxy/galaxy.c
/root/machinex/sound/isa/gus/gus_io.c
/root/machinex/sound/isa/gus/gus_irq.c
/root/machinex/sound/isa/gus/gus_main.c
/root/machinex/sound/isa/gus/gusmax.c
/root/machinex/sound/isa/gus/gus_pcm.c
/root/machinex/sound/isa/gus/gus_reset.c
/root/machinex/sound/isa/gus/gus_volume.c
/root/machinex/sound/isa/gus/Makefile
/root/machinex/sound/isa/msnd/msnd.c
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c
/root/machinex/sound/isa/opl3sa2.c
/root/machinex/sound/isa/opti9xx/opti92x-ad1848.c
/root/machinex/sound/isa/sb/emu8000.c
/root/machinex/sound/isa/sb/emu8000_callback.c
/root/machinex/sound/isa/sb/emu8000_pcm.c
/root/machinex/sound/isa/sb/sb16_csp.c
/root/machinex/sound/isa/sb/sb16_main.c
/root/machinex/sound/isa/sb/sb8_main.c
/root/machinex/sound/isa/sb/sb8_midi.c
/root/machinex/sound/isa/sb/sb_mixer.c
/root/machinex/sound/isa/sc6000.c
/root/machinex/sound/isa/sscape.c
/root/machinex/sound/isa/wavefront/wavefront_synth.c
/root/machinex/sound/isa/wss/wss_lib.c
/root/machinex/sound/mips/ad1843.c
/root/machinex/sound/mips/hal2.c
/root/machinex/sound/mips/hal2.h
/root/machinex/sound/mips/sgio2audio.c
/root/machinex/sound/oss/ad1848.c
/root/machinex/sound/oss/ad1848_mixer.h
/root/machinex/sound/oss/aedsp16.c
/root/machinex/sound/oss/audio.c
/root/machinex/sound/oss/CHANGELOG
/root/machinex/sound/oss/dev_table.h
/root/machinex/sound/oss/dmabuf.c
/root/machinex/sound/oss/dmasound/dmasound_atari.c
/root/machinex/sound/oss/dmasound/dmasound_core.c
/root/machinex/sound/oss/dmasound/dmasound.h
/root/machinex/sound/oss/dmasound/dmasound_paula.c
/root/machinex/sound/oss/dmasound/dmasound_q40.c
/root/machinex/sound/oss/Kconfig
/root/machinex/sound/oss/midibuf.c
/root/machinex/sound/oss/midi_synth.c
/root/machinex/sound/oss/midi_synth.h
/root/machinex/sound/oss/mpu401.c
/root/machinex/sound/oss/msnd_pinnacle.c
/root/machinex/sound/oss/opl3.c
/root/machinex/sound/oss/opl3_hw.h
/root/machinex/sound/oss/pas2_mixer.c
/root/machinex/sound/oss/pss.c
/root/machinex/sound/oss/sb_common.c
/root/machinex/sound/oss/sb_ess.c
/root/machinex/sound/oss/sb_mixer.c
/root/machinex/sound/oss/sequencer.c
/root/machinex/sound/oss/soundcard.c
/root/machinex/sound/oss/swarm_cs4297a.c
/root/machinex/sound/oss/uart401.c
/root/machinex/sound/oss/uart6850.c
/root/machinex/sound/oss/vidc.c
/root/machinex/sound/oss/vidc.h
/root/machinex/sound/oss/vwsnd.c
/root/machinex/sound/oss/waveartist.c
/root/machinex/sound/oss/waveartist.h
/root/machinex/sound/parisc/harmony.c
/root/machinex/sound/parisc/harmony.h
/root/machinex/sound/pci/ac97/ac97_codec.c
/root/machinex/sound/pci/ac97/ac97_patch.c
/root/machinex/sound/pci/ac97/ac97_pcm.c
/root/machinex/sound/pci/ac97/ac97_proc.c
/root/machinex/sound/pci/ak4531_codec.c
/root/machinex/sound/pci/ali5451/ali5451.c
/root/machinex/sound/pci/als300.c
/root/machinex/sound/pci/als4000.c
/root/machinex/sound/pci/asihpi/asihpi.c
/root/machinex/sound/pci/asihpi/hpicmn.c
/root/machinex/sound/pci/asihpi/hpifunc.c
/root/machinex/sound/pci/asihpi/hpi.h
/root/machinex/sound/pci/asihpi/hpi_internal.h
/root/machinex/sound/pci/au88x0/au8810.h
/root/machinex/sound/pci/au88x0/au8820.h
/root/machinex/sound/pci/au88x0/au8830.h
/root/machinex/sound/pci/au88x0/au88x0_a3d.c
/root/machinex/sound/pci/au88x0/au88x0_a3d.h
/root/machinex/sound/pci/au88x0/au88x0_core.c
/root/machinex/sound/pci/au88x0/au88x0_eq.c
/root/machinex/sound/pci/au88x0/au88x0_eqdata.c
/root/machinex/sound/pci/au88x0/au88x0_eq.h
/root/machinex/sound/pci/au88x0/au88x0.h
/root/machinex/sound/pci/au88x0/au88x0_pcm.c
/root/machinex/sound/pci/au88x0/au88x0_synth.c
/root/machinex/sound/pci/au88x0/au88x0_wt.h
/root/machinex/sound/pci/au88x0/au88x0_xtalk.c
/root/machinex/sound/pci/au88x0/au88x0_xtalk.h
/root/machinex/sound/pci/aw2/aw2-saa7146.c
/root/machinex/sound/pci/azt3328.c
/root/machinex/sound/pci/azt3328.h
/root/machinex/sound/pci/bt87x.c
/root/machinex/sound/pci/ca0106/ca0106.h
/root/machinex/sound/pci/ca0106/ca0106_main.c
/root/machinex/sound/pci/ca0106/ca0106_mixer.c
/root/machinex/sound/pci/cmipci.c
/root/machinex/sound/pci/cs4281.c
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c
/root/machinex/sound/pci/cs46xx/cs46xx_lib.h
/root/machinex/sound/pci/cs46xx/dsp_spos.c
/root/machinex/sound/pci/cs46xx/dsp_spos.h
/root/machinex/sound/pci/cs46xx/dsp_spos_scb_lib.c
/root/machinex/sound/pci/cs46xx/imgs/cwcdma.asp
/root/machinex/sound/pci/ctxfi/cthw20k2.c
/root/machinex/sound/pci/ctxfi/ctmixer.c
/root/machinex/sound/pci/ctxfi/ctmixer.h
/root/machinex/sound/pci/echoaudio/echoaudio_3g.c
/root/machinex/sound/pci/echoaudio/echoaudio.c
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.h
/root/machinex/sound/pci/echoaudio/echoaudio_gml.c
/root/machinex/sound/pci/echoaudio/echoaudio.h
/root/machinex/sound/pci/echoaudio/gina20.c
/root/machinex/sound/pci/echoaudio/gina20_dsp.c
/root/machinex/sound/pci/echoaudio/gina24_dsp.c
/root/machinex/sound/pci/echoaudio/indigodj_dsp.c
/root/machinex/sound/pci/echoaudio/indigodjx_dsp.c
/root/machinex/sound/pci/echoaudio/indigo_dsp.c
/root/machinex/sound/pci/echoaudio/indigo_express_dsp.c
/root/machinex/sound/pci/echoaudio/indigoio_dsp.c
/root/machinex/sound/pci/echoaudio/indigoiox_dsp.c
/root/machinex/sound/pci/echoaudio/layla20.c
/root/machinex/sound/pci/echoaudio/layla20_dsp.c
/root/machinex/sound/pci/echoaudio/layla24_dsp.c
/root/machinex/sound/pci/echoaudio/mia.c
/root/machinex/sound/pci/echoaudio/mia_dsp.c
/root/machinex/sound/pci/echoaudio/mona_dsp.c
/root/machinex/sound/pci/emu10k1/emu10k1_callback.c
/root/machinex/sound/pci/emu10k1/emu10k1_main.c
/root/machinex/sound/pci/emu10k1/emu10k1x.c
/root/machinex/sound/pci/emu10k1/emufx.c
/root/machinex/sound/pci/emu10k1/emumixer.c
/root/machinex/sound/pci/emu10k1/emupcm.c
/root/machinex/sound/pci/emu10k1/io.c
/root/machinex/sound/pci/emu10k1/p16v.c
/root/machinex/sound/pci/emu10k1/p16v.h
/root/machinex/sound/pci/emu10k1/p17v.h
/root/machinex/sound/pci/emu10k1/tina2.h
/root/machinex/sound/pci/ens1370.c
/root/machinex/sound/pci/es1938.c
/root/machinex/sound/pci/es1968.c
/root/machinex/sound/pci/fm801.c
/root/machinex/sound/pci/hda/hda_codec.c
/root/machinex/sound/pci/hda/hda_codec.h
/root/machinex/sound/pci/hda/hda_generic.c
/root/machinex/sound/pci/hda/hda_intel.c
/root/machinex/sound/pci/hda/hda_local.h
/root/machinex/sound/pci/hda/hda_proc.c
/root/machinex/sound/pci/hda/patch_analog.c
/root/machinex/sound/pci/hda/patch_ca0110.c
/root/machinex/sound/pci/hda/patch_ca0132.c
/root/machinex/sound/pci/hda/patch_cirrus.c
/root/machinex/sound/pci/hda/patch_cmedia.c
/root/machinex/sound/pci/hda/patch_conexant.c
/root/machinex/sound/pci/hda/patch_hdmi.c
/root/machinex/sound/pci/hda/patch_realtek.c
/root/machinex/sound/pci/hda/patch_sigmatel.c
/root/machinex/sound/pci/hda/patch_via.c
/root/machinex/sound/pci/ice1712/aureon.c
/root/machinex/sound/pci/ice1712/delta.c
/root/machinex/sound/pci/ice1712/envy24ht.h
/root/machinex/sound/pci/ice1712/ice1712.c
/root/machinex/sound/pci/ice1712/ice1712.h
/root/machinex/sound/pci/ice1712/ice1724.c
/root/machinex/sound/pci/ice1712/juli.c
/root/machinex/sound/pci/ice1712/maya44.c
/root/machinex/sound/pci/ice1712/phase.c
/root/machinex/sound/pci/ice1712/pontis.c
/root/machinex/sound/pci/ice1712/prodigy192.c
/root/machinex/sound/pci/ice1712/prodigy_hifi.c
/root/machinex/sound/pci/ice1712/quartet.c
/root/machinex/sound/pci/ice1712/revo.c
/root/machinex/sound/pci/ice1712/se.c
/root/machinex/sound/pci/ice1712/stac946x.h
/root/machinex/sound/pci/ice1712/wtm.c
/root/machinex/sound/pci/intel8x0.c
/root/machinex/sound/pci/Kconfig
/root/machinex/sound/pci/korg1212/korg1212.c
/root/machinex/sound/pci/lola/lola.c
/root/machinex/sound/pci/lola/lola.h
/root/machinex/sound/pci/lola/lola_mixer.c
/root/machinex/sound/pci/lola/lola_pcm.c
/root/machinex/sound/pci/lx6464es/lx6464es.c
/root/machinex/sound/pci/lx6464es/lx_core.c
/root/machinex/sound/pci/lx6464es/lx_core.h
/root/machinex/sound/pci/maestro3.c
/root/machinex/sound/pci/mixart/mixart.c
/root/machinex/sound/pci/mixart/mixart_core.c
/root/machinex/sound/pci/mixart/mixart_core.h
/root/machinex/sound/pci/mixart/mixart.h
/root/machinex/sound/pci/mixart/mixart_hwdep.c
/root/machinex/sound/pci/mixart/mixart_mixer.c
/root/machinex/sound/pci/nm256/nm256.c
/root/machinex/sound/pci/oxygen/cs4245.h
/root/machinex/sound/pci/oxygen/oxygen.c
/root/machinex/sound/pci/oxygen/oxygen.h
/root/machinex/sound/pci/oxygen/oxygen_lib.c
/root/machinex/sound/pci/oxygen/oxygen_mixer.c
/root/machinex/sound/pci/oxygen/wm8776.h
/root/machinex/sound/pci/oxygen/xonar_cs43xx.c
/root/machinex/sound/pci/oxygen/xonar_dg.c
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c
/root/machinex/sound/pci/pcxhr/pcxhr.h
/root/machinex/sound/pci/pcxhr/pcxhr_mix22.c
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c
/root/machinex/sound/pci/riptide/riptide.c
/root/machinex/sound/pci/rme9652/hdsp.c
/root/machinex/sound/pci/rme9652/hdspm.c
/root/machinex/sound/pci/rme96.c
/root/machinex/sound/pci/sis7019.c
/root/machinex/sound/pci/sis7019.h
/root/machinex/sound/pci/sonicvibes.c
/root/machinex/sound/pci/trident/trident_main.c
/root/machinex/sound/pci/via82xx.c
/root/machinex/sound/pci/via82xx_modem.c
/root/machinex/sound/pci/vx222/vx222_ops.c
/root/machinex/sound/pci/ymfpci/ymfpci_main.c
/root/machinex/sound/pcmcia/pdaudiocf/pdaudiocf.h
/root/machinex/sound/ppc/awacs.c
/root/machinex/sound/ppc/awacs.h
/root/machinex/sound/ppc/beep.c
/root/machinex/sound/ppc/burgundy.c
/root/machinex/sound/ppc/burgundy.h
/root/machinex/sound/ppc/daca.c
/root/machinex/sound/ppc/tumbler.c
/root/machinex/sound/ppc/tumbler_volume.h
/root/machinex/sound/sh/aica.c
/root/machinex/sound/sh/aica.h
/root/machinex/sound/soc/atmel/atmel-pcm.c
/root/machinex/sound/soc/au1x/psc-ac97.c
/root/machinex/sound/soc/blackfin/bf5xx-i2s.c
/root/machinex/sound/soc/blackfin/bf5xx-tdm.c
/root/machinex/sound/soc/built-in.o
/root/machinex/sound/soc/codecs/88pm860x-codec.c
/root/machinex/sound/soc/codecs/88pm860x-codec.h
/root/machinex/sound/soc/codecs/ad1836.c
/root/machinex/sound/soc/codecs/ad193x.c
/root/machinex/sound/soc/codecs/ad1980.c
/root/machinex/sound/soc/codecs/adau1373.c
/root/machinex/sound/soc/codecs/ak4535.c
/root/machinex/sound/soc/codecs/ak4641.c
/root/machinex/sound/soc/codecs/ak4642.c
/root/machinex/sound/soc/codecs/ak4671.c
/root/machinex/sound/soc/codecs/ak4671.h
/root/machinex/sound/soc/codecs/alc5623.c
/root/machinex/sound/soc/codecs/alc5623.h
/root/machinex/sound/soc/codecs/alc5632.c
/root/machinex/sound/soc/codecs/alc5632.h
/root/machinex/sound/soc/codecs/audience/es325-access.h
/root/machinex/sound/soc/codecs/audience/es325.c
/root/machinex/sound/soc/codecs/audience/es325.h
/root/machinex/sound/soc/codecs/audience/es515-access.h
/root/machinex/sound/soc/codecs/audience/es515.h
/root/machinex/sound/soc/codecs/audience/es705-access.h
/root/machinex/sound/soc/codecs/audience/es705.c
/root/machinex/sound/soc/codecs/audience/es705-cdev.c
/root/machinex/sound/soc/codecs/audience/es705.h
/root/machinex/sound/soc/codecs/audience/es705-routes.h
/root/machinex/sound/soc/codecs/audience/es705-uart-common.c
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h
/root/machinex/sound/soc/codecs/audience/escore-cdev.c
/root/machinex/sound/soc/codecs/built-in.o
/root/machinex/sound/soc/codecs/cs4270.c
/root/machinex/sound/soc/codecs/cs42l51.h
/root/machinex/sound/soc/codecs/cs8427.c
/root/machinex/sound/soc/codecs/cs8427.o
/root/machinex/sound/soc/codecs/da7210.c
/root/machinex/sound/soc/codecs/es325-access.h
/root/machinex/sound/soc/codecs/es325.c
/root/machinex/sound/soc/codecs/es325.h
/root/machinex/sound/soc/codecs/es325.o
/root/machinex/sound/soc/codecs/jz4740.c
/root/machinex/sound/soc/codecs/lm4857.c
/root/machinex/sound/soc/codecs/max9768.c
/root/machinex/sound/soc/codecs/max98088.c
/root/machinex/sound/soc/codecs/max98088.h
/root/machinex/sound/soc/codecs/max98095.h
/root/machinex/sound/soc/codecs/max9850.c
/root/machinex/sound/soc/codecs/max9850.h
/root/machinex/sound/soc/codecs/max9877.c
/root/machinex/sound/soc/codecs/max9877.h
/root/machinex/sound/soc/codecs/rt5631.c
/root/machinex/sound/soc/codecs/rt5631.h
/root/machinex/sound/soc/codecs/sgtl5000.c
/root/machinex/sound/soc/codecs/sgtl5000.h
/root/machinex/sound/soc/codecs/sn95031.c
/root/machinex/sound/soc/codecs/snd-soc-cs8427.o
/root/machinex/sound/soc/codecs/snd-soc-es325.o
/root/machinex/sound/soc/codecs/snd-soc-wcd9304.o
/root/machinex/sound/soc/codecs/snd-soc-wcd9310.o
/root/machinex/sound/soc/codecs/sound_control.c
/root/machinex/sound/soc/codecs/sound_control.o
/root/machinex/sound/soc/codecs/ssm2602.c
/root/machinex/sound/soc/codecs/ssm2602.h
/root/machinex/sound/soc/codecs/sta32x.c
/root/machinex/sound/soc/codecs/stac9766.c
/root/machinex/sound/soc/codecs/tlv320aic23.c
/root/machinex/sound/soc/codecs/tlv320aic23.h
/root/machinex/sound/soc/codecs/tlv320aic26.c
/root/machinex/sound/soc/codecs/tlv320aic26.h
/root/machinex/sound/soc/codecs/tlv320aic32x4.c
/root/machinex/sound/soc/codecs/tlv320aic32x4.h
/root/machinex/sound/soc/codecs/tlv320aic3x.c
/root/machinex/sound/soc/codecs/tlv320aic3x.h
/root/machinex/sound/soc/codecs/tlv320dac33.c
/root/machinex/sound/soc/codecs/tlv320dac33.h
/root/machinex/sound/soc/codecs/tpa2028d.c
/root/machinex/sound/soc/codecs/tpa6130a2.c
/root/machinex/sound/soc/codecs/tpa6130a2.h
/root/machinex/sound/soc/codecs/twl4030.c
/root/machinex/sound/soc/codecs/twl6040.c
/root/machinex/sound/soc/codecs/twl6040.h
/root/machinex/sound/soc/codecs/uda1380.c
/root/machinex/sound/soc/codecs/wcd9304.c
/root/machinex/sound/soc/codecs/wcd9304.h
/root/machinex/sound/soc/codecs/wcd9304.o
/root/machinex/sound/soc/codecs/wcd9304-tables.c
/root/machinex/sound/soc/codecs/wcd9306.c
/root/machinex/sound/soc/codecs/wcd9306_registers.h
/root/machinex/sound/soc/codecs/wcd9306-tables.c
/root/machinex/sound/soc/codecs/wcd9310.c
/root/machinex/sound/soc/codecs/wcd9310.h
/root/machinex/sound/soc/codecs/wcd9310.o
/root/machinex/sound/soc/codecs/wcd9310-tables.c
/root/machinex/sound/soc/codecs/wcd9320.c
/root/machinex/sound/soc/codecs/wcd9320.h
/root/machinex/sound/soc/codecs/wcd9320-tables.c
/root/machinex/sound/soc/codecs/wcd9335.c
/root/machinex/sound/soc/codecs/wcd9xxx-mbhc.c
/root/machinex/sound/soc/codecs/wcd9xxx-mbhc.h
/root/machinex/sound/soc/codecs/wl1273.c
/root/machinex/sound/soc/codecs/wm2000.h
/root/machinex/sound/soc/codecs/wm2200.c
/root/machinex/sound/soc/codecs/wm2200.h
/root/machinex/sound/soc/codecs/wm5100.c
/root/machinex/sound/soc/codecs/wm5100.h
/root/machinex/sound/soc/codecs/wm5100-tables.c
/root/machinex/sound/soc/codecs/wm8350.c
/root/machinex/sound/soc/codecs/wm8400.c
/root/machinex/sound/soc/codecs/wm8523.c
/root/machinex/sound/soc/codecs/wm8523.h
/root/machinex/sound/soc/codecs/wm8580.c
/root/machinex/sound/soc/codecs/wm8728.c
/root/machinex/sound/soc/codecs/wm8737.c
/root/machinex/sound/soc/codecs/wm8737.h
/root/machinex/sound/soc/codecs/wm8741.h
/root/machinex/sound/soc/codecs/wm8770.c
/root/machinex/sound/soc/codecs/wm8900.c
/root/machinex/sound/soc/codecs/wm8903.c
/root/machinex/sound/soc/codecs/wm8903.h
/root/machinex/sound/soc/codecs/wm8904.c
/root/machinex/sound/soc/codecs/wm8904.h
/root/machinex/sound/soc/codecs/wm8940.c
/root/machinex/sound/soc/codecs/wm8940.h
/root/machinex/sound/soc/codecs/wm8955.c
/root/machinex/sound/soc/codecs/wm8955.h
/root/machinex/sound/soc/codecs/wm8961.c
/root/machinex/sound/soc/codecs/wm8961.h
/root/machinex/sound/soc/codecs/wm8962.c
/root/machinex/sound/soc/codecs/wm8962.h
/root/machinex/sound/soc/codecs/wm8978.c
/root/machinex/sound/soc/codecs/wm8978.h
/root/machinex/sound/soc/codecs/wm8983.c
/root/machinex/sound/soc/codecs/wm8983.h
/root/machinex/sound/soc/codecs/wm8985.c
/root/machinex/sound/soc/codecs/wm8985.h
/root/machinex/sound/soc/codecs/wm8990.c
/root/machinex/sound/soc/codecs/wm8990.h
/root/machinex/sound/soc/codecs/wm8991.c
/root/machinex/sound/soc/codecs/wm8991.h
/root/machinex/sound/soc/codecs/wm8993.c
/root/machinex/sound/soc/codecs/wm8993.h
/root/machinex/sound/soc/codecs/wm8994.c
/root/machinex/sound/soc/codecs/wm8995.c
/root/machinex/sound/soc/codecs/wm8995.h
/root/machinex/sound/soc/codecs/wm8996.c
/root/machinex/sound/soc/codecs/wm8996.h
/root/machinex/sound/soc/codecs/wm9081.c
/root/machinex/sound/soc/codecs/wm9081.h
/root/machinex/sound/soc/codecs/wm9090.c
/root/machinex/sound/soc/codecs/wm9090.h
/root/machinex/sound/soc/codecs/wm9705.c
/root/machinex/sound/soc/codecs/wm9712.c
/root/machinex/sound/soc/codecs/wm9713.c
/root/machinex/sound/soc/codecs/wm_hubs.c
/root/machinex/sound/soc/ep93xx/ep93xx-ac97.c
/root/machinex/sound/soc/fsl/fsl_ssi.c
/root/machinex/sound/soc/fsl/mpc5200_dma.c
/root/machinex/sound/soc/imx/mx27vis-aic32x4.c
/root/machinex/sound/soc/msm/apq8064.c
/root/machinex/sound/soc/msm/apq8064-i2s.c
/root/machinex/sound/soc/msm/built-in.o
/root/machinex/sound/soc/msm/Kconfig
/root/machinex/sound/soc/msm/mdm9615.c
/root/machinex/sound/soc/msm/mpq8064.c
/root/machinex/sound/soc/msm/msm7201.c
/root/machinex/sound/soc/msm/msm7k-pcm.c
/root/machinex/sound/soc/msm/msm7kv2-pcm.c
/root/machinex/sound/soc/msm/msm7kv2-pcm.h
/root/machinex/sound/soc/msm/msm7x30.c
/root/machinex/sound/soc/msm/msm8230.c
/root/machinex/sound/soc/msm/msm8930.c
/root/machinex/sound/soc/msm/msm8960.c
/root/machinex/sound/soc/msm/msm8960-d2.c
/root/machinex/sound/soc/msm/msm8960-jaguar.c
/root/machinex/sound/soc/msm/msm8x60.c
/root/machinex/sound/soc/msm/msm_audio_mvs.h
/root/machinex/sound/soc/msm/msm-compr-q6.c
/root/machinex/sound/soc/msm/msm-compr-q6.o
/root/machinex/sound/soc/msm/msm-lowlatency-pcm-q6.c
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.o
/root/machinex/sound/soc/msm/msm-mvs.c
/root/machinex/sound/soc/msm/msm-pcm.c
/root/machinex/sound/soc/msm/msm-pcm.h
/root/machinex/sound/soc/msm/msm-pcm-loopback.c
/root/machinex/sound/soc/msm/msm-pcm-loopback.o
/root/machinex/sound/soc/msm/msm-pcm-lpa-8930_kor.c
/root/machinex/sound/soc/msm/msm-pcm-lpa-89x0.c
/root/machinex/sound/soc/msm/msm-pcm-lpa.c
/root/machinex/sound/soc/msm/msm-pcm-lpa.o
/root/machinex/sound/soc/msm/msm-pcm-routing.c
/root/machinex/sound/soc/msm/msm-pcm-routing.h
/root/machinex/sound/soc/msm/msm-pcm-routing.o
/root/machinex/sound/soc/msm/msm-pcm-voice.c
/root/machinex/sound/soc/msm/msm-pcm-voice.o
/root/machinex/sound/soc/msm/.msm-pcm-voice.o.cmd
/root/machinex/sound/soc/msm/msm-pcm-voip.c
/root/machinex/sound/soc/msm/msm-pcm-voip.o
/root/machinex/sound/soc/msm/qdsp6/built-in.o
/root/machinex/sound/soc/msm/qdsp6/q6afe.c
/root/machinex/sound/soc/msm/qdsp6/q6afe.o
/root/machinex/sound/soc/msm/qdsp6/q6asm.c
/root/machinex/sound/soc/msm/qdsp6/q6asm.o
/root/machinex/sound/soc/msm/qdsp6/q6voice.c
/root/machinex/sound/soc/msm/qdsp6/q6voice.h
/root/machinex/sound/soc/msm/qdsp6/q6voice.o
/root/machinex/sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.h
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voice-v2.c
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voip-v2.c
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h
/root/machinex/sound/soc/msm/snd-soc-qdsp6.o
/root/machinex/sound/soc/omap/ams-delta.c
/root/machinex/sound/soc/omap/mcbsp.c
/root/machinex/sound/soc/omap/mcbsp.h
/root/machinex/sound/soc/omap/omap-mcbsp.c
/root/machinex/sound/soc/omap/rx51.c
/root/machinex/sound/soc/samsung/i2s.c
/root/machinex/sound/soc/samsung/neo1973_wm8753.c
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c
/root/machinex/sound/soc/samsung/s3c24xx_simtec_tlv320aic23.c
/root/machinex/sound/soc/samsung/s3c-i2s-v2.c
/root/machinex/sound/soc/sh/hac.c
/root/machinex/sound/soc/sh/siu_dai.c
/root/machinex/sound/soc/sh/siu.h
/root/machinex/sound/soc/snd-soc-core.o
/root/machinex/sound/soc/soc-core.c
/root/machinex/sound/soc/soc-core.o
/root/machinex/sound/soc/soc-dapm.c
/root/machinex/sound/sparc/amd7930.c
/root/machinex/sound/sparc/cs4231.c
/root/machinex/sound/sparc/dbri.c
/root/machinex/sound/spi/at73c213.c
/root/machinex/sound/spi/at73c213.h
/root/machinex/sound/synth/emux/emux_effect.c
/root/machinex/sound/synth/emux/emux_nrpn.c
/root/machinex/sound/synth/emux/emux_oss.c
/root/machinex/sound/synth/emux/emux_seq.c
/root/machinex/sound/synth/emux/emux_synth.c
/root/machinex/sound/synth/emux/soundfont.c
/root/machinex/sound/usb/6fire/control.c
/root/machinex/sound/usb/built-in.o
/root/machinex/sound/usb/caiaq/audio.c
/root/machinex/sound/usb/caiaq/input.c
/root/machinex/sound/usb/endpoint.c
/root/machinex/sound/usb/format.c
/root/machinex/sound/usb/midi.c
/root/machinex/sound/usb/misc/ua101.c
/root/machinex/sound/usb/mixer.c
/root/machinex/sound/usb/mixer_maps.c
/root/machinex/sound/usb/mixer.o
/root/machinex/sound/usb/quirks.c
/root/machinex/sound/usb/snd-usb-audio.o
/root/machinex/sound/usb/usx2y/usb_stream.c
/root/machinex/sound/usb/usx2y/usbus428ctldefs.h
/root/machinex/sound/usb/usx2y/usbusx2yaudio.c
/root/machinex/sound/usb/usx2y/usbusx2y.c
Binary file /root/machinex/sound/built-in.o matches
Binary file /root/machinex/sound/core/built-in.o matches
Binary file /root/machinex/sound/core/pcm_lib.o matches
Binary file /root/machinex/sound/core/snd-pcm.o matches
Binary file /root/machinex/sound/soc/built-in.o matches
Binary file /root/machinex/sound/soc/codecs/built-in.o matches
Binary file /root/machinex/sound/soc/codecs/cs8427.o matches
Binary file /root/machinex/sound/soc/codecs/es325.o matches
Binary file /root/machinex/sound/soc/codecs/snd-soc-cs8427.o matches
Binary file /root/machinex/sound/soc/codecs/snd-soc-es325.o matches
Binary file /root/machinex/sound/soc/codecs/snd-soc-wcd9304.o matches
Binary file /root/machinex/sound/soc/codecs/snd-soc-wcd9310.o matches
Binary file /root/machinex/sound/soc/codecs/sound_control.o matches
Binary file /root/machinex/sound/soc/codecs/wcd9304.o matches
Binary file /root/machinex/sound/soc/codecs/wcd9310.o matches
Binary file /root/machinex/sound/soc/msm/built-in.o matches
Binary file /root/machinex/sound/soc/msm/msm-compr-q6.o matches
Binary file /root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.o matches
Binary file /root/machinex/sound/soc/msm/msm-pcm-loopback.o matches
Binary file /root/machinex/sound/soc/msm/msm-pcm-lpa.o matches
Binary file /root/machinex/sound/soc/msm/msm-pcm-routing.o matches
Binary file /root/machinex/sound/soc/msm/msm-pcm-voice.o matches
Binary file /root/machinex/sound/soc/msm/msm-pcm-voip.o matches
Binary file /root/machinex/sound/soc/msm/qdsp6/built-in.o matches
Binary file /root/machinex/sound/soc/msm/qdsp6/q6afe.o matches
Binary file /root/machinex/sound/soc/msm/qdsp6/q6asm.o matches
Binary file /root/machinex/sound/soc/msm/qdsp6/q6voice.o matches
Binary file /root/machinex/sound/soc/msm/snd-soc-qdsp6.o matches
Binary file /root/machinex/sound/soc/snd-soc-core.o matches
Binary file /root/machinex/sound/soc/soc-core.o matches
Binary file /root/machinex/sound/usb/built-in.o matches
Binary file /root/machinex/sound/usb/mixer.o matches
Binary file /root/machinex/sound/usb/snd-usb-audio.o matches
/root/machinex/sound/aoa/aoa.h: * again for reconsideration. */
/root/machinex/sound/aoa/codecs/onyx.c:	(-1 /*dB*/ + 8) & 0xF, /* line in selected, -1 dB gain*/
/root/machinex/sound/aoa/codecs/onyx.c:			ADDCTL(inputgain_control);
/root/machinex/sound/aoa/codecs/onyx.c:			ADDCTL(volume_control);
/root/machinex/sound/aoa/codecs/onyx.c:#define INPUTGAIN_RANGE_SHIFT	(-3)
/root/machinex/sound/aoa/codecs/onyx.c:#define VOLUME_RANGE_SHIFT	128
/root/machinex/sound/aoa/codecs/onyx.c:	.get = onyx_snd_inputgain_get,
/root/machinex/sound/aoa/codecs/onyx.c:	if (l + VOLUME_RANGE_SHIFT == ucontrol->value.integer.value[0] &&
/root/machinex/sound/aoa/codecs/onyx.c:	if (ucontrol->value.integer.value[0] < -128 + VOLUME_RANGE_SHIFT ||
/root/machinex/sound/aoa/codecs/onyx.c:	if (ucontrol->value.integer.value[0] < 3 + INPUTGAIN_RANGE_SHIFT ||
/root/machinex/sound/aoa/codecs/onyx.c:	if (ucontrol->value.integer.value[1] < -128 + VOLUME_RANGE_SHIFT ||
/root/machinex/sound/aoa/codecs/onyx.c:		(ig & ONYX_ADC_PGA_GAIN_MASK) + INPUTGAIN_RANGE_SHIFT;
/root/machinex/sound/aoa/codecs/onyx.c:	.info = onyx_snd_inputgain_info,
/root/machinex/sound/aoa/codecs/onyx.c:	n &= ~ONYX_ADC_PGA_GAIN_MASK;
/root/machinex/sound/aoa/codecs/onyx.c:	n |= (ucontrol->value.integer.value[0] - INPUTGAIN_RANGE_SHIFT)
/root/machinex/sound/aoa/codecs/onyx.c:		& ONYX_ADC_PGA_GAIN_MASK;
/root/machinex/sound/aoa/codecs/onyx.c:	.put = onyx_snd_inputgain_put,
/root/machinex/sound/aoa/codecs/onyx.c:	    r + VOLUME_RANGE_SHIFT == ucontrol->value.integer.value[1]) {
/root/machinex/sound/aoa/codecs/onyx.c:static int onyx_snd_inputgain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/aoa/codecs/onyx.c:static int onyx_snd_inputgain_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/aoa/codecs/onyx.c:static int onyx_snd_inputgain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/aoa/codecs/onyx.c:static struct snd_kcontrol_new inputgain_control = {
/root/machinex/sound/aoa/codecs/onyx.c:static struct snd_kcontrol_new volume_control = {
/root/machinex/sound/aoa/codecs/onyx.c:	    ucontrol->value.integer.value[0] > -1 + VOLUME_RANGE_SHIFT)
/root/machinex/sound/aoa/codecs/onyx.c:	    ucontrol->value.integer.value[0] > 28 + INPUTGAIN_RANGE_SHIFT)
/root/machinex/sound/aoa/codecs/onyx.c:	ucontrol->value.integer.value[0] = l + VOLUME_RANGE_SHIFT;
/root/machinex/sound/aoa/codecs/onyx.c:	    ucontrol->value.integer.value[1] > -1 + VOLUME_RANGE_SHIFT)
/root/machinex/sound/aoa/codecs/onyx.c:	ucontrol->value.integer.value[1] = r + VOLUME_RANGE_SHIFT;
/root/machinex/sound/aoa/codecs/onyx.c:	uinfo->value.integer.max = -1 + VOLUME_RANGE_SHIFT;
/root/machinex/sound/aoa/codecs/onyx.c:	uinfo->value.integer.max = 28 + INPUTGAIN_RANGE_SHIFT;
/root/machinex/sound/aoa/codecs/onyx.c:	uinfo->value.integer.min = -128 + VOLUME_RANGE_SHIFT;
/root/machinex/sound/aoa/codecs/onyx.c:	uinfo->value.integer.min = 3 + INPUTGAIN_RANGE_SHIFT;
/root/machinex/sound/aoa/codecs/onyx.c:			     - VOLUME_RANGE_SHIFT);
/root/machinex/sound/aoa/codecs/onyx.c:			     - VOLUME_RANGE_SHIFT);
/root/machinex/sound/aoa/codecs/onyx.h:/* 8 + input gain in dB, valid range for input gain is -4 .. 20 dB */
/root/machinex/sound/aoa/codecs/onyx.h:#	define ONYX_ADC_PGA_GAIN_MASK	0x1f
/root/machinex/sound/aoa/codecs/tas.c:	/* analysing the volume and mixer tables shows
/root/machinex/sound/aoa/codecs/tas.c:	err = aoa_snd_ctl_add(snd_ctl_new1(&volume_control, tas));
/root/machinex/sound/aoa/codecs/tas.c:	if (tas->cached_volume_l == ucontrol->value.integer.value[0]
/root/machinex/sound/aoa/codecs/tas.c:#include "tas-gain-table.h"
/root/machinex/sound/aoa/codecs/tas.c:	left = tas->cached_volume_l;
/root/machinex/sound/aoa/codecs/tas.c:	/* protects hardware access against concurrency from
/root/machinex/sound/aoa/codecs/tas.c:	right = tas->cached_volume_r;
/root/machinex/sound/aoa/codecs/tas.c:static struct snd_kcontrol_new volume_control = {
/root/machinex/sound/aoa/codecs/tas.c:static void tas_set_volume(struct tas *tas)
/root/machinex/sound/aoa/codecs/tas.c:	tas->cached_volume_l = ucontrol->value.integer.value[0];
/root/machinex/sound/aoa/codecs/tas.c:	 && tas->cached_volume_r == ucontrol->value.integer.value[1]) {
/root/machinex/sound/aoa/codecs/tas.c:	tas->cached_volume_r = ucontrol->value.integer.value[1];
/root/machinex/sound/aoa/codecs/tas.c:	tas_set_volume(tas);
/root/machinex/sound/aoa/codecs/tas.c:		tas_set_volume(tas);
/root/machinex/sound/aoa/codecs/tas.c:		tas_set_volume(tas);
/root/machinex/sound/aoa/codecs/tas.c:		tas_set_volume(tas);
/root/machinex/sound/aoa/codecs/tas.c:	tmp = tas_gaintable[left];
/root/machinex/sound/aoa/codecs/tas.c:	tmp = tas_gaintable[right];
/root/machinex/sound/aoa/codecs/tas.c:		tmp = tas_gaintable[val];
/root/machinex/sound/aoa/codecs/tas.c:		tmp = tas_gaintable[val];
/root/machinex/sound/aoa/codecs/tas.c:	u8			cached_volume_l, cached_volume_r;
/root/machinex/sound/aoa/codecs/tas.c:	ucontrol->value.integer.value[0] = tas->cached_volume_l;
/root/machinex/sound/aoa/codecs/tas.c:	ucontrol->value.integer.value[1] = tas->cached_volume_r;
/root/machinex/sound/aoa/codecs/tas-gain-table.h:  printf("static int tas_gaintable[] = {\n");
/root/machinex/sound/aoa/codecs/tas-gain-table.h:static int tas_gaintable[] = {
/root/machinex/sound/aoa/codecs/tas.h:#define TAS_REG_LEFT_LOUDNESS_GAIN	0x23
/root/machinex/sound/aoa/codecs/tas.h:#define TAS_REG_RIGHT_LOUDNESS_GAIN	0x24
/root/machinex/sound/aoa/soundbus/i2sbus/pcm.c:	/* ALSA yet again sucks.
/root/machinex/sound/aoa/soundbus/i2sbus/pcm.c:	/* may call _trigger again, hence needs to be unlocked */
/root/machinex/sound/core/control.c:				err = -EAGAIN;
/root/machinex/sound/core/device.c:      __again:
/root/machinex/sound/core/device.c:			goto __again;
/root/machinex/sound/core/hwdep.c:		if (err == -EAGAIN) {
/root/machinex/sound/core/isadma.c:	 * HACK - read the counter again and choose higher value in order to
/root/machinex/sound/core/memalloc.c: * tries to allocate again.  The size actually allocated is stored in
/root/machinex/sound/core/oss/mixer_oss.c:#define SNDRV_MIXER_OSS_ITEM_CVOLUME	9
/root/machinex/sound/core/oss/mixer_oss.c:#define SNDRV_MIXER_OSS_ITEM_GVOLUME	3
/root/machinex/sound/core/oss/mixer_oss.c:#define SNDRV_MIXER_OSS_ITEM_PVOLUME	6
/root/machinex/sound/core/oss/mixer_oss.c:#define SNDRV_MIXER_OSS_PRESENT_CVOLUME	(1<<9)
/root/machinex/sound/core/oss/mixer_oss.c:#define SNDRV_MIXER_OSS_PRESENT_GVOLUME	(1<<3)
/root/machinex/sound/core/oss/mixer_oss.c:#define SNDRV_MIXER_OSS_PRESENT_PVOLUME	(1<<6)
/root/machinex/sound/core/oss/mixer_oss.c:	} else if (slot->present & SNDRV_MIXER_OSS_PRESENT_CVOLUME) {
/root/machinex/sound/core/oss/mixer_oss.c:	} else if (slot->present & SNDRV_MIXER_OSS_PRESENT_GVOLUME) {
/root/machinex/sound/core/oss/mixer_oss.c:	} else if (slot->present & SNDRV_MIXER_OSS_PRESENT_GVOLUME) {
/root/machinex/sound/core/oss/mixer_oss.c:	if (mixer->slots[ptr->oss_id].get_volume && ! replace_old)
/root/machinex/sound/core/oss/mixer_oss.c:	if (pslot->get_volume)
/root/machinex/sound/core/oss/mixer_oss.c:	if (pslot->put_volume)
/root/machinex/sound/core/oss/mixer_oss.c:		if (pslot->put_volume || pslot->put_recsrc)
/root/machinex/sound/core/oss/mixer_oss.c:		if (pslot->put_volume && pslot->stereo)
/root/machinex/sound/core/oss/mixer_oss.c:		if (slot->present & SNDRV_MIXER_OSS_PRESENT_CVOLUME)
/root/machinex/sound/core/oss/mixer_oss.c:	if (slot->present & SNDRV_MIXER_OSS_PRESENT_PVOLUME) {
/root/machinex/sound/core/oss/mixer_oss.c:	if (slot->present & SNDRV_MIXER_OSS_PRESENT_PVOLUME) {
/root/machinex/sound/core/oss/mixer_oss.c:	int result = 0, left = volume & 0xff, right = (volume >> 8) & 0xff;
/root/machinex/sound/core/oss/mixer_oss.c:				    int slot, int volume)
/root/machinex/sound/core/oss/mixer_oss.c:	left = pslot->volume[0];
/root/machinex/sound/core/oss/mixer_oss.c:	*left = snd_mixer_oss_conv1(uctl->value.integer.value[0], uinfo->value.integer.min, uinfo->value.integer.max, &pslot->volume[0]);
/root/machinex/sound/core/oss/mixer_oss.c:	MIXER_VOL(IGAIN),
/root/machinex/sound/core/oss/mixer_oss.c:	MIXER_VOL(OGAIN),
/root/machinex/sound/core/oss/mixer_oss.c:	MIXER_VOL(VOLUME),
/root/machinex/sound/core/oss/mixer_oss.c:		pslot->volume[0] = left;
/root/machinex/sound/core/oss/mixer_oss.c:	pslot->volume[0] = left;
/root/machinex/sound/core/oss/mixer_oss.c:		pslot->volume[1] = right;
/root/machinex/sound/core/oss/mixer_oss.c:	pslot->volume[1] = right;
/root/machinex/sound/core/oss/mixer_oss.c:		result = pslot->get_volume(fmixer, pslot, &left, &right);
/root/machinex/sound/core/oss/mixer_oss.c:		result = pslot->put_volume(fmixer, pslot, left, right);
/root/machinex/sound/core/oss/mixer_oss.c:	right = pslot->volume[1];
/root/machinex/sound/core/oss/mixer_oss.c:		*right = snd_mixer_oss_conv1(uctl->value.integer.value[1], uinfo->value.integer.min, uinfo->value.integer.max, &pslot->volume[1]);
/root/machinex/sound/core/oss/mixer_oss.c:		rslot->get_volume = snd_mixer_oss_get_volume1;
/root/machinex/sound/core/oss/mixer_oss.c:		rslot->put_volume = snd_mixer_oss_put_volume1;
/root/machinex/sound/core/oss/mixer_oss.c:			slot->numid[SNDRV_MIXER_OSS_ITEM_CVOLUME], left, right);
/root/machinex/sound/core/oss/mixer_oss.c:	snd_mixer_oss_get_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_CROUTE], &left, &right, 1);
/root/machinex/sound/core/oss/mixer_oss.c:	snd_mixer_oss_get_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_CSWITCH], &left, &right, 0);
/root/machinex/sound/core/oss/mixer_oss.c:		snd_mixer_oss_get_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_GROUTE], left, right, 1);
/root/machinex/sound/core/oss/mixer_oss.c:		snd_mixer_oss_get_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_GSWITCH], left, right, 0);
/root/machinex/sound/core/oss/mixer_oss.c:		snd_mixer_oss_get_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_PROUTE], left, right, 1);
/root/machinex/sound/core/oss/mixer_oss.c:		snd_mixer_oss_get_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_PSWITCH], left, right, 0);
/root/machinex/sound/core/oss/mixer_oss.c:		snd_mixer_oss_get_volume1_vol(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_GLOBAL], left, right);
/root/machinex/sound/core/oss/mixer_oss.c:		snd_mixer_oss_get_volume1_vol(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_GVOLUME], left, right);
/root/machinex/sound/core/oss/mixer_oss.c:		snd_mixer_oss_get_volume1_vol(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_PVOLUME], left, right);
/root/machinex/sound/core/oss/mixer_oss.c:	snd_mixer_oss_put_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_CROUTE], active, active, 1);
/root/machinex/sound/core/oss/mixer_oss.c:			snd_mixer_oss_put_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_CROUTE], left, right, 1);
/root/machinex/sound/core/oss/mixer_oss.c:			snd_mixer_oss_put_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_CROUTE], left, right, 1);
/root/machinex/sound/core/oss/mixer_oss.c:	snd_mixer_oss_put_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_CSWITCH], active, active, 0);
/root/machinex/sound/core/oss/mixer_oss.c:			snd_mixer_oss_put_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_CSWITCH], left, right, 0);
/root/machinex/sound/core/oss/mixer_oss.c:			snd_mixer_oss_put_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_CSWITCH], left, right, 0);
/root/machinex/sound/core/oss/mixer_oss.c:			snd_mixer_oss_put_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_GROUTE], left, right, 1);
/root/machinex/sound/core/oss/mixer_oss.c:			snd_mixer_oss_put_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_GROUTE], left, right, 1);
/root/machinex/sound/core/oss/mixer_oss.c:			snd_mixer_oss_put_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_GSWITCH], left, right, 0);
/root/machinex/sound/core/oss/mixer_oss.c:			snd_mixer_oss_put_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_GSWITCH], left, right, 0);
/root/machinex/sound/core/oss/mixer_oss.c:			snd_mixer_oss_put_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_PROUTE], left, right, 1);
/root/machinex/sound/core/oss/mixer_oss.c:			snd_mixer_oss_put_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_PROUTE], left, right, 1);
/root/machinex/sound/core/oss/mixer_oss.c:			snd_mixer_oss_put_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_PSWITCH], left, right, 0);
/root/machinex/sound/core/oss/mixer_oss.c:			snd_mixer_oss_put_volume1_sw(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_PSWITCH], left, right, 0);
/root/machinex/sound/core/oss/mixer_oss.c:		snd_mixer_oss_put_volume1_vol(fmixer, pslot,
/root/machinex/sound/core/oss/mixer_oss.c:			snd_mixer_oss_put_volume1_vol(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_CVOLUME], left, right);
/root/machinex/sound/core/oss/mixer_oss.c:		snd_mixer_oss_put_volume1_vol(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_GLOBAL], left, right);
/root/machinex/sound/core/oss/mixer_oss.c:		snd_mixer_oss_put_volume1_vol(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_GVOLUME], left, right);
/root/machinex/sound/core/oss/mixer_oss.c:		snd_mixer_oss_put_volume1_vol(fmixer, pslot, slot->numid[SNDRV_MIXER_OSS_ITEM_PVOLUME], left, right);
/root/machinex/sound/core/oss/mixer_oss.c:			snd_printk(KERN_ERR "mixer_oss: invalid OSS volume '%s'\n", str);
/root/machinex/sound/core/oss/mixer_oss.c:				       SNDRV_MIXER_OSS_ITEM_CVOLUME);
/root/machinex/sound/core/oss/mixer_oss.c:				       SNDRV_MIXER_OSS_ITEM_GVOLUME);
/root/machinex/sound/core/oss/mixer_oss.c:				       SNDRV_MIXER_OSS_ITEM_PVOLUME);
/root/machinex/sound/core/oss/mixer_oss.c:		{ SOUND_MIXER_IGAIN,	"Capture",		0 },
/root/machinex/sound/core/oss/mixer_oss.c:		{ SOUND_MIXER_OGAIN,	"Playback",		0 },
/root/machinex/sound/core/oss/mixer_oss.c:		{ SOUND_MIXER_VOLUME, 	"Front",		0 }, /* fallback */
/root/machinex/sound/core/oss/mixer_oss.c:		{ SOUND_MIXER_VOLUME, 	"Master",		0 },
/root/machinex/sound/core/oss/mixer_oss.c:static int snd_mixer_oss_get_volume1(struct snd_mixer_oss_file *fmixer,
/root/machinex/sound/core/oss/mixer_oss.c:static int snd_mixer_oss_get_volume(struct snd_mixer_oss_file *fmixer, int slot)
/root/machinex/sound/core/oss/mixer_oss.c:static int snd_mixer_oss_put_volume1(struct snd_mixer_oss_file *fmixer,
/root/machinex/sound/core/oss/mixer_oss.c:static int snd_mixer_oss_set_volume(struct snd_mixer_oss_file *fmixer,
/root/machinex/sound/core/oss/mixer_oss.c:static void snd_mixer_oss_get_volume1_sw(struct snd_mixer_oss_file *fmixer,
/root/machinex/sound/core/oss/mixer_oss.c:static void snd_mixer_oss_get_volume1_vol(struct snd_mixer_oss_file *fmixer,
/root/machinex/sound/core/oss/mixer_oss.c:static void snd_mixer_oss_put_volume1_sw(struct snd_mixer_oss_file *fmixer,
/root/machinex/sound/core/oss/mixer_oss.c:static void snd_mixer_oss_put_volume1_vol(struct snd_mixer_oss_file *fmixer,
/root/machinex/sound/core/oss/mixer_oss.c:		tmp = snd_mixer_oss_get_volume(fmixer, cmd & 0xff);
/root/machinex/sound/core/oss/mixer_oss.c:		tmp = snd_mixer_oss_set_volume(fmixer, cmd & 0xff, tmp);
/root/machinex/sound/core/oss/pcm_oss.c:		if (err == -EAGAIN) {
/root/machinex/sound/core/oss/pcm_oss.c:		if (result != 0 && result != -EAGAIN)
/root/machinex/sound/core/oss/pcm_oss.c:			return -EAGAIN;
/root/machinex/sound/core/oss/pcm_oss.c:			return -EAGAIN;
/root/machinex/sound/core/oss/pcm_oss.c:					tmp = -EAGAIN;
/root/machinex/sound/core/pcm_compat.c: * handler there expands again the same 128 pointers on stack, so it is better
/root/machinex/sound/core/pcm.c:					return -EAGAIN;
/root/machinex/sound/core/pcm.c:					return -EAGAIN;
/root/machinex/sound/core/pcm.c:		return -EAGAIN;
/root/machinex/sound/core/pcm_lib.c:			   const struct snd_pcm_volume_elem *volume,
/root/machinex/sound/core/pcm_lib.c: * Create volume control elements assigned to the given PCM stream(s).
/root/machinex/sound/core/pcm_lib.c:				err = -EAGAIN;
/root/machinex/sound/core/pcm_lib.c:				err = -EAGAIN;
/root/machinex/sound/core/pcm_lib.c:EXPORT_SYMBOL_GPL(snd_pcm_add_volume_ctls);
/root/machinex/sound/core/pcm_lib.c:	info->kctl->private_free = pcm_volume_ctl_private_free;
/root/machinex/sound/core/pcm_lib.c:		.info = pcm_volume_ctl_info,
/root/machinex/sound/core/pcm_lib.c: * @info_ret: store struct snd_pcm_volume instance if non-NULL
/root/machinex/sound/core/pcm_lib.c:	info->volume = volume;
/root/machinex/sound/core/pcm_lib.c:int snd_pcm_add_volume_ctls(struct snd_pcm *pcm, int stream,
/root/machinex/sound/core/pcm_lib.c: * @max_length: the max length of the volume parameter of stream
/root/machinex/sound/core/pcm_lib.c: * snd_pcm_add_volume_ctls - create volume control elements
/root/machinex/sound/core/pcm_lib.c:static int pcm_volume_ctl_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/core/pcm_lib.c:static void pcm_volume_ctl_private_free(struct snd_kcontrol *kcontrol)
/root/machinex/sound/core/pcm_lib.c:	struct snd_pcm_volume *info;
/root/machinex/sound/core/pcm_lib.c:			   struct snd_pcm_volume **info_ret)
/root/machinex/sound/core/pcm_lib.c:	struct snd_pcm_volume *info = snd_kcontrol_chip(kcontrol);
/root/machinex/sound/core/pcm_native.c:		again = 0;
/root/machinex/sound/core/pcm_native.c:				again = 1;
/root/machinex/sound/core/pcm_native.c:		if (err == -EAGAIN) {
/root/machinex/sound/core/pcm_native.c:	int changed, again;
/root/machinex/sound/core/pcm_native.c:		result = -EAGAIN;
/root/machinex/sound/core/pcm_native.c:	} while (again);
/root/machinex/sound/core/rawmidi.c:		if (err == -EAGAIN) {
/root/machinex/sound/core/rawmidi.c:			return -EAGAIN;
/root/machinex/sound/core/rawmidi.c:	return -EAGAIN;
/root/machinex/sound/core/rawmidi.c:				return result > 0 ? result : -EAGAIN;
/root/machinex/sound/core/rawmidi.c:				return result > 0 ? result : -EAGAIN;
/root/machinex/sound/core/seq/oss/seq_oss_event.c: *	Accept note 255 as volume change.
/root/machinex/sound/core/seq/oss/seq_oss_event.c:				/* sample already started -- volume change */
/root/machinex/sound/core/seq/oss/seq_oss_event.c:				/* set volume to zero -- note off */
/root/machinex/sound/core/seq/oss/seq_oss_event.c:			/* volume control */
/root/machinex/sound/core/seq/oss/seq_oss_readq.c:		return -EAGAIN;
/root/machinex/sound/core/seq/oss/seq_oss_rw.c:		if (err == -EAGAIN &&
/root/machinex/sound/core/seq/oss/seq_oss_synth.c: * send OSS raw events - SEQ_PRIVATE and SEQ_VOLUME
/root/machinex/sound/core/seq/seq_clientmgr.c: *	-EAGAIN	no space in output pool
/root/machinex/sound/core/seq/seq_clientmgr.c:		 * enqueued again.
/root/machinex/sound/core/seq/seq_clientmgr.c:		if (err == -EAGAIN && result > 0)
/root/machinex/sound/core/seq/seq_fifo.c:			return -EAGAIN;
/root/machinex/sound/core/seq/seq_memory.c:	int err = -EAGAIN;
/root/machinex/sound/core/seq/seq_memory.c:		return -EAGAIN;
/root/machinex/sound/core/seq/seq_midi_emul.c:	chan->gm_volume = 127;
/root/machinex/sound/core/seq/seq_midi_emul.c:	chset->gs_master_volume = 127;
/root/machinex/sound/core/seq/seq_midi_emul.c:			chset->gs_master_volume = buf[7];
/root/machinex/sound/core/seq/seq_midi_emul.c:			/* master volume */
/root/machinex/sound/core/seq/seq_midi_emul.c:			parsed = SNDRV_MIDI_SYSEX_GS_MASTER_VOLUME;
/root/machinex/sound/core/seq/seq_queue.c:      __again:
/root/machinex/sound/core/seq/seq_queue.c:		goto __again;
/root/machinex/sound/core/seq/seq_queue.c:	if (q->check_again) {
/root/machinex/sound/core/seq/seq_queue.c:		q->check_again = 0;
/root/machinex/sound/core/seq/seq_queue.c:		q->check_again = 1;
/root/machinex/sound/core/seq/seq_queue.c: *     - Queues are managed in static array again, but with better way.
/root/machinex/sound/core/seq/seq_queue.h:		check_again:1,
/root/machinex/sound/core/timer.c:				err = -EAGAIN;
/root/machinex/sound/core/timer.c: * start again..  the tick is kept.
/root/machinex/sound/core/vmaster.c:	/* FIXME: this assumes that the max volume is 0 dB */
/root/machinex/sound/core/vmaster.c:/* initialize master volume */
/root/machinex/sound/core/vmaster.c: * - logarithmic volume control (dB level), no linear volume
/root/machinex/sound/core/vmaster.c: * - master can only attenuate the volume, no gain
/root/machinex/sound/core/vmaster.c:			/* max master volume is supposed to be 0 dB */
/root/machinex/sound/core/vmaster.c:		/* set full volume as default (= no attenuation) */
/root/machinex/sound/core/vmaster.c: * The master control is so far only mono volume/switch for simplicity.
/root/machinex/sound/drivers/dummy.c:	change = dummy->mixer_volume[addr][0] != left ||
/root/machinex/sound/drivers/dummy.c:#define DUMMY_VOLUME(xname, xindex, addr) \
/root/machinex/sound/drivers/dummy.c:	dummy->mixer_volume[addr][0] = left;
/root/machinex/sound/drivers/dummy.c:	         dummy->mixer_volume[addr][1] != right;
/root/machinex/sound/drivers/dummy.c:	dummy->mixer_volume[addr][1] = right;
/root/machinex/sound/drivers/dummy.c:DUMMY_VOLUME("CD Volume", 0, MIXER_ADDR_CD),
/root/machinex/sound/drivers/dummy.c:DUMMY_VOLUME("Line Volume", 0, MIXER_ADDR_LINE),
/root/machinex/sound/drivers/dummy.c:DUMMY_VOLUME("Master Volume", 0, MIXER_ADDR_MASTER),
/root/machinex/sound/drivers/dummy.c:DUMMY_VOLUME("Mic Volume", 0, MIXER_ADDR_MIC),
/root/machinex/sound/drivers/dummy.c:DUMMY_VOLUME("Synth Volume", 0, MIXER_ADDR_SYNTH),
/root/machinex/sound/drivers/dummy.c:  .get = snd_dummy_volume_get, .put = snd_dummy_volume_put, \
/root/machinex/sound/drivers/dummy.c:  .info = snd_dummy_volume_info, \
/root/machinex/sound/drivers/dummy.c:	int mixer_volume[MIXER_ADDR_LAST+1][2];
/root/machinex/sound/drivers/dummy.c:static int snd_dummy_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/drivers/dummy.c:static int snd_dummy_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/drivers/dummy.c:static int snd_dummy_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/drivers/dummy.c:	ucontrol->value.integer.value[0] = dummy->mixer_volume[addr][0];
/root/machinex/sound/drivers/dummy.c:	ucontrol->value.integer.value[1] = dummy->mixer_volume[addr][1];
/root/machinex/sound/drivers/ml403-ac97cr.c:	[AC97_REC_GAIN / 2]           = {.flag = LM4550_REG_OK \
/root/machinex/sound/drivers/mpu401/mpu401_uart.c:				break;	/* Tx FIFO full - try again later */
/root/machinex/sound/drivers/opl3/opl3_drums.c: * Set drum voice volume and position
/root/machinex/sound/drivers/opl3/opl3_drums.c:	snd_opl3_calc_volume(&reg_val, vel, chan);
/root/machinex/sound/drivers/opl3/opl3_midi.c: * 64 =  0 db = relative volume  0 and:    Volume 32 = -6 db = relative
/root/machinex/sound/drivers/opl3/opl3_midi.c:				again++;
/root/machinex/sound/drivers/opl3/opl3_midi.c:	 * calculate volume depending on connection
/root/machinex/sound/drivers/opl3/opl3_midi.c: * for i=0. This log-table converts a linear volume-scaling (0..127) to a
/root/machinex/sound/drivers/opl3/opl3_midi.c:	if (again) {
/root/machinex/sound/drivers/opl3/opl3_midi.c:	if (volume > 127)
/root/machinex/sound/drivers/opl3/opl3_midi.c:	int again = 0;
/root/machinex/sound/drivers/opl3/opl3_midi.c:	int volume;
/root/machinex/sound/drivers/opl3/opl3_midi.c:	newvol = opl3_volume_table[volume] + oldvol;
/root/machinex/sound/drivers/opl3/opl3_midi.c:		opl3->tlist.expires = jiffies + 1;	/* invoke again */
/root/machinex/sound/drivers/opl3/opl3_midi.c:			snd_opl3_calc_volume(&vol_op[0], vel, chan);
/root/machinex/sound/drivers/opl3/opl3_midi.c:			snd_opl3_calc_volume(&vol_op[0], vel, chan);
/root/machinex/sound/drivers/opl3/opl3_midi.c:			snd_opl3_calc_volume(&vol_op[1], vel, chan);
/root/machinex/sound/drivers/opl3/opl3_midi.c:		snd_opl3_calc_volume(&vol_op[1], vel, chan);
/root/machinex/sound/drivers/opl3/opl3_midi.c:			snd_opl3_calc_volume(&vol_op[2], vel, chan);
/root/machinex/sound/drivers/opl3/opl3_midi.c:		snd_opl3_calc_volume(&vol_op[3], vel, chan);
/root/machinex/sound/drivers/opl3/opl3_midi.c:static char opl3_volume_table[128] =
/root/machinex/sound/drivers/opl3/opl3_midi.c:void snd_opl3_calc_volume(unsigned char *volbyte, int vel,
/root/machinex/sound/drivers/opl3/opl3_midi.c:		volume = 127;
/root/machinex/sound/drivers/opl3/opl3_midi.c: * volume -8 it was implemented as a table because it is only 128 bytes and
/root/machinex/sound/drivers/opl3/opl3_midi.c:	volume = (vel * chan->gm_volume * chan->gm_expression) / (127*127);
/root/machinex/sound/drivers/opl3/opl3_synth.c:		opl3->command(opl3, opl3_reg, OPL3_TOTAL_LEVEL_MASK); /* Operator 1 volume */
/root/machinex/sound/drivers/opl3/opl3_synth.c:		opl3->command(opl3, opl3_reg, OPL3_TOTAL_LEVEL_MASK); /* Operator 2 volume */
/root/machinex/sound/drivers/opl3/opl3_synth.c:	reg_val |= ~voice->volume & OPL3_TOTAL_LEVEL_MASK;
/root/machinex/sound/drivers/opl3/opl3_synth.c:	/* Set decreasing volume of higher notes */
/root/machinex/sound/drivers/opl3/opl3_synth.c:	/* Set output volume */
/root/machinex/sound/drivers/opl3/opl3_voice.h:void snd_opl3_calc_volume(unsigned char *reg, int vel, struct snd_midi_channel *chan);
/root/machinex/sound/drivers/opl4/opl4_local.h:extern int volume_boost;
/root/machinex/sound/drivers/opl4/opl4_local.h:	u8 volume_factor;
/root/machinex/sound/drivers/opl4/opl4_seq.c:int volume_boost = 8;
/root/machinex/sound/drivers/opl4/opl4_seq.c:module_param(volume_boost, int, 0644);
/root/machinex/sound/drivers/opl4/opl4_seq.c:MODULE_PARM_DESC(volume_boost, "Additional volume for OPL4 wavetable sounds.");
/root/machinex/sound/drivers/opl4/opl4_synth.c:	att = 0x7f - (0x7f - att) * (voice->sound->volume_factor) / 0xfe - volume_boost;
/root/machinex/sound/drivers/opl4/opl4_synth.c:	att += snd_opl4_volume_table[opl4->chset->gs_master_volume & 0x7f];
/root/machinex/sound/drivers/opl4/opl4_synth.c:	att += snd_opl4_volume_table[voice->chan->gm_expression & 0x7f];
/root/machinex/sound/drivers/opl4/opl4_synth.c:	att += snd_opl4_volume_table[voice->chan->gm_volume & 0x7f];
/root/machinex/sound/drivers/opl4/opl4_synth.c:	att += snd_opl4_volume_table[voice->velocity];
/root/machinex/sound/drivers/opl4/opl4_synth.c:	case MIDI_CTL_MSB_MAIN_VOLUME:
/root/machinex/sound/drivers/opl4/opl4_synth.c:	if (parsed == SNDRV_MIDI_SYSEX_GS_MASTER_VOLUME)
/root/machinex/sound/drivers/opl4/opl4_synth.c:		snd_opl4_do_for_all(opl4, snd_opl4_update_volume);
/root/machinex/sound/drivers/opl4/opl4_synth.c:		snd_opl4_do_for_channel(opl4, chan, snd_opl4_update_volume);
/root/machinex/sound/drivers/opl4/opl4_synth.c:		snd_opl4_do_for_channel(opl4, chan, snd_opl4_update_volume);
/root/machinex/sound/drivers/opl4/opl4_synth.c:		snd_opl4_update_volume(opl4, voice[i]);
/root/machinex/sound/drivers/opl4/opl4_synth.c:static unsigned char snd_opl4_volume_table[128] = {
/root/machinex/sound/drivers/opl4/opl4_synth.c:static void snd_opl4_update_volume(struct snd_opl4 *opl4, struct opl4_voice *voice)
/root/machinex/sound/drivers/pcm-indirect2.c:	/* hardware played some bytes, so there is room again (in fifo) */
/root/machinex/sound/drivers/vx/vx_mixer.c:	chip->audio_gain[capture][audio] = level;
/root/machinex/sound/drivers/vx/vx_mixer.c:			chip->audio_gain[c][i] = CVAL_0DB;
/root/machinex/sound/drivers/vx/vx_mixer.c:	.get =          vx_audio_gain_get,
/root/machinex/sound/drivers/vx/vx_mixer.c:	if (val[0] != chip->audio_gain[capture][audio] ||
/root/machinex/sound/drivers/vx/vx_mixer.c:	.info =         vx_audio_gain_info,
/root/machinex/sound/drivers/vx/vx_mixer.c:	.info =         vx_audio_gain_info,	/* shared */
/root/machinex/sound/drivers/vx/vx_mixer.c:	memset(chip->audio_gain, 0, sizeof(chip->audio_gain));
/root/machinex/sound/drivers/vx/vx_mixer.c:	/* PCM volumes, switches, monitoring */
/root/machinex/sound/drivers/vx/vx_mixer.c:	.put =          vx_audio_gain_put,
/root/machinex/sound/drivers/vx/vx_mixer.c:static const DECLARE_TLV_DB_SCALE(db_scale_audio_gain, -10975, 25, 0);
/root/machinex/sound/drivers/vx/vx_mixer.c:static int vx_audio_gain_get(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/drivers/vx/vx_mixer.c:static int vx_audio_gain_info(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_info *uinfo)
/root/machinex/sound/drivers/vx/vx_mixer.c:static int vx_audio_gain_put(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/drivers/vx/vx_mixer.c:static int vx_set_audio_gain(struct vx_core *chip, int audio, int capture, int level)
/root/machinex/sound/drivers/vx/vx_mixer.c:static struct snd_kcontrol_new vx_control_audio_gain = {
/root/machinex/sound/drivers/vx/vx_mixer.c:static struct snd_kcontrol_new vx_control_monitor_gain = {
/root/machinex/sound/drivers/vx/vx_mixer.c:		temp = vx_control_audio_gain;
/root/machinex/sound/drivers/vx/vx_mixer.c:		temp = vx_control_audio_gain;
/root/machinex/sound/drivers/vx/vx_mixer.c:		temp = vx_control_monitor_gain;
/root/machinex/sound/drivers/vx/vx_mixer.c:	.tlv = { .p = db_scale_audio_gain },
/root/machinex/sound/drivers/vx/vx_mixer.c:	.tlv = { .p = db_scale_audio_gain },
/root/machinex/sound/drivers/vx/vx_mixer.c:	ucontrol->value.integer.value[0] = chip->audio_gain[capture][audio];
/root/machinex/sound/drivers/vx/vx_mixer.c:	ucontrol->value.integer.value[1] = chip->audio_gain[capture][audio+1];
/root/machinex/sound/drivers/vx/vx_mixer.c:	    val[1] != chip->audio_gain[capture][audio+1]) {
/root/machinex/sound/drivers/vx/vx_mixer.c:		vx_set_audio_gain(chip, audio+1, capture, val[1]);
/root/machinex/sound/drivers/vx/vx_mixer.c:		vx_set_audio_gain(chip, audio, capture, val[0]);
/root/machinex/sound/drivers/vx/vx_pcm.c:	/* clear again */
/root/machinex/sound/drivers/vx/vx_pcm.c:			/* Wait for a few, before asking again
/root/machinex/sound/firewire/cmp.c:	if (err == -EAGAIN) {
/root/machinex/sound/firewire/cmp.c:	return bus_reset_handling == ABORT_ON_BUS_RESET ? -EAGAIN : 0;
/root/machinex/sound/firewire/isight.c:	__be32 gain;
/root/machinex/sound/firewire/isight.c:	ctl = snd_ctl_new1(&gain_control, isight);
/root/machinex/sound/firewire/isight.c:		ctl->tlv.p = isight->gain_tlv;
/root/machinex/sound/firewire/isight.c:#define REG_DEF_AUDIO_GAIN	0x204
/root/machinex/sound/firewire/isight.c:#define REG_GAIN		0x500
/root/machinex/sound/firewire/isight.c:#define REG_GAIN_DB_END		0x21c
/root/machinex/sound/firewire/isight.c:#define REG_GAIN_DB_START	0x218
/root/machinex/sound/firewire/isight.c:#define REG_GAIN_RAW_END	0x214
/root/machinex/sound/firewire/isight.c:#define REG_GAIN_RAW_START	0x210
/root/machinex/sound/firewire/isight.c:	err = reg_read(isight, REG_GAIN_DB_END, &value);
/root/machinex/sound/firewire/isight.c:	err = reg_read(isight, REG_GAIN_DB_START, &value);
/root/machinex/sound/firewire/isight.c:	err = reg_read(isight, REG_GAIN, &gain);
/root/machinex/sound/firewire/isight.c:	err = reg_read(isight, REG_GAIN_RAW_END, &value);
/root/machinex/sound/firewire/isight.c:	err = reg_read(isight, REG_GAIN_RAW_START, &value);
/root/machinex/sound/firewire/isight.c:		.get = isight_gain_get,
/root/machinex/sound/firewire/isight.c:	if (value->value.integer.value[0] < isight->gain_min ||
/root/machinex/sound/firewire/isight.c:		.info = isight_gain_info,
/root/machinex/sound/firewire/isight.c:	info->value.integer.max = isight->gain_max;
/root/machinex/sound/firewire/isight.c:	info->value.integer.min = isight->gain_min;
/root/machinex/sound/firewire/isight.c:	isight->gain_max = be32_to_cpu(value);
/root/machinex/sound/firewire/isight.c:	isight->gain_min = be32_to_cpu(value);
/root/machinex/sound/firewire/isight.c:	isight->gain_tlv[0] = SNDRV_CTL_TLVT_DB_MINMAX;
/root/machinex/sound/firewire/isight.c:	isight->gain_tlv[1] = 2 * sizeof(unsigned int);
/root/machinex/sound/firewire/isight.c:	isight->gain_tlv[2] = (s32)be32_to_cpu(value) * 100;
/root/machinex/sound/firewire/isight.c:	isight->gain_tlv[3] = (s32)be32_to_cpu(value) * 100;
/root/machinex/sound/firewire/isight.c:		.put = isight_gain_put,
/root/machinex/sound/firewire/isight.c:	return reg_write(isight, REG_GAIN,
/root/machinex/sound/firewire/isight.c:	s32 gain_min, gain_max;
/root/machinex/sound/firewire/isight.c:	static const struct snd_kcontrol_new gain_control = {
/root/machinex/sound/firewire/isight.c:static int isight_gain_get(struct snd_kcontrol *ctl,
/root/machinex/sound/firewire/isight.c:static int isight_gain_info(struct snd_kcontrol *ctl,
/root/machinex/sound/firewire/isight.c:static int isight_gain_put(struct snd_kcontrol *ctl,
/root/machinex/sound/firewire/isight.c:	unsigned int gain_tlv[4];
/root/machinex/sound/firewire/isight.c:	    value->value.integer.value[0] > isight->gain_max)
/root/machinex/sound/firewire/isight.c:	value->value.integer.value[0] = (s32)be32_to_cpu(gain);
/root/machinex/sound/firewire/iso-resources.c:	if (channel < 0 && channel != -EAGAIN) {
/root/machinex/sound/firewire/iso-resources.c:	if (channel == -EAGAIN) {
/root/machinex/sound/firewire/iso-resources.c:	 * succeeded; we will try again for the new generation later.
/root/machinex/sound/firewire/speakers.c:	buf[4] = fwspk->device_info->volume_fb_id; /* function block ID */
/root/machinex/sound/firewire/speakers.c:	buf[8] = 0x02;			/* control selector: volume */
/root/machinex/sound/firewire/speakers.c:		dev_err(&fwspk->unit->device, "volume command failed\n");
/root/machinex/sound/firewire/speakers.c:		err = fwspk_volume_command(fwspk, &fwspk->volume[i],
/root/machinex/sound/firewire/speakers.c:	err = fwspk_volume_command(fwspk, &fwspk->volume_max,
/root/machinex/sound/firewire/speakers.c:	err = fwspk_volume_command(fwspk, &fwspk->volume_min,
/root/machinex/sound/firewire/speakers.c:			err = fwspk_volume_command(fwspk, &volume, i,
/root/machinex/sound/firewire/speakers.c:							fwspk->volume[i])
/root/machinex/sound/firewire/speakers.c:			fwspk->volume[i - 1] = volume;
/root/machinex/sound/firewire/speakers.c:			.get = fwspk_volume_get,
/root/machinex/sound/firewire/speakers.c:		if (value->value.integer.value[i] < fwspk->volume_min ||
/root/machinex/sound/firewire/speakers.c:			.info = fwspk_volume_info,
/root/machinex/sound/firewire/speakers.c:	info->value.integer.max = fwspk->volume_max;
/root/machinex/sound/firewire/speakers.c:	info->value.integer.min = fwspk->volume_min;
/root/machinex/sound/firewire/speakers.c:			.put = fwspk_volume_put,
/root/machinex/sound/firewire/speakers.c:	s16 volume;
/root/machinex/sound/firewire/speakers.c:	s16 volume[6];
/root/machinex/sound/firewire/speakers.c:	s16 volume_max;
/root/machinex/sound/firewire/speakers.c:	s16 volume_min;
/root/machinex/sound/firewire/speakers.c:static int fwspk_volume_command(struct fwspk *fwspk, s16 *value,
/root/machinex/sound/firewire/speakers.c:static int fwspk_volume_get(struct snd_kcontrol *control,
/root/machinex/sound/firewire/speakers.c:static int fwspk_volume_info(struct snd_kcontrol *control,
/root/machinex/sound/firewire/speakers.c:static int fwspk_volume_put(struct snd_kcontrol *control,
/root/machinex/sound/firewire/speakers.c:	u8 volume_fb_id;
/root/machinex/sound/firewire/speakers.c:		value->value.integer.value[channel_map[i]] = fwspk->volume[i];
/root/machinex/sound/firewire/speakers.c:		    value->value.integer.value[i] > fwspk->volume_max)
/root/machinex/sound/firewire/speakers.c:		.volume_fb_id = 0x01,
/root/machinex/sound/firewire/speakers.c:		.volume_fb_id = 0x02,
/root/machinex/sound/firewire/speakers.c:		volume = value->value.integer.value[channel_map[i ? i - 1 : 0]];
/root/machinex/sound/i2c/cs8427.c:			   "let me try again...\n", err);
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		0x04, 0x00, /* 4: LOUT1 volume muted */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		0x04, 0x00, /* 4: LOUT1 volume muted */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		0x05, 0x00, /* 5: ROUT1 volume muted */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		0x05, 0x00, /* 5: ROUT1 volume muted */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		0x06, 0x00, /* 6: LOUT2 volume muted */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		0x06, 0x00, /* 6: LOUT2 volume muted */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		0x07, 0x00, /* 7: ROUT2 volume muted */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		0x07, 0x00, /* 7: ROUT2 volume muted */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		0x08, 0x00, /* 8: LOUT3 volume muted */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		0x08, 0x00, /* 8: LOUT3 volume muted */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		0x09, 0x00, /* 9: ROUT3 volume muted */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		0x09, 0x00, /* 9: ROUT3 volume muted */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		0x0b, 0x00, /* b: LOUT4 volume muted */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		0x0c, 0x00, /* c: ROUT4 volume muted */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:		/* DAC volumes */
/root/machinex/sound/i2c/other/ak4xxx-adda.c:			knew.get = snd_akm4xxx_stereo_volume_get;
/root/machinex/sound/i2c/other/ak4xxx-adda.c:			knew.get = snd_akm4xxx_stereo_volume_get;
/root/machinex/sound/i2c/other/ak4xxx-adda.c:			knew.get = snd_akm4xxx_volume_get;
/root/machinex/sound/i2c/other/ak4xxx-adda.c:			knew.get = snd_akm4xxx_volume_get;
/root/machinex/sound/i2c/other/ak4xxx-adda.c:			knew.info = snd_akm4xxx_stereo_volume_info;
/root/machinex/sound/i2c/other/ak4xxx-adda.c:			knew.info = snd_akm4xxx_stereo_volume_info;
/root/machinex/sound/i2c/other/ak4xxx-adda.c:			knew.info = snd_akm4xxx_volume_info;
/root/machinex/sound/i2c/other/ak4xxx-adda.c:			knew.info = snd_akm4xxx_volume_info;
/root/machinex/sound/i2c/other/ak4xxx-adda.c:			knew.put = snd_akm4xxx_stereo_volume_put;
/root/machinex/sound/i2c/other/ak4xxx-adda.c:			knew.put = snd_akm4xxx_stereo_volume_put;
/root/machinex/sound/i2c/other/ak4xxx-adda.c:			knew.put = snd_akm4xxx_volume_put;
/root/machinex/sound/i2c/other/ak4xxx-adda.c:			knew.put = snd_akm4xxx_volume_put;
/root/machinex/sound/i2c/other/ak4xxx-adda.c:	memset(ak->volumes, 0, sizeof(ak->volumes));
/root/machinex/sound/i2c/other/ak4xxx-adda.c:static const DECLARE_TLV_DB_LINEAR(db_scale_linear, TLV_DB_GAIN_MUTE, 0);
/root/machinex/sound/i2c/other/ak4xxx-adda.c:static int snd_akm4xxx_stereo_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/i2c/other/ak4xxx-adda.c:static int snd_akm4xxx_stereo_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/i2c/other/ak4xxx-adda.c:static int snd_akm4xxx_stereo_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/i2c/other/ak4xxx-adda.c:static int snd_akm4xxx_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/i2c/other/ak4xxx-adda.c:static int snd_akm4xxx_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/i2c/other/ak4xxx-adda.c:static int snd_akm4xxx_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/i2c/other/ak4xxx-adda.c: * Volume conversion table for non-linear volumes
/root/machinex/sound/i2c/other/pt2258.c: *   ALSA Driver for the PT2258 volume controller.
/root/machinex/sound/i2c/other/pt2258.c:	if (val0 == pt->volume[base] && val1 == pt->volume[base + 1])
/root/machinex/sound/i2c/other/pt2258.c:		knew.get = pt2258_stereo_volume_get;
/root/machinex/sound/i2c/other/pt2258.c:		knew.info = pt2258_stereo_volume_info;
/root/machinex/sound/i2c/other/pt2258.c:		knew.put = pt2258_stereo_volume_put;
/root/machinex/sound/i2c/other/pt2258.c:MODULE_DESCRIPTION("PT2258 volume controller (Princeton Technology Corp.)");
/root/machinex/sound/i2c/other/pt2258.c:	pt->volume[base + 1] = val1;
/root/machinex/sound/i2c/other/pt2258.c:	pt->volume[base] = val0;
/root/machinex/sound/i2c/other/pt2258.c:		pt->volume[i] = 0;
/root/machinex/sound/i2c/other/pt2258.c:static int pt2258_stereo_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/i2c/other/pt2258.c:static int pt2258_stereo_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/i2c/other/pt2258.c:static int pt2258_stereo_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/i2c/other/pt2258.c:	ucontrol->value.integer.value[0] = 79 - pt->volume[base];
/root/machinex/sound/i2c/other/pt2258.c:	ucontrol->value.integer.value[1] = 79 - pt->volume[base + 1];
/root/machinex/sound/i2c/other/tea575x-tuner.c:	return -EAGAIN;
/root/machinex/sound/i2c/tea6330t.c:	bytes[0] = TEA6330T_SADDR_VOLUME_LEFT;
/root/machinex/sound/i2c/tea6330t.c:	bytes[0] = TEA6330T_SADDR_VOLUME_LEFT;
/root/machinex/sound/i2c/tea6330t.c:	bytes[1] = tea->regs[TEA6330T_SADDR_VOLUME_LEFT];
/root/machinex/sound/i2c/tea6330t.c:	bytes[2] = tea->regs[TEA6330T_SADDR_VOLUME_RIGHT];
/root/machinex/sound/i2c/tea6330t.c:		bytes[count++] = TEA6330T_SADDR_VOLUME_LEFT;
/root/machinex/sound/i2c/tea6330t.c:			bytes[count++] = TEA6330T_SADDR_VOLUME_RIGHT;
/root/machinex/sound/i2c/tea6330t.c:		bytes[count++] = tea->regs[TEA6330T_SADDR_VOLUME_LEFT] = tea->mleft;
/root/machinex/sound/i2c/tea6330t.c:		bytes[count++] = tea->regs[TEA6330T_SADDR_VOLUME_RIGHT] = tea->mright;
/root/machinex/sound/i2c/tea6330t.c:#define TEA6330T_MASTER_VOLUME(xname, xindex) \
/root/machinex/sound/i2c/tea6330t.c:#define TEA6330T_SADDR_VOLUME_LEFT	0x00	/* volume left */
/root/machinex/sound/i2c/tea6330t.c:#define TEA6330T_SADDR_VOLUME_RIGHT	0x01	/* volume right */
/root/machinex/sound/i2c/tea6330t.c:  .get = snd_tea6330t_get_master_volume, .put = snd_tea6330t_put_master_volume }
/root/machinex/sound/i2c/tea6330t.c:	if (tea->regs[TEA6330T_SADDR_VOLUME_LEFT] != 0) {
/root/machinex/sound/i2c/tea6330t.c:	if (tea->regs[TEA6330T_SADDR_VOLUME_RIGHT] != 0) {
/root/machinex/sound/i2c/tea6330t.c:  .info = snd_tea6330t_info_master_volume, \
/root/machinex/sound/i2c/tea6330t.c:	oval1 = tea->regs[TEA6330T_SADDR_VOLUME_LEFT] == 0 ? 0 : 1;
/root/machinex/sound/i2c/tea6330t.c:	oval2 = tea->regs[TEA6330T_SADDR_VOLUME_RIGHT] == 0 ? 0 : 1;
/root/machinex/sound/i2c/tea6330t.c:static int snd_tea6330t_get_master_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/i2c/tea6330t.c:static int snd_tea6330t_info_master_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/i2c/tea6330t.c:static int snd_tea6330t_put_master_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/i2c/tea6330t.c:TEA6330T_MASTER_VOLUME("Master Playback Volume", 0),
/root/machinex/sound/i2c/tea6330t.c:	tea->regs[TEA6330T_SADDR_VOLUME_LEFT] = val1 ? tea->mleft : 0;
/root/machinex/sound/i2c/tea6330t.c:	tea->regs[TEA6330T_SADDR_VOLUME_RIGHT] = val2 ? tea->mright : 0;
/root/machinex/sound/i2c/tea6330t.c:	ucontrol->value.integer.value[0] = tea->regs[TEA6330T_SADDR_VOLUME_LEFT] == 0 ? 0 : 1;
/root/machinex/sound/i2c/tea6330t.c:	ucontrol->value.integer.value[1] = tea->regs[TEA6330T_SADDR_VOLUME_RIGHT] == 0 ? 0 : 1;
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:AD1816A_DOUBLE("CD Playback Switch", AD1816A_CD_GAIN_ATT, 15, 7, 1, 1),
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:AD1816A_DOUBLE("Line Playback Switch", AD1816A_LINE_GAIN_ATT, 15, 7, 1, 1),
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:AD1816A_DOUBLE("Synth Playback Switch", AD1816A_SYNTH_GAIN_ATT, 15, 7, 1, 1),
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:AD1816A_DOUBLE_TLV("CD Playback Volume", AD1816A_CD_GAIN_ATT, 8, 0, 31, 1,
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:AD1816A_DOUBLE_TLV("Line Playback Volume", AD1816A_LINE_GAIN_ATT, 8, 0, 31, 1,
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:AD1816A_DOUBLE_TLV("Synth Playback Volume", AD1816A_SYNTH_GAIN_ATT, 8, 0, 31, 1,
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:AD1816A_DOUBLE_TLV("Video Playback Volume", AD1816A_VID_GAIN_ATT, 8, 0, 31, 1,
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:AD1816A_DOUBLE("Video Playback Switch", AD1816A_VID_GAIN_ATT, 15, 7, 1, 1),
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:AD1816A_SINGLE("Mic Boost", AD1816A_MIC_GAIN_ATT, 14, 1, 0),
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:AD1816A_SINGLE("Mic Playback Switch", AD1816A_MIC_GAIN_ATT, 15, 1, 1),
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:AD1816A_SINGLE("Phone Capture Switch", AD1816A_PHONE_IN_GAIN_ATT, 15, 1, 1),
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:AD1816A_SINGLE_TLV("Mic Playback Volume", AD1816A_MIC_GAIN_ATT, 8, 31, 1,
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:AD1816A_SINGLE_TLV("Phone Capture Volume", AD1816A_PHONE_IN_GAIN_ATT, 0, 15, 1,
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:		   db_scale_rec_gain),
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:		return -EAGAIN;
/root/machinex/sound/isa/ad1816a/ad1816a_lib.c:static const DECLARE_TLV_DB_SCALE(db_scale_rec_gain, 0, 150, 0);
/root/machinex/sound/isa/cmi8330.c:	0x0,			/* 19 - master volume */
/root/machinex/sound/isa/cmi8330.c:	0x0,			/* 20 - line-in volume */
/root/machinex/sound/isa/cmi8330.c:	0x0,			/* 21 - cd-in volume */
/root/machinex/sound/isa/cmi8330.c:	0x0,			/* 22 - wave volume */
/root/machinex/sound/isa/cmi8330.c:	0x0,			/* 24 - wave rec gain */
/root/machinex/sound/isa/cmi8330.c:	0x0,			/* 25 - line-in rec gain */
/root/machinex/sound/isa/cmi8330.c:	0x0			/* 26 - cd-in rec gain */
/root/machinex/sound/isa/cmi8330.c: *   and calls again the original open callback of the chip.
/root/machinex/sound/isa/cmi8330.c:		CMI8330_CDINGAIN, CMI8330_CDINGAIN, 4, 0, 15, 0),
/root/machinex/sound/isa/cmi8330.c:		CMI8330_LINGAIN, CMI8330_LINGAIN, 4, 0, 15, 0),
/root/machinex/sound/isa/cmi8330.c:		CMI8330_WAVGAIN, CMI8330_WAVGAIN, 4, 0, 15, 0),
/root/machinex/sound/isa/cmi8330.c:#define CMI8330_CDINGAIN  26
/root/machinex/sound/isa/cmi8330.c:#define CMI8330_LINGAIN   25
/root/machinex/sound/isa/cmi8330.c:#define CMI8330_WAVGAIN   24
/root/machinex/sound/isa/cmi8330.c:	for (i = CMI8330_RMUX3D; i <= CMI8330_CDINGAIN; i++)
/root/machinex/sound/isa/cmi8330.c:	/* mute and zero volume channels */
/root/machinex/sound/isa/cmi8330.c:SB_DOUBLE("SB Capture Volume", SB_DSP4_IGAIN_DEV, (SB_DSP4_IGAIN_DEV + 1), 6, 6, 3),
/root/machinex/sound/isa/cmi8330.c:SB_DOUBLE("SB Playback Volume", SB_DSP4_OGAIN_DEV, (SB_DSP4_OGAIN_DEV + 1), 6, 6, 3),
/root/machinex/sound/isa/cmi8330.c:static unsigned char snd_cmi8330_image[((CMI8330_CDINGAIN)-16) + 1] =
/root/machinex/sound/isa/cs423x/cs4236_lib.c:		0, 0, 15, 0, db_scale_rec_gain),
/root/machinex/sound/isa/cs423x/cs4236_lib.c: *     D6: hardware volume control format (CS4235,CS4239)
/root/machinex/sound/isa/cs423x/cs4236_lib.c: *     D7: volume control interrupt enable (CS4235,CS4239)
/root/machinex/sound/isa/cs423x/cs4236_lib.c:static const DECLARE_TLV_DB_SCALE(db_scale_rec_gain, 0, 150, 0);
/root/machinex/sound/isa/cs423x/cs4236_lib.c:static inline int snd_cs4235_mixer_output_accu_get_volume(int vol)
/root/machinex/sound/isa/cs423x/cs4236_lib.c:static inline int snd_cs4235_mixer_output_accu_set_volume(int vol)
/root/machinex/sound/isa/cs423x/cs4236_lib.c:static inline int snd_cs4236_mixer_master_digital_invert_volume(int vol)
/root/machinex/sound/isa/cs423x/cs4236_lib.c:	ucontrol->value.integer.value[0] = snd_cs4235_mixer_output_accu_get_volume(chip->image[CS4235_LEFT_MASTER]);
/root/machinex/sound/isa/cs423x/cs4236_lib.c:	ucontrol->value.integer.value[0] = snd_cs4236_mixer_master_digital_invert_volume(chip->eimage[CS4236_REG(CS4236_LEFT_MASTER)] & 0x7f);
/root/machinex/sound/isa/cs423x/cs4236_lib.c:	ucontrol->value.integer.value[1] = snd_cs4235_mixer_output_accu_get_volume(chip->image[CS4235_RIGHT_MASTER]);
/root/machinex/sound/isa/cs423x/cs4236_lib.c:	ucontrol->value.integer.value[1] = snd_cs4236_mixer_master_digital_invert_volume(chip->eimage[CS4236_REG(CS4236_RIGHT_MASTER)] & 0x7f);
/root/machinex/sound/isa/cs423x/cs4236_lib.c:	val1 = snd_cs4235_mixer_output_accu_set_volume(ucontrol->value.integer.value[0]);
/root/machinex/sound/isa/cs423x/cs4236_lib.c:	val1 = snd_cs4236_mixer_master_digital_invert_volume(ucontrol->value.integer.value[0] & 0x7f);
/root/machinex/sound/isa/cs423x/cs4236_lib.c:	val2 = snd_cs4235_mixer_output_accu_set_volume(ucontrol->value.integer.value[1]);
/root/machinex/sound/isa/cs423x/cs4236_lib.c:	val2 = snd_cs4236_mixer_master_digital_invert_volume(ucontrol->value.integer.value[1] & 0x7f);
/root/machinex/sound/isa/es1688/es1688_lib.c:		return -EAGAIN;
/root/machinex/sound/isa/es1688/es1688_lib.c:		return -EAGAIN;
/root/machinex/sound/isa/es18xx.c:					&chip->hw_volume->id);
/root/machinex/sound/isa/es18xx.c:				chip->hw_volume = kctl;
/root/machinex/sound/isa/es18xx.c:	chip->hw_volume = NULL;
/root/machinex/sound/isa/es18xx.c:					&chip->master_volume->id);
/root/machinex/sound/isa/es18xx.c:				chip->master_volume = kctl;
/root/machinex/sound/isa/es18xx.c:	chip->master_volume = NULL;
/root/machinex/sound/isa/es18xx.c:#define ES18XX_HWV	0x0080	/* Has separate hardware volume mixer controls*/
/root/machinex/sound/isa/es18xx.c:		/* Enable and set hardware volume interrupt */
/root/machinex/sound/isa/es18xx.c:		/* Enable MPU and hardware volume interrupt */
/root/machinex/sound/isa/es18xx.c:		for (idx = 0; idx < ARRAY_SIZE(snd_es18xx_hw_volume_controls); idx++) {
/root/machinex/sound/isa/es18xx.c:	.get = snd_es18xx_get_hw_volume,
/root/machinex/sound/isa/es18xx.c:	/* Hardware volume */
/root/machinex/sound/isa/es18xx.c:		/* Hardware volume IRQ */
/root/machinex/sound/isa/es18xx.c:	/* If has Hardware volume */
/root/machinex/sound/isa/es18xx.c:			/* If has volume count */
/root/machinex/sound/isa/es18xx.c:	.info = snd_es18xx_info_hw_volume,
/root/machinex/sound/isa/es18xx.c:			kctl = snd_ctl_new1(&snd_es18xx_hw_volume_controls[idx], chip);
/root/machinex/sound/isa/es18xx.c:			/* Restore Audio 2 volume */
/root/machinex/sound/isa/es18xx.c:                return -EAGAIN;
/root/machinex/sound/isa/es18xx.c:			return -EAGAIN;
/root/machinex/sound/isa/es18xx.c:			return -EAGAIN;
/root/machinex/sound/isa/es18xx.c:		return -EAGAIN;
/root/machinex/sound/isa/es18xx.c:		return -EAGAIN;
/root/machinex/sound/isa/es18xx.c:			/* Set Audio 2 volume to 0 */
/root/machinex/sound/isa/es18xx.c:static int snd_es18xx_get_hw_volume(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/isa/es18xx.c:static int snd_es18xx_info_hw_volume(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_info *uinfo)
/root/machinex/sound/isa/es18xx.c:static struct snd_kcontrol_new snd_es18xx_hw_volume_controls[] = {
/root/machinex/sound/isa/es18xx.c:	struct snd_kcontrol *hw_volume;
/root/machinex/sound/isa/es18xx.c:	struct snd_kcontrol *master_volume;
/root/machinex/sound/isa/es18xx.c: *   Then again on at least one test system the 0x71 bit 6 enable bit is not 
/root/machinex/sound/isa/es18xx.c: * - there is support for the capture volume and ESS Spatializer 3D effect.
/root/machinex/sound/isa/es18xx.c:	unsigned short audio2_vol;	/* volume level of audio2 */
/root/machinex/sound/isa/galaxy/galaxy.c:	 * Needed for MPU IRQ on AZT1605, but AZT2316 loses WSS again
/root/machinex/sound/isa/gus/gus_io.c:	printk(KERN_INFO" -%i- GF1  volume                 = 0x%x\n", voice, snd_gf1_i_read16(gus, 9));
/root/machinex/sound/isa/gus/gus_io.c:			printk(KERN_INFO " -%i- GFA1 effect volume          = 0x%x\n", voice, snd_gf1_i_read16(gus, 0x16));
/root/machinex/sound/isa/gus/gus_io.c:			printk(KERN_INFO " -%i- GFA1 effect volume final    = 0x%x\n", voice, snd_gf1_i_read16(gus, 0x1d));
/root/machinex/sound/isa/gus/gus_irq.c:__again:
/root/machinex/sound/isa/gus/gus_irq.c:		goto __again;
/root/machinex/sound/isa/gus/gus_irq.c:				if (!(voice_status & 0x40)) {	/* volume ramp IRQ */
/root/machinex/sound/isa/gus/gus_irq.c:					pvoice->handler_volume(gus, pvoice);
/root/machinex/sound/isa/gus/gus_irq.c:					pvoice->interrupt_stat_volume);
/root/machinex/sound/isa/gus/gus_irq.c:				snd_gf1_i_ctrl_stop(gus, SNDRV_GF1_VB_VOLUME_CONTROL);
/root/machinex/sound/isa/gus/gus_irq.c:		snd_iprintf(buffer, "voice %i: wave = %u, volume = %u\n",
/root/machinex/sound/isa/gus/gus_irq.c:					STAT_ADD(pvoice->interrupt_stat_volume);
/root/machinex/sound/isa/gus/gus_main.c:	gus->gf1.volume_ramp = 25;
/root/machinex/sound/isa/gus/gus_main.c:  /* gus_volume.c */
/root/machinex/sound/isa/gus/gus_main.c:	spin_lock_init(&gus->pcm_volume_level_lock);
/root/machinex/sound/isa/gus/gusmax.c:				"Mono Capture Volume", 0, SNDRV_MIXER_ETYPE_VOLUME1,
/root/machinex/sound/isa/gus/gus_pcm.c:	change = val1 != gus->gf1.pcm_volume_level_left1 ||
/root/machinex/sound/isa/gus/gus_pcm.c:	.get = snd_gf1_pcm_volume_get,
/root/machinex/sound/isa/gus/gus_pcm.c:	.get = snd_gf1_pcm_volume_get,
/root/machinex/sound/isa/gus/gus_pcm.c:	gus->gf1.pcm_volume_level_left1 = val1;
/root/machinex/sound/isa/gus/gus_pcm.c:	gus->gf1.pcm_volume_level_left = snd_gf1_lvol_to_gvol_raw(val1 << 9) << 4;
/root/machinex/sound/isa/gus/gus_pcm.c:	gus->gf1.pcm_volume_level_right1 = val2;
/root/machinex/sound/isa/gus/gus_pcm.c:	gus->gf1.pcm_volume_level_right = snd_gf1_lvol_to_gvol_raw(val2 << 9) << 4;
/root/machinex/sound/isa/gus/gus_pcm.c:	if (!pcmp->final_volume) {
/root/machinex/sound/isa/gus/gus_pcm.c:	.info = snd_gf1_pcm_volume_info,
/root/machinex/sound/isa/gus/gus_pcm.c:	.info = snd_gf1_pcm_volume_info,
/root/machinex/sound/isa/gus/gus_pcm.c:	int final_volume;
/root/machinex/sound/isa/gus/gus_pcm.c:		kctl = snd_ctl_new1(&snd_gf1_pcm_volume_control1, gus);
/root/machinex/sound/isa/gus/gus_pcm.c:		kctl = snd_ctl_new1(&snd_gf1_pcm_volume_control, gus);
/root/machinex/sound/isa/gus/gus_pcm.c:	/* load real volume - better precision */
/root/machinex/sound/isa/gus/gus_pcm.c:		/* load real volume - better precision */
/root/machinex/sound/isa/gus/gus_pcm.c:	pcmp->final_volume = 0;
/root/machinex/sound/isa/gus/gus_pcm.c:		pcmp->final_volume = 1;
/root/machinex/sound/isa/gus/gus_pcm.c:	pcmp->final_volume = 1;
/root/machinex/sound/isa/gus/gus_pcm.c:		pcmp->pvoices[0]->handler_volume = snd_gf1_pcm_interrupt_volume;
/root/machinex/sound/isa/gus/gus_pcm.c:		pcmp->pvoices[0]->volume_change = snd_gf1_pcm_volume_change;
/root/machinex/sound/isa/gus/gus_pcm.c:		pcmp->pvoices[1]->handler_volume = snd_gf1_pcm_interrupt_volume;
/root/machinex/sound/isa/gus/gus_pcm.c:		pcmp->pvoices[1]->volume_change = snd_gf1_pcm_volume_change;
/root/machinex/sound/isa/gus/gus_pcm.c:	.put = snd_gf1_pcm_volume_put
/root/machinex/sound/isa/gus/gus_pcm.c:	.put = snd_gf1_pcm_volume_put
/root/machinex/sound/isa/gus/gus_pcm.c:	ramp_ctrl = (snd_gf1_read8(gus, SNDRV_GF1_VB_VOLUME_CONTROL) & ~0xa4) | 0x03;
/root/machinex/sound/isa/gus/gus_pcm.c:				return -EAGAIN;
/root/machinex/sound/isa/gus/gus_pcm.c:		snd_gf1_ctrl_stop(gus, SNDRV_GF1_VB_VOLUME_CONTROL);
/root/machinex/sound/isa/gus/gus_pcm.c:	snd_gf1_ctrl_stop(gus, SNDRV_GF1_VB_VOLUME_CONTROL);
/root/machinex/sound/isa/gus/gus_pcm.c:		snd_gf1_write16(gus, SNDRV_GF1_VW_VOLUME, SNDRV_GF1_MIN_VOLUME << 4);
/root/machinex/sound/isa/gus/gus_pcm.c:		snd_gf1_write16(gus, SNDRV_GF1_VW_VOLUME, vol);
/root/machinex/sound/isa/gus/gus_pcm.c:	snd_gf1_write16(gus, SNDRV_GF1_VW_VOLUME, vol);
/root/machinex/sound/isa/gus/gus_pcm.c:			snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_CONTROL, ramp_ctrl);
/root/machinex/sound/isa/gus/gus_pcm.c:			snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_CONTROL, ramp_ctrl);
/root/machinex/sound/isa/gus/gus_pcm.c:		snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_CONTROL, ramp_ctrl);
/root/machinex/sound/isa/gus/gus_pcm.c:		snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_CONTROL, ramp_ctrl);
/root/machinex/sound/isa/gus/gus_pcm.c:		snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_END, vol >> 8);
/root/machinex/sound/isa/gus/gus_pcm.c:		snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_RATE, 0x2f);
/root/machinex/sound/isa/gus/gus_pcm.c:		snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_START, SNDRV_GF1_MIN_OFFSET);
/root/machinex/sound/isa/gus/gus_pcm.c:	spin_lock_irqsave(&gus->pcm_volume_level_lock, flags);
/root/machinex/sound/isa/gus/gus_pcm.c:	spin_lock_irqsave(&gus->pcm_volume_level_lock, flags);
/root/machinex/sound/isa/gus/gus_pcm.c:	spin_unlock_irqrestore(&gus->pcm_volume_level_lock, flags);
/root/machinex/sound/isa/gus/gus_pcm.c:	spin_unlock_irqrestore(&gus->pcm_volume_level_lock, flags);
/root/machinex/sound/isa/gus/gus_pcm.c:static int snd_gf1_pcm_volume_get(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/isa/gus/gus_pcm.c:static int snd_gf1_pcm_volume_info(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_info *uinfo)
/root/machinex/sound/isa/gus/gus_pcm.c:static int snd_gf1_pcm_volume_put(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/isa/gus/gus_pcm.c:static struct snd_kcontrol_new snd_gf1_pcm_volume_control =
/root/machinex/sound/isa/gus/gus_pcm.c:static struct snd_kcontrol_new snd_gf1_pcm_volume_control1 =
/root/machinex/sound/isa/gus/gus_pcm.c:static void snd_gf1_pcm_interrupt_volume(struct snd_gus_card * gus,
/root/machinex/sound/isa/gus/gus_pcm.c:static void snd_gf1_pcm_volume_change(struct snd_gus_card * gus)
/root/machinex/sound/isa/gus/gus_pcm.c:	ucontrol->value.integer.value[0] = gus->gf1.pcm_volume_level_left1;
/root/machinex/sound/isa/gus/gus_pcm.c:	ucontrol->value.integer.value[1] = gus->gf1.pcm_volume_level_right1;
/root/machinex/sound/isa/gus/gus_pcm.c:	         val2 != gus->gf1.pcm_volume_level_right1;
/root/machinex/sound/isa/gus/gus_pcm.c:	vol = !cvoice ? gus->gf1.pcm_volume_level_left : gus->gf1.pcm_volume_level_right;
/root/machinex/sound/isa/gus/gus_pcm.c:		vol = pvoice == pcmp->pvoices[0] ? gus->gf1.pcm_volume_level_left : gus->gf1.pcm_volume_level_right;
/root/machinex/sound/isa/gus/gus_pcm.c:		vol = !voice ? gus->gf1.pcm_volume_level_left : gus->gf1.pcm_volume_level_right;
/root/machinex/sound/isa/gus/gus_reset.c:	printk(KERN_DEBUG " -%i- smart stop voice - volume = 0x%x\n", voice, snd_gf1_i_read16(gus, SNDRV_GF1_VW_VOLUME));
/root/machinex/sound/isa/gus/gus_reset.c:	printk(KERN_DEBUG " -%i- stop voice - volume = 0x%x\n", voice, snd_gf1_i_read16(gus, SNDRV_GF1_VW_VOLUME));
/root/machinex/sound/isa/gus/gus_reset.c:	snd_gf1_ctrl_stop(gus, SNDRV_GF1_VB_VOLUME_CONTROL);
/root/machinex/sound/isa/gus/gus_reset.c:	snd_gf1_ctrl_stop(gus, SNDRV_GF1_VB_VOLUME_CONTROL);
/root/machinex/sound/isa/gus/gus_reset.c:		snd_gf1_ctrl_stop(gus, SNDRV_GF1_VB_VOLUME_CONTROL);	/* Volume Ramp Control Register = ramp off */
/root/machinex/sound/isa/gus/gus_reset.c:			snd_gf1_write16(gus, SNDRV_GF1_VW_EFFECT_VOLUME, 0);
/root/machinex/sound/isa/gus/gus_reset.c:			snd_gf1_write16(gus, SNDRV_GF1_VW_EFFECT_VOLUME_FINAL, 0);
/root/machinex/sound/isa/gus/gus_reset.c:		snd_gf1_write16(gus, SNDRV_GF1_VW_VOLUME, 0);
/root/machinex/sound/isa/gus/gus_reset.c:					snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_CONTROL, 0x40);
/root/machinex/sound/isa/gus/gus_reset.c:				snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_CONTROL, 0x40);	/* ramp down */
/root/machinex/sound/isa/gus/gus_reset.c:		snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_END, 0);
/root/machinex/sound/isa/gus/gus_reset.c:				snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_END, ramp_end);	/* ramp end */
/root/machinex/sound/isa/gus/gus_reset.c:		snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_RATE, 0);
/root/machinex/sound/isa/gus/gus_reset.c:				snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_RATE, 20);	/* ramp rate */
/root/machinex/sound/isa/gus/gus_reset.c:		snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_START, 0);
/root/machinex/sound/isa/gus/gus_reset.c:				snd_gf1_write8(gus, SNDRV_GF1_VB_VOLUME_START, SNDRV_GF1_MIN_OFFSET);	/* ramp start */
/root/machinex/sound/isa/gus/gus_reset.c:static void snd_gf1_default_interrupt_handler_wave_and_volume(struct snd_gus_card * gus, struct snd_gus_voice * voice)
/root/machinex/sound/isa/gus/gus_reset.c:		voice->handler_volume = snd_gf1_default_interrupt_handler_wave_and_volume;
/root/machinex/sound/isa/gus/gus_reset.c:		voice->volume_change = NULL;
/root/machinex/sound/isa/gus/gus_volume.c:	/* The following expression does a linear interpolation against the        */
/root/machinex/sound/isa/gus/Makefile:		    gus_mem.o gus_mem_proc.o gus_dram.o gus_dma.o gus_volume.o \
/root/machinex/sound/isa/msnd/msnd.c: *		"uncomment this to make this a module again"
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:	case MSND_MIXER_VOLUME:		/* master volume */
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:#define DUMMY_VOLUME(xname, xindex, addr) \
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:#define MSND_MASK_IGAIN		(1 << MSND_MIXER_IGAIN)
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:#define MSND_MASK_OGAIN		(1 << MSND_MIXER_OGAIN)
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:#define MSND_MASK_VOLUME	(1 << MSND_MIXER_VOLUME)
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:#define MSND_MIXER_IGAIN	12	/* Input gain */
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:#define MSND_MIXER_OGAIN	13	/* Output gain */
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:#define MSND_MIXER_VOLUME	0
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:DUMMY_VOLUME("Aux Volume", 0, MSND_MIXER_AUX),
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:DUMMY_VOLUME("Line Volume", 0, MSND_MIXER_LINE),
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:DUMMY_VOLUME("Master Volume", 0, MSND_MIXER_VOLUME),
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:DUMMY_VOLUME("Mic Volume", 0, MSND_MIXER_MIC),
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:DUMMY_VOLUME("Monitor",	0, MSND_MIXER_IMIX),
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:DUMMY_VOLUME("PCM Volume", 0, MSND_MIXER_PCM),
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:  .get = snd_msndmix_volume_get, .put = snd_msndmix_volume_put, \
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:  .info = snd_msndmix_volume_info, \
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:		/* master volume unscaled controls */
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:		/* scaled by master volume */
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:		/* scaled by master volume */
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:static int snd_msndmix_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:static int snd_msndmix_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:static int snd_msndmix_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/isa/msnd/msnd_pinnacle_mixer.c:		/* update master volume scaled controls */
/root/machinex/sound/isa/opl3sa2.c:		case 1: chip->master_volume = kctl; kctl->private_free = snd_opl3sa2_master_free; break;
/root/machinex/sound/isa/opl3sa2.c:					&chip->master_volume->id);
/root/machinex/sound/isa/opl3sa2.c:	chip->master_volume = NULL;
/root/machinex/sound/isa/opl3sa2.c:		if (chip->master_switch && chip->master_volume) {
/root/machinex/sound/isa/opl3sa2.c:	if (status & 0x40) { /* hardware volume change */
/root/machinex/sound/isa/opl3sa2.c:	struct snd_kcontrol *master_volume;
/root/machinex/sound/isa/opti9xx/opti92x-ad1848.c:	/* remove AUX1 volume */
/root/machinex/sound/isa/opti9xx/opti92x-ad1848.c:	/* Replace WSS volume controls with OPTi93x volume controls */
/root/machinex/sound/isa/sb/emu8000_callback.c:	/* cutoff and volume */
/root/machinex/sound/isa/sb/emu8000_callback.c:	/* decay/sustain parameter for volume envelope is used
/root/machinex/sound/isa/sb/emu8000_callback.c:	EMU8000_IFATN_WRITE(emu, i, 0xFF00);	/* volume to minimum */
/root/machinex/sound/isa/sb/emu8000_callback.c:	if (update & SNDRV_EMUX_UPDATE_VOLUME)
/root/machinex/sound/isa/sb/emu8000_callback.c:	/* lfo1 volume & freq */
/root/machinex/sound/isa/sb/emu8000_callback.c:	/* reset volume */
/root/machinex/sound/isa/sb/emu8000_callback.c: * Set the volume of a possibly already playing note
/root/machinex/sound/isa/sb/emu8000_callback.c:/* set tremolo (lfo1) volume & frequency */
/root/machinex/sound/isa/sb/emu8000_callback.c:		set_volume(hw, vp);
/root/machinex/sound/isa/sb/emu8000_callback.c:	set_volume(hw, vp);
/root/machinex/sound/isa/sb/emu8000_callback.c:set_volume(struct snd_emu8000 *hw, struct snd_emux_voice *vp)
/root/machinex/sound/isa/sb/emu8000_callback.c:static void set_volume(struct snd_emu8000 *hw, struct snd_emux_voice *vp);
/root/machinex/sound/isa/sb/emu8000.c:	/* skew volume & cutoff */
/root/machinex/sound/isa/sb/emu8000_pcm.c:	/* cutoff and volume */
/root/machinex/sound/isa/sb/emu8000_pcm.c:	/* decay/sustain parameter for volume envelope is used
/root/machinex/sound/isa/sb/emu8000_pcm.c:	/* lfo1 volume & freq */
/root/machinex/sound/isa/sb/emu8000_pcm.c:		return -EAGAIN;\
/root/machinex/sound/isa/sb/sb16_csp.c:	/* Mute PCM volume */
/root/machinex/sound/isa/sb/sb16_csp.c:	/* Mute PCM volume */
/root/machinex/sound/isa/sb/sb16_csp.c:	/* restore PCM volume */
/root/machinex/sound/isa/sb/sb16_csp.c:	/* restore PCM volume */
/root/machinex/sound/isa/sb/sb16_csp.c:		return -EAGAIN;
/root/machinex/sound/isa/sb/sb16_main.c:		return -EAGAIN;
/root/machinex/sound/isa/sb/sb16_main.c:		return -EAGAIN;
/root/machinex/sound/isa/sb/sb16_main.c:	return -EAGAIN;
/root/machinex/sound/isa/sb/sb16_main.c:	return -EAGAIN;
/root/machinex/sound/isa/sb/sb8_main.c:		return -EAGAIN;
/root/machinex/sound/isa/sb/sb8_midi.c:		return -EAGAIN;
/root/machinex/sound/isa/sb/sb8_midi.c:		return -EAGAIN;
/root/machinex/sound/isa/sb/sb8_midi.c:				/* Tx FIFO full - try again later */
/root/machinex/sound/isa/sb/sb_mixer.c:	/* mute and zero volume channels */
/root/machinex/sound/isa/sb/sb_mixer.c:	SB_ALS4000_MIC_IN_GAIN,
/root/machinex/sound/isa/sb/sb_mixer.c:	{ SB_ALS4000_MIC_IN_GAIN, 0 },
/root/machinex/sound/isa/sb/sb_mixer.c:	SB_DSP4_IGAIN_DEV, SB_DSP4_IGAIN_DEV + 1,
/root/machinex/sound/isa/sb/sb_mixer.c:	SB_DSP4_IGAIN_DEV, SB_DSP4_IGAIN_DEV + 1,
/root/machinex/sound/isa/sb/sb_mixer.c:		  SB_DSP4_IGAIN_DEV, (SB_DSP4_IGAIN_DEV + 1), 6, 6, 3),
/root/machinex/sound/isa/sb/sb_mixer.c:	SB_DSP4_OGAIN_DEV, SB_DSP4_OGAIN_DEV + 1,
/root/machinex/sound/isa/sb/sb_mixer.c:	SB_DSP4_OGAIN_DEV, SB_DSP4_OGAIN_DEV + 1,
/root/machinex/sound/isa/sb/sb_mixer.c:		  SB_DSP4_OGAIN_DEV, (SB_DSP4_OGAIN_DEV + 1), 6, 6, 3),
/root/machinex/sound/isa/sb/sb_mixer.c:	SB_SINGLE("Analog Loopback Switch", SB_ALS4000_MIC_IN_GAIN, 7, 0x01),
/root/machinex/sound/isa/sb/sb_mixer.c:	SB_SINGLE("Mic Boost (+20dB)", SB_ALS4000_MIC_IN_GAIN, 0, 0x03),
/root/machinex/sound/isa/sc6000.c:	return -EAGAIN;
/root/machinex/sound/isa/sscape.c:	 * and then perform another volume-related command. Perhaps the
/root/machinex/sound/isa/sscape.c:	 * can send any volume-changing HOST commands ...
/root/machinex/sound/isa/sscape.c:	 * have to write a volume command, write the new volume value,
/root/machinex/sound/isa/sscape.c:			ret = -EAGAIN;
/root/machinex/sound/isa/sscape.c:		ret = -EAGAIN;
/root/machinex/sound/isa/sscape.c:		ret = -EAGAIN;
/root/machinex/sound/isa/sscape.c:		ret = -EAGAIN;
/root/machinex/sound/isa/sscape.c:	 * To successfully change the MIDI volume setting, you seem to
/root/machinex/sound/isa/wavefront/wavefront_synth.c:		/* Now, do it again ! */
/root/machinex/sound/isa/wavefront/wavefront_synth.c:	{ WFC_GET_SYNTHVOL, "get synthesizer volume", 1, 0, 0},
/root/machinex/sound/isa/wavefront/wavefront_synth.c:	{ WFC_SET_SYNTHVOL, "set synthesizer volume", 0, 1, NEEDS_ACK },
/root/machinex/sound/isa/wss/wss_lib.c:		0, 0, 15, 0, db_scale_rec_gain),
/root/machinex/sound/isa/wss/wss_lib.c:	/* clear IRQ again */
/root/machinex/sound/isa/wss/wss_lib.c:		if ((r & ~CS4231_ENABLE_MIC_GAIN) != 0x45) {
/root/machinex/sound/isa/wss/wss_lib.c:		if ((r | CS4231_ENABLE_MIC_GAIN) != 0xaa) {
/root/machinex/sound/isa/wss/wss_lib.c:			 * on CMI8330, CS4231_VERSION is volume control and
/root/machinex/sound/isa/wss/wss_lib.c:		return -EAGAIN;
/root/machinex/sound/isa/wss/wss_lib.c:static const DECLARE_TLV_DB_SCALE(db_scale_rec_gain, 0, 150, 0);
/root/machinex/sound/mips/ad1843.c:	&ad1843_gain_LINE,
/root/machinex/sound/mips/ad1843.c:	&ad1843_gain_LINE_2,
/root/machinex/sound/mips/ad1843.c:	&ad1843_gain_MIC,
/root/machinex/sound/mips/ad1843.c:	&ad1843_gain_PCM_0,
/root/machinex/sound/mips/ad1843.c:	&ad1843_gain_PCM_1,
/root/machinex/sound/mips/ad1843.c:	&ad1843_gain_RECLEV,
/root/machinex/sound/mips/ad1843.c: * ad1843_get_gain reads the specified register and extracts the gain value
/root/machinex/sound/mips/ad1843.c:	ad1843_set_gain(ad1843, AD1843_GAIN_LINE, 0);
/root/machinex/sound/mips/ad1843.c:	ad1843_set_gain(ad1843, AD1843_GAIN_LINE_2, 0);
/root/machinex/sound/mips/ad1843.c:	ad1843_set_gain(ad1843, AD1843_GAIN_MIC, 0);
/root/machinex/sound/mips/ad1843.c:	ad1843_set_gain(ad1843, AD1843_GAIN_PCM_0, 0);
/root/machinex/sound/mips/ad1843.c:	ad1843_set_gain(ad1843, AD1843_GAIN_PCM_1, 0);
/root/machinex/sound/mips/ad1843.c:	ad1843_set_gain(ad1843, AD1843_GAIN_RECLEV, 0);
/root/machinex/sound/mips/ad1843.c:	const struct ad1843_gain *gp = ad1843_gain[id];
/root/machinex/sound/mips/ad1843.c:	const struct ad1843_gain *gp = ad1843_gain[id];
/root/machinex/sound/mips/ad1843.c:	const struct ad1843_gain *gp = ad1843_gain[id];
/root/machinex/sound/mips/ad1843.c:int ad1843_get_gain_max(struct snd_ad1843 *ad1843, int id)
/root/machinex/sound/mips/ad1843.c:int ad1843_get_gain(struct snd_ad1843 *ad1843, int id)
/root/machinex/sound/mips/ad1843.c:int ad1843_set_gain(struct snd_ad1843 *ad1843, int id, int newval)
/root/machinex/sound/mips/ad1843.c:	int	negative;		/* nonzero if gain is negative. */
/root/machinex/sound/mips/ad1843.c:	 * mic gain to +20 dB.
/root/machinex/sound/mips/ad1843.c:	return ad1843_get_gain(ad1843, id);
/root/machinex/sound/mips/ad1843.c: * Returns the new gain, which may be lower than the old gain.
/root/machinex/sound/mips/ad1843.c: * Set an audio channel's gain.
/root/machinex/sound/mips/ad1843.c:	/* set gain to 0 for all channels */
/root/machinex/sound/mips/ad1843.c: * specifying gain.  The ad1843_gain structure parameterizes the
/root/machinex/sound/mips/ad1843.c:static const struct ad1843_gain *ad1843_gain[AD1843_GAIN_SIZE] =
/root/machinex/sound/mips/ad1843.c:static const struct ad1843_gain ad1843_gain_LINE = {
/root/machinex/sound/mips/ad1843.c:static const struct ad1843_gain ad1843_gain_LINE_2 = {
/root/machinex/sound/mips/ad1843.c:static const struct ad1843_gain ad1843_gain_MIC = {
/root/machinex/sound/mips/ad1843.c:static const struct ad1843_gain ad1843_gain_PCM_0 = {
/root/machinex/sound/mips/ad1843.c:static const struct ad1843_gain ad1843_gain_PCM_1 = {
/root/machinex/sound/mips/ad1843.c:static const struct ad1843_gain ad1843_gain_RECLEV = {
/root/machinex/sound/mips/ad1843.c:struct ad1843_gain {
/root/machinex/sound/mips/ad1843.c: * using the supplied gain type.
/root/machinex/sound/mips/hal2.c:	case H2_MIX_INPUT_GAIN:
/root/machinex/sound/mips/hal2.c:	case H2_MIX_INPUT_GAIN:
/root/machinex/sound/mips/hal2.c:	case H2_MIX_INPUT_GAIN:
/root/machinex/sound/mips/hal2.c:#define H2_MIX_INPUT_GAIN	1
/root/machinex/sound/mips/hal2.c:	.get            = hal2_gain_get,
/root/machinex/sound/mips/hal2.c:	.get            = hal2_gain_get,
/root/machinex/sound/mips/hal2.c:	.info           = hal2_gain_info,
/root/machinex/sound/mips/hal2.c:	.info           = hal2_gain_info,
/root/machinex/sound/mips/hal2.c:		l = (tmp >> H2I_C2_L_GAIN_SHIFT) & 15;
/root/machinex/sound/mips/hal2.c:		new |= (l << H2I_C2_L_GAIN_SHIFT);
/root/machinex/sound/mips/hal2.c:		new = old & ~(H2I_C2_L_GAIN_M | H2I_C2_R_GAIN_M);
/root/machinex/sound/mips/hal2.c:		new |= (r << H2I_C2_R_GAIN_SHIFT);
/root/machinex/sound/mips/hal2.c:	.private_value  = H2_MIX_INPUT_GAIN,
/root/machinex/sound/mips/hal2.c:	.put            = hal2_gain_put,
/root/machinex/sound/mips/hal2.c:	.put            = hal2_gain_put,
/root/machinex/sound/mips/hal2.c:		return -EAGAIN;
/root/machinex/sound/mips/hal2.c:		r = (tmp >> H2I_C2_R_GAIN_SHIFT) & 15;
/root/machinex/sound/mips/hal2.c:static int hal2_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/mips/hal2.c:static int hal2_gain_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/mips/hal2.c:static int hal2_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/mips/hal2.h:#define H2I_C2_L_GAIN_M		0xf0
/root/machinex/sound/mips/hal2.h:#define H2I_C2_L_GAIN_SHIFT	4		/* left a/d input gain */
/root/machinex/sound/mips/hal2.h:#define H2I_C2_R_GAIN_M		0xf
/root/machinex/sound/mips/hal2.h:#define H2I_C2_R_GAIN_SHIFT	0		/* right a/d input gain */
/root/machinex/sound/mips/hal2.h:	u32 left;		/* Left volume */
/root/machinex/sound/mips/hal2.h:	u32 right;		/* Right volume */
/root/machinex/sound/mips/sgio2audio.c:	.get            = sgio2audio_gain_get,
/root/machinex/sound/mips/sgio2audio.c:	.get            = sgio2audio_gain_get,
/root/machinex/sound/mips/sgio2audio.c:	.get            = sgio2audio_gain_get,
/root/machinex/sound/mips/sgio2audio.c:	.get            = sgio2audio_gain_get,
/root/machinex/sound/mips/sgio2audio.c:	.get            = sgio2audio_gain_get,
/root/machinex/sound/mips/sgio2audio.c:	.get            = sgio2audio_gain_get,
/root/machinex/sound/mips/sgio2audio.c:	.info           = sgio2audio_gain_info,
/root/machinex/sound/mips/sgio2audio.c:	.info           = sgio2audio_gain_info,
/root/machinex/sound/mips/sgio2audio.c:	.info           = sgio2audio_gain_info,
/root/machinex/sound/mips/sgio2audio.c:	.info           = sgio2audio_gain_info,
/root/machinex/sound/mips/sgio2audio.c:	.info           = sgio2audio_gain_info,
/root/machinex/sound/mips/sgio2audio.c:	.info           = sgio2audio_gain_info,
/root/machinex/sound/mips/sgio2audio.c:	newvol = ad1843_set_gain(&chip->ad1843, kcontrol->private_value,
/root/machinex/sound/mips/sgio2audio.c:	oldvol = ad1843_get_gain(&chip->ad1843, kcontrol->private_value);
/root/machinex/sound/mips/sgio2audio.c:	.private_value  = AD1843_GAIN_LINE,
/root/machinex/sound/mips/sgio2audio.c:	.private_value  = AD1843_GAIN_LINE_2,
/root/machinex/sound/mips/sgio2audio.c:	.private_value  = AD1843_GAIN_MIC,
/root/machinex/sound/mips/sgio2audio.c:	.private_value  = AD1843_GAIN_PCM_0,
/root/machinex/sound/mips/sgio2audio.c:	.private_value  = AD1843_GAIN_PCM_1,
/root/machinex/sound/mips/sgio2audio.c:	.private_value  = AD1843_GAIN_RECLEV,
/root/machinex/sound/mips/sgio2audio.c:	.put            = sgio2audio_gain_put,
/root/machinex/sound/mips/sgio2audio.c:	.put            = sgio2audio_gain_put,
/root/machinex/sound/mips/sgio2audio.c:	.put            = sgio2audio_gain_put,
/root/machinex/sound/mips/sgio2audio.c:	.put            = sgio2audio_gain_put,
/root/machinex/sound/mips/sgio2audio.c:	.put            = sgio2audio_gain_put,
/root/machinex/sound/mips/sgio2audio.c:	.put            = sgio2audio_gain_put,
/root/machinex/sound/mips/sgio2audio.c:static int sgio2audio_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/mips/sgio2audio.c:static int sgio2audio_gain_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/mips/sgio2audio.c:static int sgio2audio_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/mips/sgio2audio.c:	uinfo->value.integer.max = ad1843_get_gain_max(&chip->ad1843,
/root/machinex/sound/mips/sgio2audio.c:	vol = ad1843_get_gain(&chip->ad1843, (int)kcontrol->private_value);
/root/machinex/sound/oss/ad1848.c:	devc->levels = load_mixer_volumes(name, default_mixer_levels, 1);
/root/machinex/sound/oss/ad1848.c:		  goto interrupt_again;
/root/machinex/sound/oss/ad1848.c:	/* here we don't have to protect against intr */
/root/machinex/sound/oss/ad1848.c:interrupt_again:		/* Jump back here if int status doesn't reset */
/root/machinex/sound/oss/ad1848.c:	 * Registers 0 and 1 are ADC volume registers. The bit 0x10 is read only
/root/machinex/sound/oss/ad1848.c:	/* Scale volumes */
/root/machinex/sound/oss/ad1848_mixer.h:	0x4b4b,			/* Input gain */
/root/machinex/sound/oss/ad1848_mixer.h:	0x4b4b,			/* Output gain */
/root/machinex/sound/oss/ad1848_mixer.h:#define MODE3_MIXER_DEVICES		(MODE2_MIXER_DEVICES | SOUND_MASK_VOLUME)
/root/machinex/sound/oss/ad1848_mixer.h:#define SPRO_MIXER_DEVICES	(SOUND_MASK_VOLUME | SOUND_MASK_PCM | \
/root/machinex/sound/oss/ad1848_mixer.h:	/* Digital master volume actually has seven bits, but we only use
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT (SOUND_MIXER_IGAIN,	 0, 0, 0, 0,			  0, 0, 0, 0,  8),
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT(SOUND_MIXER_IGAIN,	 0, 0, 0, 4,	 1, 0, 0, 4,  8),
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT(SOUND_MIXER_IGAIN,	 0, 0, 0, 4,	 1, 0, 0, 4,  8),
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT(SOUND_MIXER_IGAIN,	 0, 0, 0, 4,	 1, 0, 0, 4,  8),
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT(SOUND_MIXER_IGAIN,	 0, 0, 0, 4,	 1, 0, 0, 4,  8),
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT(SOUND_MIXER_OGAIN,	 0, 0, 0, 0,	 0, 0, 0, 0,  8),
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT(SOUND_MIXER_OGAIN,	 0, 0, 0, 0,	 0, 0, 0, 0,  8),
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT(SOUND_MIXER_OGAIN,	 0, 0, 0, 0,	 0, 0, 0, 0,  8),
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT(SOUND_MIXER_OGAIN,	 0, 0, 0, 0,	 0, 0, 0, 0,  8),
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT (SOUND_MIXER_OGAIN,	17, 1, 6, 1,			  0, 0, 0, 0,  8),
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT (SOUND_MIXER_VOLUME,	19, 0, 4, 4,			 19, 0, 0, 4,  8),
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT(SOUND_MIXER_VOLUME,	22, 1, 1, 5,	23, 1, 1, 5,  7),
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT(SOUND_MIXER_VOLUME,	25, 1, 0, 5,	27, 1, 0, 5,  8),
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT(SOUND_MIXER_VOLUME,	27, 1, 0, 4,	29, 1, 0, 4,  8),
/root/machinex/sound/oss/ad1848_mixer.h:	MIX_ENT(SOUND_MIXER_VOLUME,	46, 1, 0, 6,	47, 1, 0, 6,  7),
/root/machinex/sound/oss/ad1848_mixer.h: * Note: VOLUME == SPEAKER, SYNTH == LINE2, LINE == LINE3, CD == LINE1
/root/machinex/sound/oss/ad1848_mixer.h:	   six to avoid the discontinuity when the analog gain kicks in. */
/root/machinex/sound/oss/ad1848_mixer.h:					 SOUND_MASK_IGAIN | \
/root/machinex/sound/oss/ad1848_mixer.h:					 SOUND_MASK_IGAIN | \
/root/machinex/sound/oss/ad1848_mixer.h:				 SOUND_MASK_IGAIN | SOUND_MASK_PCM)
/root/machinex/sound/oss/ad1848_mixer.h:				 SOUND_MASK_MIC | SOUND_MASK_VOLUME | \
/root/machinex/sound/oss/ad1848_mixer.h:				 SOUND_MASK_OGAIN)
/root/machinex/sound/oss/ad1848_mixer.h:	unsigned int bitpos:3;		/* position of bits in register for volume */
/root/machinex/sound/oss/ad1848_mixer.h:	unsigned int nbits:3;		/* number of bits in register for volume */
/root/machinex/sound/oss/ad1848_mixer.h:	unsigned int polarity:1;	/* volume polarity: 0=normal, 1=reversed */
/root/machinex/sound/oss/ad1848_mixer.h:	unsigned int regno:6;		/* register number for volume */
/root/machinex/sound/oss/ad1848_mixer.h: * VOLUME, SYNTH, LINE, CD are not enabled above.
/root/machinex/sound/oss/aedsp16.c:   - prep for diffs against v3.0-proto-950402
/root/machinex/sound/oss/audio.c: *                   and decrement the counters again if we cannot open
/root/machinex/sound/oss/audio.c:			if ((file->f_flags & O_NONBLOCK) && buf_no == -EAGAIN)
/root/machinex/sound/oss/audio.c:			if ((file->f_flags & O_NONBLOCK) && err == -EAGAIN)
/root/machinex/sound/oss/audio.c:				return -EAGAIN;
/root/machinex/sound/oss/audio.c:				return p? p : -EAGAIN;	/* No more space. Return # of accepted bytes */
/root/machinex/sound/oss/CHANGELOG:- Fixed a bug in the compute_and_set_volume in gus_wave.c
/root/machinex/sound/oss/CHANGELOG:- Linear volume mode for GUS
/root/machinex/sound/oss/CHANGELOG:  MIDI interface. Also mixer volumes may be seriously wrong on some systems.
/root/machinex/sound/oss/CHANGELOG:  sources. Running 'setfx' is required again.
/root/machinex/sound/oss/dev_table.h:int *load_mixer_volumes(char *name, int *levels, int present);
/root/machinex/sound/oss/dev_table.h:	void (*volume_method) (int dev, int mode);
/root/machinex/sound/oss/dmabuf.c:			return -EAGAIN;
/root/machinex/sound/oss/dmabuf.c:			return -EAGAIN;
/root/machinex/sound/oss/dmabuf.c:		return -EAGAIN;
/root/machinex/sound/oss/dmabuf.c:		return -EAGAIN;
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	atari_microwire_cmd(MW_LM1992_BALLEFT(dmasound.volume_left));
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	atari_microwire_cmd(MW_LM1992_BALRIGHT(dmasound.volume_right));
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	atari_microwire_cmd(MW_LM1992_VOLUME(0));
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	atari_microwire_cmd(MW_LM1992_VOLUME(dmasound.gain));
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	    case SOUND_MIXER_READ_OGAIN:
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	    case SOUND_MIXER_READ_VOLUME:
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	    case SOUND_MIXER_READ_VOLUME:
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	    case SOUND_MIXER_WRITE_OGAIN:
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	    case SOUND_MIXER_WRITE_VOLUME:
/root/machinex/sound/oss/dmasound/dmasound_atari.c:#define GAIN_DB_TO_VOXWARE(v) ((((v) + 80) * 5 + 1) / 4)
/root/machinex/sound/oss/dmasound/dmasound_atari.c:#define GAIN_VOXWARE_TO_DB(v) \
/root/machinex/sound/oss/dmasound/dmasound_atari.c:#define RECLEVEL_GAIN_TO_VOXWARE(v)	(((v) * 20 + 2) / 3)
/root/machinex/sound/oss/dmasound/dmasound_atari.c:#define RECLEVEL_VOXWARE_TO_GAIN(v)	\
/root/machinex/sound/oss/dmasound/dmasound_atari.c:#define VOLUME_ATT_TO_VOXWARE(v) (100 - (v) * 20 / 3)
/root/machinex/sound/oss/dmasound/dmasound_atari.c:#define VOLUME_DB_TO_VOXWARE(v) ((((v) + 40) * 5 + 1) / 2)
/root/machinex/sound/oss/dmasound/dmasound_atari.c:#define VOLUME_VOXWARE_TO_ATT(v) \
/root/machinex/sound/oss/dmasound/dmasound_atari.c:#define VOLUME_VOXWARE_TO_DB(v) \
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	dmasound.gain = GAIN_VOXWARE_TO_DB(gain);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:		       dmasound.volume_left);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:		       dmasound.volume_left);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	dmasound.volume_left = 0;
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	dmasound.volume_left = (tt_dmasnd.output_atten & 0xf00) >> 8;
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	dmasound.volume_left = VOLUME_VOXWARE_TO_ATT(volume & 0xff);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	dmasound.volume_left = VOLUME_VOXWARE_TO_DB(volume & 0xff);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:		       dmasound.volume_right);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:		       dmasound.volume_right);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	dmasound.volume_right = 0;
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	dmasound.volume_right = (tt_dmasnd.output_atten & 0xf0) >> 4;
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	dmasound.volume_right = VOLUME_VOXWARE_TO_ATT((volume & 0xff00) >> 8);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	dmasound.volume_right = VOLUME_VOXWARE_TO_DB((volume & 0xff00) >> 8);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:			RECLEVEL_GAIN_TO_VOXWARE(tt_dmasnd.input_gain & 0xf) << 8);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:			RECLEVEL_GAIN_TO_VOXWARE(tt_dmasnd.input_gain >> 4 & 0xf) |
/root/machinex/sound/oss/dmasound/dmasound_atari.c:			RECLEVEL_VOXWARE_TO_GAIN(data & 0xff) << 4 |
/root/machinex/sound/oss/dmasound/dmasound_atari.c:			RECLEVEL_VOXWARE_TO_GAIN(data >> 8 & 0xff);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	return GAIN_DB_TO_VOXWARE(dmasound.gain);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:		return IOCTL_OUT(arg, dmasound_set_gain(data));
/root/machinex/sound/oss/dmasound/dmasound_atari.c:		    return IOCTL_OUT(arg, dmasound_set_volume(data));
/root/machinex/sound/oss/dmasound/dmasound_atari.c:		return IOCTL_OUT(arg, GAIN_DB_TO_VOXWARE(dmasound.gain));
/root/machinex/sound/oss/dmasound/dmasound_atari.c:		return IOCTL_OUT(arg, SOUND_MASK_VOLUME);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:		return IOCTL_OUT(arg, SOUND_MASK_VOLUME | SOUND_MASK_MIC);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:		return IOCTL_OUT(arg, SOUND_MASK_VOLUME | SOUND_MASK_MIC | SOUND_MASK_SPEAKER);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	return VOLUME_ATT_TO_VOXWARE(dmasound.volume_left) |
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	return VOLUME_DB_TO_VOXWARE(dmasound.volume_left) |
/root/machinex/sound/oss/dmasound/dmasound_atari.c:				 SOUND_MASK_VOLUME | SOUND_MASK_TREBLE | SOUND_MASK_BASS |
/root/machinex/sound/oss/dmasound/dmasound_atari.c:static int expand_bal;	/* Balance factor for expanding (not volume!) */
/root/machinex/sound/oss/dmasound/dmasound_atari.c:static int FalconSetVolume(int volume)
/root/machinex/sound/oss/dmasound/dmasound_atari.c:static int FalconSetVolume(int volume);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:static int TTSetGain(int gain)
/root/machinex/sound/oss/dmasound/dmasound_atari.c:static int TTSetGain(int gain);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:static int TTSetVolume(int volume)
/root/machinex/sound/oss/dmasound/dmasound_atari.c:static int TTSetVolume(int volume);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	 * subtle again so now I must admit I also prefer disabling the irq
/root/machinex/sound/oss/dmasound/dmasound_atari.c:		tt_dmasnd.input_gain =
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	tt_dmasnd.output_atten = dmasound.volume_left << 8 | dmasound.volume_right << 4;
/root/machinex/sound/oss/dmasound/dmasound_atari.c:			VOLUME_ATT_TO_VOXWARE(dmasound.volume_left) |
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	       VOLUME_ATT_TO_VOXWARE(dmasound.volume_right) << 8;
/root/machinex/sound/oss/dmasound/dmasound_atari.c:			VOLUME_ATT_TO_VOXWARE(dmasound.volume_right) << 8);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:				 VOLUME_DB_TO_VOXWARE(dmasound.volume_left) |
/root/machinex/sound/oss/dmasound/dmasound_atari.c:	       (VOLUME_DB_TO_VOXWARE(dmasound.volume_right) << 8);
/root/machinex/sound/oss/dmasound/dmasound_atari.c:				 (VOLUME_DB_TO_VOXWARE(dmasound.volume_right) << 8));
/root/machinex/sound/oss/dmasound/dmasound_core.c:				return uWritten > 0 ? uWritten : -EAGAIN;
/root/machinex/sound/oss/dmasound/dmasound_core.c:   we will check against the pre-defined literals and the actual sizes.
/root/machinex/sound/oss/dmasound/dmasound.h:#define SW_INPUT_VOLUME_DEFAULT	(128 / SW_INPUT_VOLUME_SCALE)
/root/machinex/sound/oss/dmasound/dmasound.h:#define SW_INPUT_VOLUME_SCALE	4
/root/machinex/sound/oss/dmasound/dmasound.h:extern uint software_input_volume; /* software implemented recording volume! */
/root/machinex/sound/oss/dmasound/dmasound.h:    int gain;
/root/machinex/sound/oss/dmasound/dmasound.h:    int volume_left;	/* volume (range is machine dependent) */
/root/machinex/sound/oss/dmasound/dmasound.h:    int volume_right;
/root/machinex/sound/oss/dmasound/dmasound.h:	return dmasound.mach.setGain ? dmasound.mach.setGain(gain) : 100;
/root/machinex/sound/oss/dmasound/dmasound.h:	return dmasound.mach.setVolume(volume);
/root/machinex/sound/oss/dmasound/dmasound.h:static inline int dmasound_set_gain(int gain)
/root/machinex/sound/oss/dmasound/dmasound.h:static inline int dmasound_set_volume(int volume)
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	    case SOUND_MIXER_READ_VOLUME:
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	    case SOUND_MIXER_WRITE_VOLUME:
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	custom.aud[0].audvol = dmasound.volume_left;
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	custom.aud[0].audvol = dmasound.volume_left;
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	custom.aud[0].audvol = dmasound.volume_left;
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	custom.aud[1].audvol = dmasound.volume_right;
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	custom.aud[1].audvol = dmasound.volume_right;
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	custom.aud[1].audvol = dmasound.volume_right;
/root/machinex/sound/oss/dmasound/dmasound_paula.c:			custom.aud[3].audvol = 1;  /* restoring volume here helps a bit */
/root/machinex/sound/oss/dmasound/dmasound_paula.c:#define VOLUME_AMI_TO_VOXWARE(v) ((v)*100/64)
/root/machinex/sound/oss/dmasound/dmasound_paula.c:#define VOLUME_VOXWARE_TO_AMI(v) \
/root/machinex/sound/oss/dmasound/dmasound_paula.c:		       dmasound.volume_left);
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	dmasound.volume_left = 64;
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	dmasound.volume_left = VOLUME_VOXWARE_TO_AMI(volume & 0xff);
/root/machinex/sound/oss/dmasound/dmasound_paula.c:		       dmasound.volume_right);
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	dmasound.volume_right = 64;
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	dmasound.volume_right = VOLUME_VOXWARE_TO_AMI((volume & 0xff00) >> 8);
/root/machinex/sound/oss/dmasound/dmasound_paula.c:		if (dmasound.volume_left == 64 && dmasound.volume_right == 64) {
/root/machinex/sound/oss/dmasound/dmasound_paula.c:		if (dmasound.volume_left == 64 && dmasound.volume_right == 64) {
/root/machinex/sound/oss/dmasound/dmasound_paula.c:#include <asm/amigaints.h>
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	len += sprintf(buffer+len, "\tsound.volume_left = %d [0...64]\n",
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	len += sprintf(buffer+len, "\tsound.volume_right = %d [0...64]\n",
/root/machinex/sound/oss/dmasound/dmasound_paula.c:		    return IOCTL_OUT(arg, dmasound_set_volume(data));
/root/machinex/sound/oss/dmasound/dmasound_paula.c:		    return IOCTL_OUT(arg, SOUND_MASK_VOLUME);
/root/machinex/sound/oss/dmasound/dmasound_paula.c:		    return IOCTL_OUT(arg, SOUND_MASK_VOLUME | SOUND_MASK_TREBLE);
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	return VOLUME_AMI_TO_VOXWARE(dmasound.volume_left) |
/root/machinex/sound/oss/dmasound/dmasound_paula.c:static int AmiSetVolume(int volume)
/root/machinex/sound/oss/dmasound/dmasound_paula.c:static int AmiSetVolume(int volume);
/root/machinex/sound/oss/dmasound/dmasound_paula.c:			    VOLUME_AMI_TO_VOXWARE(dmasound.volume_left) |
/root/machinex/sound/oss/dmasound/dmasound_paula.c:	       (VOLUME_AMI_TO_VOXWARE(dmasound.volume_right) << 8);
/root/machinex/sound/oss/dmasound/dmasound_paula.c:			    VOLUME_AMI_TO_VOXWARE(dmasound.volume_right) << 8);
/root/machinex/sound/oss/dmasound/dmasound_paula.c:			/* We can play pseudo 14-bit only with the maximum volume */
/root/machinex/sound/oss/dmasound/dmasound_q40.c:static int expand_bal;	/* Balance factor for expanding (not volume!) */
/root/machinex/sound/oss/dmasound/dmasound_q40.c:static int Q40SetVolume(int volume)
/root/machinex/sound/oss/dmasound/dmasound_q40.c:static int Q40SetVolume(int volume);
/root/machinex/sound/oss/Kconfig:	  Again think carefully before answering Y to this question.  It's
/root/machinex/sound/oss/Kconfig:	  can't control master volume, bass, treble and synth volume.
/root/machinex/sound/oss/Kconfig:	  cards if they have master volume, bass, treble, and you can't
/root/machinex/sound/oss/midibuf.c: 			c = -EAGAIN;
/root/machinex/sound/oss/midibuf.c:				c = -EAGAIN;
/root/machinex/sound/oss/midibuf.c:				QUEUE_BYTE is protected against interrupts */
/root/machinex/sound/oss/midibuf.c:			/* yes removed the cli() brackets again
/root/machinex/sound/oss/midi_synth.c:	don't know against what irqhandler to protect*/
/root/machinex/sound/oss/midi_synth.h:int midi_synth_start_note (int dev, int channel, int note, int volume);
/root/machinex/sound/oss/mpu401.c:	 * Send the RESET command. Try again if no success at the first time.
/root/machinex/sound/oss/mpu401.c:		/* Verify the hardware again */
/root/machinex/sound/oss/msnd_pinnacle.c:	case SOUND_MIXER_VOLUME:
/root/machinex/sound/oss/msnd_pinnacle.c:	case SOUND_MIXER_VOLUME:		/* master volume */
/root/machinex/sound/oss/msnd_pinnacle.c:		/* master volume unscaled controls */
/root/machinex/sound/oss/msnd_pinnacle.c:			return count == len ? -EAGAIN : len - count;
/root/machinex/sound/oss/msnd_pinnacle.c:			return count == len ? -EAGAIN : len - count;
/root/machinex/sound/oss/msnd_pinnacle.c:		/* scaled by master volume */
/root/machinex/sound/oss/msnd_pinnacle.c:		/* scaled by master volume */
/root/machinex/sound/oss/msnd_pinnacle.c:					SOUND_MASK_VOLUME;
/root/machinex/sound/oss/msnd_pinnacle.c:		/* update master volume scaled controls */
/root/machinex/sound/oss/opl3.c: * 64 =  0 db = relative volume  0 and:    Volume 32 = -6 db = relative
/root/machinex/sound/oss/opl3.c:				calc_vol(&vol1, volume, main_vol);
/root/machinex/sound/oss/opl3.c:				calc_vol(&vol1, volume, main_vol);
/root/machinex/sound/oss/opl3.c:			calc_vol(&vol1, volume, main_vol);
/root/machinex/sound/oss/opl3.c:				calc_vol(&vol2, volume, main_vol);
/root/machinex/sound/oss/opl3.c:			calc_vol(&vol2, volume, main_vol);
/root/machinex/sound/oss/opl3.c:			calc_vol(&vol2, volume, main_vol);
/root/machinex/sound/oss/opl3.c:				calc_vol(&vol3, volume, main_vol);
/root/machinex/sound/oss/opl3.c:				calc_vol(&vol4, volume, main_vol);
/root/machinex/sound/oss/opl3.c:				calc_vol(&vol4, volume, main_vol);
/root/machinex/sound/oss/opl3.c:				calc_vol(&vol4, volume, main_vol);
/root/machinex/sound/oss/opl3.c:				calc_vol(&vol4, volume, main_vol);
/root/machinex/sound/oss/opl3.c:		case CTL_MAIN_VOLUME:
/root/machinex/sound/oss/opl3.c:	 devc->voc[voice].volume = 64;
/root/machinex/sound/oss/opl3.c:	devc->voc[voice].volume = info->controllers[CTL_MAIN_VOLUME];
/root/machinex/sound/oss/opl3.c:			devc->voc[voice].volume = value / 128;
/root/machinex/sound/oss/opl3.c: * for i=0. This log-table converts a linear volume-scaling (0..127) to a
/root/machinex/sound/oss/opl3.c:	int             volume;
/root/machinex/sound/oss/opl3.c:				 * Just change the volume
/root/machinex/sound/oss/opl3.c:		level += fm_volume_table[volume];
/root/machinex/sound/oss/opl3.c:		set_voice_volume(voice, volume, devc->voc[voice].volume);
/root/machinex/sound/oss/opl3.c:	set_voice_volume(voice, volume, devc->voc[voice].volume);
/root/machinex/sound/oss/opl3.c:static char fm_volume_table[128] =
/root/machinex/sound/oss/opl3.c:static int opl3_start_note (int dev, int voice, int note, int volume)
/root/machinex/sound/oss/opl3.c:static void calc_vol(unsigned char *regbyte, int volume, int main_vol)
/root/machinex/sound/oss/opl3.c:static void opl3_volume_method(int dev, int mode)
/root/machinex/sound/oss/opl3.c:static void set_voice_volume(int voice, int volume, int main_vol)
/root/machinex/sound/oss/opl3.c: * volume -8 it was implemented as a table because it is only 128 bytes and
/root/machinex/sound/oss/opl3.c:	.volume_method	= opl3_volume_method,
/root/machinex/sound/oss/opl3.c:									 * volume to
/root/machinex/sound/oss/opl3.c:									 * volume to
/root/machinex/sound/oss/opl3.c:	volume = (volume * main_vol) / 127;
/root/machinex/sound/oss/opl3_hw.h:#define   TOTAL_LEVEL_MASK		0x3f	/* Strength (volume) of OP */
/root/machinex/sound/oss/pas2_mixer.c:	  case SOUND_MIXER_VOLUME:	/* Master volume (0-63) */
/root/machinex/sound/oss/pas2_mixer.c:	levels = load_mixer_volumes("PAS16_1", default_levels, 1);
/root/machinex/sound/oss/pas2_mixer.c:					 SOUND_MASK_VOLUME | SOUND_MASK_BASS | SOUND_MASK_TREBLE | SOUND_MASK_RECLEV)
/root/machinex/sound/oss/pss.c: *          Added mixer device for Beethoven ADSP-16 (master volume,
/root/machinex/sound/oss/pss.c:			case SOUND_MIXER_VOLUME:
/root/machinex/sound/oss/pss.c:			case SOUND_MIXER_VOLUME:
/root/machinex/sound/oss/pss.c:					&devc->mixer.volume_l,
/root/machinex/sound/oss/pss.c:		devc->mixer.volume_l = devc->mixer.volume_r = 33;
/root/machinex/sound/oss/pss.c:					&devc->mixer.volume_r))
/root/machinex/sound/oss/pss.c:					devc->mixer.volume_r);
/root/machinex/sound/oss/pss.c:					devc->mixer.volume_r);
/root/machinex/sound/oss/pss.c: *          Fixed computation of mixer volumes
/root/machinex/sound/oss/pss.c:	if ((cmdf != SOUND_MIXER_VOLUME) && (cmdf != SOUND_MIXER_BASS) &&
/root/machinex/sound/oss/pss.c:	if (get_user(volume, p))
/root/machinex/sound/oss/pss.c:	if (get_user(volume, p))
/root/machinex/sound/oss/pss.c:				if (set_volume_mono(arg, &devc->mixer.bass))
/root/machinex/sound/oss/pss.c:				if (set_volume_mono(arg, &devc->mixer.synth))
/root/machinex/sound/oss/pss.c:				if (set_volume_mono(arg, &devc->mixer.treble))
/root/machinex/sound/oss/pss.c:				if (set_volume_stereo(arg,
/root/machinex/sound/oss/pss.c:	int vol = ((0x8000*volume)/100L);
/root/machinex/sound/oss/pss.c:	left = volume & 0xff;
/root/machinex/sound/oss/pss.c:	left = volume & 0xff;
/root/machinex/sound/oss/pss.c:MODULE_DESCRIPTION("Module for PSS sound cards (based on AD1848, ADSP-2115 and ESC614). This module includes control of output amplifier and synth volume of the Beethoven ADSP-16 card (this may work with other PSS cards).");
/root/machinex/sound/oss/pss.c:MODULE_PARM_DESC(pss_mixer, "Enable (1) or disable (0) PSS mixer (controlling of output volume, bass, treble, synth volume). The mixer is not available on all PSS cards.");
/root/machinex/sound/oss/pss.c:				or_mask =  ret_vol_stereo(devc->mixer.volume_l, devc->mixer.volume_r);
/root/machinex/sound/oss/pss.c:				or_mask = SOUND_MASK_VOLUME;
/root/machinex/sound/oss/pss.c:				or_mask = SOUND_MASK_VOLUME | SOUND_MASK_BASS | SOUND_MASK_TREBLE | SOUND_MASK_SYNTH;
/root/machinex/sound/oss/pss.c:				return ret_vol_stereo(devc->mixer.volume_l,
/root/machinex/sound/oss/pss.c:	right = (volume >> 8) & 0xff;
/root/machinex/sound/oss/pss.c:	set_master_volume(devc, 33, 33);
/root/machinex/sound/oss/pss.c:				set_master_volume(devc, devc->mixer.volume_l,
/root/machinex/sound/oss/pss.c:	set_synth_volume(devc, 30);
/root/machinex/sound/oss/pss.c:				set_synth_volume(devc, devc->mixer.synth);
/root/machinex/sound/oss/pss.c:static int set_volume_mono(unsigned __user *p, unsigned int *aleft)
/root/machinex/sound/oss/pss.c:static int set_volume_stereo(unsigned __user *p,
/root/machinex/sound/oss/pss.c:static void set_master_volume(pss_confdata *devc, int left, int right)
/root/machinex/sound/oss/pss.c:static void set_synth_volume(pss_confdata *devc, int volume)
/root/machinex/sound/oss/pss.c:	unsigned int left, right, volume;
/root/machinex/sound/oss/pss.c:	unsigned int left, volume;
/root/machinex/sound/oss/pss.c:	unsigned int volume_l;
/root/machinex/sound/oss/pss.c:	unsigned int volume_r;
/root/machinex/sound/oss/sb_common.c:		   wipe up after Cyrix again */
/root/machinex/sound/oss/sb_ess.c: * - 6 bit master volume
/root/machinex/sound/oss/sb_ess.c: * - 6 bit master volume
/root/machinex/sound/oss/sb_ess.c:		 * check if a hardware volume interrupt has fired.
/root/machinex/sound/oss/sb_ess.c:		 * chips seem to have hardware volume control. Bit 4 is readonly to
/root/machinex/sound/oss/sb_ess.c:#define ES_REC_MIXER_RECIGAIN	(SOUND_MIXER_IGAIN	 + ES_REC_MIXER_RECDIFF)
/root/machinex/sound/oss/sb_ess.c:#define ES_REC_MIXER_RECOGAIN	(SOUND_MIXER_OGAIN	 + ES_REC_MIXER_RECDIFF)
/root/machinex/sound/oss/sb_ess.c: * I had the impression that ES1688 also has 6 bit master volume control. The
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(ES_REC_MIXER_RECIGAIN,		0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(ES_REC_MIXER_RECIGAIN,		0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(ES_REC_MIXER_RECOGAIN,		0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(ES_REC_MIXER_RECOGAIN,		0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_IGAIN,			0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_IGAIN,			0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_IGAIN,			0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_IGAIN,			0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_IGAIN,			0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_OGAIN,			0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_OGAIN,			0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_OGAIN,			0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_OGAIN,			0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_OGAIN,			0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_VOLUME,			0x32, 7, 4, 0x32, 3, 4),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_VOLUME,			0x32, 7, 4, 0x32, 3, 4),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_VOLUME,			0x60, 5, 6, 0x62, 5, 6),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_VOLUME,			0x60, 5, 6, 0x62, 5, 6),
/root/machinex/sound/oss/sb_ess.c:MIX_ENT(SOUND_MIXER_VOLUME,			0x60, 5, 6, 0x62, 5, 6),
/root/machinex/sound/oss/sb_ess.c: * So ES1688 apparently doesn't have 6 bit master volume control, but the
/root/machinex/sound/oss/sb_ess.c:			| SOUND_MASK_MIC	| SOUND_MASK_CD		| SOUND_MASK_VOLUME	\
/root/machinex/sound/oss/sb_ess.c: * that registers 0x68 to 0x6e don't exist which means: no recording volume
/root/machinex/sound/oss/sb_ess.c: * the latter case the recording volumes are 0.
/root/machinex/sound/oss/sb_mixer.c:  0x00,				/* SOUND_MIXER_IGAIN */
/root/machinex/sound/oss/sb_mixer.c:	0x00,	/* SOUND_MIXER_IGAIN	*/
/root/machinex/sound/oss/sb_mixer.c:	0x00,	/* SOUND_MIXER_IGAIN	*/
/root/machinex/sound/oss/sb_mixer.c:  0x00,				/* SOUND_MIXER_OGAIN */
/root/machinex/sound/oss/sb_mixer.c:	0x00	/* SOUND_MIXER_OGAIN	*/
/root/machinex/sound/oss/sb_mixer.c:	0x00	/* SOUND_MIXER_OGAIN	*/
/root/machinex/sound/oss/sb_mixer.c:	0x00,	/* SOUND_MIXER_VOLUME	*/
/root/machinex/sound/oss/sb_mixer.c:	0x00,	/* SOUND_MIXER_VOLUME	*/
/root/machinex/sound/oss/sb_mixer.c:  0x0b,				/* SOUND_MIXER_VOLUME */
/root/machinex/sound/oss/sb_mixer.c:  0x4b4b,			/* Input gain */
/root/machinex/sound/oss/sb_mixer.c:  0x4b4b,			/* Input gain */
/root/machinex/sound/oss/sb_mixer.c:  0x4b4b,			/* Output gain */
/root/machinex/sound/oss/sb_mixer.c:  0x4b4b,			/* Output gain */
/root/machinex/sound/oss/sb_mixer.c:		case SOUND_MIXER_VOLUME:
/root/machinex/sound/oss/sb_mixer.c: * channel is the COVOX/DisneySoundSource emulation volume control
/root/machinex/sound/oss/sb_mixer.c:		devc->levels = load_mixer_volumes(name, sb_default_levels, 1);
/root/machinex/sound/oss/sb_mixer.c:		devc->levels = load_mixer_volumes(name, smg_default_levels, 1);
/root/machinex/sound/oss/sb_mixer.c:MIX_ENT(SOUND_MIXER_IGAIN,	0x00, 0, 0, 0x00, 0, 0),
/root/machinex/sound/oss/sb_mixer.c:MIX_ENT(SOUND_MIXER_IGAIN,	0x3f, 7, 2, 0x40, 7, 2),
/root/machinex/sound/oss/sb_mixer.c:MIX_ENT(SOUND_MIXER_OGAIN,	0x00, 0, 0, 0x00, 0, 0)
/root/machinex/sound/oss/sb_mixer.c:MIX_ENT(SOUND_MIXER_OGAIN,	0x41, 7, 2, 0x42, 7, 2)
/root/machinex/sound/oss/sb_mixer.c:MIX_ENT(SOUND_MIXER_RECLEV,	0x00, 0, 0, 0x00, 0, 0), /* Obsolete. Use IGAIN */
/root/machinex/sound/oss/sb_mixer.c:MIX_ENT(SOUND_MIXER_RECLEV,	0x3f, 7, 2, 0x40, 7, 2), /* Obsolete. Use IGAIN */
/root/machinex/sound/oss/sb_mixer.c:MIX_ENT(SOUND_MIXER_VOLUME,	0x22, 7, 4, 0x22, 3, 4),
/root/machinex/sound/oss/sb_mixer.c:MIX_ENT(SOUND_MIXER_VOLUME,	0x30, 7, 5, 0x31, 7, 5),
/root/machinex/sound/oss/sb_mixer.c:MIX_ENT(SOUND_MIXER_VOLUME,	0x62, 7, 4, 0x62, 3, 4),
/root/machinex/sound/oss/sb_mixer.c: * on the mixer. It does NOT control speaker volume. Should have own
/root/machinex/sound/oss/sb_mixer.c:/* SM_GAMES          Master volume is lower and PCM & FM volumes
/root/machinex/sound/oss/sb_mixer.c:		~(SOUND_MASK_BASS | SOUND_MASK_TREBLE | SOUND_MASK_PCM | SOUND_MASK_VOLUME);
/root/machinex/sound/oss/sb_mixer.c:					 SOUND_MASK_CD | SOUND_MASK_VOLUME)
/root/machinex/sound/oss/sb_mixer.c:					 SOUND_MASK_IGAIN | SOUND_MASK_OGAIN | \
/root/machinex/sound/oss/sb_mixer.c:				 SOUND_MASK_VOLUME)
/root/machinex/sound/oss/sb_mixer.c:					 SOUND_MASK_VOLUME | SOUND_MASK_BASS | SOUND_MASK_TREBLE | \
/root/machinex/sound/oss/sequencer.c:			if (synth_devs[dev]->volume_method != NULL)
/root/machinex/sound/oss/sequencer.c:					 * Output FIFO is full. Wait one timer cycle and try again.
/root/machinex/sound/oss/sequencer.c:  			return -EAGAIN;
/root/machinex/sound/oss/sequencer.c:				return -EAGAIN;
/root/machinex/sound/oss/sequencer.c:		{		/* Suspend playback. Next timer routine invokes this routine again */
/root/machinex/sound/oss/sequencer.c:				synth_devs[dev]->volume_method(dev, q[3]);
/root/machinex/sound/oss/soundcard.c:EXPORT_SYMBOL(load_mixer_volumes);
/root/machinex/sound/oss/soundcard.c:	for (i = 0; i < num_mixer_volumes; i++) {
/root/machinex/sound/oss/soundcard.c:	if (n < 0 || n >= num_mixer_volumes)
/root/machinex/sound/oss/soundcard.c:	if (num_mixer_volumes >= MAX_MIXER_DEV) {
/root/machinex/sound/oss/soundcard.c:int *load_mixer_volumes(char *name, int *levels, int present)
/root/machinex/sound/oss/soundcard.c:	load_mixer_volumes(buf.name, buf.levels, 0);
/root/machinex/sound/oss/soundcard.c:	n = num_mixer_volumes++;
/root/machinex/sound/oss/soundcard.c:		return -EAGAIN;
/root/machinex/sound/oss/soundcard.c:static int num_mixer_volumes;
/root/machinex/sound/oss/soundcard.c: * Table for configurable mixer volume handling
/root/machinex/sound/oss/swarm_cs4297a.c:		case SOUND_MIXER_VOLUME:
/root/machinex/sound/oss/swarm_cs4297a.c:	case SOUND_MIXER_VOLUME:
/root/machinex/sound/oss/swarm_cs4297a.c:		cs4297a_write_ac97(s, AC97_RECORD_GAIN, temp1);
/root/machinex/sound/oss/swarm_cs4297a.c:	// Increment the count of volume writes.
/root/machinex/sound/oss/swarm_cs4297a.c:				  printk("SOUND_MIXER_VOLUME:\n"));
/root/machinex/sound/oss/swarm_cs4297a.c:			r = 100;	// Max right volume is 100, too
/root/machinex/sound/oss/swarm_cs4297a.c:			return put_user(SOUND_MASK_LINE | SOUND_MASK_VOLUME,
/root/machinex/sound/oss/swarm_cs4297a.c:				return ret ? ret : -EAGAIN;
/root/machinex/sound/oss/swarm_cs4297a.c:				return ret ? ret : -EAGAIN;
/root/machinex/sound/oss/swarm_cs4297a.c:		rl = 15 - rl;	// Convert volume to attenuation.
/root/machinex/sound/oss/swarm_cs4297a.c:		rl = 31 - rl;	// Convert volume to attenuation.
/root/machinex/sound/oss/swarm_cs4297a.c:			rr = attentbl[(10 * r) / 100];	// Convert volume to attenuation.
/root/machinex/sound/oss/swarm_cs4297a.c:		SOUND_MASK_LINE, SOUND_MASK_VOLUME, 0, 0
/root/machinex/sound/oss/swarm_cs4297a.c:					SOUND_MASK_VOLUME | SOUND_MASK_RECLEV,
/root/machinex/sound/oss/swarm_cs4297a.c:					SOUND_MASK_VOLUME | SOUND_MASK_RECLEV,
/root/machinex/sound/oss/swarm_cs4297a.c:		[SOUND_MIXER_VOLUME] = 9	// Master Volume 
/root/machinex/sound/oss/swarm_cs4297a.c:		[SOUND_MIXER_VOLUME] = 9	// Master Volume 
/root/machinex/sound/oss/swarm_cs4297a.c:  	{SOUND_MIXER_WRITE_VOLUME, 0x4040},
/root/machinex/sound/oss/swarm_cs4297a.c:		temp1 &= 0x40;	// Isolate 20db gain bit.
/root/machinex/sound/oss/uart401.c: *				interrupt allocation. Protect against bogus unload
/root/machinex/sound/oss/uart401.c:	 * Send the RESET command. Try again if no success at the first time.
/root/machinex/sound/oss/uart6850.c: * Jeff Garzik:		Made it work again, in theory
/root/machinex/sound/oss/vidc.c:	case SOUND_MIXER_VOLUME:
/root/machinex/sound/oss/vidc.c:	mlev_l = vidc_level_l[SOUND_MIXER_VOLUME];
/root/machinex/sound/oss/vidc.c:	mlev_r = vidc_level_r[SOUND_MIXER_VOLUME];
/root/machinex/sound/oss/vidc.c:/*printk("VIDC: PCM vol %05X %05X\n", vidc_audio_volume_l, vidc_audio_volume_r);*/
/root/machinex/sound/oss/vidc.c:static unsigned int	vidc_audio_volume_l;	/* left PCM vol, 0 - 65536 */
/root/machinex/sound/oss/vidc.c:static unsigned int	vidc_audio_volume_r;	/* right PCM vol, 0 - 65536 */
/root/machinex/sound/oss/vidc.c:		val = SOUND_MASK_VOLUME | SOUND_MASK_PCM | SOUND_MASK_SYNTH;
/root/machinex/sound/oss/vidc.c:		val = SOUND_MASK_VOLUME | SOUND_MASK_PCM | SOUND_MASK_SYNTH;
/root/machinex/sound/oss/vidc.c:		vidc_audio_volume_l = SCALE(lev_l, mlev_l);
/root/machinex/sound/oss/vidc.c:		vidc_audio_volume_r = SCALE(lev_r, mlev_r);
/root/machinex/sound/oss/vidc.c:	vidc_mixer_set(SOUND_MIXER_VOLUME, (85 | 85 << 8));
/root/machinex/sound/oss/vidc.h:extern int      vidc_synth_get_volume(void);
/root/machinex/sound/oss/vidc.h:extern int      vidc_synth_set_volume(int vol);
/root/machinex/sound/oss/vwsnd.c:} ad1843_gain_t;
/root/machinex/sound/oss/vwsnd.c: * ad1843_get_gain reads the specified register and extracts the gain value
/root/machinex/sound/oss/vwsnd.c:			   const ad1843_gain_t *gp,
/root/machinex/sound/oss/vwsnd.c:	int	negative;		/* nonzero if gain is negative. */
/root/machinex/sound/oss/vwsnd.c:	 * mic gain to +20 dB.
/root/machinex/sound/oss/vwsnd.c: *	OUTSRC while thread B changes gain -- both write to the same
/root/machinex/sound/oss/vwsnd.c:	/* Restore DA1 mute and gain. */
/root/machinex/sound/oss/vwsnd.c:	return ad1843_get_gain(lith, gp);
/root/machinex/sound/oss/vwsnd.c:				return ret ? ret : -EAGAIN;
/root/machinex/sound/oss/vwsnd.c:				return ret ? ret : -EAGAIN;
/root/machinex/sound/oss/vwsnd.c: * Returns the new gain, which may be lower than the old gain.
/root/machinex/sound/oss/vwsnd.c:	/* Save DA1 mute and gain (addr 9 is DA1 analog gain/attenuation) */
/root/machinex/sound/oss/vwsnd.c: * Set an audio channel's gain. Converts from OSS format to AD1843's
/root/machinex/sound/oss/vwsnd.c: * specifying gain.  The ad1843_gain structure parameterizes the
/root/machinex/sound/oss/vwsnd.c:static const ad1843_gain_t ad1843_gain_CD
/root/machinex/sound/oss/vwsnd.c:static const ad1843_gain_t ad1843_gain_LINE
/root/machinex/sound/oss/vwsnd.c:static const ad1843_gain_t ad1843_gain_MIC
/root/machinex/sound/oss/vwsnd.c:static const ad1843_gain_t ad1843_gain_PCM
/root/machinex/sound/oss/vwsnd.c:static const ad1843_gain_t ad1843_gain_RECLEV
/root/machinex/sound/oss/vwsnd.c:static int ad1843_get_gain(lithium_t *lith, const ad1843_gain_t *gp)
/root/machinex/sound/oss/vwsnd.c:static int ad1843_set_gain(lithium_t *lith,
/root/machinex/sound/oss/vwsnd.c:typedef struct ad1843_gain {
/root/machinex/sound/oss/vwsnd.c: * using the supplied gain type.  It returns the gain in OSS format.
/root/machinex/sound/oss/vwsnd.c:		val = ad1843_get_gain(&devc->lith, &ad1843_gain_CD);
/root/machinex/sound/oss/vwsnd.c:		val = ad1843_get_gain(&devc->lith, &ad1843_gain_LINE);
/root/machinex/sound/oss/vwsnd.c:		val = ad1843_get_gain(&devc->lith, &ad1843_gain_MIC);
/root/machinex/sound/oss/vwsnd.c:		val = ad1843_get_gain(&devc->lith, &ad1843_gain_PCM);
/root/machinex/sound/oss/vwsnd.c:		val = ad1843_get_gain(&devc->lith, &ad1843_gain_RECLEV);
/root/machinex/sound/oss/vwsnd.c:		val = ad1843_set_gain(&devc->lith, &ad1843_gain_CD, val);
/root/machinex/sound/oss/vwsnd.c:		val = ad1843_set_gain(&devc->lith, &ad1843_gain_LINE, val);
/root/machinex/sound/oss/vwsnd.c:		val = ad1843_set_gain(&devc->lith, &ad1843_gain_MIC, val);
/root/machinex/sound/oss/vwsnd.c:		val = ad1843_set_gain(&devc->lith, &ad1843_gain_PCM, val);
/root/machinex/sound/oss/vwsnd.c:		val = ad1843_set_gain(&devc->lith, &ad1843_gain_RECLEV, val);
/root/machinex/sound/oss/waveartist.c:	{ 0, 0, 0,  0 }, /* SOUND_MIXER_IGAIN    */
/root/machinex/sound/oss/waveartist.c:	{ 0, 0, 0,  0 }, /* SOUND_MIXER_OGAIN    */
/root/machinex/sound/oss/waveartist.c:	0x6464,		/* Input gain		 */
/root/machinex/sound/oss/waveartist.c:	0x6464,		/* Output gain		 */
/root/machinex/sound/oss/waveartist.c:	{ 2, 6, 1,  7 }, /* SOUND_MIXER_VOLUME   */
/root/machinex/sound/oss/waveartist.c:	{ 3, 7, 0,  7 }, /* SOUND_MIXER_IGAIN    */
/root/machinex/sound/oss/waveartist.c:	case SOUND_MIXER_IGAIN:
/root/machinex/sound/oss/waveartist.c:	case SOUND_MIXER_IGAIN:
/root/machinex/sound/oss/waveartist.c:	case SOUND_MIXER_IGAIN:
/root/machinex/sound/oss/waveartist.c:	case SOUND_MIXER_VOLUME:
/root/machinex/sound/oss/waveartist.c:	case SOUND_MIXER_VOLUME:
/root/machinex/sound/oss/waveartist.c:	case SOUND_MIXER_VOLUME:
/root/machinex/sound/oss/waveartist.c:		 * control, till the hw volume is modified
/root/machinex/sound/oss/waveartist.c:		devc->slider_vol = slider_volume;
/root/machinex/sound/oss/waveartist.c:	if (abs(devc->slider_vol - slider_volume) > 20)
/root/machinex/sound/oss/waveartist.c:	if (abs(volume - old_slider_volume) > 7) {
/root/machinex/sound/oss/waveartist.c:		if ((cmd & 0xff) == SOUND_MIXER_VOLUME)
/root/machinex/sound/oss/waveartist.c:	if (slider_volume != temp && devc->use_slider) {
/root/machinex/sound/oss/waveartist.c:	if (volume < 0)
/root/machinex/sound/oss/waveartist.c:	if (volume > 100)
/root/machinex/sound/oss/waveartist.c:	 * If we're using software controlled volume, and
/root/machinex/sound/oss/waveartist.c:	 * left volume.  (from ALSA driver OSS emulation).
/root/machinex/sound/oss/waveartist.c:	 * Mono devices have their right volume forced to their
/root/machinex/sound/oss/waveartist.c:		old_slider_volume = volume;
/root/machinex/sound/oss/waveartist.c:			printk(KERN_DEBUG "Slider volume: %d.\n", volume);
/root/machinex/sound/oss/waveartist.c:	return old_slider_volume;
/root/machinex/sound/oss/waveartist.c:	 * set mixer input select to none, RX filter gains 0 dB
/root/machinex/sound/oss/waveartist.c:	signed int	slider_vol;	   /* hardware slider volume     */
/root/machinex/sound/oss/waveartist.c:	signed int slider_volume;
/root/machinex/sound/oss/waveartist.c:	signed int volume = 255;
/root/machinex/sound/oss/waveartist.c:			slider_volume | slider_volume << 8);
/root/machinex/sound/oss/waveartist.c:	slider_volume = vnc_volume_slider(devc);
/root/machinex/sound/oss/waveartist.c:			SOUND_MASK_IGAIN,
/root/machinex/sound/oss/waveartist.c:			SOUND_MASK_IMIX    | SOUND_MASK_IGAIN,
/root/machinex/sound/oss/waveartist.c:					 SOUND_MASK_VOLUME     |\
/root/machinex/sound/oss/waveartist.c:		 * special case for master volume: if we
/root/machinex/sound/oss/waveartist.c:	static signed int old_slider_volume;
/root/machinex/sound/oss/waveartist.c:	.stereo_devs	= SOUND_MASK_VOLUME  | SOUND_MASK_SYNTH   |
/root/machinex/sound/oss/waveartist.c:	.stereo_devs	= (SUPPORTED_MIXER_DEVICES | SOUND_MASK_IGAIN) & ~
/root/machinex/sound/oss/waveartist.c:	.supported_devs	= SOUND_MASK_VOLUME  | SOUND_MASK_SYNTH   |
/root/machinex/sound/oss/waveartist.c:	.supported_devs	= SUPPORTED_MIXER_DEVICES | SOUND_MASK_IGAIN,
/root/machinex/sound/oss/waveartist.c:	 * switch back to slider controlled volume.
/root/machinex/sound/oss/waveartist.c:	temp = levels[SOUND_MIXER_VOLUME] & 0xFF;
/root/machinex/sound/oss/waveartist.c:	unsigned short	*levels;	   /* cache of volume settings   */
/root/machinex/sound/oss/waveartist.c:vnc_volume_slider(wavnc_info *devc)
/root/machinex/sound/oss/waveartist.c:		volume--;
/root/machinex/sound/oss/waveartist.c:		volume = 0;
/root/machinex/sound/oss/waveartist.c:	volume = 0x00ffffff - *CSR_TIMER1_VALUE;
/root/machinex/sound/oss/waveartist.c:		volume = 100;
/root/machinex/sound/oss/waveartist.c:	volume = 150 - (volume >> 5);
/root/machinex/sound/oss/waveartist.c:		 * volume control to a software volume
/root/machinex/sound/oss/waveartist.c:	volume = (volume >> 6) - 25;
/root/machinex/sound/oss/waveartist.c:		waveartist_set_mixer(devc, SOUND_MIXER_VOLUME,
/root/machinex/sound/oss/waveartist.c:		whichDev = SOUND_MIXER_VOLUME;
/root/machinex/sound/oss/waveartist.c:	while (volume && (inb(0x201) & 0x01))
/root/machinex/sound/oss/waveartist.h:#define MIX_GAIN_AUX1	1	/* aux1		 */
/root/machinex/sound/oss/waveartist.h:#define MIX_GAIN_AUX2	2	/* aux2		 */
/root/machinex/sound/oss/waveartist.h:#define MIX_GAIN_LINE	0	/* line in	 */
/root/machinex/sound/oss/waveartist.h:#define MIX_GAIN_MIC	4	/* normal mic	 */
/root/machinex/sound/oss/waveartist.h:#define MIX_GAIN_MONO	7	/* mono in	 */
/root/machinex/sound/oss/waveartist.h:#define MIX_GAIN_OUT	6	/* output	 */
/root/machinex/sound/oss/waveartist.h:#define MIX_GAIN_PREMIC	5	/* preamp mic	 */
/root/machinex/sound/oss/waveartist.h:#define MIX_GAIN_XMIC	3	/* crossover mic */
/root/machinex/sound/oss/waveartist.h: * Definitions for mixer gain settings
/root/machinex/sound/parisc/harmony.c:#define HARMONY_VOLUME(xname, left_shift, right_shift, mask, invert) \
/root/machinex/sound/parisc/harmony.c:  .get = snd_harmony_volume_get, .put = snd_harmony_volume_put,      \
/root/machinex/sound/parisc/harmony.c:		       HARMONY_GAIN_HE_SHIFT, 1, 0),
/root/machinex/sound/parisc/harmony.c:		       HARMONY_GAIN_LE_SHIFT, 1, 0),
/root/machinex/sound/parisc/harmony.c:		       HARMONY_GAIN_MA_SHIFT, HARMONY_GAIN_MA, 1),
/root/machinex/sound/parisc/harmony.c:		       HARMONY_GAIN_RI_SHIFT, HARMONY_GAIN_IN, 0),
/root/machinex/sound/parisc/harmony.c:		       HARMONY_GAIN_RO_SHIFT, HARMONY_GAIN_OUT, 1),
/root/machinex/sound/parisc/harmony.c:		       HARMONY_GAIN_SE_SHIFT, 1, 0),
/root/machinex/sound/parisc/harmony.c:	HARMONY_VOLUME("Capture Volume", HARMONY_GAIN_LI_SHIFT,
/root/machinex/sound/parisc/harmony.c:	HARMONY_VOLUME("Headphones Switch", HARMONY_GAIN_HE_SHIFT,
/root/machinex/sound/parisc/harmony.c:	HARMONY_VOLUME("Internal Speaker Switch", HARMONY_GAIN_SE_SHIFT,
/root/machinex/sound/parisc/harmony.c:	HARMONY_VOLUME("Line-Out Switch", HARMONY_GAIN_LE_SHIFT,
/root/machinex/sound/parisc/harmony.c:	HARMONY_VOLUME("Master Playback Volume", HARMONY_GAIN_LO_SHIFT, 
/root/machinex/sound/parisc/harmony.c:	HARMONY_VOLUME("Monitor Volume", HARMONY_GAIN_MA_SHIFT,
/root/machinex/sound/parisc/harmony.c:	harmony_write(h, HARMONY_GAINCTL, HARMONY_GAIN_SILENCE);
/root/machinex/sound/parisc/harmony.c:	harmony_write(h, HARMONY_GAINCTL, h->st.gain);
/root/machinex/sound/parisc/harmony.c:	harmony_write(h, HARMONY_GAINCTL, h->st.gain);
/root/machinex/sound/parisc/harmony.c:	h->st.gain = HARMONY_GAIN_DEFAULT;
/root/machinex/sound/parisc/harmony.c:	h->st.gain &= ~HARMONY_GAIN_IS_MASK;
/root/machinex/sound/parisc/harmony.c: 	h->st.gain |= (left << shift_left);
/root/machinex/sound/parisc/harmony.c:	h->st.gain &= ~( (mask << shift_left ) );
/root/machinex/sound/parisc/harmony.c:		h->st.gain &= ~( (mask << shift_right) );
/root/machinex/sound/parisc/harmony.c:		h->st.gain |= (right << shift_right);
/root/machinex/sound/parisc/harmony.c: 	h->st.gain |= value << HARMONY_GAIN_IS_SHIFT;
/root/machinex/sound/parisc/harmony.c:	int old_gain = h->st.gain;
/root/machinex/sound/parisc/harmony.c:	int old_gain = h->st.gain;
/root/machinex/sound/parisc/harmony.c:	left = (h->st.gain >> shift_left) & mask;
/root/machinex/sound/parisc/harmony.c:	return h->st.gain != old_gain;
/root/machinex/sound/parisc/harmony.c:	return h->st.gain != old_gain;
/root/machinex/sound/parisc/harmony.c:	right = (h->st.gain >> shift_right) & mask;
/root/machinex/sound/parisc/harmony.c:	snd_harmony_set_new_gain(h);
/root/machinex/sound/parisc/harmony.c:	snd_harmony_set_new_gain(h);
/root/machinex/sound/parisc/harmony.c:snd_harmony_set_new_gain(struct snd_harmony *h)
/root/machinex/sound/parisc/harmony.c:snd_harmony_volume_get(struct snd_kcontrol *kc, 
/root/machinex/sound/parisc/harmony.c:snd_harmony_volume_put(struct snd_kcontrol *kc, 
/root/machinex/sound/parisc/harmony.c:	value = (h->st.gain >> HARMONY_GAIN_IS_SHIFT) & 1;
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAINCTL  0x00c
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_DEFAULT    0x01F00FFF
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_HE_MASK    (1 << HARMONY_GAIN_HE_SHIFT)
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_HE_SHIFT   27 /* headphones enabled */
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_IN         0x0f
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_IS_MASK    (1 << HARMONY_GAIN_IS_SHIFT)
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_IS_SHIFT   24 /* input select - 0 for line, 1 for mic */
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_LE_MASK    (1 << HARMONY_GAIN_LE_SHIFT)
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_LE_SHIFT   26 /* line-out enabled */
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_LI_MASK    (HARMONY_GAIN_IN << HARMONY_GAIN_LI_SHIFT)
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_LI_SHIFT   16
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_LO_MASK    (HARMONY_GAIN_OUT << HARMONY_GAIN_LO_SHIFT)
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_LO_SHIFT   6
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_MA         0x0f
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_MA_MASK    (HARMONY_GAIN_MA << HARMONY_GAIN_MA_SHIFT)
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_MA_SHIFT   20
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_OUT        0x3f
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_RI_MASK    (HARMONY_GAIN_IN << HARMONY_GAIN_RI_SHIFT)
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_RI_SHIFT   12
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_RO_MASK    (HARMONY_GAIN_OUT << HARMONY_GAIN_RO_SHIFT)
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_RO_SHIFT   0
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_SE_MASK    (1 << HARMONY_GAIN_SE_SHIFT)
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_SE_SHIFT   25 /* internal-speaker enabled */
/root/machinex/sound/parisc/harmony.h:#define HARMONY_GAIN_SILENCE    0x01F00FFF
/root/machinex/sound/parisc/harmony.h:#define HARMONY_MAX_IN  (HARMONY_GAIN_RI_MASK >> HARMONY_GAIN_RI_SHIFT)
/root/machinex/sound/parisc/harmony.h:#define HARMONY_MAX_MON (HARMONY_GAIN_MA_MASK >> HARMONY_GAIN_MA_SHIFT)
/root/machinex/sound/parisc/harmony.h:#define HARMONY_MAX_OUT (HARMONY_GAIN_RO_MASK >> HARMONY_GAIN_RO_SHIFT)
/root/machinex/sound/parisc/harmony.h:/* input gain */
/root/machinex/sound/parisc/harmony.h:/* output gain (master volume) */
/root/machinex/sound/parisc/harmony.h:                u32 gain;
/root/machinex/sound/pci/ac97/ac97_codec.c:{ 0x4e534350, 0xffffffff, "LM4550",		patch_lm4550,  	NULL }, // volume wrap fix 
/root/machinex/sound/pci/ac97/ac97_codec.c:AC97_DOUBLE("Capture Volume", AC97_REC_GAIN, 8, 0, 15, 0);
/root/machinex/sound/pci/ac97/ac97_codec.c:						 AC97_REC_GAIN, 0, ac97);
/root/machinex/sound/pci/ac97/ac97_codec.c:AC97_SINGLE("Mic Capture Switch", AC97_REC_GAIN_MIC, 15, 1, 1),
/root/machinex/sound/pci/ac97/ac97_codec.c:AC97_SINGLE("Mic Capture Volume", AC97_REC_GAIN_MIC, 0, 15, 0)
/root/machinex/sound/pci/ac97/ac97_codec.c:AD18XX_PCM_VOLUME("PCM Playback Volume", 0)
/root/machinex/sound/pci/ac97/ac97_codec.c:AD18XX_PCM_VOLUME("Surround Playback Volume", 1)
/root/machinex/sound/pci/ac97/ac97_codec.c:			/* because the PCM or MASTER volume registers can be modified,
/root/machinex/sound/pci/ac97/ac97_codec.c:	case AC97_REC_GAIN_MIC:
/root/machinex/sound/pci/ac97/ac97_codec.c:/* check the volume resolution of center/lfe */
/root/machinex/sound/pci/ac97/ac97_codec.c:	check_volume_resolution(ac97, reg, &lo_max, &hi_max);
/root/machinex/sound/pci/ac97/ac97_codec.c: * create a mute-switch and a volume for normal stereo/mono controls
/root/machinex/sound/pci/ac97/ac97_codec.c: * create a volume for normal stereo/mono controls
/root/machinex/sound/pci/ac97/ac97_codec.c:#define AD18XX_PCM_VOLUME(xname, codec) \
/root/machinex/sound/pci/ac97/ac97_codec.c:  .get = snd_ac97_ad18xx_pcm_get_volume, .put = snd_ac97_ad18xx_pcm_put_volume, \
/root/machinex/sound/pci/ac97/ac97_codec.c:	if (!(ac97->flags & AC97_HAS_NO_REC_GAIN)) {
/root/machinex/sound/pci/ac97/ac97_codec.c:{ .iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, .info = snd_ac97_ad18xx_pcm_info_volume, \
/root/machinex/sound/pci/ac97/ac97_codec.c:		if (((err = snd_ac97_read(ac97, AC97_REC_GAIN)) & 0x7fff) == 0x0a06)
/root/machinex/sound/pci/ac97/ac97_codec.c:			if ((snd_ac97_read(ac97, AC97_REC_GAIN) & 0x7fff) == 0x0a05)
/root/machinex/sound/pci/ac97/ac97_codec.c:		if (snd_ac97_try_bit(ac97, AC97_REC_GAIN, 15)) {
/root/machinex/sound/pci/ac97/ac97_codec.c:		if (snd_ac97_try_volume_mix(ac97, AC97_3D_CONTROL)) {
/root/machinex/sound/pci/ac97/ac97_codec.c:		if (snd_ac97_try_volume_mix(ac97, AC97_AUX)) {
/root/machinex/sound/pci/ac97/ac97_codec.c:		if (snd_ac97_try_volume_mix(ac97, AC97_CD)) {
/root/machinex/sound/pci/ac97/ac97_codec.c:	if ((snd_ac97_try_volume_mix(ac97, AC97_CENTER_LFE_MASTER)) 
/root/machinex/sound/pci/ac97/ac97_codec.c:	if ((snd_ac97_try_volume_mix(ac97, AC97_CENTER_LFE_MASTER+1))
/root/machinex/sound/pci/ac97/ac97_codec.c:	if (snd_ac97_try_volume_mix(ac97, AC97_HEADPHONE)) {
/root/machinex/sound/pci/ac97/ac97_codec.c:	if (snd_ac97_try_volume_mix(ac97, AC97_LINE)) {
/root/machinex/sound/pci/ac97/ac97_codec.c:	if (snd_ac97_try_volume_mix(ac97, AC97_MASTER)) {
/root/machinex/sound/pci/ac97/ac97_codec.c:	if (snd_ac97_try_volume_mix(ac97, AC97_MASTER_MONO)) {
/root/machinex/sound/pci/ac97/ac97_codec.c:		if (snd_ac97_try_volume_mix(ac97, AC97_MASTER_TONE)) {
/root/machinex/sound/pci/ac97/ac97_codec.c:		if (snd_ac97_try_volume_mix(ac97, AC97_MIC)) {
/root/machinex/sound/pci/ac97/ac97_codec.c:		if (snd_ac97_try_volume_mix(ac97, AC97_PHONE)) {
/root/machinex/sound/pci/ac97/ac97_codec.c:	if (snd_ac97_try_volume_mix(ac97, AC97_REC_GAIN_MIC)) {
/root/machinex/sound/pci/ac97/ac97_codec.c:	if ((snd_ac97_try_volume_mix(ac97, AC97_SURROUND_MASTER)) 
/root/machinex/sound/pci/ac97/ac97_codec.c:		if (snd_ac97_try_volume_mix(ac97, AC97_VIDEO)) {
/root/machinex/sound/pci/ac97/ac97_codec.c:	/* reset volume to zero */
/root/machinex/sound/pci/ac97/ac97_codec.c:		set_tlv_db_scale(kctl, db_scale_rec_gain);
/root/machinex/sound/pci/ac97/ac97_codec.c:		set_tlv_db_scale(kctl, db_scale_rec_gain);
/root/machinex/sound/pci/ac97/ac97_codec.c:		snd_ac97_change_volume_params2(ac97, AC97_CENTER_LFE_MASTER, 0, &max);
/root/machinex/sound/pci/ac97/ac97_codec.c:		snd_ac97_change_volume_params2(ac97, AC97_CENTER_LFE_MASTER, 8, &max);
/root/machinex/sound/pci/ac97/ac97_codec.c:	    snd_ac97_try_volume_mix(ac97, AC97_PC_BEEP))) {
/root/machinex/sound/pci/ac97/ac97_codec.c:			snd_ac97_update_bits(ac97, AC97_EXTENDED_STATUS, AC97_EA_SPDIF, AC97_EA_SPDIF); /* turn on again */
/root/machinex/sound/pci/ac97/ac97_codec.c:			snd_ac97_update_bits_nolock(ac97, AC97_EXTENDED_STATUS, AC97_EA_SPDIF, AC97_EA_SPDIF); /* turn on again */
/root/machinex/sound/pci/ac97/ac97_codec.c:			snd_ac97_update_bits_nolock(ac97, AC97_EXTENDED_STATUS, AC97_EA_SPDIF, AC97_EA_SPDIF); /* turn on again */
/root/machinex/sound/pci/ac97/ac97_codec.c:		snd_ac97_write_cache(ac97, AC97_REC_GAIN, 0x0000);
/root/machinex/sound/pci/ac97/ac97_codec.c:			snd_ac97_write_cache(ac97, AC97_REC_GAIN, 0x8a05);
/root/machinex/sound/pci/ac97/ac97_codec.c:		snd_ac97_write_cache(ac97, AC97_REC_GAIN, 0x8a06);
/root/machinex/sound/pci/ac97/ac97_codec.c:		snd_ac97_write_cache(ac97, AC97_REC_GAIN_MIC, 0x0000);
/root/machinex/sound/pci/ac97/ac97_codec.c:static const DECLARE_TLV_DB_SCALE(db_scale_rec_gain, 0, 150, 0);
/root/machinex/sound/pci/ac97/ac97_codec.c:static int snd_ac97_ad18xx_pcm_get_volume(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/pci/ac97/ac97_codec.c:static int snd_ac97_ad18xx_pcm_info_volume(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_info *uinfo)
/root/machinex/sound/pci/ac97/ac97_codec.c:static int snd_ac97_ad18xx_pcm_put_volume(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/pci/ac97/ac97_codec.c:static int snd_ac97_try_volume_mix(struct snd_ac97 * ac97, int reg)
/root/machinex/sound/pci/ac97/ac97_codec.c:static void check_volume_resolution(struct snd_ac97 *ac97, int reg, unsigned char *lo_max, unsigned char *hi_max)
/root/machinex/sound/pci/ac97/ac97_codec.c:static void snd_ac97_change_volume_params2(struct snd_ac97 * ac97, int reg, int shift, unsigned char *max)
/root/machinex/sound/pci/ac97/ac97_codec.c:		/* test if we can write to the record gain volume register */
/root/machinex/sound/pci/ac97/ac97_codec.c:			/* test if we can write to the record gain volume register */
/root/machinex/sound/pci/ac97/ac97_codec.c:			 * the REC_GAIN register is used for tests
/root/machinex/sound/pci/ac97/ac97_codec.c:/* volume and switch controls */
/root/machinex/sound/pci/ac97/ac97_patch.c:AC97_DOUBLE("Capture Volume", AC97_REC_GAIN, 8, 0, 63, 1),
/root/machinex/sound/pci/ac97/ac97_patch.c:AC97_ENUM_DOUBLE(AC97_CD, 14, 6, 2, wm9713_rec_gain),
/root/machinex/sound/pci/ac97/ac97_patch.c:AC97_ENUM_DOUBLE(AC97_REC_GAIN, 11, 8, 8, wm9713_spk_pga),
/root/machinex/sound/pci/ac97/ac97_patch.c:AC97_ENUM_DOUBLE(AC97_REC_GAIN, 14, 6, 2, wm9711_rec_gain),
/root/machinex/sound/pci/ac97/ac97_patch.c:AC97_ENUM_DOUBLE(AC97_REC_GAIN, 6, 4, 4, wm9713_hp_pga),
/root/machinex/sound/pci/ac97/ac97_patch.c:AC97_ENUM_DOUBLE(AC97_REC_GAIN_MIC, 13, 10, 8, wm9713_dac_inv),
/root/machinex/sound/pci/ac97/ac97_patch.c:AC97_ENUM_SINGLE(AC97_REC_GAIN, 0, 4, wm9713_out4_pga),
/root/machinex/sound/pci/ac97/ac97_patch.c:AC97_ENUM_SINGLE(AC97_REC_GAIN, 14, 4, wm9713_mono_pga),
/root/machinex/sound/pci/ac97/ac97_patch.c:AC97_ENUM_SINGLE(AC97_REC_GAIN, 2, 4, wm9713_out3_pga),
/root/machinex/sound/pci/ac97/ac97_patch.c:	ac97->flags |= AC97_HAS_NO_REC_GAIN | AC97_STEREO_MUTES | AC97_HAS_NO_MIC |
/root/machinex/sound/pci/ac97/ac97_patch.c:	ac97->flags |= AC97_HAS_NO_REC_GAIN | AC97_STEREO_MUTES | AC97_HAS_NO_PHONE |
/root/machinex/sound/pci/ac97/ac97_patch.c:	{ AC97_REC_GAIN, 0x0f0f },
/root/machinex/sound/pci/ac97/ac97_patch.c:AC97_SINGLE("3D Depth", AC97_REC_GAIN_MIC, 0, 15, 1),
/root/machinex/sound/pci/ac97/ac97_patch.c:AC97_SINGLE("3D Lower Cut-off Switch", AC97_REC_GAIN_MIC, 4, 1, 0),
/root/machinex/sound/pci/ac97/ac97_patch.c:AC97_SINGLE("3D Upper Cut-off Switch", AC97_REC_GAIN_MIC, 5, 1, 0),
/root/machinex/sound/pci/ac97/ac97_patch.c:AC97_SINGLE("ADC Switch", AC97_REC_GAIN, 15, 1, 1),
/root/machinex/sound/pci/ac97/ac97_patch.c:AC97_SINGLE("Capture ZC Switch", AC97_REC_GAIN, 7, 1, 0),
/root/machinex/sound/pci/ac97/ac97_patch.c: * check_volume_resolution().
/root/machinex/sound/pci/ac97/ac97_patch.c:	/* CM9738 has no PCM volume although the register reacts */
/root/machinex/sound/pci/ac97/ac97_patch.c:	/* CM9739/A has no Master and PCM volume although the register reacts */
/root/machinex/sound/pci/ac97/ac97_patch.c:	/* CM9761 has no PCM volume although the register reacts */
/root/machinex/sound/pci/ac97/ac97_patch.c:	/* full DAC volume */
/root/machinex/sound/pci/ac97/ac97_patch.c:	/* full DAC volume */
/root/machinex/sound/pci/ac97/ac97_patch.c:	/* full DAC volume */
/root/machinex/sound/pci/ac97/ac97_patch.c:	/* full DAC volume */
/root/machinex/sound/pci/ac97/ac97_patch.c:	/* Master volume seems to have _some_ influence on the analog
/root/machinex/sound/pci/ac97/ac97_patch.c:	snd_ac97_write_cache(ac97, AC97_REC_GAIN, 0x1ba0);
/root/machinex/sound/pci/ac97/ac97_patch.c:static const char* wm9711_rec_gain[] = {"+1.5dB Steps", "+0.75dB Steps"};
/root/machinex/sound/pci/ac97/ac97_patch.c:static const char* wm9713_rec_gain[] = {"+1.5dB Steps", "+0.75dB Steps"};
/root/machinex/sound/pci/ac97/ac97_pcm.c:			err = -EAGAIN;
/root/machinex/sound/pci/ac97/ac97_proc.c:	snd_iprintf(buffer, "Mic gain         : %s [%s]\n", val & 0x0040 ? "+20dB" : "+0dB", ac97->regs[AC97_MIC] & 0x0040 ? "+20dB" : "+0dB");
/root/machinex/sound/pci/ak4531_codec.c:		    ak4531->regs[AK4531_MIC_GAIN] & 1 ? "+30dB" : "+0dB");
/root/machinex/sound/pci/ak4531_codec.c:AK4531_SINGLE("Mic Boost (+30dB)", 0, AK4531_MIC_GAIN, 0, 1, 0)
/root/machinex/sound/pci/ak4531_codec.c:		    "MIC gain           : %s\n",
/root/machinex/sound/pci/ali5451/ali5451.c:#define ALI_VOLUME		0xa8
/root/machinex/sound/pci/ali5451/ali5451.c:	outl(0x00000000, ALI_REG(codec, ALI_VOLUME));
/root/machinex/sound/pci/ali5451/ali5451.c:		return -EAGAIN;
/root/machinex/sound/pci/als300.c:	/* Reset volumes */
/root/machinex/sound/pci/als4000.c:	 * that I haven't found out how to disable again, which then causes
/root/machinex/sound/pci/asihpi/asihpi.c:	an_gain_mB[0] =
/root/machinex/sound/pci/asihpi/asihpi.c:	an_gain_mB[0] =
/root/machinex/sound/pci/asihpi/asihpi.c:	    an_gain_mB[0] / HPI_UNITS_PER_dB;
/root/machinex/sound/pci/asihpi/asihpi.c:	an_gain_mB[1] =
/root/machinex/sound/pci/asihpi/asihpi.c:	an_gain_mB[1] =
/root/machinex/sound/pci/asihpi/asihpi.c:	    an_gain_mB[1] / HPI_UNITS_PER_dB;
/root/machinex/sound/pci/asihpi/asihpi.c:				an_gain_mB[i] << 16;
/root/machinex/sound/pci/asihpi/asihpi.c:	   asihpi->mixer_volume[addr][1] != right;
/root/machinex/sound/pci/asihpi/asihpi.c:	/* can't use 'volume' cos some nodes have volume as well */
/root/machinex/sound/pci/asihpi/asihpi.c:		case HPI_CONTROL_VOLUME:
/root/machinex/sound/pci/asihpi/asihpi.c:	/*  change = asihpi->mixer_volume[addr][0] != left ||
/root/machinex/sound/pci/asihpi/asihpi.c:#define snd_asihpi_volume_mute_info	snd_ctl_boolean_mono_info
/root/machinex/sound/pci/asihpi/asihpi.c:		} else if (an_gain_mB[i] >= 0) {
/root/machinex/sound/pci/asihpi/asihpi.c:	err = hpi_meter_get_peak(h_control, an_gain_mB);
/root/machinex/sound/pci/asihpi/asihpi.c:		err = hpi_tuner_query_gain(h_control,
/root/machinex/sound/pci/asihpi/asihpi.c:	err = hpi_volume_query_range(h_control,
/root/machinex/sound/pci/asihpi/asihpi.c:			err = snd_asihpi_volume_add(asihpi, &hpi_ctl);
/root/machinex/sound/pci/asihpi/asihpi.c:	gain = (ucontrol->value.integer.value[0]) * HPI_UNITS_PER_dB;
/root/machinex/sound/pci/asihpi/asihpi.c:	/* HPI currently only supports all or none muting of multichannel volume
/root/machinex/sound/pci/asihpi/asihpi.c:	hpi_handle_error(hpi_level_get_gain(h_control, an_gain_mB));
/root/machinex/sound/pci/asihpi/asihpi.c:	hpi_handle_error(hpi_level_set_gain(h_control, an_gain_mB));
/root/machinex/sound/pci/asihpi/asihpi.c:	hpi_handle_error(hpi_tuner_get_gain(h_control, &gain));
/root/machinex/sound/pci/asihpi/asihpi.c:	hpi_handle_error(hpi_tuner_set_gain(h_control, gain));
/root/machinex/sound/pci/asihpi/asihpi.c:	hpi_handle_error(hpi_volume_get_gain(h_control, an_gain_mB));
/root/machinex/sound/pci/asihpi/asihpi.c:	hpi_handle_error(hpi_volume_get_mute(h_control, &mute));
/root/machinex/sound/pci/asihpi/asihpi.c:	hpi_handle_error(hpi_volume_set_gain(h_control, an_gain_mB));
/root/machinex/sound/pci/asihpi/asihpi.c:	hpi_handle_error(hpi_volume_set_mute(h_control, mute));
/root/machinex/sound/pci/asihpi/asihpi.c:	    hpi_level_query_range(h_control, &min_gain_mB,
/root/machinex/sound/pci/asihpi/asihpi.c:					  idx, &gain_range[idx]);
/root/machinex/sound/pci/asihpi/asihpi.c:	if (!hpi_tuner_get_gain(hpi_ctl->h_control, NULL)) {
/root/machinex/sound/pci/asihpi/asihpi.c:	if (hpi_volume_get_mute(hpi_ctl->h_control, &mute) == 0) {
/root/machinex/sound/pci/asihpi/asihpi.c:					log2lin[an_gain_mB[i] / -1000];
/root/machinex/sound/pci/asihpi/asihpi.c:		max_gain_mB = 0;
/root/machinex/sound/pci/asihpi/asihpi.c:		max_gain_mB = 2400;
/root/machinex/sound/pci/asihpi/asihpi.c:			       &max_gain_mB, &step_gain_mB);
/root/machinex/sound/pci/asihpi/asihpi.c:		min_gain_mB = -1000;
/root/machinex/sound/pci/asihpi/asihpi.c:		min_gain_mB = -10000;
/root/machinex/sound/pci/asihpi/asihpi.c:			&min_gain_mB, &max_gain_mB, &step_gain_mB);
/root/machinex/sound/pci/asihpi/asihpi.c:	/* native gains are in millibels */
/root/machinex/sound/pci/asihpi/asihpi.c:	short an_gain_mB[HPI_MAX_CHANNELS];
/root/machinex/sound/pci/asihpi/asihpi.c:	short an_gain_mB[HPI_MAX_CHANNELS];
/root/machinex/sound/pci/asihpi/asihpi.c:	short an_gain_mB[HPI_MAX_CHANNELS];
/root/machinex/sound/pci/asihpi/asihpi.c:	short an_gain_mB[HPI_MAX_CHANNELS];
/root/machinex/sound/pci/asihpi/asihpi.c:	short an_gain_mB[HPI_MAX_CHANNELS], i;
/root/machinex/sound/pci/asihpi/asihpi.c:	short gain;
/root/machinex/sound/pci/asihpi/asihpi.c:	short gain;
/root/machinex/sound/pci/asihpi/asihpi.c:	short max_gain_mB;
/root/machinex/sound/pci/asihpi/asihpi.c:	short max_gain_mB;
/root/machinex/sound/pci/asihpi/asihpi.c:	short min_gain_mB;
/root/machinex/sound/pci/asihpi/asihpi.c:	short min_gain_mB;
/root/machinex/sound/pci/asihpi/asihpi.c:	short step_gain_mB;
/root/machinex/sound/pci/asihpi/asihpi.c:	short step_gain_mB;
/root/machinex/sound/pci/asihpi/asihpi.c:		snd_control.get = snd_asihpi_tuner_gain_get;
/root/machinex/sound/pci/asihpi/asihpi.c:	snd_control.get = snd_asihpi_volume_get;
/root/machinex/sound/pci/asihpi/asihpi.c:		snd_control.get = snd_asihpi_volume_mute_get;
/root/machinex/sound/pci/asihpi/asihpi.c:		snd_control.info = snd_asihpi_tuner_gain_info;
/root/machinex/sound/pci/asihpi/asihpi.c:	snd_control.info = snd_asihpi_volume_info;
/root/machinex/sound/pci/asihpi/asihpi.c:		snd_control.info = snd_asihpi_volume_mute_info;
/root/machinex/sound/pci/asihpi/asihpi.c:		snd_control.put = snd_asihpi_tuner_gain_put;
/root/machinex/sound/pci/asihpi/asihpi.c:		snd_control.put = snd_asihpi_volume_mute_put;
/root/machinex/sound/pci/asihpi/asihpi.c:	snd_control.put = snd_asihpi_volume_put;
/root/machinex/sound/pci/asihpi/asihpi.c:static int snd_asihpi_tuner_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/asihpi/asihpi.c:static int snd_asihpi_tuner_gain_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/asihpi/asihpi.c:static int snd_asihpi_tuner_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/asihpi/asihpi.c:static int snd_asihpi_volume_add(struct snd_card_asihpi *asihpi,
/root/machinex/sound/pci/asihpi/asihpi.c:static int snd_asihpi_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/asihpi/asihpi.c:static int snd_asihpi_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/asihpi/asihpi.c:static int snd_asihpi_volume_mute_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/asihpi/asihpi.c:static int snd_asihpi_volume_mute_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/asihpi/asihpi.c:static int snd_asihpi_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/asihpi/asihpi.c:		step_gain_mB = 100;
/root/machinex/sound/pci/asihpi/asihpi.c:		step_gain_mB = VOL_STEP_mB;
/root/machinex/sound/pci/asihpi/asihpi.c:	u16 gain_range[3];
/root/machinex/sound/pci/asihpi/asihpi.c:	ucontrol->value.integer.value[0] = an_gain_mB[0] / VOL_STEP_mB;
/root/machinex/sound/pci/asihpi/asihpi.c:	ucontrol->value.integer.value[0] = gain / HPI_UNITS_PER_dB;
/root/machinex/sound/pci/asihpi/asihpi.c:	ucontrol->value.integer.value[1] = an_gain_mB[1] / VOL_STEP_mB;
/root/machinex/sound/pci/asihpi/asihpi.c:	uinfo->value.integer.max = ((int)gain_range[1]) / HPI_UNITS_PER_dB;
/root/machinex/sound/pci/asihpi/asihpi.c:	uinfo->value.integer.max = max_gain_mB / HPI_UNITS_PER_dB;
/root/machinex/sound/pci/asihpi/asihpi.c:	uinfo->value.integer.max = max_gain_mB / VOL_STEP_mB;
/root/machinex/sound/pci/asihpi/asihpi.c:	uinfo->value.integer.min = ((int)gain_range[0]) / HPI_UNITS_PER_dB;
/root/machinex/sound/pci/asihpi/asihpi.c:	uinfo->value.integer.min = min_gain_mB / HPI_UNITS_PER_dB;
/root/machinex/sound/pci/asihpi/asihpi.c:	uinfo->value.integer.min = min_gain_mB / VOL_STEP_mB;
/root/machinex/sound/pci/asihpi/asihpi.c:	uinfo->value.integer.step = ((int) gain_range[2]) / HPI_UNITS_PER_dB;
/root/machinex/sound/pci/asihpi/asihpi.c:	uinfo->value.integer.step = step_gain_mB / HPI_UNITS_PER_dB;
/root/machinex/sound/pci/asihpi/asihpi.c:	uinfo->value.integer.step = step_gain_mB / VOL_STEP_mB;
/root/machinex/sound/pci/asihpi/hpicmn.c:	case HPI_CONTROL_VOLUME:
/root/machinex/sound/pci/asihpi/hpicmn.c:	case HPI_CONTROL_VOLUME:
/root/machinex/sound/pci/asihpi/hpicmn.c:		} else if (phm->u.c.attribute == HPI_VOLUME_MUTE) {
/root/machinex/sound/pci/asihpi/hpicmn.c:		} else if (phm->u.c.attribute == HPI_VOLUME_MUTE) {
/root/machinex/sound/pci/asihpi/hpicmn.c:			if (pC->u.vol.flags & HPI_VOLUME_FLAG_HAS_MUTE) {
/root/machinex/sound/pci/asihpi/hpicmn.c:				if (pC->u.vol.flags & HPI_VOLUME_FLAG_MUTED)
/root/machinex/sound/pci/asihpi/hpicmn.c:		if (phm->u.c.attribute == HPI_LEVEL_GAIN) {
/root/machinex/sound/pci/asihpi/hpicmn.c:		if (phm->u.c.attribute == HPI_LEVEL_GAIN) {
/root/machinex/sound/pci/asihpi/hpicmn.c:		if (phm->u.c.attribute == HPI_VOLUME_GAIN) {
/root/machinex/sound/pci/asihpi/hpicmn.c:		if (phm->u.c.attribute == HPI_VOLUME_GAIN) {
/root/machinex/sound/pci/asihpi/hpicmn.c:				pC->u.vol.flags |= HPI_VOLUME_FLAG_MUTED;
/root/machinex/sound/pci/asihpi/hpicmn.c:				pC->u.vol.flags &= ~HPI_VOLUME_FLAG_MUTED;
/root/machinex/sound/pci/asihpi/hpifunc.c:		&an_gain0_01dB[0], &an_gain0_01dB[1]);
/root/machinex/sound/pci/asihpi/hpifunc.c:		an_gain0_01dB[0], an_gain0_01dB[1]);
/root/machinex/sound/pci/asihpi/hpifunc.c:	*an_gain0_01dB = hr.u.c.an_log_value[0];
/root/machinex/sound/pci/asihpi/hpifunc.c:		&an_log_gain[0], &an_log_gain[1]);
/root/machinex/sound/pci/asihpi/hpifunc.c:		an_log_gain[0], an_log_gain[1]);
/root/machinex/sound/pci/asihpi/hpifunc.c:		duration_ms, HPI_VOLUME_AUTOFADE_LOG);
/root/machinex/sound/pci/asihpi/hpifunc.c:	e = hpi_control_query(h_volume, HPI_VOLUME_AUTOFADE, i, 0, &u);
/root/machinex/sound/pci/asihpi/hpifunc.c:	error = hpi_control_param1_get(h_control, HPI_TUNER_GAIN, &gain);
/root/machinex/sound/pci/asihpi/hpifunc.c:	hm.u.c.an_log_value[0] = an_gain0_01dB;
/root/machinex/sound/pci/asihpi/hpifunc.c:	hm.u.c.an_log_value[0] = gain0_01dB;
/root/machinex/sound/pci/asihpi/hpifunc.c:	hm.u.c.attribute = HPI_VOLUME_AUTOFADE;
/root/machinex/sound/pci/asihpi/hpifunc.c:	hm.u.c.attribute = HPI_VOLUME_RANGE;
/root/machinex/sound/pci/asihpi/hpifunc.c:	if (max_gain_01dB)
/root/machinex/sound/pci/asihpi/hpifunc.c:	if (max_gain_01dB)
/root/machinex/sound/pci/asihpi/hpifunc.c:	if (min_gain_01dB)
/root/machinex/sound/pci/asihpi/hpifunc.c:	if (min_gain_01dB)
/root/machinex/sound/pci/asihpi/hpifunc.c:	if (pn_gain)
/root/machinex/sound/pci/asihpi/hpifunc.c:	if (pn_gain0_01dB)
/root/machinex/sound/pci/asihpi/hpifunc.c:	if (step_gain_01dB)
/root/machinex/sound/pci/asihpi/hpifunc.c:	if (step_gain_01dB)
/root/machinex/sound/pci/asihpi/hpifunc.c:		makeup_gain0_01dB, 0);
/root/machinex/sound/pci/asihpi/hpifunc.c:		makeup_gain0_01dB, NULL);
/root/machinex/sound/pci/asihpi/hpifunc.c:		*max_gain_01dB = hr.u.c.an_log_value[1];
/root/machinex/sound/pci/asihpi/hpifunc.c:		*max_gain_01dB = hr.u.c.an_log_value[1];
/root/machinex/sound/pci/asihpi/hpifunc.c:	memcpy(hm.u.c.an_log_value, an_stop_gain0_01dB,
/root/machinex/sound/pci/asihpi/hpifunc.c:		*min_gain_01dB = hr.u.c.an_log_value[0];
/root/machinex/sound/pci/asihpi/hpifunc.c:		*min_gain_01dB = hr.u.c.an_log_value[0];
/root/machinex/sound/pci/asihpi/hpifunc.c:		*pn_gain0_01dB = hr.u.c.an_log_value[0];
/root/machinex/sound/pci/asihpi/hpifunc.c:		*pn_gain = (u16)gain;
/root/machinex/sound/pci/asihpi/hpifunc.c:	*pw_gain = (u16)qr;
/root/machinex/sound/pci/asihpi/hpifunc.c:	return hpi_control_log_get2(h_control, HPI_COMPANDER_MAKEUPGAIN,
/root/machinex/sound/pci/asihpi/hpifunc.c:	return hpi_control_log_get2(h_control, HPI_LEVEL_GAIN,
/root/machinex/sound/pci/asihpi/hpifunc.c:	return hpi_control_log_get2(h_control, HPI_VOLUME_GAIN,
/root/machinex/sound/pci/asihpi/hpifunc.c:	return hpi_control_log_set2(h_control, HPI_COMPANDER_MAKEUPGAIN,
/root/machinex/sound/pci/asihpi/hpifunc.c:	return hpi_control_log_set2(h_control, HPI_LEVEL_GAIN,
/root/machinex/sound/pci/asihpi/hpifunc.c:	return hpi_control_log_set2(h_control, HPI_VOLUME_GAIN,
/root/machinex/sound/pci/asihpi/hpifunc.c:	return hpi_control_param1_get(h_control, HPI_VOLUME_MUTE, mute);
/root/machinex/sound/pci/asihpi/hpifunc.c:	return hpi_control_param_set(h_control, HPI_TUNER_GAIN, gain, 0);
/root/machinex/sound/pci/asihpi/hpifunc.c:	return hpi_control_param_set(h_control, HPI_VOLUME_MUTE, mute, 0);
/root/machinex/sound/pci/asihpi/hpifunc.c:	return hpi_control_query(h_volume, HPI_VOLUME_NUM_CHANNELS, 0, 0,
/root/machinex/sound/pci/asihpi/hpifunc.c:	return hpi_volume_auto_fade_profile(h_control, an_stop_gain0_01dB,
/root/machinex/sound/pci/asihpi/hpifunc.c:	short an_stop_gain0_01dB[HPI_MAX_CHANNELS], u32 duration_ms,
/root/machinex/sound/pci/asihpi/hpifunc.c:	short an_stop_gain0_01dB[HPI_MAX_CHANNELS], u32 duration_ms)
/root/machinex/sound/pci/asihpi/hpifunc.c:	short *max_gain_01dB, short *step_gain_01dB)
/root/machinex/sound/pci/asihpi/hpifunc.c:	short *max_gain_01dB, short *step_gain_01dB)
/root/machinex/sound/pci/asihpi/hpifunc.c:		*step_gain_01dB = (short)hr.u.c.param1;
/root/machinex/sound/pci/asihpi/hpifunc.c:		*step_gain_01dB = (short)hr.u.c.param1;
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_compander_get_makeup_gain(u32 h_control, short *makeup_gain0_01dB)
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_compander_set_makeup_gain(u32 h_control, short makeup_gain0_01dB)
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_level_get_gain(u32 h_control, short an_gain0_01dB[HPI_MAX_CHANNELS]
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_level_query_range(u32 h_control, short *min_gain_01dB,
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_level_set_gain(u32 h_control, short an_gain0_01dB[HPI_MAX_CHANNELS]
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_tuner_get_gain(u32 h_control, short *pn_gain)
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_tuner_query_gain(const u32 h_tuner, const u32 index, u16 *pw_gain)
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_tuner_set_gain(u32 h_control, short gain)
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_volume_auto_fade_profile(u32 h_control,
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_volume_auto_fade(u32 h_control,
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_volume_get_gain(u32 h_control, short an_log_gain[HPI_MAX_CHANNELS]
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_volume_get_mute(u32 h_control, u32 *mute)
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_volume_query_auto_fade_profile(const u32 h_volume, const u32 i,
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_volume_query_channels(const u32 h_volume, u32 *p_channels)
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_volume_query_range(u32 h_control, short *min_gain_01dB,
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_volume_set_gain(u32 h_control, short an_log_gain[HPI_MAX_CHANNELS]
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_volume_set_mute(u32 h_control, u32 mute)
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_vox_get_threshold(u32 h_control, short *an_gain0_01dB)
/root/machinex/sound/pci/asihpi/hpifunc.c:u16 hpi_vox_set_threshold(u32 h_control, short an_gain0_01dB)
/root/machinex/sound/pci/asihpi/hpifunc.c:	u32 frequency_hz, short q100, short gain0_01dB)
/root/machinex/sound/pci/asihpi/hpifunc.c:	u32 gain = 0;
/root/machinex/sound/pci/asihpi/hpifunc.c:	u32 *pfrequency_hz, short *pnQ100, short *pn_gain0_01dB)
/root/machinex/sound/pci/asihpi/hpi.h:	/** data is packed against the end of data, then padded to the end of frame */
/root/machinex/sound/pci/asihpi/hpi.h:	/** data is packed against the end of the frame */
/root/machinex/sound/pci/asihpi/hpi.h:#define HPI_GAIN_OFF                    (-100 * HPI_UNITS_PER_dB)
/root/machinex/sound/pci/asihpi/hpi.h:#define hpi_volume_get_range hpi_volume_query_range
/root/machinex/sound/pci/asihpi/hpi.h:enum HPI_VOLUME_AUTOFADES {
/root/machinex/sound/pci/asihpi/hpi.h:	HPI_CONTROL_VOLUME = 2,	      /**< volume control - works in dB_fs. */
/root/machinex/sound/pci/asihpi/hpi.h:	HPI_FILTER_TYPE_EQ_BAND = 3,	/**< EQ gain */
/root/machinex/sound/pci/asihpi/hpi.h:	HPI_VOLUME_AUTOFADE_LINEAR = 3
/root/machinex/sound/pci/asihpi/hpi.h:	HPI_VOLUME_AUTOFADE_LOG = 2,
/root/machinex/sound/pci/asihpi/hpi.h:\ingroup volume
/root/machinex/sound/pci/asihpi/hpi.h:\ingroup volume
/root/machinex/sound/pci/asihpi/hpi.h:\ingroup volume
/root/machinex/sound/pci/asihpi/hpi.h:\ingroup volume
/root/machinex/sound/pci/asihpi/hpi.h:	short an_gain0_01dB_out[HPI_MAX_CHANNELS]
/root/machinex/sound/pci/asihpi/hpi.h:	short an_gain0_01dB_out[HPI_MAX_CHANNELS]
/root/machinex/sound/pci/asihpi/hpi.h:	short an_stop_gain0_01dB[HPI_MAX_CHANNELS], u32 duration_ms,
/root/machinex/sound/pci/asihpi/hpi.h:	short an_stop_gain0_01dB[HPI_MAX_CHANNELS], u32 duration_ms);
/root/machinex/sound/pci/asihpi/hpi.h:	short *max_gain_01dB, short *step_gain_01dB);
/root/machinex/sound/pci/asihpi/hpi.h:	short *max_gain_01dB, short *step_gain_01dB);
/root/machinex/sound/pci/asihpi/hpi.h:/** turns volume control OFF or MUTE
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_compander_get_makeup_gain(u32 h_control, short *pn_makeup_gain0_01dB);
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_compander_set_makeup_gain(u32 h_control, short makeup_gain0_01dB);
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_level_get_gain(u32 h_control,
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_level_query_range(u32 h_control, short *min_gain_01dB,
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_level_set_gain(u32 h_control, short an_gain0_01dB[HPI_MAX_CHANNELS]
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_tuner_get_gain(u32 h_control, short *pn_gain);
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_tuner_query_gain(const u32 h_tuner, const u32 index, u16 *pw_gain);
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_tuner_set_gain(u32 h_control, short gain);
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_volume_auto_fade_profile(u32 h_control,
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_volume_auto_fade(u32 h_control,
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_volume_get_gain(u32 h_control,
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_volume_get_mute(u32 h_control, u32 *mute);
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_volume_query_auto_fade_profile(const u32 h_control, const u32 i,
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_volume_query_channels(const u32 h_control, u32 *p_channels);
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_volume_query_range(u32 h_control, short *min_gain_01dB,
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_volume_set_gain(u32 h_control, short an_gain0_01dB[HPI_MAX_CHANNELS]
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_volume_set_mute(u32 h_control, u32 mute);
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_vox_get_threshold(u32 h_control, short *an_gain0_01dB);
/root/machinex/sound/pci/asihpi/hpi.h:u16 hpi_vox_set_threshold(u32 h_control, short an_gain0_01dB);
/root/machinex/sound/pci/asihpi/hpi.h:	u32 frequency_hz, short q100, short gain0_01dB);
/root/machinex/sound/pci/asihpi/hpi.h:	u32 *pfrequency_hz, short *pnQ100, short *pn_gain0_01dB);
/root/machinex/sound/pci/asihpi/hpi.h:/* Volume control special gain values */
/root/machinex/sound/pci/asihpi/hpi.h:/** volumes units are 100ths of a dB
/root/machinex/sound/pci/asihpi/hpi_internal.h:enum HPI_VOLUME_FLAGS {
/root/machinex/sound/pci/asihpi/hpi_internal.h:	HPI_COMPANDER_MAKEUPGAIN = HPI_CTL_ATTR(COMPANDER, 2),
/root/machinex/sound/pci/asihpi/hpi_internal.h:	HPI_LEVEL_GAIN = HPI_CTL_ATTR(LEVEL, 1),
/root/machinex/sound/pci/asihpi/hpi_internal.h:	HPI_TUNER_GAIN = HPI_CTL_ATTR(TUNER, 6),
/root/machinex/sound/pci/asihpi/hpi_internal.h:	HPI_VOLUME_AUTOFADE = HPI_CTL_ATTR(VOLUME, 2),
/root/machinex/sound/pci/asihpi/hpi_internal.h:	HPI_VOLUME_FLAG_HAS_AUTOFADE = (1 << 2)
/root/machinex/sound/pci/asihpi/hpi_internal.h:	HPI_VOLUME_FLAG_HAS_MUTE = (1 << 1),
/root/machinex/sound/pci/asihpi/hpi_internal.h:	HPI_VOLUME_FLAG_MUTED = (1 << 0),
/root/machinex/sound/pci/asihpi/hpi_internal.h:	HPI_VOLUME_GAIN_AND_FLAGS = HPI_CTL_ATTR(VOLUME, 4),
/root/machinex/sound/pci/asihpi/hpi_internal.h:	HPI_VOLUME_GAIN = HPI_CTL_ATTR(VOLUME, 1),
/root/machinex/sound/pci/asihpi/hpi_internal.h:	HPI_VOLUME_MUTE = HPI_CTL_ATTR(VOLUME, 3),
/root/machinex/sound/pci/asihpi/hpi_internal.h:	HPI_VOLUME_NUM_CHANNELS = HPI_CTL_ATTR(VOLUME, 6),
/root/machinex/sound/pci/asihpi/hpi_internal.h:	HPI_VOLUME_RANGE = HPI_CTL_ATTR(VOLUME, 10),
/root/machinex/sound/pci/asihpi/hpi_internal.h:of getting a volume range. Declared here for binary asihpi32.dll
/root/machinex/sound/pci/asihpi/hpi_internal.h:	/** Set if the volume control has a mute function */
/root/machinex/sound/pci/asihpi/hpi_internal.h:	/** Set if the volume control is muted */
/root/machinex/sound/pci/asihpi/hpi_internal.h:	/** Set if volume control can do autofading */
/root/machinex/sound/pci/asihpi/hpi_internal.h:	u16 control_type;	/* = HPI_CONTROL_METER _VOLUME etc */
/root/machinex/sound/pci/asihpi/hpi_internal.h:			u32 gain;
/root/machinex/sound/pci/asihpi/hpi_internal.h:		u32 gain;
/root/machinex/sound/pci/au88x0/au8810.h:#define MIX_DEFIGAIN 0x08	/* 0x8 => 6dB */
/root/machinex/sound/pci/au88x0/au8810.h:#define MIX_DEFOGAIN 0x08
/root/machinex/sound/pci/au88x0/au8810.h:#define 	VOL_MIN 0x80	/* Input volume when muted. */
/root/machinex/sound/pci/au88x0/au8820.h:#define MIX_DEFIGAIN 0x08	/* 0x8 => 6dB */
/root/machinex/sound/pci/au88x0/au8820.h:#define MIX_DEFOGAIN 0x08
/root/machinex/sound/pci/au88x0/au8820.h:#define 	VOL_MIN 0x80	/* Input volume when muted. */
/root/machinex/sound/pci/au88x0/au8830.h:#define MIX_DEFIGAIN 0x08
/root/machinex/sound/pci/au88x0/au8830.h:#define MIX_DEFOGAIN 0x08	/* 0x8->6dB  (6dB = x4) 16 to 18 bit conversion? */
/root/machinex/sound/pci/au88x0/au8830.h:#define 	VOL_MIN 0x80	/* Input volume when muted. */
/root/machinex/sound/pci/au88x0/au8830.h:#define VORTEX_MIX_INVOL_B 0x20000	/* Input volume current */
/root/machinex/sound/pci/au88x0/au88x0_a3d.c:				      en ? MIX_DEFIGAIN : VOL_MIN);
/root/machinex/sound/pci/au88x0/au88x0_a3d.c:				      en ? MIX_DEFIGAIN : VOL_MIN);
/root/machinex/sound/pci/au88x0/au88x0_a3d.c:					      en ? MIX_DEFIGAIN : VOL_MIN);
/root/machinex/sound/pci/au88x0/au88x0_a3d.c:					      en ? MIX_DEFIGAIN : VOL_MIN);
/root/machinex/sound/pci/au88x0/au88x0_a3d.c:	/* ILD (gains) controls. */
/root/machinex/sound/pci/au88x0/au88x0_a3d.c:		kcontrol->id.numid = CTRLID_GAINS;
/root/machinex/sound/pci/au88x0/au88x0_a3d.c:		/* Remark: zero gain is muted. */
/root/machinex/sound/pci/au88x0/au88x0_a3d.c:	vortex_mix_setinputvolumebyte(v, v->mixplayb[0], v->mixxtlk[0],
/root/machinex/sound/pci/au88x0/au88x0_a3d.c:	vortex_mix_setinputvolumebyte(v, v->mixplayb[1], v->mixxtlk[1],
/root/machinex/sound/pci/au88x0/au88x0_a3d.c:		vortex_mix_setinputvolumebyte(v, v->mixplayb[2],
/root/machinex/sound/pci/au88x0/au88x0_a3d.c:		vortex_mix_setinputvolumebyte(v, v->mixplayb[3],
/root/machinex/sound/pci/au88x0/au88x0_a3d.h:#define CTRLID_GAINS	16
/root/machinex/sound/pci/au88x0/au88x0_core.c: 06-06-2003 Buffer shifter bugfix. Mixer volume fix.
/root/machinex/sound/pci/au88x0/au88x0_core.c:	/* Lower volume, since EQ has some gain. */
/root/machinex/sound/pci/au88x0/au88x0_core.c:							      MIX_DEFIGAIN);
/root/machinex/sound/pci/au88x0/au88x0_core.c:							      MIX_DEFIGAIN);
/root/machinex/sound/pci/au88x0/au88x0_core.c:	   Register ISR callback for volume smooth fade out.
/root/machinex/sound/pci/au88x0/au88x0_core.c:static int vortex_mix_getvolume(vortex_t * vortex, unsigned char mix)
/root/machinex/sound/pci/au88x0/au88x0_core.c:static void vortex_mix_rampvolume(vortex_t * vortex, int mix)
/root/machinex/sound/pci/au88x0/au88x0_core.c:vortex_mix_getinputvolume(vortex_t * vortex, unsigned char mix,
/root/machinex/sound/pci/au88x0/au88x0_core.c:vortex_mix_muteinputgain(vortex_t * vortex, unsigned char mix,
/root/machinex/sound/pci/au88x0/au88x0_core.c:   vortex_mix_setinputvolumebyte();
/root/machinex/sound/pci/au88x0/au88x0_core.c:				vortex_mix_setinputvolumebyte(vortex,
/root/machinex/sound/pci/au88x0/au88x0_core.c:				vortex_mix_setinputvolumebyte(vortex,
/root/machinex/sound/pci/au88x0/au88x0_core.c:	vortex_mix_setinputvolumebyte(vortex, mix, mixin, 0x80);
/root/machinex/sound/pci/au88x0/au88x0_core.c:		vortex_mix_setinputvolumebyte(vortex, mix, mixin, 0x80);	/*0x80 : mute */
/root/machinex/sound/pci/au88x0/au88x0_core.c:		vortex_mix_setinputvolumebyte(vortex, mix, mixin, MIX_DEFIGAIN);	// added to original code.
/root/machinex/sound/pci/au88x0/au88x0_core.c:vortex_mix_setinputvolumebyte(vortex_t * vortex, unsigned char mix,
/root/machinex/sound/pci/au88x0/au88x0_core.c:	vortex_mix_setvolumebyte(vortex, mixers[0], 0);
/root/machinex/sound/pci/au88x0/au88x0_core.c:	vortex_mix_setvolumebyte(vortex, mixers[1], 0);
/root/machinex/sound/pci/au88x0/au88x0_core.c:	vortex_mix_setvolumebyte(vortex, mix, MIX_DEFOGAIN);	// added to original code.
/root/machinex/sound/pci/au88x0/au88x0_core.c:	vortex_mix_setvolumebyte(vortex, mix, MIX_DEFOGAIN);	// added to original code.
/root/machinex/sound/pci/au88x0/au88x0_core.c:vortex_mix_setvolumebyte(vortex_t * vortex, unsigned char mix,
/root/machinex/sound/pci/au88x0/au88x0_core.c:		//vortex_mix_startrampvolume(vortex);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:/* EQ band gain labels. */
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	/* EQ gain controls */
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	eq->this08 = 0;		/* Bypass gain with EQ in use. */
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	eq->this0c = 0x5999;	/* Bypass gain with EQ disabled. */
/root/machinex/sound/pci/au88x0/au88x0_eq.c:		eq->this130[i] = gains[i];
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	eq->this130[index + eq->this10] = gain;
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	eq->this130[index] = gain;
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	eq->this28 = 0x1;	/* if 1 => Allow read access to this130 (gains) */
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	eq->this54 = 0x0;	/* if 1 => Dont Allow access to hardware (gains) */
/root/machinex/sound/pci/au88x0/au88x0_eq.c:		*gain = eq->this130[index];
/root/machinex/sound/pci/au88x0/au88x0_eq.c:		*gain = eq->this130[index + eq->this10];
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	hwwrite(vortex->mmio, 0x2b3c4, gain);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	if (gainL != ucontrol->value.integer.value[0]) {
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	if (gainR != ucontrol->value.integer.value[1]) {
/root/machinex/sound/pci/au88x0/au88x0_eq.c:		if (vortex_Eqlzr_GetLeftGain(vortex, si, &gains[si]))
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	/* Set EQ Band gain levels and dump into hardware registers. */
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	/* Set gains. */
/root/machinex/sound/pci/au88x0/au88x0_eq.c:static int vortex_Eqlzr_GetLeftGain(vortex_t * vortex, u16 index, u16 * gain)
/root/machinex/sound/pci/au88x0/au88x0_eq.c:static int vortex_Eqlzr_GetRightGain(vortex_t * vortex, u16 index, u16 * gain)
/root/machinex/sound/pci/au88x0/au88x0_eq.c:static void vortex_EqHw_SetTimeConsts(vortex_t * vortex, u16 gain, u16 level)
/root/machinex/sound/pci/au88x0/au88x0_eq.c:static void vortex_Eqlzr_SetLeftGain(vortex_t * vortex, u16 index, u16 gain)
/root/machinex/sound/pci/au88x0/au88x0_eq.c:static void vortex_Eqlzr_SetRightGain(vortex_t * vortex, u16 index, u16 gain)
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	u16 gainL = 0, gainR = 0;
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	u16 gainL = 0, gainR = 0;
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	ucontrol->value.integer.value[0] = gainL;
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	ucontrol->value.integer.value[1] = gainR;
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_EqHw_SetLeftGainsCurrent(vortex, eq_gains_current);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_EqHw_SetLeftGainsCurrent(vortex, eq_gains_zero);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_EqHw_SetLeftGainsSingleTarget(vortex, index, gain);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_EqHw_SetLeftGainsTarget(vortex, eq_gains_current);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_EqHw_SetLeftGainsTarget(vortex, eq_gains_zero);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_EqHw_SetRightGainsCurrent(vortex, eq_gains_current);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_EqHw_SetRightGainsCurrent(vortex, eq_gains_zero);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_EqHw_SetRightGainsSingleTarget(vortex, index, gain);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_EqHw_SetRightGainsTarget(vortex, eq_gains_current);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_EqHw_SetRightGainsTarget(vortex, eq_gains_zero);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:vortex_Eqlzr_GetAllBands(vortex_t * vortex, u16 * gains, s32 *cnt)
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_Eqlzr_GetLeftGain(vortex, i, &gainL);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_Eqlzr_GetLeftGain(vortex, i, &gainL);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_Eqlzr_GetRightGain(vortex, i, &gainR);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_Eqlzr_GetRightGain(vortex, i, &gainR);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:	vortex_Eqlzr_SetAllBands(vortex, eq_gains_normal, eq->this10 * 2);
/root/machinex/sound/pci/au88x0/au88x0_eq.c:vortex_Eqlzr_SetAllBands(vortex_t * vortex, u16 gains[], s32 count)
/root/machinex/sound/pci/au88x0/au88x0_eq.c:		    (vortex, si, &gains[si + eq->this10]))
/root/machinex/sound/pci/au88x0/au88x0_eqdata.c:static u16 eq_gains_current[12] = {
/root/machinex/sound/pci/au88x0/au88x0_eqdata.c:static u16 eq_gains_normal[20] = {
/root/machinex/sound/pci/au88x0/au88x0_eqdata.c:static u16 eq_gains_zero[10] = {
/root/machinex/sound/pci/au88x0/au88x0_eq.h:	s32 this10;		/* How many gains are used for each side (right or left). */
/root/machinex/sound/pci/au88x0/au88x0_eq.h:	u16 this08;		/* Bad codec flag ? SetBypassGain: bypass gain */
/root/machinex/sound/pci/au88x0/au88x0_eq.h:	u16 this0c;		/* SetBypassGain: bypass gain when this28 is not set. */
/root/machinex/sound/pci/au88x0/au88x0_eq.h:	u16 this130[20];	/* Left and Right gains */
/root/machinex/sound/pci/au88x0/au88x0_eq.h:	u16 this14_array[10];	/* SetLeftGainsTarget: Left (and right?) EQ gains  */
/root/machinex/sound/pci/au88x0/au88x0.h:static void vortex_mix_setinputvolumebyte(vortex_t * vortex,
/root/machinex/sound/pci/au88x0/au88x0.h:static void vortex_mix_setvolumebyte(vortex_t * vortex, unsigned char mix,
/root/machinex/sound/pci/au88x0/au88x0_pcm.c:				vortex_mix_setinputvolumebyte(vortex,
/root/machinex/sound/pci/au88x0/au88x0_synth.c:/* Extract of CAdbTopology::SetVolume(struct _ASPVOLUME *) */
/root/machinex/sound/pci/au88x0/au88x0_wt.h:	parm3,			/* 4  RW volume. This value is calculated using floating point ops. */
/root/machinex/sound/pci/au88x0/au88x0_xtalk.c:	for (i = 0; i < XTGAINS_SZ; i++)
/root/machinex/sound/pci/au88x0/au88x0_xtalk.c:	for (i = 0; i < XTGAINS_SZ; i++) {
/root/machinex/sound/pci/au88x0/au88x0_xtalk.c:		gains[i] = hwread(vortex->mmio, 0x244D0 + i * 4);
/root/machinex/sound/pci/au88x0/au88x0_xtalk.c:		hwwrite(vortex->mmio, 0x244D0 + (i * 4), gains[i]);
/root/machinex/sound/pci/au88x0/au88x0_xtalk.c:// Input gain for 4 A3D slices. One possible input pair is left zero.
/root/machinex/sound/pci/au88x0/au88x0_xtalk.c:static void vortex_XtalkHw_GetGains(vortex_t * vortex, xtalk_gains_t gains)
/root/machinex/sound/pci/au88x0/au88x0_xtalk.c:static xtalk_gains_t const asXtalkGains1Chan = {
/root/machinex/sound/pci/au88x0/au88x0_xtalk.c:static xtalk_gains_t const asXtalkGainsAllChan = {
/root/machinex/sound/pci/au88x0/au88x0_xtalk.c:static xtalk_gains_t const asXtalkGainsDefault = {
/root/machinex/sound/pci/au88x0/au88x0_xtalk.c:static xtalk_gains_t const asXtalkGainsTest = {
/root/machinex/sound/pci/au88x0/au88x0_xtalk.c:static xtalk_gains_t const asXtalkGainsZeros = {
/root/machinex/sound/pci/au88x0/au88x0_xtalk.c:vortex_XtalkHw_SetGains(vortex_t * vortex, xtalk_gains_t const gains)
/root/machinex/sound/pci/au88x0/au88x0_xtalk.h:#define XTGAINS_SZ 10
/root/machinex/sound/pci/au88x0/au88x0_xtalk.h:typedef u16 xtalk_gains_t[XTGAINS_SZ];
/root/machinex/sound/pci/au88x0/au88x0_xtalk.h:				    xtalk_gains_t const gains);
/root/machinex/sound/pci/aw2/aw2-saa7146.c:	   not found the problem. Workaround: switch again (and again) between
/root/machinex/sound/pci/azt3328.c:		{ /* AC97_REC_GAIN */ IDX_MIXER_REC_VOLUME },
/root/machinex/sound/pci/azt3328.c:		{ /* AC97_REC_GAIN_MIC */ AZF_AC97_REG_EMU_IO_RW },
/root/machinex/sound/pci/azt3328.c:	AZF3328_MIXER_SWITCH("Capture Switch", IDX_MIXER_REC_VOLUME, 15, 1),
/root/machinex/sound/pci/azt3328.c:	AZF3328_MIXER_VOL_STEREO("Capture Volume", IDX_MIXER_REC_VOLUME, 0x0f, 0),
/root/machinex/sound/pci/azt3328.c:			case AC97_REC_GAIN_MIC:
/root/machinex/sound/pci/azt3328.c:			/* during volume change, the right channel is crackling
/root/machinex/sound/pci/azt3328.c:	 * first mute master volume, then reset
/root/machinex/sound/pci/azt3328.c:        { IDX_MIXER_REC_VOLUME,		MIXER_MUTE_MASK|0x0707 },
/root/machinex/sound/pci/azt3328.c:	if (reg.mask >= 0x07) /* it's a volume control, so better take care */
/root/machinex/sound/pci/azt3328.c:	/* make sure to disable master volume etc. to prevent looping sound */
/root/machinex/sound/pci/azt3328.c: * mixer switches/volumes
/root/machinex/sound/pci/azt3328.c:	/* mute and zero volume channels */
/root/machinex/sound/pci/azt3328.c:		snd_azf3328_mixer_write_volume_gradually(
/root/machinex/sound/pci/azt3328.c:snd_azf3328_mixer_write_volume_gradually(const struct snd_azf3328 *chip,
/root/machinex/sound/pci/azt3328.c:		/* start transfer again */
/root/machinex/sound/pci/azt3328.c: *  - supports hardware volume control
/root/machinex/sound/pci/azt3328.h:#define IDX_MIXER_REC_VOLUME    0x1c
/root/machinex/sound/pci/azt3328.h:  #define MIXER_BASSTREBLE_BASS_VOLUME_MASK	0x0e00
/root/machinex/sound/pci/azt3328.h:  #define MIXER_BASSTREBLE_TREBLE_VOLUME_MASK	0x000e
/root/machinex/sound/pci/azt3328.h:  #define MIXER_MIC_MICGAIN_20DB_ENHANCEMENT_MASK	0x0040
/root/machinex/sound/pci/azt3328.h:  #define MIXER_VOLUME_LEFT_MASK	0x1f00
/root/machinex/sound/pci/azt3328.h:  #define MIXER_VOLUME_RIGHT_MASK	0x001f
/root/machinex/sound/pci/bt87x.c:	chip->reg_control = (chip->reg_control & ~CTL_A_GAIN_MASK)
/root/machinex/sound/pci/bt87x.c:#define CTL_A_G2X		(1 << 27)	/* audio gain boost */
/root/machinex/sound/pci/bt87x.c:#define CTL_A_GAIN_MASK		(0xf<<28)
/root/machinex/sound/pci/bt87x.c:#define CTL_A_GAIN_SHIFT	      28	/* audio input gain */
/root/machinex/sound/pci/bt87x.c:	.get = snd_bt87x_capture_volume_get,
/root/machinex/sound/pci/bt87x.c:	.info = snd_bt87x_capture_volume_info,
/root/machinex/sound/pci/bt87x.c:	.put = snd_bt87x_capture_volume_put,
/root/machinex/sound/pci/bt87x.c:				  &snd_bt87x_capture_volume, chip));
/root/machinex/sound/pci/bt87x.c:static int snd_bt87x_capture_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/bt87x.c:static int snd_bt87x_capture_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/bt87x.c:static int snd_bt87x_capture_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/bt87x.c:static struct snd_kcontrol_new snd_bt87x_capture_volume = {
/root/machinex/sound/pci/bt87x.c:	value->value.integer.value[0] = (chip->reg_control & CTL_A_GAIN_MASK) >> CTL_A_GAIN_SHIFT;
/root/machinex/sound/pci/bt87x.c:		| (value->value.integer.value[0] << CTL_A_GAIN_SHIFT);
/root/machinex/sound/pci/ca0106/ca0106.h:#define ADC_GAIN_MASK		0x000000ff	//Mask for ADC Gain
/root/machinex/sound/pci/ca0106/ca0106.h:#define CAPTURE_VOLUME1         0x61            /* Capture  volume per channel 0-3 */
/root/machinex/sound/pci/ca0106/ca0106.h:#define CAPTURE_VOLUME2         0x62            /* Capture  volume per channel 4-7 */
/root/machinex/sound/pci/ca0106/ca0106.h:#define NUM_SAVED_VOLUMES	9
/root/machinex/sound/pci/ca0106/ca0106.h:#define PLAYBACK_VOLUME1        0x66            /* Playback SPDIF volume per channel. Set to the same PLAYBACK_VOLUME(0x6a) */
/root/machinex/sound/pci/ca0106/ca0106.h:#define PLAYBACK_VOLUME2        0x6a            /* Playback Analog volume per channel. Does not effect AC3 output */
/root/machinex/sound/pci/ca0106/ca0106.h:						 * Host Left  volume [31:24]
/root/machinex/sound/pci/ca0106/ca0106.h:						 * Host Right volume [23:16]
/root/machinex/sound/pci/ca0106/ca0106.h:						 * I2S Input 0 volume Left [15:8]
/root/machinex/sound/pci/ca0106/ca0106.h:						 * I2S Input 0 volume Right [7:0]
/root/machinex/sound/pci/ca0106/ca0106.h:						 * I2S Input 1 volume Left [31:24]
/root/machinex/sound/pci/ca0106/ca0106.h:						 * I2S Input 1 volume Right [23:16]
/root/machinex/sound/pci/ca0106/ca0106.h:						 * If you turn the volume up, you hear computer noise,
/root/machinex/sound/pci/ca0106/ca0106.h:	int i2c_adc;	/* with i2c_adc=1, the driver adds some capture volume
/root/machinex/sound/pci/ca0106/ca0106.h:						/* PLAYBACK_VOLUME1 must be set to 30303030 for SPDIF AC3 Playback */
/root/machinex/sound/pci/ca0106/ca0106.h:						 * SPDIF Input volume Left [31:24]
/root/machinex/sound/pci/ca0106/ca0106.h:						 * SPDIF Input volume Right [23:16]
/root/machinex/sound/pci/ca0106/ca0106.h:						/* SPDIF mixer input volume. 0=12dB, 0x30=0dB, 0xFE=-51.5dB, 0xff=Mute */
/root/machinex/sound/pci/ca0106/ca0106.h:						 * SRC Left  volume [15:8]
/root/machinex/sound/pci/ca0106/ca0106.h:						/* SRC Right volume [7:0]
/root/machinex/sound/pci/ca0106/ca0106.h:	u8 i2c_capture_volume[4][2];
/root/machinex/sound/pci/ca0106/ca0106.h:	unsigned int saved_vol[NUM_SAVED_VOLUMES];
/root/machinex/sound/pci/ca0106/ca0106_main.c:			chip->i2c_capture_volume[n][0] = 0xcf;
/root/machinex/sound/pci/ca0106/ca0106_main.c:			chip->i2c_capture_volume[n][1] = 0xcf;
/root/machinex/sound/pci/ca0106/ca0106_main.c:	/* (Mute) CAPTURE feedback into PLAYBACK volume.
/root/machinex/sound/pci/ca0106/ca0106_main.c:        outb(AC97_REC_GAIN, chip->port + AC97ADDRESS);
/root/machinex/sound/pci/ca0106/ca0106_main.c:		snd_ca0106_ptr_write(chip, CAPTURE_VOLUME1, ch, 0x30303030);
/root/machinex/sound/pci/ca0106/ca0106_main.c:		snd_ca0106_ptr_write(chip, CAPTURE_VOLUME2, ch, 0x30303030);
/root/machinex/sound/pci/ca0106/ca0106_main.c:		snd_ca0106_ptr_write(chip, PLAYBACK_VOLUME1, ch, 0x40404040);
/root/machinex/sound/pci/ca0106/ca0106_main.c:		snd_ca0106_ptr_write(chip, PLAYBACK_VOLUME1, ch, 0xffffffff);
/root/machinex/sound/pci/ca0106/ca0106_main.c:		snd_ca0106_ptr_write(chip, PLAYBACK_VOLUME2, ch, 0x40404040);
/root/machinex/sound/pci/ca0106/ca0106_main.c:		snd_ca0106_ptr_write(chip, PLAYBACK_VOLUME2, ch, 0xffffffff);
/root/machinex/sound/pci/ca0106/ca0106_main.c: *      So, to prevent feedback when capturing, minimise the "Capture feedback into Playback" volume.
/root/machinex/sound/pci/ca0106/ca0106_main.c: *      So, to record from the MIC, set the MIC Playback volume to max,
/root/machinex/sound/pci/ca0106/ca0106_main.c: *      unmute the MIC and turn up the MASTER Playback volume.
/root/machinex/sound/pci/ca0106/ca0106_main.c:        /* Write 0x8000 to AC97_REC_GAIN to mute it. */
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	ADD_CTLS(emu, snd_ca0106_volume_ctls);
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:		ADD_CTLS(emu, snd_ca0106_volume_i2c_adc_ctls);
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	CA_VOLUME("Analog Center/LFE Playback Volume",
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	CA_VOLUME("Analog Front Playback Volume",
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:        CA_VOLUME("Analog Rear Playback Volume",
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:        CA_VOLUME("Analog Side Playback Volume",
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:        CA_VOLUME("CAPTURE feedback Playback Volume",
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	CA_VOLUME("IEC958 Center/LFE Playback Volume",
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:        CA_VOLUME("IEC958 Front Playback Volume",
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	CA_VOLUME("IEC958 Rear Playback Volume",
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	CA_VOLUME("IEC958 Unknown Playback Volume",
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	{ CONTROL_CENTER_LFE_CHANNEL, PLAYBACK_VOLUME1 },
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:		  CONTROL_CENTER_LFE_CHANNEL, PLAYBACK_VOLUME1),
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	{ CONTROL_CENTER_LFE_CHANNEL, PLAYBACK_VOLUME2 },
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:		  CONTROL_CENTER_LFE_CHANNEL, PLAYBACK_VOLUME2),
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	{ CONTROL_FRONT_CHANNEL, PLAYBACK_VOLUME1 },
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:		  CONTROL_FRONT_CHANNEL, PLAYBACK_VOLUME1),
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	{ CONTROL_FRONT_CHANNEL, PLAYBACK_VOLUME2 },
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:		  CONTROL_FRONT_CHANNEL, PLAYBACK_VOLUME2),
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	{ CONTROL_REAR_CHANNEL, PLAYBACK_VOLUME1 },
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:		  CONTROL_REAR_CHANNEL, PLAYBACK_VOLUME1),
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	{ CONTROL_REAR_CHANNEL, PLAYBACK_VOLUME2 },
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:		  CONTROL_REAR_CHANNEL, PLAYBACK_VOLUME2),
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	{ CONTROL_UNKNOWN_CHANNEL, PLAYBACK_VOLUME1 },
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:		  CONTROL_UNKNOWN_CHANNEL, PLAYBACK_VOLUME1),
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	{ CONTROL_UNKNOWN_CHANNEL, PLAYBACK_VOLUME2 },
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:		  CONTROL_UNKNOWN_CHANNEL, PLAYBACK_VOLUME2),
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:			ctl = snd_ca0106_volume_spi_dac_ctl(emu->details, i);
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:#define CA_VOLUME(xname,chid,reg) \
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:#define I2C_VOLUME(xname,chid) \
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:		emu->i2c_capture_volume[source_id][0] = ucontrol->value.integer.value[0];
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:		emu->i2c_capture_volume[source_id][1] = ucontrol->value.integer.value[1];
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	for (i = 0; i < NUM_SAVED_VOLUMES; i++)
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	for (i = 0; i < NUM_SAVED_VOLUMES; i++)
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	.get =   snd_ca0106_i2c_volume_get,			\
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	.get =   snd_ca0106_volume_get,				\
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:        I2C_VOLUME("Aux Capture Volume", 3),
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:        I2C_VOLUME("Line in Capture Volume", 2),
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:        I2C_VOLUME("Mic Capture Volume", 1),
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:        I2C_VOLUME("Phone Capture Volume", 0),
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	if (force || ngain != ogain)
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	if (force || ngain != ogain)
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	if (ngain > 0xff)
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	if (ngain > 0xff)
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	if (ogain != ngain) {
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	if (ogain != ngain) {
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	.info =  snd_ca0106_i2c_volume_info,			\
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	.info =	 snd_ca0106_volume_info,			\
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	ngain = emu->i2c_capture_volume[val][0]; /* Left */
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	ngain = emu->i2c_capture_volume[val][1]; /* Right */
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	ngain = ucontrol->value.integer.value[0];
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	ngain = ucontrol->value.integer.value[1];
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	ogain = emu->i2c_capture_volume[emu->i2c_capture_source][0]; /* Left */
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	ogain = emu->i2c_capture_volume[emu->i2c_capture_source][1]; /* Right */
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	ogain = emu->i2c_capture_volume[source_id][0]; /* Left */
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	ogain = emu->i2c_capture_volume[source_id][1]; /* Right */
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	.put =   snd_ca0106_i2c_volume_put,			\
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	.put =   snd_ca0106_volume_put,				\
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:				     saved_volumes[i].channel_id,
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:					    saved_volumes[i].channel_id);
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	/* save volumes */
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:			snd_ca0106_i2c_write(emu, ADC_ATTEN_ADCL, ((ngain) & 0xff) );
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:		snd_ca0106_i2c_write(emu, ADC_ATTEN_ADCL, ngain & 0xff);
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:			snd_ca0106_i2c_write(emu, ADC_ATTEN_ADCR, ((ngain) & 0xff));
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:		snd_ca0106_i2c_write(emu, ADC_ATTEN_ADCR, ngain & 0xff);
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:			snd_ca0106_ptr_read(chip, saved_volumes[i].reg,
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:		snd_ca0106_ptr_write(chip, saved_volumes[i].reg,
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:snd_ca0106_volume_spi_dac_ctl(struct snd_ca0106_details *details,
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:static int snd_ca0106_i2c_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:static int snd_ca0106_i2c_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:static int snd_ca0106_i2c_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:static int snd_ca0106_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:static int snd_ca0106_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:static int snd_ca0106_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:static struct ca0106_vol_tbl saved_volumes[NUM_SAVED_VOLUMES] = {
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:static struct snd_kcontrol_new snd_ca0106_volume_ctls[] = {
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:static struct snd_kcontrol_new snd_ca0106_volume_i2c_adc_ctls[] = {
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:        ucontrol->value.integer.value[0] = emu->i2c_capture_volume[source_id][0];
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:        ucontrol->value.integer.value[1] = emu->i2c_capture_volume[source_id][1];
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:        unsigned int ngain;
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	unsigned int ngain, ogain;
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:        unsigned int ogain;
/root/machinex/sound/pci/ca0106/ca0106_mixer.c:	 * update the capture volume from the cached value
/root/machinex/sound/pci/cmipci.c:	CMIPCI_MIXER_SW_MONO("Mic Boost Playback Switch", CM_REG_MIXER2, CM_MICGAINZ_SHIFT, 1),
/root/machinex/sound/pci/cmipci.c:#define CM_MICGAINZ		0x01	/* mic boost */
/root/machinex/sound/pci/cmipci.c:#define CM_MICGAINZ_SHIFT	0
/root/machinex/sound/pci/cmipci.c:#define CM_VADMIC_MASK		0x0e	/* mic gain level (0-3) << 1 */
/root/machinex/sound/pci/cmipci.c:#define CM_VMGAIN		0x10000000	/* analog master amp +6dB, model 039? */
/root/machinex/sound/pci/cmipci.c:#define CM_VPHONE_MASK		0xe0	/* Phone volume control (0-3) << 5 */
/root/machinex/sound/pci/cmipci.c:			/* enable dual DAC mode again */
/root/machinex/sound/pci/cmipci.c:  .get = snd_cmipci_get_volume, .put = snd_cmipci_put_volume, \
/root/machinex/sound/pci/cmipci.c:		if (cm->chip_version == 68) {	// 8768 has no PCM volume
/root/machinex/sound/pci/cmipci.c:  .info = snd_cmipci_info_volume, \
/root/machinex/sound/pci/cmipci.c: *   lack of some elements like tone control, i/o gain and AGC.
/root/machinex/sound/pci/cmipci.c: * native mixer switches/volumes
/root/machinex/sound/pci/cmipci.c:static int snd_cmipci_get_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/cmipci.c:static int snd_cmipci_info_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/cmipci.c:static int snd_cmipci_put_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/cs4281.c:	/* Activate FIFO again for FM playback */
/root/machinex/sound/pci/cs4281.c:	.get = snd_cs4281_get_volume,
/root/machinex/sound/pci/cs4281.c:	.get = snd_cs4281_get_volume,
/root/machinex/sound/pci/cs4281.c:	.info = snd_cs4281_info_volume, 
/root/machinex/sound/pci/cs4281.c:	.info = snd_cs4281_info_volume, 
/root/machinex/sound/pci/cs4281.c:	/* Initialize digital volume */
/root/machinex/sound/pci/cs4281.c:	.put = snd_cs4281_put_volume, 
/root/machinex/sound/pci/cs4281.c:	.put = snd_cs4281_put_volume, 
/root/machinex/sound/pci/cs4281.c:static int snd_cs4281_get_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/cs4281.c:static int snd_cs4281_info_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/cs4281.c:static int snd_cs4281_put_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:	/* because the PCM or MASTER volume registers can be modified, */
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:	    chip->dsp_spos_instance->dac_volume_left != ucontrol->value.integer.value[1]) {
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:	    chip->dsp_spos_instance->spdif_input_volume_right!= ucontrol->value.integer.value[1]) {
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:		cs46xx_dsp_set_dac_volume(chip,
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:		cs46xx_dsp_set_iec958_volume (chip,
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:	if (chip->dsp_spos_instance->dac_volume_right != ucontrol->value.integer.value[0] ||
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:	if (chip->dsp_spos_instance->spdif_input_volume_left  != ucontrol->value.integer.value[0] ||
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:		if ((err = snd_ac97_read(ac97, AC97_REC_GAIN)) == 0x8a05)
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:/* Input IEC958 volume does not work for the moment. (Benny) */
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:		/* magic value to unmute PCM stream  playback volume */
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:	.name = SNDRV_CTL_NAME_IEC958("Input ",NONE,VOLUME),
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:	 *  Now, if we powered up the devices, then power them back down again.
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:	 *  Now, if we powered up the devices, then power them back down again.
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:			/* restore volume */
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:		snd_ac97_write(ac97, AC97_REC_GAIN, 0x8a05);
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:		/* test if we can write to the record gain volume register */
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:	/* the REC_GAIN register is used for tests */
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:	ucontrol->value.integer.value[0] = chip->dsp_spos_instance->dac_volume_left;
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:	ucontrol->value.integer.value[0] = chip->dsp_spos_instance->spdif_input_volume_left;
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:	ucontrol->value.integer.value[1] = chip->dsp_spos_instance->dac_volume_right;
/root/machinex/sound/pci/cs46xx/cs46xx_lib.c:	ucontrol->value.integer.value[1] = chip->dsp_spos_instance->spdif_input_volume_right;
/root/machinex/sound/pci/cs46xx/cs46xx_lib.h:int cs46xx_dsp_set_dac_volume (struct snd_cs46xx * chip, u16 left, u16 right);
/root/machinex/sound/pci/cs46xx/cs46xx_lib.h:int cs46xx_dsp_set_iec958_volume (struct snd_cs46xx * chip, u16 left, u16 right);
/root/machinex/sound/pci/cs46xx/dsp_spos.c:		cs46xx_dsp_scb_set_volume (chip,ins->asynch_rx_scb,
/root/machinex/sound/pci/cs46xx/dsp_spos.c:	cs46xx_dsp_scb_set_volume (chip,ins->spdif_in_src,0x7fff,0x7fff);
/root/machinex/sound/pci/cs46xx/dsp_spos.c:			cs46xx_dsp_scb_set_volume(chip, s,
/root/machinex/sound/pci/cs46xx/dsp_spos.c:		cs46xx_dsp_scb_set_volume (chip,scb,left,right);
/root/machinex/sound/pci/cs46xx/dsp_spos.c:		cs46xx_dsp_scb_set_volume (chip,scb,left,right);
/root/machinex/sound/pci/cs46xx/dsp_spos.c:		if (s->volume_set)
/root/machinex/sound/pci/cs46xx/dsp_spos.c:	ins->dac_volume_left = 0x8000;
/root/machinex/sound/pci/cs46xx/dsp_spos.c:	ins->dac_volume_left = left;
/root/machinex/sound/pci/cs46xx/dsp_spos.c:	ins->dac_volume_right = 0x8000;
/root/machinex/sound/pci/cs46xx/dsp_spos.c:	ins->dac_volume_right = right;
/root/machinex/sound/pci/cs46xx/dsp_spos.c:	ins->spdif_input_volume_left = 0x8000;
/root/machinex/sound/pci/cs46xx/dsp_spos.c:	ins->spdif_input_volume_left = left;
/root/machinex/sound/pci/cs46xx/dsp_spos.c:	ins->spdif_input_volume_right = 0x8000;
/root/machinex/sound/pci/cs46xx/dsp_spos.c:	ins->spdif_input_volume_right = right;
/root/machinex/sound/pci/cs46xx/dsp_spos.c:int cs46xx_dsp_set_dac_volume (struct snd_cs46xx * chip, u16 left, u16 right)
/root/machinex/sound/pci/cs46xx/dsp_spos.c:int cs46xx_dsp_set_iec958_volume (struct snd_cs46xx * chip, u16 left, u16 right)
/root/machinex/sound/pci/cs46xx/dsp_spos.c:	/* maximize volume */
/root/machinex/sound/pci/cs46xx/dsp_spos.c:						  s->volume[0], s->volume[1]);
/root/machinex/sound/pci/cs46xx/dsp_spos.c:	/* unmute SRC volume */
/root/machinex/sound/pci/cs46xx/dsp_spos.h:	scb->volume[0] = left;
/root/machinex/sound/pci/cs46xx/dsp_spos.h:	scb->volume[1] = right;
/root/machinex/sound/pci/cs46xx/dsp_spos.h:	scb->volume_set = 1;
/root/machinex/sound/pci/cs46xx/dsp_spos.h:static inline void cs46xx_dsp_scb_set_volume (struct snd_cs46xx * chip,
/root/machinex/sound/pci/cs46xx/dsp_spos_scb_lib.c:				0xffff - ins->dac_volume_right,0xffff - ins->dac_volume_left
/root/machinex/sound/pci/cs46xx/dsp_spos_scb_lib.c:				0xffff - ins->dac_volume_right,0xffff - ins->dac_volume_left,
/root/machinex/sound/pci/cs46xx/dsp_spos_scb_lib.c:		0xffff - ins->spdif_input_volume_right,0xffff - ins->spdif_input_volume_left,
/root/machinex/sound/pci/cs46xx/dsp_spos_scb_lib.c:		0xffff - ins->spdif_input_volume_right,0xffff - ins->spdif_input_volume_left,
/root/machinex/sound/pci/cs46xx/dsp_spos_scb_lib.c:	cs46xx_dsp_scb_set_volume (chip,src,0,0);
/root/machinex/sound/pci/cs46xx/dsp_spos_scb_lib.c:		/* Set IEC958 input volume */
/root/machinex/sound/pci/cs46xx/dsp_spos_scb_lib.c:			/* Standard stereo volume control
/root/machinex/sound/pci/cs46xx/imgs/cwcdma.asp:      nop; // as above again ...
/root/machinex/sound/pci/cs46xx/imgs/cwcdma.asp:    VolumeControl s2m_volume;
/root/machinex/sound/pci/ctxfi/cthw20k2.c:	adcmc = ((u32)1 << input) | 0x100; /* Link L+R gain... */
/root/machinex/sound/pci/ctxfi/cthw20k2.c:			/* Again, loop is over 4 channels not 5. */
/root/machinex/sound/pci/ctxfi/cthw20k2.c:				/* FIXME: check this against the chip spec */
/root/machinex/sound/pci/ctxfi/cthw20k2.c:	gain = gain_in_db * MIC_BOOST_STEPS_PER_DB + MIC_BOOST_0DB;
/root/machinex/sound/pci/ctxfi/cthw20k2.c:		gain_in_db = -103;
/root/machinex/sound/pci/ctxfi/cthw20k2.c:		gain_in_db = 24;
/root/machinex/sound/pci/ctxfi/cthw20k2.c:	hw20k2_i2c_write(hw, MAKE_WM8775_ADDR(WM8775_AADCL, gain),
/root/machinex/sound/pci/ctxfi/cthw20k2.c:	hw20k2_i2c_write(hw, MAKE_WM8775_ADDR(WM8775_AADCR, gain),
/root/machinex/sound/pci/ctxfi/cthw20k2.c:	if (gain_in_db < -103)
/root/machinex/sound/pci/ctxfi/cthw20k2.c:	if (gain_in_db > 24)
/root/machinex/sound/pci/ctxfi/cthw20k2.c:				MAKE_WM8775_DATA(gain));
/root/machinex/sound/pci/ctxfi/cthw20k2.c:				MAKE_WM8775_DATA(gain));
/root/machinex/sound/pci/ctxfi/cthw20k2.c:static void hw_wm8775_input_select(struct hw *hw, u8 input, s8 gain_in_db)
/root/machinex/sound/pci/ctxfi/cthw20k2.c:	u32 adcmc, gain;
/root/machinex/sound/pci/ctxfi/ctmixer.c:	.get		= ct_alsa_mix_volume_get,
/root/machinex/sound/pci/ctxfi/ctmixer.c:	.info		= ct_alsa_mix_volume_info,
/root/machinex/sound/pci/ctxfi/ctmixer.c:	.put		= ct_alsa_mix_volume_put,
/root/machinex/sound/pci/ctxfi/ctmixer.c:	/* resume topology and volume gain. */
/root/machinex/sound/pci/ctxfi/ctmixer.c:static int ct_alsa_mix_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/ctxfi/ctmixer.c:static int ct_alsa_mix_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/ctxfi/ctmixer.c:static int ct_alsa_mix_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/ctxfi/ctmixer.c:	/* volume control mixers */
/root/machinex/sound/pci/ctxfi/ctmixer.c:	/* volume control mixers */
/root/machinex/sound/pci/ctxfi/ctmixer.h:	void **amixers;		/* amixer resources for volume control */
/root/machinex/sound/pci/echoaudio/echoaudio_3g.c:						 chip->monitor_gain[o][i]);
/root/machinex/sound/pci/echoaudio/echoaudio_3g.c:#ifdef ECHOCARD_HAS_INPUT_GAIN
/root/machinex/sound/pci/echoaudio/echoaudio_3g.c:			return -EAGAIN;
/root/machinex/sound/pci/echoaudio/echoaudio_3g.c:			return -EAGAIN;
/root/machinex/sound/pci/echoaudio/echoaudio_3g.c:		return -EAGAIN;
/root/machinex/sound/pci/echoaudio/echoaudio_3g.c:			set_input_gain(chip, i, chip->input_gain[i]);
/root/machinex/sound/pci/echoaudio/echoaudio_3g.c:				set_monitor_gain(chip, o, i,
/root/machinex/sound/pci/echoaudio/echoaudio_3g.c:			set_output_gain(chip, o, chip->output_gain[o]);
/root/machinex/sound/pci/echoaudio/echoaudio.c:/******************* Analog input volume *******************/
/root/machinex/sound/pci/echoaudio/echoaudio.c:			changed = -EAGAIN;
/root/machinex/sound/pci/echoaudio/echoaudio.c:		chip->monitor_gain[ucontrol->id.index / num_busses_in(chip)]
/root/machinex/sound/pci/echoaudio/echoaudio.c:		chip->vmixer_gain[ucontrol->id.index / num_pipes_out(chip)]
/root/machinex/sound/pci/echoaudio/echoaudio.c:#endif /* ECHOCARD_HAS_INPUT_GAIN */
/root/machinex/sound/pci/echoaudio/echoaudio.c:#endif /* !ECHOCARD_HAS_VMIXER || ECHOCARD_HAS_LINE_OUT_GAIN */
/root/machinex/sound/pci/echoaudio/echoaudio.c:	gain = ucontrol->value.integer.value[0];
/root/machinex/sound/pci/echoaudio/echoaudio.c:	gain = ucontrol->value.integer.value[0];
/root/machinex/sound/pci/echoaudio/echoaudio.c:		gain = ucontrol->value.integer.value[c];
/root/machinex/sound/pci/echoaudio/echoaudio.c:		gain = ucontrol->value.integer.value[c];
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.get = snd_echo_input_gain_get,
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.get = snd_echo_output_gain_get,
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.get = snd_echo_output_gain_get,
/root/machinex/sound/pci/echoaudio/echoaudio.c:		if (chip->input_gain[c] != gain) {
/root/machinex/sound/pci/echoaudio/echoaudio.c:	if (chip->monitor_gain[out][in] != gain) {
/root/machinex/sound/pci/echoaudio/echoaudio.c:		if (chip->output_gain[c] != gain) {
/root/machinex/sound/pci/echoaudio/echoaudio.c:	if (chip->vmixer_gain[out][vch] != ucontrol->value.integer.value[0]) {
/root/machinex/sound/pci/echoaudio/echoaudio.c:#ifdef ECHOCARD_HAS_INPUT_GAIN
/root/machinex/sound/pci/echoaudio/echoaudio.c:#ifdef ECHOCARD_HAS_INPUT_GAIN
/root/machinex/sound/pci/echoaudio/echoaudio.c:#ifdef ECHOCARD_HAS_LINE_OUT_GAIN
/root/machinex/sound/pci/echoaudio/echoaudio.c:#ifdef ECHOCARD_HAS_LINE_OUT_GAIN
/root/machinex/sound/pci/echoaudio/echoaudio.c:#if !defined(ECHOCARD_HAS_VMIXER) || defined(ECHOCARD_HAS_LINE_OUT_GAIN)
/root/machinex/sound/pci/echoaudio/echoaudio.c:	if ((err = snd_ctl_add(chip->card, snd_ctl_new1(&snd_echo_line_input_gain, chip))) < 0)
/root/machinex/sound/pci/echoaudio/echoaudio.c:		if (gain < ECHOGAIN_MININP || gain > ECHOGAIN_MAXINP)
/root/machinex/sound/pci/echoaudio/echoaudio.c:		if (gain < ECHOGAIN_MINOUT || gain > ECHOGAIN_MAXOUT)
/root/machinex/sound/pci/echoaudio/echoaudio.c:	if (gain < ECHOGAIN_MINOUT || gain > ECHOGAIN_MAXOUT)
/root/machinex/sound/pci/echoaudio/echoaudio.c:	if (gain < ECHOGAIN_MINOUT || gain > ECHOGAIN_MAXOUT)
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.info = snd_echo_input_gain_info,
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.info = snd_echo_output_gain_info,
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.info = snd_echo_output_gain_info,
/root/machinex/sound/pci/echoaudio/echoaudio.c:	int c, changed, gain;
/root/machinex/sound/pci/echoaudio/echoaudio.c:	int c, gain, changed;
/root/machinex/sound/pci/echoaudio/echoaudio.c:	int changed,  gain;
/root/machinex/sound/pci/echoaudio/echoaudio.c:	int gain, changed;
/root/machinex/sound/pci/echoaudio/echoaudio.c:/* On the Mia this one controls the line-out volume */
/root/machinex/sound/pci/echoaudio/echoaudio.c:/******************* PCM output volume *******************/
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.put = snd_echo_input_gain_put,
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.put = snd_echo_output_gain_put,
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.put = snd_echo_output_gain_put,
/root/machinex/sound/pci/echoaudio/echoaudio.c:		return -EAGAIN;
/root/machinex/sound/pci/echoaudio/echoaudio.c:			set_input_gain(chip, c, gain);
/root/machinex/sound/pci/echoaudio/echoaudio.c:		set_monitor_gain(chip, out, in, gain);
/root/machinex/sound/pci/echoaudio/echoaudio.c:			set_output_gain(chip, c, gain);
/root/machinex/sound/pci/echoaudio/echoaudio.c:		set_vmixer_gain(chip, out, vch, ucontrol->value.integer.value[0]);
/root/machinex/sound/pci/echoaudio/echoaudio.c:			  snd_ctl_new1(&snd_echo_line_output_gain, chip));
/root/machinex/sound/pci/echoaudio/echoaudio.c:			  snd_ctl_new1(&snd_echo_pcm_output_gain, chip));
/root/machinex/sound/pci/echoaudio/echoaudio.c:static const DECLARE_TLV_DB_SCALE(db_scale_input_gain, -2500, 50, 0);
/root/machinex/sound/pci/echoaudio/echoaudio.c:static const DECLARE_TLV_DB_SCALE(db_scale_output_gain, -12800, 100, 1);
/root/machinex/sound/pci/echoaudio/echoaudio.c:static int snd_echo_input_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/echoaudio/echoaudio.c:static int snd_echo_input_gain_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/echoaudio/echoaudio.c:static int snd_echo_input_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/echoaudio/echoaudio.c:static int snd_echo_output_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/echoaudio/echoaudio.c:static int snd_echo_output_gain_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/echoaudio/echoaudio.c:static int snd_echo_output_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/echoaudio/echoaudio.c:static struct snd_kcontrol_new snd_echo_line_input_gain = {
/root/machinex/sound/pci/echoaudio/echoaudio.c:static struct snd_kcontrol_new snd_echo_line_output_gain = {
/root/machinex/sound/pci/echoaudio/echoaudio.c:static struct snd_kcontrol_new snd_echo_pcm_output_gain = {
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.tlv = {.p = db_scale_input_gain},
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.tlv = {.p = db_scale_output_gain},
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.tlv = {.p = db_scale_output_gain},
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.tlv = {.p = db_scale_output_gain},
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.tlv = {.p = db_scale_output_gain},
/root/machinex/sound/pci/echoaudio/echoaudio.c:	.tlv = {.p = db_scale_output_gain},
/root/machinex/sound/pci/echoaudio/echoaudio.c:		ucontrol->value.integer.value[c] = chip->input_gain[c];
/root/machinex/sound/pci/echoaudio/echoaudio.c:		ucontrol->value.integer.value[c] = chip->output_gain[c];
/root/machinex/sound/pci/echoaudio/echoaudio.c:	uinfo->value.integer.max = ECHOGAIN_MAXINP;
/root/machinex/sound/pci/echoaudio/echoaudio.c:	uinfo->value.integer.max = ECHOGAIN_MAXOUT;
/root/machinex/sound/pci/echoaudio/echoaudio.c:	uinfo->value.integer.max = ECHOGAIN_MAXOUT;
/root/machinex/sound/pci/echoaudio/echoaudio.c:	uinfo->value.integer.max = ECHOGAIN_MAXOUT;
/root/machinex/sound/pci/echoaudio/echoaudio.c:	uinfo->value.integer.min = ECHOGAIN_MININP;
/root/machinex/sound/pci/echoaudio/echoaudio.c:	uinfo->value.integer.min = ECHOGAIN_MINOUT;
/root/machinex/sound/pci/echoaudio/echoaudio.c:	uinfo->value.integer.min = ECHOGAIN_MINOUT;
/root/machinex/sound/pci/echoaudio/echoaudio.c:	uinfo->value.integer.min = ECHOGAIN_MINOUT;
/root/machinex/sound/pci/echoaudio/echoaudio.c:	uinfo->value.integer.min = ECHOGAIN_MINOUT;
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:	chip->comm_page->line_out_level[channel] = gain;
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:	chip->comm_page->monitors[monitor_index(chip, output, input)] = gain;
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:						chip->monitor_gain[o][i]);
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:	chip->monitor_gain[output][input] = gain;
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:	chip->output_gain[channel] = gain;
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:						chip->vmixer_gain[o][i]);
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:#endif /* ECHOCARD_HAS_INPUT_GAIN */
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:		err = set_input_gain(chip, i, chip->input_gain[i]);
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:			err = set_monitor_gain(chip, o, i,
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:		err = set_output_gain(chip, i, chip->output_gain[i]);
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:			err = set_vmixer_gain(chip, o, i,
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:#ifdef ECHOCARD_HAS_INPUT_GAIN
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:	memset(chip->comm_page->monitors, ECHOGAIN_MUTED, MONITOR_ARRAY_SIZE);
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:	memset(chip->comm_page->vmixer, ECHOGAIN_MUTED, VMIXER_ARRAY_SIZE);
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:	memset(chip->input_gain, ECHOGAIN_MUTED, sizeof(chip->input_gain));
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:	memset(chip->monitor_gain, ECHOGAIN_MUTED, sizeof(chip->monitor_gain));
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:	memset(chip->output_gain, ECHOGAIN_MUTED, sizeof(chip->output_gain));
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:	memset(chip->vmixer_gain, ECHOGAIN_MUTED, sizeof(chip->vmixer_gain));
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:		memset((s8 *)chip->comm_page->peak_meter, ECHOGAIN_MUTED,
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:		memset((s8 *)chip->comm_page->vu_meter, ECHOGAIN_MUTED,
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:		return -EAGAIN;
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:	return send_vector(chip, DSP_VC_UPDATE_INGAIN);
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:			    s8 gain)
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:/* Set the gain for a single physical output channel (dB). */
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:static int set_monitor_gain(struct echoaudio *chip, u16 output, u16 input,
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.c:static int set_output_gain(struct echoaudio *chip, u16 channel, s8 gain)
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.h:#define DSP_VC_SET_VMIXER_GAIN			0x0000	/* Not used, only for compile */
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.h:#define DSP_VC_SET_VMIXER_GAIN			0x00DB	/* Handshke rqd. */
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.h:#define DSP_VC_UPDATE_INGAIN			0x007f	/* Handshke rqd. */
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.h:#define DSP_VC_UPDATE_INGAIN			0x00E5	/* Handshke rqd. */
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.h:#define GL20_INPUT_GAIN_MAGIC_NUMBER	0xC8
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.h: * Gina20 & Layla20 have input gain controls for the analog inputs;
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.h:				/* Input gain			0x230	16*1 */
/root/machinex/sound/pci/echoaudio/echoaudio_dsp.h:				/* Output gain			0x220	16*1 */
/root/machinex/sound/pci/echoaudio/echoaudio_gml.c:						 chip->monitor_gain[o][i]);
/root/machinex/sound/pci/echoaudio/echoaudio_gml.c:#ifdef ECHOCARD_HAS_INPUT_GAIN
/root/machinex/sound/pci/echoaudio/echoaudio_gml.c:		return -EAGAIN;
/root/machinex/sound/pci/echoaudio/echoaudio_gml.c:			set_input_gain(chip, i, chip->input_gain[i]);
/root/machinex/sound/pci/echoaudio/echoaudio_gml.c:				set_monitor_gain(chip, o, i,
/root/machinex/sound/pci/echoaudio/echoaudio_gml.c:			set_output_gain(chip, o, chip->output_gain[o]);
/root/machinex/sound/pci/echoaudio/echoaudio.h:#define ECHOGAIN_MAXINP		(50)	/* Max input gain (0.5 dB) */
/root/machinex/sound/pci/echoaudio/echoaudio.h:#define ECHOGAIN_MAXOUT		(6)	/* Max output gain (dB) */
/root/machinex/sound/pci/echoaudio/echoaudio.h:#define ECHOGAIN_MININP		(-50)	/* Min input gain (0.5 dB) */
/root/machinex/sound/pci/echoaudio/echoaudio.h:#define ECHOGAIN_MINOUT		(-128)	/* Min output gain (dB) */
/root/machinex/sound/pci/echoaudio/echoaudio.h:#define ECHOGAIN_MUTED		(-128)	/* Minimum possible gain */
/root/machinex/sound/pci/echoaudio/echoaudio.h:	s8 input_gain[ECHO_MAXAUDIOINPUTS];	/* Input level -50..+50
/root/machinex/sound/pci/echoaudio/echoaudio.h:	s8 monitor_gain[ECHO_MAXAUDIOOUTPUTS][ECHO_MAXAUDIOINPUTS];
/root/machinex/sound/pci/echoaudio/echoaudio.h:	s8 output_gain[ECHO_MAXAUDIOOUTPUTS];	/* Output level -128..+6 dB
/root/machinex/sound/pci/echoaudio/echoaudio.h:	s8 vmixer_gain[ECHO_MAXAUDIOOUTPUTS][ECHO_MAXAUDIOOUTPUTS];
/root/machinex/sound/pci/echoaudio/gina20.c:#define ECHOCARD_HAS_INPUT_GAIN
/root/machinex/sound/pci/echoaudio/gina20_dsp.c:	chip->comm_page->line_in_level[input] = gain;
/root/machinex/sound/pci/echoaudio/gina20_dsp.c:	chip->input_gain[input] = gain;
/root/machinex/sound/pci/echoaudio/gina20_dsp.c:	gain += GL20_INPUT_GAIN_MAGIC_NUMBER;
/root/machinex/sound/pci/echoaudio/gina20_dsp.c:/* Set input bus gain (one unit is 0.5dB !) */
/root/machinex/sound/pci/echoaudio/gina20_dsp.c:static int set_input_gain(struct echoaudio *chip, u16 input, int gain)
/root/machinex/sound/pci/echoaudio/gina24_dsp.c:			return -EAGAIN;
/root/machinex/sound/pci/echoaudio/gina24_dsp.c:			return -EAGAIN;
/root/machinex/sound/pci/echoaudio/indigodj_dsp.c:	chip->comm_page->vmixer[index] = gain;
/root/machinex/sound/pci/echoaudio/indigodj_dsp.c:	chip->vmixer_gain[output][pipe] = gain;
/root/machinex/sound/pci/echoaudio/indigodj_dsp.c:	DE_ACT(("set_vmixer_gain: pipe %d, out %d = %d\n", pipe, output, gain));
/root/machinex/sound/pci/echoaudio/indigodj_dsp.c:			   int gain)
/root/machinex/sound/pci/echoaudio/indigodj_dsp.c:			   int gain);
/root/machinex/sound/pci/echoaudio/indigodj_dsp.c:	return send_vector(chip, DSP_VC_SET_VMIXER_GAIN);
/root/machinex/sound/pci/echoaudio/indigodj_dsp.c:static int set_vmixer_gain(struct echoaudio *chip, u16 output, u16 pipe,
/root/machinex/sound/pci/echoaudio/indigodj_dsp.c:static int set_vmixer_gain(struct echoaudio *chip, u16 output, u16 pipe,
/root/machinex/sound/pci/echoaudio/indigodjx_dsp.c:static int set_vmixer_gain(struct echoaudio *chip, u16 output,
/root/machinex/sound/pci/echoaudio/indigodjx_dsp.c:			   u16 pipe, int gain);
/root/machinex/sound/pci/echoaudio/indigo_dsp.c:	chip->comm_page->vmixer[index] = gain;
/root/machinex/sound/pci/echoaudio/indigo_dsp.c:	chip->vmixer_gain[output][pipe] = gain;
/root/machinex/sound/pci/echoaudio/indigo_dsp.c:	DE_ACT(("set_vmixer_gain: pipe %d, out %d = %d\n", pipe, output, gain));
/root/machinex/sound/pci/echoaudio/indigo_dsp.c:			   int gain)
/root/machinex/sound/pci/echoaudio/indigo_dsp.c:			   int gain);
/root/machinex/sound/pci/echoaudio/indigo_dsp.c:	return send_vector(chip, DSP_VC_SET_VMIXER_GAIN);
/root/machinex/sound/pci/echoaudio/indigo_dsp.c:static int set_vmixer_gain(struct echoaudio *chip, u16 output, u16 pipe,
/root/machinex/sound/pci/echoaudio/indigo_dsp.c:static int set_vmixer_gain(struct echoaudio *chip, u16 output, u16 pipe,
/root/machinex/sound/pci/echoaudio/indigo_express_dsp.c:	chip->comm_page->vmixer[index] = gain;
/root/machinex/sound/pci/echoaudio/indigo_express_dsp.c:	chip->vmixer_gain[output][pipe] = gain;
/root/machinex/sound/pci/echoaudio/indigo_express_dsp.c:	DE_ACT(("set_vmixer_gain: pipe %d, out %d = %d\n", pipe, output, gain));
/root/machinex/sound/pci/echoaudio/indigo_express_dsp.c:			   int gain)
/root/machinex/sound/pci/echoaudio/indigo_express_dsp.c:	return send_vector(chip, DSP_VC_SET_VMIXER_GAIN);
/root/machinex/sound/pci/echoaudio/indigo_express_dsp.c:static int set_vmixer_gain(struct echoaudio *chip, u16 output, u16 pipe,
/root/machinex/sound/pci/echoaudio/indigoio_dsp.c:	chip->comm_page->vmixer[index] = gain;
/root/machinex/sound/pci/echoaudio/indigoio_dsp.c:	chip->vmixer_gain[output][pipe] = gain;
/root/machinex/sound/pci/echoaudio/indigoio_dsp.c:	DE_ACT(("set_vmixer_gain: pipe %d, out %d = %d\n", pipe, output, gain));
/root/machinex/sound/pci/echoaudio/indigoio_dsp.c:			   int gain)
/root/machinex/sound/pci/echoaudio/indigoio_dsp.c:			   int gain);
/root/machinex/sound/pci/echoaudio/indigoio_dsp.c:	return send_vector(chip, DSP_VC_SET_VMIXER_GAIN);
/root/machinex/sound/pci/echoaudio/indigoio_dsp.c:static int set_vmixer_gain(struct echoaudio *chip, u16 output, u16 pipe,
/root/machinex/sound/pci/echoaudio/indigoio_dsp.c:static int set_vmixer_gain(struct echoaudio *chip, u16 output, u16 pipe,
/root/machinex/sound/pci/echoaudio/indigoiox_dsp.c:static int set_vmixer_gain(struct echoaudio *chip, u16 output,
/root/machinex/sound/pci/echoaudio/indigoiox_dsp.c:			   u16 pipe, int gain);
/root/machinex/sound/pci/echoaudio/layla20.c:#define ECHOCARD_HAS_INPUT_GAIN
/root/machinex/sound/pci/echoaudio/layla20_dsp.c:	chip->comm_page->line_in_level[input] = gain;
/root/machinex/sound/pci/echoaudio/layla20_dsp.c:	chip->input_gain[input] = gain;
/root/machinex/sound/pci/echoaudio/layla20_dsp.c:	gain += GL20_INPUT_GAIN_MAGIC_NUMBER;
/root/machinex/sound/pci/echoaudio/layla20_dsp.c:/* Set input bus gain (one unit is 0.5dB !) */
/root/machinex/sound/pci/echoaudio/layla20_dsp.c:static int set_input_gain(struct echoaudio *chip, u16 input, int gain)
/root/machinex/sound/pci/echoaudio/layla24_dsp.c:		memset(chip->comm_page->monitors, ECHOGAIN_MUTED,
/root/machinex/sound/pci/echoaudio/layla24_dsp.c:			return -EAGAIN;
/root/machinex/sound/pci/echoaudio/layla24_dsp.c:			return -EAGAIN;
/root/machinex/sound/pci/echoaudio/mia.c:#define ECHOCARD_HAS_LINE_OUT_GAIN
/root/machinex/sound/pci/echoaudio/mia_dsp.c:	chip->comm_page->vmixer[index] = gain;
/root/machinex/sound/pci/echoaudio/mia_dsp.c:	chip->vmixer_gain[output][pipe] = gain;
/root/machinex/sound/pci/echoaudio/mia_dsp.c:	DE_ACT(("set_vmixer_gain: pipe %d, out %d = %d\n", pipe, output, gain));
/root/machinex/sound/pci/echoaudio/mia_dsp.c:			   int gain)
/root/machinex/sound/pci/echoaudio/mia_dsp.c:			   int gain);
/root/machinex/sound/pci/echoaudio/mia_dsp.c:	return send_vector(chip, DSP_VC_SET_VMIXER_GAIN);
/root/machinex/sound/pci/echoaudio/mia_dsp.c:static int set_vmixer_gain(struct echoaudio *chip, u16 output, u16 pipe,
/root/machinex/sound/pci/echoaudio/mia_dsp.c:static int set_vmixer_gain(struct echoaudio *chip, u16 output, u16 pipe,
/root/machinex/sound/pci/echoaudio/mona_dsp.c:			return -EAGAIN;
/root/machinex/sound/pci/echoaudio/mona_dsp.c:			return -EAGAIN;
/root/machinex/sound/pci/echoaudio/mona_dsp.c:		return -EAGAIN;
/root/machinex/sound/pci/emu10k1/emu10k1_callback.c:	/* cutoff and volume */
/root/machinex/sound/pci/emu10k1/emu10k1_callback.c:	/* decay/sustain parameter for volume envelope is used
/root/machinex/sound/pci/emu10k1/emu10k1_callback.c:	if (update & SNDRV_EMUX_UPDATE_VOLUME)
/root/machinex/sound/pci/emu10k1/emu10k1_callback.c:	/* lfo1 volume & freq */
/root/machinex/sound/pci/emu10k1/emu10k1_callback.c:	 * NOTE: could also look at volume and pick the quietest one.
/root/machinex/sound/pci/emu10k1/emu10k1_callback.c:	/* reset volume */
/root/machinex/sound/pci/emu10k1/emu10k1_callback.c:	/* set pitch target and pan (volume) */
/root/machinex/sound/pci/emu10k1/emu10k1_main.c: * 8 bit gain/trim values, one for the left channel and one for the
/root/machinex/sound/pci/emu10k1/emu10k1_main.c:	/* After programming, set GPIO bit 4 high again. */
/root/machinex/sound/pci/emu10k1/emu10k1_main.c:#define EC_DEFAULT_ADC_GAIN	0xC4C4
/root/machinex/sound/pci/emu10k1/emu10k1_main.c:	/* Do it again to insure that we meet hold time requirements */
/root/machinex/sound/pci/emu10k1/emu10k1_main.c:			emu->i2c_capture_volume[n][0] = 0xcf;
/root/machinex/sound/pci/emu10k1/emu10k1_main.c:			emu->i2c_capture_volume[n][1] = 0xcf;
/root/machinex/sound/pci/emu10k1/emu10k1_main.c: * @func Set the gain of the ECARD's CS3310 Trim/gain controller.  The
/root/machinex/sound/pci/emu10k1/emu10k1_main.c:		if (gain & bit)
/root/machinex/sound/pci/emu10k1/emu10k1_main.c:	snd_emu10k1_ecard_setadcgain(emu, EC_DEFAULT_ADC_GAIN);
/root/machinex/sound/pci/emu10k1/emu10k1_main.c:	snd_emu10k1_ptr20_write(emu, TINA2_VOLUME, 0, 0xfefefefe); /* Defaults to 0x30303030 */
/root/machinex/sound/pci/emu10k1/emu10k1_main.c:static void snd_emu10k1_ecard_setadcgain(struct snd_emu10k1 *emu,
/root/machinex/sound/pci/emu10k1/emu10k1_main.c:	/* Step 5: Set the analog input gain */
/root/machinex/sound/pci/emu10k1/emu10k1_main.c:					 unsigned short gain)
/root/machinex/sound/pci/emu10k1/emu10k1x.c: * The center/lfe channel has no volume control and cannot be muted during
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(capture+1, gpr+1, A_EXTIN_AC97_R);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(capture+1, gpr+1, A_EXTIN_ADC_R);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(capture+1, gpr+1, A_EXTIN_AUX2_R);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(capture+1, gpr+1, A_EXTIN_LINE2_R);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(capture+1, gpr+1, A_EXTIN_OPT_SPDIF_R);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(capture+1, gpr+1, A_EXTIN_SPDIF_CD_R);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(capture, gpr, A_EXTIN_AC97_L);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(capture, gpr, A_EXTIN_ADC_L);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(capture, gpr, A_EXTIN_AUX2_L);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(capture, gpr, A_EXTIN_LINE2_L);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(capture, gpr, A_EXTIN_OPT_SPDIF_L);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(capture, gpr, A_EXTIN_SPDIF_CD_L);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(stereo_mix+1, gpr+1, A_EXTIN_AC97_R);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(stereo_mix+1, gpr+1, A_EXTIN_ADC_R);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(stereo_mix+1, gpr+1, A_EXTIN_AUX2_R);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(stereo_mix+1, gpr+1, A_EXTIN_LINE2_R);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(stereo_mix+1, gpr+1, A_EXTIN_OPT_SPDIF_R);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(stereo_mix+1, gpr+1, A_EXTIN_SPDIF_CD_R);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(stereo_mix, gpr, A_EXTIN_AC97_L);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(stereo_mix, gpr, A_EXTIN_ADC_L);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(stereo_mix, gpr, A_EXTIN_AUX2_L);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(stereo_mix, gpr, A_EXTIN_LINE2_L);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(stereo_mix, gpr, A_EXTIN_OPT_SPDIF_L);
/root/machinex/sound/pci/emu10k1/emufx.c:	A_ADD_VOLUME_IN(stereo_mix, gpr, A_EXTIN_SPDIF_CD_L);
/root/machinex/sound/pci/emu10k1/emufx.c:/* dB gain = (float) 20 * log10( float(db_table_value) / 0x8000000 ) */
/root/machinex/sound/pci/emu10k1/emufx.c:#define A_ADD_VOLUME_IN(var,vol,input) \
/root/machinex/sound/pci/emu10k1/emufx.c:#define VOLUME_ADD(icode, ptr, dst, src, vol) \
/root/machinex/sound/pci/emu10k1/emufx.c:#define VOLUME_ADDIN(icode, ptr, dst, src, vol) \
/root/machinex/sound/pci/emu10k1/emufx.c:#define VOLUME(icode, ptr, dst, src, vol) \
/root/machinex/sound/pci/emu10k1/emufx.c:#define VOLUME_IN(icode, ptr, dst, src, vol) \
/root/machinex/sound/pci/emu10k1/emufx.c:#define VOLUME_OUT(icode, ptr, dst, src, vol) \
/root/machinex/sound/pci/emu10k1/emufx.c:/* EMU10K1 bass/treble db gain */
/root/machinex/sound/pci/emu10k1/emufx.c:/* EMU10k1/EMU10k2 DSP control db gain */
/root/machinex/sound/pci/emu10k1/emufx.c:	emu->support_tlv = 0; /* clear again */
/root/machinex/sound/pci/emu10k1/emufx.c:	emu->support_tlv = 0; /* clear again */
/root/machinex/sound/pci/emu10k1/emufx.c:	if (high_res_gpr_volume) {
/root/machinex/sound/pci/emu10k1/emufx.c:	if (high_res_gpr_volume) {
/root/machinex/sound/pci/emu10k1/emufx.c:	/* Master volume (will be renamed later) */
/root/machinex/sound/pci/emu10k1/emufx.c:module_param(high_res_gpr_volume, bool, 0444);
/root/machinex/sound/pci/emu10k1/emufx.c:MODULE_PARM_DESC(high_res_gpr_volume, "GPR mixer controls use 31-bit range.");
/root/machinex/sound/pci/emu10k1/emufx.c:		snd_emu10k1_init_stereo_control(controls + i++, SNDRV_CTL_NAME_IEC958("Coaxial ",CAPTURE,VOLUME), gpr, 0);
/root/machinex/sound/pci/emu10k1/emufx.c:		snd_emu10k1_init_stereo_control(controls + i++, SNDRV_CTL_NAME_IEC958("Coaxial ",PLAYBACK,VOLUME), gpr, 0);
/root/machinex/sound/pci/emu10k1/emufx.c:		snd_emu10k1_init_stereo_control(controls + i++, SNDRV_CTL_NAME_IEC958("LiveDrive ",CAPTURE,VOLUME), gpr, 0);
/root/machinex/sound/pci/emu10k1/emufx.c:		snd_emu10k1_init_stereo_control(controls + i++, SNDRV_CTL_NAME_IEC958("LiveDrive ",PLAYBACK,VOLUME), gpr, 0);
/root/machinex/sound/pci/emu10k1/emufx.c:		snd_emu10k1_init_stereo_control(controls + i++, SNDRV_CTL_NAME_IEC958("TTL ",CAPTURE,VOLUME), gpr, 0);
/root/machinex/sound/pci/emu10k1/emufx.c:		snd_emu10k1_init_stereo_control(controls + i++, SNDRV_CTL_NAME_IEC958("TTL ",PLAYBACK,VOLUME), gpr, 0);
/root/machinex/sound/pci/emu10k1/emufx.c:	snd_emu10k1_init_stereo_control(&controls[nctl++], SNDRV_CTL_NAME_IEC958("Optical ",CAPTURE,VOLUME), gpr, 0);
/root/machinex/sound/pci/emu10k1/emufx.c:	snd_emu10k1_init_stereo_control(&controls[nctl++], SNDRV_CTL_NAME_IEC958("Optical ",PLAYBACK,VOLUME), gpr, 0);
/root/machinex/sound/pci/emu10k1/emufx.c:static bool high_res_gpr_volume;
/root/machinex/sound/pci/emu10k1/emufx.c:static const DECLARE_TLV_DB_LINEAR(snd_emu10k1_db_linear, TLV_DB_GAIN_MUTE, 0);
/root/machinex/sound/pci/emu10k1/emufx.c:static void _volume_add(struct snd_emu10k1_fx8010_code *icode, u32 *ptr, u32 dst, u32 src, u32 vol)
/root/machinex/sound/pci/emu10k1/emufx.c:static void _volume_out(struct snd_emu10k1_fx8010_code *icode, u32 *ptr, u32 dst, u32 src, u32 vol)
/root/machinex/sound/pci/emu10k1/emufx.c:static void _volume(struct snd_emu10k1_fx8010_code *icode, u32 *ptr, u32 dst, u32 src, u32 vol)
/root/machinex/sound/pci/emu10k1/emufx.c:			VOLUME_ADD(icode, &ptr, capture + z, tmp + 0, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:			VOLUME_ADD(icode, &ptr, capture + z, tmp + 0, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:			VOLUME_ADD(icode, &ptr, capture + z, tmp + 0, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:			VOLUME_ADD(icode, &ptr, capture + z, tmp + 0, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:			VOLUME_ADD(icode, &ptr, capture + z, tmp + 0, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:			VOLUME_ADD(icode, &ptr, capture + z, tmp + 0, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:		VOLUME_ADD(icode, &ptr, capture + z, tmp + 0, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:		VOLUME_ADD(icode, &ptr, capture + z, tmp + 0, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:		VOLUME_ADD(icode, &ptr, capture + z, tmp + 0, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:		_volume_add(icode, ptr, GPR(dst), EXTIN(src), GPR(vol))
/root/machinex/sound/pci/emu10k1/emufx.c:		_volume_add(icode, ptr, GPR(dst), GPR(src), GPR(vol))
/root/machinex/sound/pci/emu10k1/emufx.c:		VOLUME_ADD(icode, &ptr, playback + 2 + z, 4 + z, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:	VOLUME_ADD(icode, &ptr, playback + 4, 6, gpr);
/root/machinex/sound/pci/emu10k1/emufx.c:	VOLUME_ADD(icode, &ptr, playback + 5, 7, gpr);
/root/machinex/sound/pci/emu10k1/emufx.c:		VOLUME_ADD(icode, &ptr, playback + z, 10 + z, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:		VOLUME_ADD(icode, &ptr, playback + z, 2 + z, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:		VOLUME_ADDIN(icode, &ptr, capture + 0, EXTIN_AC97_L, gpr); gpr++;
/root/machinex/sound/pci/emu10k1/emufx.c:		VOLUME_ADDIN(icode, &ptr, capture + 1, EXTIN_AC97_R, gpr); gpr++;
/root/machinex/sound/pci/emu10k1/emufx.c:		VOLUME_ADDIN(icode, &ptr, playback + 0, EXTIN_AC97_L, gpr); gpr++;
/root/machinex/sound/pci/emu10k1/emufx.c:		VOLUME_ADDIN(icode, &ptr, playback + 1, EXTIN_AC97_R, gpr); gpr++;
/root/machinex/sound/pci/emu10k1/emufx.c:			VOLUME_ADDIN(icode, &ptr, playback + z, EXTIN_COAX_SPDIF_L + z, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:			VOLUME_ADDIN(icode, &ptr, playback + z, EXTIN_LINE1_L + z, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:			VOLUME_ADDIN(icode, &ptr, playback + z, EXTIN_LINE2_L + z, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:			VOLUME_ADDIN(icode, &ptr, playback + z, EXTIN_SPDIF_CD_L + z, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:			VOLUME_ADDIN(icode, &ptr, playback + z, EXTIN_TOSLINK_L + z, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:			VOLUME_ADDIN(icode, &ptr, playback + z, EXTIN_ZOOM_L + z, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:		VOLUME(icode, &ptr, capture + z, tmp + 0, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:		_volume(icode, ptr, GPR(dst), EXTIN(src), GPR(vol))
/root/machinex/sound/pci/emu10k1/emufx.c:		_volume(icode, ptr, GPR(dst), GPR(src), GPR(vol))
/root/machinex/sound/pci/emu10k1/emufx.c:		VOLUME(icode, &ptr, playback + 2 + z, z, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:	VOLUME(icode, &ptr, playback + 4, tmp + 0, gpr);
/root/machinex/sound/pci/emu10k1/emufx.c:	VOLUME(icode, &ptr, playback + 5, tmp + 0, gpr);
/root/machinex/sound/pci/emu10k1/emufx.c:		VOLUME(icode, &ptr, playback + z, z, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:		_volume_out(icode, ptr, EXTOUT(dst), GPR(src), GPR(vol))
/root/machinex/sound/pci/emu10k1/emufx.c:			VOLUME_OUT(icode, &ptr, EXTOUT_HEADPHONE_L + z, tmp + 0, gpr + z);
/root/machinex/sound/pci/emu10k1/emufx.c:/* when volume = max, then copy only to avoid volume modification */
/root/machinex/sound/pci/emu10k1/emumixer.c:#define I2C_VOLUME(xname,chid) \
/root/machinex/sound/pci/emu10k1/emumixer.c:	/*        emu->i2c_capture_volume */
/root/machinex/sound/pci/emu10k1/emumixer.c:		emu->i2c_capture_volume[source_id][0] = ngain;
/root/machinex/sound/pci/emu10k1/emumixer.c:		emu->i2c_capture_volume[source_id][1] = ngain;
/root/machinex/sound/pci/emu10k1/emumixer.c:			err = snd_ctl_add(card, snd_ctl_new1(&snd_audigy_i2c_volume_ctls[i], emu));
/root/machinex/sound/pci/emu10k1/emumixer.c:		for (i = 0; i < ARRAY_SIZE(snd_audigy_i2c_volume_ctls); i++) {
/root/machinex/sound/pci/emu10k1/emumixer.c:	.get =   snd_audigy_i2c_volume_get,			\
/root/machinex/sound/pci/emu10k1/emumixer.c:	.get =          snd_emu10k1_efx_send_volume_get,
/root/machinex/sound/pci/emu10k1/emumixer.c:	.get =          snd_emu10k1_send_volume_get,
/root/machinex/sound/pci/emu10k1/emumixer.c:	I2C_VOLUME("Line Capture Volume", 0)
/root/machinex/sound/pci/emu10k1/emumixer.c:	I2C_VOLUME("Mic Capture Volume", 0),
/root/machinex/sound/pci/emu10k1/emumixer.c:	if ((kctl = emu->ctl_efx_send_volume = snd_ctl_new1(&snd_emu10k1_efx_send_volume_control, emu)) == NULL)
/root/machinex/sound/pci/emu10k1/emumixer.c:	if ((kctl = emu->ctl_send_volume = snd_ctl_new1(&snd_emu10k1_send_volume_control, emu)) == NULL)
/root/machinex/sound/pci/emu10k1/emumixer.c:		if (mix->send_volume[0][idx] != val) {
/root/machinex/sound/pci/emu10k1/emumixer.c:		if (mix->send_volume[idx/num_efx][idx%num_efx] != val) {
/root/machinex/sound/pci/emu10k1/emumixer.c:	if (ngain > 0xff)
/root/machinex/sound/pci/emu10k1/emumixer.c:	if (ngain > 0xff)
/root/machinex/sound/pci/emu10k1/emumixer.c:		if (ngain != ogain)
/root/machinex/sound/pci/emu10k1/emumixer.c:		if (ngain != ogain)
/root/machinex/sound/pci/emu10k1/emumixer.c:	if (ogain != ngain) {
/root/machinex/sound/pci/emu10k1/emumixer.c:	if (ogain != ngain) {
/root/machinex/sound/pci/emu10k1/emumixer.c:	.info =  snd_audigy_i2c_volume_info,			\
/root/machinex/sound/pci/emu10k1/emumixer.c:	.info =         snd_emu10k1_efx_send_volume_info,
/root/machinex/sound/pci/emu10k1/emumixer.c:	.info =         snd_emu10k1_send_volume_info,
/root/machinex/sound/pci/emu10k1/emumixer.c:	/* initialize the routing and volume table for each pcm playback stream */
/root/machinex/sound/pci/emu10k1/emumixer.c:	/* initialize the routing and volume table for the multichannel playback stream */
/root/machinex/sound/pci/emu10k1/emumixer.c:	/* Limit: emu->i2c_capture_volume */
/root/machinex/sound/pci/emu10k1/emumixer.c:	/* Limit: emu->i2c_capture_volume */
/root/machinex/sound/pci/emu10k1/emumixer.c:		memset(&mix->send_volume, 0, sizeof(mix->send_volume));
/root/machinex/sound/pci/emu10k1/emumixer.c:		memset(&mix->send_volume, 0, sizeof(mix->send_volume));
/root/machinex/sound/pci/emu10k1/emumixer.c:						   &mix->send_volume[0][0]);
/root/machinex/sound/pci/emu10k1/emumixer.c:						   &mix->send_volume[0][0]);
/root/machinex/sound/pci/emu10k1/emumixer.c:		mix->send_volume[0][0]  = 255;
/root/machinex/sound/pci/emu10k1/emumixer.c:		mix->send_volume[0][0] = mix->send_volume[0][1] =
/root/machinex/sound/pci/emu10k1/emumixer.c:			mix->send_volume[0][idx] = val;
/root/machinex/sound/pci/emu10k1/emumixer.c:						   &mix->send_volume[1][0]);
/root/machinex/sound/pci/emu10k1/emumixer.c:		mix->send_volume[1][0] = mix->send_volume[2][1] = 255;
/root/machinex/sound/pci/emu10k1/emumixer.c:						   &mix->send_volume[2][0]);
/root/machinex/sound/pci/emu10k1/emumixer.c:			mix->send_volume[idx/num_efx][idx%num_efx] = val;
/root/machinex/sound/pci/emu10k1/emumixer.c:		ngain = emu->i2c_capture_volume[source_id][0]; /* Left */
/root/machinex/sound/pci/emu10k1/emumixer.c:		ngain = emu->i2c_capture_volume[source_id][1]; /* Right */
/root/machinex/sound/pci/emu10k1/emumixer.c:	ngain = ucontrol->value.integer.value[0];
/root/machinex/sound/pci/emu10k1/emumixer.c:	ngain = ucontrol->value.integer.value[1];
/root/machinex/sound/pci/emu10k1/emumixer.c:		ogain = emu->i2c_capture_volume[emu->i2c_capture_source][0]; /* Left */
/root/machinex/sound/pci/emu10k1/emumixer.c:		ogain = emu->i2c_capture_volume[emu->i2c_capture_source][1]; /* Right */
/root/machinex/sound/pci/emu10k1/emumixer.c:	ogain = emu->i2c_capture_volume[source_id][0]; /* Left */
/root/machinex/sound/pci/emu10k1/emumixer.c:	ogain = emu->i2c_capture_volume[source_id][1]; /* Right */
/root/machinex/sound/pci/emu10k1/emumixer.c:	.put =   snd_audigy_i2c_volume_put,			\
/root/machinex/sound/pci/emu10k1/emumixer.c:	.put =          snd_emu10k1_efx_send_volume_put
/root/machinex/sound/pci/emu10k1/emumixer.c:	.put =          snd_emu10k1_send_volume_put
/root/machinex/sound/pci/emu10k1/emumixer.c:	return snd_ac97_update(emu->ac97, AC97_REC_GAIN, val);
/root/machinex/sound/pci/emu10k1/emumixer.c:			/* set master volume to 0 dB */
/root/machinex/sound/pci/emu10k1/emumixer.c:			snd_emu10k1_i2c_write(emu, ADC_ATTEN_ADCL, ((ngain) & 0xff));
/root/machinex/sound/pci/emu10k1/emumixer.c:			snd_emu10k1_i2c_write(emu, ADC_ATTEN_ADCL, ((ngain) & 0xff) );
/root/machinex/sound/pci/emu10k1/emumixer.c:			snd_emu10k1_i2c_write(emu, ADC_ATTEN_ADCR, ((ngain) & 0xff));
/root/machinex/sound/pci/emu10k1/emumixer.c:			snd_emu10k1_i2c_write(emu, ADC_ATTEN_ADCR, ((ngain) & 0xff));
/root/machinex/sound/pci/emu10k1/emumixer.c:	snd_emu10k1_ptr_write(emu, DSL_FXSENDAMOUNT_D, voice, volume[3]);
/root/machinex/sound/pci/emu10k1/emumixer.c:	snd_emu10k1_ptr_write(emu, PSST_FXSENDAMOUNT_C, voice, volume[2]);
/root/machinex/sound/pci/emu10k1/emumixer.c:	snd_emu10k1_ptr_write(emu, PTRX_FXSENDAMOUNT_A, voice, volume[0]);
/root/machinex/sound/pci/emu10k1/emumixer.c:	snd_emu10k1_ptr_write(emu, PTRX_FXSENDAMOUNT_B, voice, volume[1]);
/root/machinex/sound/pci/emu10k1/emumixer.c:			snd_emu10k1_ptr_write(emu, VTFT_VOLUMETARGET, mix->epcm->voices[0]->number, mix->attn[0]);
/root/machinex/sound/pci/emu10k1/emumixer.c:			snd_emu10k1_ptr_write(emu, VTFT_VOLUMETARGET, mix->epcm->voices[0]->number, mix->attn[1]);
/root/machinex/sound/pci/emu10k1/emumixer.c:			snd_emu10k1_ptr_write(emu, VTFT_VOLUMETARGET, mix->epcm->voices[1]->number, mix->attn[2]);
/root/machinex/sound/pci/emu10k1/emumixer.c:			snd_emu10k1_ptr_write(emu, VTFT_VOLUMETARGET, mix->epcm->voices[ch]->number, mix->attn[0]);
/root/machinex/sound/pci/emu10k1/emumixer.c:static const DECLARE_TLV_DB_SCALE(snd_audigy_db_scale2, -10350, 50, 1); /* WM8775 gain scale */
/root/machinex/sound/pci/emu10k1/emumixer.c:static int snd_audigy_i2c_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/emu10k1/emumixer.c:static int snd_audigy_i2c_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/emu10k1/emumixer.c:static int snd_audigy_i2c_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/emu10k1/emumixer.c:static int snd_emu10k1_efx_send_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/emu10k1/emumixer.c:static int snd_emu10k1_efx_send_volume_info(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_info *uinfo)
/root/machinex/sound/pci/emu10k1/emumixer.c:static int snd_emu10k1_efx_send_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/emu10k1/emumixer.c:static int snd_emu10k1_send_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/emu10k1/emumixer.c:static int snd_emu10k1_send_volume_info(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_info *uinfo)
/root/machinex/sound/pci/emu10k1/emumixer.c:static int snd_emu10k1_send_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/emu10k1/emumixer.c:static struct snd_kcontrol_new snd_audigy_i2c_volume_ctls[] = {
/root/machinex/sound/pci/emu10k1/emumixer.c:static struct snd_kcontrol_new snd_emu10k1_efx_send_volume_control =
/root/machinex/sound/pci/emu10k1/emumixer.c:static struct snd_kcontrol_new snd_emu10k1_send_volume_control =
/root/machinex/sound/pci/emu10k1/emumixer.c:static void update_emu10k1_send_volume(struct snd_emu10k1 *emu, int voice, unsigned char *volume)
/root/machinex/sound/pci/emu10k1/emumixer.c:	ucontrol->value.integer.value[0] = emu->i2c_capture_volume[source_id][0];
/root/machinex/sound/pci/emu10k1/emumixer.c:	ucontrol->value.integer.value[1] = emu->i2c_capture_volume[source_id][1];
/root/machinex/sound/pci/emu10k1/emumixer.c:		ucontrol->value.integer.value[idx] = mix->send_volume[0][idx];
/root/machinex/sound/pci/emu10k1/emumixer.c:		ucontrol->value.integer.value[idx] = mix->send_volume[idx/num_efx][idx%num_efx];
/root/machinex/sound/pci/emu10k1/emumixer.c:	unsigned int ngain;
/root/machinex/sound/pci/emu10k1/emumixer.c:	unsigned int ngain, ogain;
/root/machinex/sound/pci/emu10k1/emumixer.c:	unsigned int ogain;
/root/machinex/sound/pci/emu10k1/emumixer.c:		unsigned int val = ((unsigned int)volume[4] << 24) |
/root/machinex/sound/pci/emu10k1/emumixer.c:			((unsigned int)volume[5] << 16) |
/root/machinex/sound/pci/emu10k1/emumixer.c:			((unsigned int)volume[6] << 8) |
/root/machinex/sound/pci/emu10k1/emumixer.c:			(unsigned int)volume[7];
/root/machinex/sound/pci/emu10k1/emumixer.c:			update_emu10k1_send_volume(emu, mix->epcm->voices[0]->number,
/root/machinex/sound/pci/emu10k1/emumixer.c:			update_emu10k1_send_volume(emu, mix->epcm->voices[0]->number,
/root/machinex/sound/pci/emu10k1/emumixer.c:			update_emu10k1_send_volume(emu, mix->epcm->voices[1]->number,
/root/machinex/sound/pci/emu10k1/emumixer.c:			update_emu10k1_send_volume(emu, mix->epcm->voices[ch]->number,
/root/machinex/sound/pci/emu10k1/emumixer.c:	 * update the capture volume from the cached value
/root/machinex/sound/pci/emu10k1/emumixer.c:	val = snd_ac97_read(emu->ac97, AC97_REC_GAIN);
/root/machinex/sound/pci/emu10k1/emumixer.c:/* workaround for too low volume on Audigy due to 16bit/24bit conversion */
/root/machinex/sound/pci/emu10k1/emupcm.c:		memcpy(send_amount, &mix->send_volume[tmp][0], 8);
/root/machinex/sound/pci/emu10k1/emupcm.c:		memset(&mix->send_volume, 0, sizeof(mix->send_volume));
/root/machinex/sound/pci/emu10k1/emupcm.c:	memset(&mix->send_volume, 0, sizeof(mix->send_volume));
/root/machinex/sound/pci/emu10k1/emupcm.c:		mix->send_volume[0][0] = 255;
/root/machinex/sound/pci/emu10k1/emupcm.c:	mix->send_volume[0][0] = mix->send_volume[0][1] =
/root/machinex/sound/pci/emu10k1/emupcm.c:	mix->send_volume[1][0] = mix->send_volume[2][1] = 255;
/root/machinex/sound/pci/emu10k1/emupcm.c:	snd_emu10k1_pcm_mixer_notify1(emu, emu->ctl_efx_send_volume, idx, activate);
/root/machinex/sound/pci/emu10k1/emupcm.c:	snd_emu10k1_pcm_mixer_notify1(emu, emu->ctl_send_volume, idx, activate);
/root/machinex/sound/pci/emu10k1/emupcm.c:	/* volume envelope */
/root/machinex/sound/pci/emu10k1/emupcm.c:	/* volume parameters */
/root/machinex/sound/pci/emu10k1/io.c:	/* This function is not re-entrant, so protect against it. */
/root/machinex/sound/pci/emu10k1/io.c:	/* This function is not re-entrant, so protect against it. */
/root/machinex/sound/pci/emu10k1/p16v.c: *    Add Analog volume controls.
/root/machinex/sound/pci/emu10k1/p16v.c:	.get = snd_p16v_volume_get, \
/root/machinex/sound/pci/emu10k1/p16v.c:	.info = snd_p16v_volume_info, \
/root/machinex/sound/pci/emu10k1/p16v.c:	P16V_VOL("HD Analog Center/LFE Playback Volume", PLAYBACK_VOLUME_MIXER9, 1),
/root/machinex/sound/pci/emu10k1/p16v.c:	P16V_VOL("HD Analog Front Playback Volume", PLAYBACK_VOLUME_MIXER9, 0),
/root/machinex/sound/pci/emu10k1/p16v.c:	P16V_VOL("HD Analog Rear Playback Volume", PLAYBACK_VOLUME_MIXER10, 1),
/root/machinex/sound/pci/emu10k1/p16v.c:	P16V_VOL("HD Analog Side Playback Volume", PLAYBACK_VOLUME_MIXER10, 0),
/root/machinex/sound/pci/emu10k1/p16v.c:	P16V_VOL("HD SPDIF Center/LFE Playback Volume", PLAYBACK_VOLUME_MIXER7, 1),
/root/machinex/sound/pci/emu10k1/p16v.c:	P16V_VOL("HD SPDIF Front Playback Volume", PLAYBACK_VOLUME_MIXER7, 0),
/root/machinex/sound/pci/emu10k1/p16v.c:	P16V_VOL("HD SPDIF Rear Playback Volume", PLAYBACK_VOLUME_MIXER8, 1),
/root/machinex/sound/pci/emu10k1/p16v.c:	P16V_VOL("HD SPDIF Side Playback Volume", PLAYBACK_VOLUME_MIXER8, 0),
/root/machinex/sound/pci/emu10k1/p16v.c:	.put = snd_p16v_volume_put, \
/root/machinex/sound/pci/emu10k1/p16v.c:static int snd_p16v_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/emu10k1/p16v.c:static int snd_p16v_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/emu10k1/p16v.c:static int snd_p16v_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/emu10k1/p16v.h: *    Add Analog volume controls.
/root/machinex/sound/pci/emu10k1/p16v.h:#define CAPTURE_P16V_VOLUME1	0x14		/* Low: Capture volume 0xXXXX3030 */
/root/machinex/sound/pci/emu10k1/p16v.h:#define CAPTURE_P16V_VOLUME2	0x15		/* High:Has no effect on capture volume */
/root/machinex/sound/pci/emu10k1/p16v.h:#define PLAYBACK_VOLUME_MIXER10  0x6a		/* P16V High to SRCMULTI I2S mixer input volume control. */
/root/machinex/sound/pci/emu10k1/p16v.h:#define PLAYBACK_VOLUME_MIXER1  0x61		/* SRC48 Low to mixer input volume control. */
/root/machinex/sound/pci/emu10k1/p16v.h:#define PLAYBACK_VOLUME_MIXER11  0x6b		/* E10K2 Low to SRC48 mixer input volume control. */
/root/machinex/sound/pci/emu10k1/p16v.h:#define PLAYBACK_VOLUME_MIXER12 0x6c		/* E10K2 High to SRC48 mixer input volume control. */
/root/machinex/sound/pci/emu10k1/p16v.h:#define PLAYBACK_VOLUME_MIXER2  0x62		/* SRC48 High to mixer input volume control. */
/root/machinex/sound/pci/emu10k1/p16v.h:#define PLAYBACK_VOLUME_MIXER3  0x63		/* SRCMULTI SPDIF Low to mixer input volume control. */
/root/machinex/sound/pci/emu10k1/p16v.h:#define PLAYBACK_VOLUME_MIXER4  0x64		/* SRCMULTI SPDIF High to mixer input volume control. */
/root/machinex/sound/pci/emu10k1/p16v.h:#define PLAYBACK_VOLUME_MIXER5  0x65		/* SRCMULTI I2S Low to mixer input volume control. */
/root/machinex/sound/pci/emu10k1/p16v.h:#define PLAYBACK_VOLUME_MIXER6  0x66		/* SRCMULTI I2S High to mixer input volume control. */
/root/machinex/sound/pci/emu10k1/p16v.h:#define PLAYBACK_VOLUME_MIXER7  0x67		/* P16V Low to SRCMULTI SPDIF mixer input volume control. */
/root/machinex/sound/pci/emu10k1/p16v.h:#define PLAYBACK_VOLUME_MIXER8  0x68		/* P16V High to SRCMULTI SPDIF mixer input volume control. */
/root/machinex/sound/pci/emu10k1/p16v.h:#define PLAYBACK_VOLUME_MIXER9  0x69		/* P16V Low to SRCMULTI I2S mixer input volume control. */
/root/machinex/sound/pci/emu10k1/p17v.h:#define ADC_GAIN_MASK		0x000000ff	//Mask for ADC Gain
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_AC97_OUT_MASTER_VOL_H	0x81	/* AC97 Output master volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_AC97_OUT_MASTER_VOL_L	0x80	/* AC97 Output master volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_CAPTURE_VOL_H	0x4c	/* P17v capture volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_CAPTURE_VOL_L	0x4d	/* P17v capture volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_I2S_OUT_MASTER_VOL_H	0x85	/* I2S Output master volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_I2S_OUT_MASTER_VOL_L	0x84	/* I2S Output master volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_AC97_10K1_VOL_H	0x62	/* 10K to Mixer_AC97 input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_AC97_10K1_VOL_L	0x61	/* 10K to Mixer_AC97 input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_AC97_P17V_VOL_H	0x64	/* P17V to Mixer_AC97 input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_AC97_P17V_VOL_L	0x63	/* P17V to Mixer_AC97 input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_AC97_SRP_REC_VOL_H	0x66	/* SRP Record to Mixer_AC97 input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_AC97_SRP_REC_VOL_L	0x65	/* SRP Record to Mixer_AC97 input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_I2S_10K1_VOL_H	0x72	/* 10K to Mixer_I2S input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_I2S_10K1_VOL_L	0x71	/* 10K to Mixer_I2S input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_I2S_P17V_VOL_H	0x74	/* P17V to Mixer_I2S input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_I2S_P17V_VOL_L	0x73	/* P17V to Mixer_I2S input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_I2S_SRP_REC_VOL_H	0x76	/* SRP Record to Mixer_I2S input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_I2S_SRP_REC_VOL_L	0x75	/* SRP Record to Mixer_I2S input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_Spdif_10K1_VOL_H	0x6A	/* 10K to Mixer_Spdif input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_Spdif_10K1_VOL_L	0x69	/* 10K to Mixer_Spdif input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_Spdif_P17V_VOL_H	0x6C	/* P17V to Mixer_Spdif input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_Spdif_P17V_VOL_L	0x6B	/* P17V to Mixer_Spdif input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_Spdif_SRP_REC_VOL_H	0x6E	/* SRP Record to Mixer_Spdif input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_MIXER_Spdif_SRP_REC_VOL_L	0x6D	/* SRP Record to Mixer_Spdif input volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_SPDIF_OUT_MASTER_VOL_H	0x83	/* SPDIF Output master volume control */
/root/machinex/sound/pci/emu10k1/p17v.h:#define P17V_SPDIF_OUT_MASTER_VOL_L	0x82	/* SPDIF Output master volume control */
/root/machinex/sound/pci/emu10k1/tina2.h:#define TINA2_VOLUME	0x71	/* Attenuate playback volume to prevent distortion. */
/root/machinex/sound/pci/ens1370.c:      __again:
/root/machinex/sound/pci/ens1370.c:			goto __again;
/root/machinex/sound/pci/ens1370.c:			/* wait for WIP again */
/root/machinex/sound/pci/es1938.c:				chip->hw_volume = kctl;
/root/machinex/sound/pci/es1938.c:	chip->hw_volume = NULL;
/root/machinex/sound/pci/es1938.c:				       &chip->master_volume->id);
/root/machinex/sound/pci/es1938.c:				chip->master_volume = kctl;
/root/machinex/sound/pci/es1938.c:	chip->master_volume = NULL;
/root/machinex/sound/pci/es1938.c:	/* enable Audio 1, Audio 2, MPU401 IRQ and HW volume IRQ*/
/root/machinex/sound/pci/es1938.c:	.get = snd_es1938_get_hw_volume,
/root/machinex/sound/pci/es1938.c:	/* Hardware volume */
/root/machinex/sound/pci/es1938.c:	.info = snd_es1938_info_hw_volume,
/root/machinex/sound/pci/es1938.c:			return -EAGAIN;
/root/machinex/sound/pci/es1938.c:		return -EAGAIN;
/root/machinex/sound/pci/es1938.c:		snd_ctl_notify(chip->card, SNDRV_CTL_EVENT_MASK_VALUE, &chip->hw_volume->id);
/root/machinex/sound/pci/es1938.c:static int snd_es1938_get_hw_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/es1938.c:static int snd_es1938_info_hw_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/es1938.c:	struct snd_kcontrol *hw_volume;
/root/machinex/sound/pci/es1938.c:	struct snd_kcontrol *master_volume;
/root/machinex/sound/pci/es1968.c:	/* attach master switch / volumes for h/w volume control */
/root/machinex/sound/pci/es1968.c:			       &chip->master_volume->id);
/root/machinex/sound/pci/es1968.c:	chip->master_volume = snd_ctl_find_id(chip->card, &elem_id);
/root/machinex/sound/pci/es1968.c:		/* counters decreased by 1 -> volume down */
/root/machinex/sound/pci/es1968.c:		/* counters increased by 1 -> volume up */
/root/machinex/sound/pci/es1968.c:#define ESM_APU_EFFECT_GAIN_MASK	(0xff << 0)
/root/machinex/sound/pci/es1968.c:#define ESM_APU_EFFECT_GAIN_SHIFT	0
/root/machinex/sound/pci/es1968.c:#define ESM_HIRQ_HW_VOLUME	0x0040
/root/machinex/sound/pci/es1968.c:	/* Figure out which volume control button was pushed,
/root/machinex/sound/pci/es1968.c:	if (! chip->master_switch || ! chip->master_volume)
/root/machinex/sound/pci/es1968.c:	INIT_WORK(&chip->hwvol_work, es1968_update_hw_volume);
/root/machinex/sound/pci/es1968.c:	/* Reset the volume control registers. */
/root/machinex/sound/pci/es1968.c:	__set_bit(KEY_VOLUMEDOWN, input_dev->keybit);
/root/machinex/sound/pci/es1968.c:	__set_bit(KEY_VOLUMEUP, input_dev->keybit);
/root/machinex/sound/pci/es1968.c:	/* Set hardware volume control registers to midpoints.
/root/machinex/sound/pci/es1968.c:	/* start timer again */
/root/machinex/sound/pci/es1968.c:static void es1968_update_hw_volume(struct work_struct *work)
/root/machinex/sound/pci/es1968.c:	struct snd_kcontrol *master_switch; /* for h/w volume control */
/root/machinex/sound/pci/es1968.c:	struct snd_kcontrol *master_volume;
/root/machinex/sound/pci/es1968.c:/* The hardware volume works by incrementing / decrementing 2 counters
/root/machinex/sound/pci/es1968.c:	   then set most of the playback volume control registers to max. */
/root/machinex/sound/pci/es1968.c:		val = KEY_VOLUMEDOWN;
/root/machinex/sound/pci/es1968.c:		val = KEY_VOLUMEUP;
/root/machinex/sound/pci/es1968.c:		/* volume down */
/root/machinex/sound/pci/es1968.c:		/* volume up */
/root/machinex/sound/pci/es1968.c:	w&=~(1<<11);	/* Turn on 978 mixer volume control. */
/root/machinex/sound/pci/es1968.c:	w|=1<<3;	/* Turn on 978 hardware volume control. */
/root/machinex/sound/pci/es1968.c:	w = ESM_HIRQ_DSIE | ESM_HIRQ_HW_VOLUME;
/root/machinex/sound/pci/es1968.c:   (without wrap around) in response to volume button presses and then
/root/machinex/sound/pci/fm801.c:#define FM801_IRQ_VOLUME	(1<<14)
/root/machinex/sound/pci/fm801.c:#define FM801_VOLUME		0x26	/* Volume Up/Down/Mute Status */
/root/machinex/sound/pci/fm801.c:	FM801_CODEC_CTRL, FM801_I2S_MODE, FM801_VOLUME, FM801_GEN_CTRL,
/root/machinex/sound/pci/fm801.c:	if (status & FM801_IRQ_VOLUME)
/root/machinex/sound/pci/fm801.c:	/* init volume */
/root/machinex/sound/pci/fm801.c:	status &= FM801_IRQ_PLAYBACK|FM801_IRQ_CAPTURE|FM801_IRQ_MPU|FM801_IRQ_VOLUME;
/root/machinex/sound/pci/hda/hda_codec.c:				 AC_VERB_GET_AMP_GAIN_MUTE, parm);
/root/machinex/sound/pci/hda/hda_codec.c: again:
/root/machinex/sound/pci/hda/hda_codec.c: again:
/root/machinex/sound/pci/hda/hda_codec.c: again:
/root/machinex/sound/pci/hda/hda_codec.c:	/* allow device access again */
/root/machinex/sound/pci/hda/hda_codec.c: * bind multiple volumes (# indices, from 0)
/root/machinex/sound/pci/hda/hda_codec.c: * bound volume controls
/root/machinex/sound/pci/hda/hda_codec.c:EXPORT_SYMBOL_HDA(snd_hda_mixer_amp_volume_get);
/root/machinex/sound/pci/hda/hda_codec.c:EXPORT_SYMBOL_HDA(snd_hda_mixer_amp_volume_info);
/root/machinex/sound/pci/hda/hda_codec.c:EXPORT_SYMBOL_HDA(snd_hda_mixer_amp_volume_put);
/root/machinex/sound/pci/hda/hda_codec.c:	.get = snd_hda_mixer_amp_volume_get,
/root/machinex/sound/pci/hda/hda_codec.c:		goto again;
/root/machinex/sound/pci/hda/hda_codec.c:		goto again;
/root/machinex/sound/pci/hda/hda_codec.c:	goto again;
/root/machinex/sound/pci/hda/hda_codec.c:	.info = snd_hda_mixer_amp_volume_info,
/root/machinex/sound/pci/hda/hda_codec.c:/* initialize the slave volume with 0dB */
/root/machinex/sound/pci/hda/hda_codec.c:	/* init with master mute & zero volume */
/root/machinex/sound/pci/hda/hda_codec.c:int snd_hda_mixer_amp_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/hda/hda_codec.c:int snd_hda_mixer_amp_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/hda/hda_codec.c:int snd_hda_mixer_amp_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/hda/hda_codec.c:	.put = snd_hda_mixer_amp_volume_put,
/root/machinex/sound/pci/hda/hda_codec.c:		/* read again, hopefully the access method was corrected
/root/machinex/sound/pci/hda/hda_codec.c: * Read AMP value.  The volume is between 0 to 0x7f, 0x80 = mute bit.
/root/machinex/sound/pci/hda/hda_codec.c: * read the current volume to info
/root/machinex/sound/pci/hda/hda_codec.c:	return -EAGAIN;
/root/machinex/sound/pci/hda/hda_codec.c: * Set (static) TLV data for a virtual master volume using the AMP caps
/root/machinex/sound/pci/hda/hda_codec.c:	snd_hda_codec_write(codec, nid, 0, AC_VERB_SET_AMP_GAIN_MUTE, parm);
/root/machinex/sound/pci/hda/hda_codec.c: * snd_hda_mixer_amp_volume_get - Get callback for a standard AMP mixer volume
/root/machinex/sound/pci/hda/hda_codec.c: * snd_hda_mixer_amp_volume_info - Info callback for a standard AMP mixer
/root/machinex/sound/pci/hda/hda_codec.c: * snd_hda_mixer_amp_volume_put - Put callback for a standard AMP mixer volume
/root/machinex/sound/pci/hda/hda_codec.c: * snd_hda_mixer_amp_volume_put - TLV callback for a standard AMP mixer volume
/root/machinex/sound/pci/hda/hda_codec.c: * snd_hda_mixer_bind_switch_get - Get callback for a bound volume control
/root/machinex/sound/pci/hda/hda_codec.c: * snd_hda_mixer_bind_switch_put - Put callback for a bound volume control
/root/machinex/sound/pci/hda/hda_codec.c: * The volume range is recalculated as if the max volume is 0dB.
/root/machinex/sound/pci/hda/hda_codec.c:	/* turn on again (if needed) */
/root/machinex/sound/pci/hda/hda_codec.c: * When cap bits have been already read, this doesn't read again but
/root/machinex/sound/pci/hda/hda_codec.c: * When cap bits have been already read, this doesn't read again but
/root/machinex/sound/pci/hda/hda_codec.c: * write the current volume in info to the h/w and update the cache
/root/machinex/sound/pci/hda/hda_codec.h:/* Amp gain/mute */
/root/machinex/sound/pci/hda/hda_codec.h:#define AC_AMPCAP_MIN_MUTE		(1 << 30) /* min-volume = mute */
/root/machinex/sound/pci/hda/hda_codec.h:#define AC_AMP_GAIN			(0x7f)
/root/machinex/sound/pci/hda/hda_codec.h:#define AC_VERB_GET_AMP_GAIN_MUTE		0x0b00
/root/machinex/sound/pci/hda/hda_codec.h:#define AC_VERB_GET_VOLUME_KNOB_CONTROL		0x0f0f
/root/machinex/sound/pci/hda/hda_codec.h:#define AC_VERB_SET_AMP_GAIN_MUTE		0x300
/root/machinex/sound/pci/hda/hda_codec.h:#define AC_VERB_SET_VOLUME_KNOB_CONTROL		0x70f
/root/machinex/sound/pci/hda/hda_codec.h:	u16 vol[2];		/* current volume & mute */
/root/machinex/sound/pci/hda/hda_generic.c:	/* create capture volume and switch controls if the ADC has an amp */
/root/machinex/sound/pci/hda/hda_generic.c:/* create capture volume/switch */
/root/machinex/sound/pci/hda/hda_generic.c:			HDA_CODEC_VOLUME(name, adc_node->nid,
/root/machinex/sound/pci/hda/hda_generic.c:		knew = (struct snd_kcontrol_new)HDA_CODEC_VOLUME(name, node->nid, 0, HDA_OUTPUT);
/root/machinex/sound/pci/hda/hda_generic.c:		knew = (struct snd_kcontrol_new)HDA_CODEC_VOLUME(name, node->nid, index, HDA_INPUT);
/root/machinex/sound/pci/hda/hda_generic.c:	/* no volume control? */
/root/machinex/sound/pci/hda/hda_generic.c:	struct hda_gnode *cap_vol_node;	/* Node for capture volume */
/root/machinex/sound/pci/hda/hda_generic.c:	struct hda_gnode *node;	/* Node for PCM volume */
/root/machinex/sound/pci/hda/hda_generic.c:	struct pcm_vol pcm_vol[MAX_PCM_VOLS];	/* PCM volumes */
/root/machinex/sound/pci/hda/hda_generic.c:	unsigned int index;	/* connection of PCM volume */
/root/machinex/sound/pci/hda/hda_generic.c:	unsigned int pcm_vol_nodes;	/* number of PCM volumes */
/root/machinex/sound/pci/hda/hda_intel.c: again:
/root/machinex/sound/pci/hda/hda_intel.c:		goto again;
/root/machinex/sound/pci/hda/hda_intel.c:		goto again;
/root/machinex/sound/pci/hda/hda_intel.c:		goto again;
/root/machinex/sound/pci/hda/hda_local.h:#define HDA_CODEC_VOLUME_IDX(xname, xcidx, nid, xindex, direction) \
/root/machinex/sound/pci/hda/hda_local.h:#define HDA_CODEC_VOLUME_MIN_MUTE(xname, nid, xindex, direction) \
/root/machinex/sound/pci/hda/hda_local.h:#define HDA_CODEC_VOLUME_MONO_IDX(xname, xcidx, nid, channel, xindex, dir, flags) \
/root/machinex/sound/pci/hda/hda_local.h:#define HDA_CODEC_VOLUME_MONO(xname, nid, channel, xindex, direction) \
/root/machinex/sound/pci/hda/hda_local.h:#define HDA_CODEC_VOLUME(xname, nid, xindex, direction) \
/root/machinex/sound/pci/hda/hda_local.h:extern struct hda_ctl_ops snd_hda_bind_vol;	/* for bind-volume with TLV */
/root/machinex/sound/pci/hda/hda_local.h:	  .get = snd_hda_mixer_amp_volume_get, \
/root/machinex/sound/pci/hda/hda_local.h:	HDA_CODEC_VOLUME_MONO_IDX(xname, 0, nid, 3, xindex, direction, \
/root/machinex/sound/pci/hda/hda_local.h:	HDA_CODEC_VOLUME_MONO_IDX(xname, 0, nid, channel, xindex, direction, 0)
/root/machinex/sound/pci/hda/hda_local.h:	HDA_CODEC_VOLUME_MONO_IDX(xname, xcidx, nid, 3, xindex, direction, 0)
/root/machinex/sound/pci/hda/hda_local.h:	HDA_CODEC_VOLUME_MONO(xname, nid, 3, xindex, direction)
/root/machinex/sound/pci/hda/hda_local.h:	  .info = snd_hda_mixer_amp_volume_info, \
/root/machinex/sound/pci/hda/hda_local.h:int snd_hda_mixer_amp_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/hda/hda_local.h:int snd_hda_mixer_amp_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/hda/hda_local.h:int snd_hda_mixer_amp_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/hda/hda_local.h:/* mono volume */
/root/machinex/sound/pci/hda/hda_local.h:/* mono volume with index (index=0,1,...) (channel=1,2) */
/root/machinex/sound/pci/hda/hda_local.h: * Note that the subdevice field is cleared again before the real registration
/root/machinex/sound/pci/hda/hda_local.h:	  .put = snd_hda_mixer_amp_volume_put, \
/root/machinex/sound/pci/hda/hda_local.h:/* stereo volume */
/root/machinex/sound/pci/hda/hda_local.h:/* stereo volume with index */
/root/machinex/sound/pci/hda/hda_local.h:/* stereo volume with min=mute */
/root/machinex/sound/pci/hda/hda_proc.c:					 AC_VERB_GET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/hda_proc.c:						 AC_VERB_GET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/hda_proc.c:				 AC_VERB_GET_VOLUME_KNOB_CONTROL, 0);
/root/machinex/sound/pci/hda/hda_proc.c:		/* volume knob is a special widget that always have connection
/root/machinex/sound/pci/hda/patch_analog.c:	{0x02, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x03, AC_VERB_SET_AMP_GAIN_MUTE, 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x03, AC_VERB_SET_AMP_GAIN_MUTE, 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x03, AC_VERB_SET_AMP_GAIN_MUTE, 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x03, AC_VERB_SET_AMP_GAIN_MUTE, 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x03, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x03, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x03, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x03, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x04, AC_VERB_SET_AMP_GAIN_MUTE, 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x04, AC_VERB_SET_AMP_GAIN_MUTE, 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x04, AC_VERB_SET_AMP_GAIN_MUTE, 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x04, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x04, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x04, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x04, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x04, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x04, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x05, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x05, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x05, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x05, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x05, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x05, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x05, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x06, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x06, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x06, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x06, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x06, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x07, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x07, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x07, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x07, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x07, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x07, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x07, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x07, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x07, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x07, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x08, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x09, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0b, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0b, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0b, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0b, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0b, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0b, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0c, AC_VERB_SET_AMP_GAIN_MUTE, 0xb000},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE + 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0d, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0d, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0d, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x0d, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x10, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{ 0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE },
/root/machinex/sound/pci/hda/patch_analog.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{ 0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE },
/root/machinex/sound/pci/hda/patch_analog.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x12, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x12, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{ 0x12, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE },
/root/machinex/sound/pci/hda/patch_analog.c:	{0x12, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x12, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x12, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{ 0x12, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE },
/root/machinex/sound/pci/hda/patch_analog.c:	{0x12, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x12, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x12, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x12, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x12, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x13, AC_VERB_SET_AMP_GAIN_MUTE, 0xb01f}, /* unmute, 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x13, AC_VERB_SET_AMP_GAIN_MUTE, 0xb01f}, /* unmute, 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x13, AC_VERB_SET_AMP_GAIN_MUTE, 0xb01f}, /* unmute, 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x13, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x13, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x13, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x13, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x13, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x13, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, 0x7002}, /* raise mic as default */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, 0x7002}, /* raise mic as default */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, 0x7002}, /* raise mic as default */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, 0x7002}, /* raise mic as default */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, 0x7002}, /* raise mic as default */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{ 0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE },
/root/machinex/sound/pci/hda/patch_analog.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{ 0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE },
/root/machinex/sound/pci/hda/patch_analog.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{ 0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE },
/root/machinex/sound/pci/hda/patch_analog.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{ 0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE },
/root/machinex/sound/pci/hda/patch_analog.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x18, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1a, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1a, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1b, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1b, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1b, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1b, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1b, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1b, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1b, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1c, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1c, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{ 0x1d, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080 },
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1d, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1d, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1d, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1d, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1d, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x27}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:		{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, 0xb000},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, 0xb000},
/root/machinex/sound/pci/hda/patch_analog.c:		{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1e, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:		{0x1f, AC_VERB_SET_AMP_GAIN_MUTE, 0xb000},
/root/machinex/sound/pci/hda/patch_analog.c:		{0x1f, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x1f, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(5)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(5)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(5)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(5)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(5)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(5)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(5)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(6)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(6)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(6)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(6)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(7)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(7)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(7)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(7)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(3) | 0x1a},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(4)}, /* aux */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x20, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(5) + 0x17}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x21, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x21, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x21, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x21, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x1f}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x21, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x1f}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x21, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x1f}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x21, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x1f}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x21, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x1f}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x21, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE + 0x1f}, /* 0dB */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x22, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x22, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x22, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x22, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x22, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x22, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x22, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x22, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x22, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x22, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x24, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x24, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x25, AC_VERB_SET_AMP_GAIN_MUTE, 0x03},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x25, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x25, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x25, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO}, /* no boost */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x26, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x26, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x26, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x26, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x26, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x26, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x26, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x26, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x27, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x27, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x28, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x28, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x29, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x29, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x29, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x29, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x29, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x29, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x29, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x29, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x2a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x2a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x2c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x2c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x2c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x2c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x2c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x2c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x2c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x2c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1)},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x39, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x39, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x39, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x39, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO}, /* boost */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x3a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x3a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x3a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x3a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO}, /* boost */
/root/machinex/sound/pci/hda/patch_analog.c:	{0x3c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x3c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO},
/root/machinex/sound/pci/hda/patch_analog.c:	{0x3c, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO}, /* boost */
/root/machinex/sound/pci/hda/patch_analog.c:					 AC_VERB_GET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_analog.c:					 AC_VERB_GET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_analog.c:					    AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_analog.c:						  AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_analog.c:						  AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_analog.c:						  AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_analog.c:						  AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_analog.c:	 * bind volumes/mutes of 3 DACs as a single PCM control for simplicity
/root/machinex/sound/pci/hda/patch_analog.c:/* bind volumes of both NID 0x05 and 0x06 */
/root/machinex/sound/pci/hda/patch_analog.c:	 * changing the volume.
/root/machinex/sound/pci/hda/patch_analog.c:		/* control HP volume/switch on the output mixer amp */
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Amp Volume", 0x1a, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Analog Mix Playback Volume", 0x21, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Analog Mix Playback Volume", 0x21, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Analog Mix Playback Volume", 0x21, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Aux Playback Volume", 0x16, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Aux Playback Volume", 0x16, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Aux Playback Volume", 0x1b, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Beep Playback Volume", 0, 0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Beep Playback Volume", 0x20, 0x03, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x0c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x0c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x0c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x0c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x0c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x0c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x0c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x0c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x0c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x0c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x0c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x12, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x12, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x12, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x15, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x15, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x15, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Capture Volume", 0x15, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("CD Playback Volume", 0x15, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("CD Playback Volume", 0x15, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("CD Playback Volume", 0x1d, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("CD Playback Volume", 0x1d, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("CD Playback Volume", 0x1d, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("CD Playback Volume", 0x20, 0x02, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("CD Playback Volume", 0x20, 0x02, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("CD Playback Volume", 0x20, 0x06, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("CD Playback Volume", 0x20, 0x06, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("CD Playback Volume", 0x20, 0x6, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("CD Playback Volume", 0x20, 0x6, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("CD Playback Volume", 0x20, 0x6, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Digital Beep Playback Volume", 0, 0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Digital Mic Boost Volume", 0x1f, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Digital Mic Capture Volume", 0x05, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Docking Mic Playback Volume", 0x20, 0x04, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Docking-Station Playback Volume", 0x13, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Dock Mic Boost Volume", 0x25, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Dock Mic Boost Volume", 0x25, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Dock Mic Playback Volume", 0x20, 0x04, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Boost Volume", 0x08, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Boost Volume", 0x14, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Boost Volume", 0x14, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Boost Volume", 0x14, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Boost Volume", 0x39, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Boost Volume", 0x39, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Boost Volume", 0x39, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Playback Volume", 0x12, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Playback Volume", 0x20, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Playback Volume", 0x20, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Playback Volume", 0x20, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Playback Volume", 0x20, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Playback Volume", 0x20, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Playback Volume", 0x20, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Mic Playback Volume", 0x20, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Playback Volume", 0x04, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Playback Volume", 0x04, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Playback Volume", 0x04, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Playback Volume", 0x04, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Playback Volume", 0x04, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Playback Volume", 0x05, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Playback Volume", 0x05, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Front Playback Volume", 0x1b, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("HDMI Playback Volume", 0x1d, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Headphone Playback Volume", 0x03, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Headphone Playback Volume", 0x03, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Headphone Playback Volume", 0x03, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Headphone Playback Volume", 0x06, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Headphone Playback Volume", 0x06, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Headphone Playback Volume", 0x1a, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_IDX("Capture Volume", 1, 0x0d, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_IDX("Capture Volume", 1, 0x0d, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_IDX("Capture Volume", 1, 0x0d, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_IDX("Capture Volume", 1, 0x0d, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_IDX("Capture Volume", 1, 0x0d, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_IDX("Capture Volume", 1, 0x0d, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_IDX("Capture Volume", 2, 0x0e, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_IDX("Digital Mic Capture Volume", 1, 0x06, 0x0,
/root/machinex/sound/pci/hda/patch_analog.c:	/* HDA_CODEC_VOLUME_IDX("PCM Playback Volume", 1, 0x03, 0x0, HDA_OUTPUT), */
/root/machinex/sound/pci/hda/patch_analog.c:	/* HDA_CODEC_VOLUME_IDX("PCM Playback Volume", 1, 0x03, 0x0, HDA_OUTPUT), */
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("IEC958 Capture Volume", 0x1c, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("IEC958 Playback Volume", 0x1b, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("IEC958 Playback Volume", 0x1b, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("IEC958 Playback Volume", 0x1b, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("IEC958 Playback Volume", 0x1b, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("IEC958 Playback Volume", 0x1b, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("IEC958 Playback Volume", 0x1b, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Internal Mic Boost Volume", 0x15, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Internal Mic Boost Volume", 0x15, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Internal Mic Boost Volume", 0x17, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Internal Mic Boost Volume", 0x17, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Internal Mic Boost Volume", 0x18, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Internal Mic Capture Volume", 0x15, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Internal Mic Playback Volume", 0x17, 0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Internal Mic Playback Volume", 0x1c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Internal Mic Playback Volume", 0x20, 0x01, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Internal Mic Playback Volume", 0x20, 0x01, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Line Boost Volume", 0x15, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Line-In Boost Volume", 0x15, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Line-In Boost Volume", 0x3a, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Line-In Playback Volume", 0x20, 0x01, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Line Playback Volume", 0x13, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Line Playback Volume", 0x13, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Line Playback Volume", 0x17, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Line Playback Volume", 0x17, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Line Playback Volume", 0x20, 0x01, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Line Playback Volume", 0x20, 0x01, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Line Playback Volume", 0x20, 0x04, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Line Playback Volume", 0x20, 0x1, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Line Playback Volume", 0x20, 0x1, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Line Playback Volume", 0x20, 0x1, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Master Playback Volume", 0x05, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Master Playback Volume", 0x21, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Master Playback Volume", 0x21, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Master Playback Volume", 0x21, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Master Playback Volume", 0x21, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Master Playback Volume", 0x21, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Master Playback Volume", 0x21, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x08, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x08, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x0c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x0f, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x0f, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x0f, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x14, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x14, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x14, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x15, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x15, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x18, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x25, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x25, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x39, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x3c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x3c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x3c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Capture Volume", 0x14, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x12, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x12, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x12, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x13, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x13, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x13, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x1c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x20, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x20, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x20, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x20, 0x01, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x20, 0x01, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x20, 0x01, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x20, 0x04, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x20, 0x04, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x20, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x20, 0x4, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x20, 0x4, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("Center Playback Volume", 0x05, 1, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("Center Playback Volume", 0x05, 1, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("Center Playback Volume", 0x05, 1, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("Center Playback Volume", 0x06, 1, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("Center Playback Volume", 0x0a, 1, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("Center Playback Volume", 0x1d, 1, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("LFE Playback Volume", 0x05, 2, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("LFE Playback Volume", 0x05, 2, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("LFE Playback Volume", 0x05, 2, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("LFE Playback Volume", 0x06, 2, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("LFE Playback Volume", 0x0a, 2, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("LFE Playback Volume", 0x1d, 2, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("Mono Playback Volume", 0x07, 1, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("Mono Playback Volume", 0x07, 1, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("Mono Playback Volume", 0x13, 1, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("Mono Playback Volume", 0x13, 1, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("Mono Playback Volume", 0x13, 1, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME_MONO("Mono Playback Volume", 0x13, 1, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	   HDA_CODEC_VOLUME("Mono Playback Volume", 0x1e, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Mono Playback Volume", 0x1e, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME(NULL, 0, 0, 0),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x03, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x03, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x04, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x04, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x04, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x04, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x11, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x11, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x11, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x11, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x20, 0x5, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x20, 0x5, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x20, 0x5, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x20, 0x5, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x20, 0x5, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x20, 0x5, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Side Playback Volume", 0x06, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Side Playback Volume", 0x0a, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Speaker Playback Volume", 0x13, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Surround Playback Volume", 0x03, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Surround Playback Volume", 0x05, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Surround Playback Volume", 0x06, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Surround Playback Volume", 0x0a, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Surround Playback Volume", 0x0a, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	HDA_CODEC_VOLUME("Surround Playback Volume", 0x1c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_analog.c:	sel = snd_hda_codec_read(codec, 0x1d, 0, AC_VERB_GET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_analog.c:	/* slaves may contain input volumes, so we can't raise to 0dB blindly */
/root/machinex/sound/pci/hda/patch_analog.c:			snd_hda_codec_write(codec, nid, 0, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_analog.c:	snd_hda_codec_write(codec, nid, 0, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE);
/root/machinex/sound/pci/hda/patch_analog.c:	/* we need to cover all playback volumes */
/root/machinex/sound/pci/hda/patch_ca0110.c:					    AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_ca0110.c:					    AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_ca0110.c:				    AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO);
/root/machinex/sound/pci/hda/patch_ca0110.c:	_add_volume(codec, nid, pfx, chan, 0)
/root/machinex/sound/pci/hda/patch_ca0110.c:#define add_in_volume(codec, nid, pfx)	_add_volume(codec, nid, pfx, 3, 1)
/root/machinex/sound/pci/hda/patch_ca0110.c:#define add_mono_volume(codec, nid, pfx, chan) \
/root/machinex/sound/pci/hda/patch_ca0110.c:#define add_out_volume(codec, nid, pfx)	_add_volume(codec, nid, pfx, 3, 0)
/root/machinex/sound/pci/hda/patch_ca0110.c:		err = add_in_volume(codec, spec->adcs[i], label);
/root/machinex/sound/pci/hda/patch_ca0110.c:		err = add_in_volume(codec, spec->dig_in, "IEC958");
/root/machinex/sound/pci/hda/patch_ca0110.c:			err = add_mono_volume(codec, spec->multiout.dac_nids[i],
/root/machinex/sound/pci/hda/patch_ca0110.c:			err = add_mono_volume(codec, spec->multiout.dac_nids[i],
/root/machinex/sound/pci/hda/patch_ca0110.c:			err = add_out_volume(codec, spec->hp_dac, "Headphone");
/root/machinex/sound/pci/hda/patch_ca0110.c:			err = add_out_volume(codec, spec->multiout.dac_nids[i],
/root/machinex/sound/pci/hda/patch_ca0110.c:		HDA_CODEC_VOLUME_MONO(namestr, nid, chan, 0, type);
/root/machinex/sound/pci/hda/patch_ca0110.c:		snd_hda_codec_write(codec, adc, 0, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_ca0110.c:static int _add_volume(struct hda_codec *codec, hda_nid_t nid, const char *pfx,
/root/machinex/sound/pci/hda/patch_ca0132.c:					    AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_ca0132.c:					    AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_ca0132.c:				    AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_ZERO);
/root/machinex/sound/pci/hda/patch_ca0132.c:	_add_volume(codec, nid, pfx, chan, 0)
/root/machinex/sound/pci/hda/patch_ca0132.c:	_add_volume(codec, nid, pfx, chan, 1)
/root/machinex/sound/pci/hda/patch_ca0132.c:#define add_in_mono_volume(codec, nid, pfx, chan) \
/root/machinex/sound/pci/hda/patch_ca0132.c:#define add_in_volume(codec, nid, pfx) _add_volume(codec, nid, pfx, 3, 1)
/root/machinex/sound/pci/hda/patch_ca0132.c:#define add_mono_volume(codec, nid, pfx, chan) \
/root/machinex/sound/pci/hda/patch_ca0132.c:#define add_out_volume(codec, nid, pfx) _add_volume(codec, nid, pfx, 3, 0)
/root/machinex/sound/pci/hda/patch_ca0132.c:		err = add_hp_volume(codec, cfg->hp_pins[0]);
/root/machinex/sound/pci/hda/patch_ca0132.c:			err = add_in_mono_volume(codec, spec->input_pins[i],
/root/machinex/sound/pci/hda/patch_ca0132.c:		err = add_in_volume(codec, spec->adcs[i], label);
/root/machinex/sound/pci/hda/patch_ca0132.c:		err = add_in_volume(codec, spec->dig_in, "IEC958");
/root/machinex/sound/pci/hda/patch_ca0132.c:		err = add_out_volume(codec, spec->dig_out, "IEC958");
/root/machinex/sound/pci/hda/patch_ca0132.c:		HDA_CODEC_VOLUME_MONO("Headphone Playback Volume",
/root/machinex/sound/pci/hda/patch_ca0132.c:		HDA_CODEC_VOLUME_MONO(namestr, nid, chan, 0, type);
/root/machinex/sound/pci/hda/patch_ca0132.c:	if ((spec->curr_hp_volume[0] == left_vol) &&
/root/machinex/sound/pci/hda/patch_ca0132.c:	knew.get = ca0132_hp_volume_get;
/root/machinex/sound/pci/hda/patch_ca0132.c:	knew.put = ca0132_hp_volume_put;
/root/machinex/sound/pci/hda/patch_ca0132.c:	long curr_hp_volume[2];
/root/machinex/sound/pci/hda/patch_ca0132.c:		snd_hda_codec_write(codec, adc, 0, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_ca0132.c:	spec->curr_hp_volume[0] = left_vol;
/root/machinex/sound/pci/hda/patch_ca0132.c:		(spec->curr_hp_volume[1] == right_vol))
/root/machinex/sound/pci/hda/patch_ca0132.c:	spec->curr_hp_volume[1] = right_vol;
/root/machinex/sound/pci/hda/patch_ca0132.c:static int add_hp_volume(struct hda_codec *codec, hda_nid_t nid)
/root/machinex/sound/pci/hda/patch_ca0132.c:static int _add_volume(struct hda_codec *codec, hda_nid_t nid, const char *pfx,
/root/machinex/sound/pci/hda/patch_ca0132.c:static int ca0132_hp_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/hda/patch_ca0132.c:static int ca0132_hp_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/hda/patch_ca0132.c:	*valp++ = spec->curr_hp_volume[0];
/root/machinex/sound/pci/hda/patch_ca0132.c:	*valp = spec->curr_hp_volume[1];
/root/machinex/sound/pci/hda/patch_cirrus.c:				    AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_cirrus.c:				    AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE);
/root/machinex/sound/pci/hda/patch_cirrus.c:				    AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE);
/root/machinex/sound/pci/hda/patch_cirrus.c:				    AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE);
/root/machinex/sound/pci/hda/patch_cirrus.c:/* add a (input-boost) volume control to the given input pin */
/root/machinex/sound/pci/hda/patch_cirrus.c:/* add a (input-boost) volume control to the given input pin */
/root/machinex/sound/pci/hda/patch_cirrus.c:		err = add_input_volume_control(codec, &spec->autocfg, i);
/root/machinex/sound/pci/hda/patch_cirrus.c:	err = add_volume(codec, name, 0,
/root/machinex/sound/pci/hda/patch_cirrus.c:	err = add_volume(codec, name, index,
/root/machinex/sound/pci/hda/patch_cirrus.c:		err = cs421x_add_input_volume_control(codec, i);
/root/machinex/sound/pci/hda/patch_cirrus.c:	fix_volume_caps(codec, dac);
/root/machinex/sound/pci/hda/patch_cirrus.c:	fix_volume_caps(codec, dac);
/root/machinex/sound/pci/hda/patch_cirrus.c:		HDA_CODEC_VOLUME_IDX(tmp, index, 0, 0, HDA_OUTPUT);
/root/machinex/sound/pci/hda/patch_cirrus.c:	return add_volume(codec,  imux->items[item].label, 0,
/root/machinex/sound/pci/hda/patch_cirrus.c:	return add_volume(codec, label, 0,
/root/machinex/sound/pci/hda/patch_cirrus.c:static int add_input_volume_control(struct hda_codec *codec,
/root/machinex/sound/pci/hda/patch_cirrus.c:static int add_volume(struct hda_codec *codec, const char *name,
/root/machinex/sound/pci/hda/patch_cirrus.c:static int cs421x_add_input_volume_control(struct hda_codec *codec, int item)
/root/machinex/sound/pci/hda/patch_cirrus.c:static void fix_volume_caps(struct hda_codec *codec, hda_nid_t dac)
/root/machinex/sound/pci/hda/patch_cmedia.c:	/* CMI9880 has no playback volumes! */
/root/machinex/sound/pci/hda/patch_cmedia.c:	HDA_CODEC_VOLUME("Beep Playback Volume", 0x23, 0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_cmedia.c:	HDA_CODEC_VOLUME("Capture Volume", 0x08, 0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_cmedia.c:	HDA_CODEC_VOLUME_IDX("Capture Volume", 1, 0x09, 0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x10, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x10, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x10, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x10, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x10, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x10, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x10, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x10, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x11, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:		{0x12, AC_VERB_SET_AMP_GAIN_MUTE, 0xb000},
/root/machinex/sound/pci/hda/patch_conexant.c:		{0x12, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x12, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x12, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x13, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:		{0x14, AC_VERB_SET_AMP_GAIN_MUTE, 0xb000},
/root/machinex/sound/pci/hda/patch_conexant.c:		{0x14, AC_VERB_SET_AMP_GAIN_MUTE, 0xb080},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0) | 0x44},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0) | 0x50},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0) | 0x50},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0) | 0x50},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0) | 0x50},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1) | 0x44},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1) | 0x44},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(1) | 0x44},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(2) | 0x50},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(2) | 0x50},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(2) | 0x50},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x14, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0) | 0x44},
/root/machinex/sound/pci/hda/patch_conexant.c:		{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:		{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x16, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)}, /* Mixer */
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)}, /* Mic1 pin */
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)}, /* Line pin */
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)}, /* HP pin */
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)}, /* CD pin */
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0) | 0x03},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0) | 0x03},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0) | 0x03},
/root/machinex/sound/pci/hda/patch_conexant.c:		{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:		{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:		{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x2},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x2},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x3},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x3},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x17, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE | 0x3},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x18, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0) | 0x03},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x18, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE },
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x18, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE },
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x19, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x19, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x19, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)}, /* mic1 pin */
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x19, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x19, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)}, /* mic2 pin */
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x19, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(2)}, /* line1 pin */
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x19, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(3)}, /* line2 pin */
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x19, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(4)}, /* CD pin */
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x19, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(5)}, /* Beep-gen pin */
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x19, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(6)}, /* Line-out pin */
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x19, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(7)}, /* HP-pin pin */
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x1A, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x1A, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x1a, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x1a, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x1a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(0)},
/root/machinex/sound/pci/hda/patch_conexant.c:	{0x1d, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0) | 0x03},
/root/machinex/sound/pci/hda/patch_conexant.c:		AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_conexant.c:			AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_conexant.c:				    AC_VERB_SET_AMP_GAIN_MUTE, val);
/root/machinex/sound/pci/hda/patch_conexant.c:/* bind volumes of both NID 0x10 and 0x11 */
/root/machinex/sound/pci/hda/patch_conexant.c:	cx_auto_add_volume(codec, str, " Playback", idx, nid, HDA_OUTPUT)
/root/machinex/sound/pci/hda/patch_conexant.c:	cx_auto_add_volume_idx(codec, str, dir, cidx, nid, hda_dir, 0, 3)
/root/machinex/sound/pci/hda/patch_conexant.c:#define cx_auto_add_pb_volume(codec, nid, str, idx)			\
/root/machinex/sound/pci/hda/patch_conexant.c:#define cx_auto_add_volume(codec, str, dir, cidx, nid, hda_dir)		\
/root/machinex/sound/pci/hda/patch_conexant.c:		/* disable gain */
/root/machinex/sound/pci/hda/patch_conexant.c:		err = cx_auto_add_boost_volume(codec, i, label, cidx);
/root/machinex/sound/pci/hda/patch_conexant.c:			err = cx_auto_add_capture_volume(codec, nid,
/root/machinex/sound/pci/hda/patch_conexant.c:			err = cx_auto_add_capture_volume(codec, nid,
/root/machinex/sound/pci/hda/patch_conexant.c:		err = try_add_pb_volume(codec, dac,
/root/machinex/sound/pci/hda/patch_conexant.c:		.get = snd_hda_mixer_amp_volume_get,
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Capture-1 Volume", 0x19, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Capture-2 Volume", 0x19, 0x1, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Capture-3 Volume", 0x19, 0x2, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Capture-4 Volume", 0x19, 0x3, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Capture Volume", 0x12, 0x03, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Capture Volume", 0x14, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Capture Volume", 0x14, 0x01, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Capture Volume", 0x1a, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Capture Volume", 0x1a, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Capture Volume", 0x1a, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("CD pin Volume", 0x17, 0x4, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("CD Playback Volume", 0x12, 0x04, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Docking Mic Volume", 0x15, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Headphone Playback Volume", 0x13, 0x00, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("HeadPhone Playback Volume", 0x13, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("HP-OUT pin Volume", 0x17, 0x3, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("HP-OUT Playback Volume", 0x11, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Internal Mic Playback Volume", 0x17, 0x1, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Internal Mic Playback Volume", 0x17, 0x2, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Internal Mic Volume", 0x14, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Internal Mic Volume", 0x14, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Internal Mic Volume", 0x14, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Line1-Out Playback Volume", 0x14, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("LINE1 pin Volume", 0x17, 0x2, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("LINE1 Playback Volume", 0x12, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Line2-Out Playback Volume", 0x15, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("LINE Playback Volume", 0x12, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Line Playback Volume", 0x17, 0x3, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Master Playback Volume", 0x10, 0x00, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Master Playback Volume", 0x10, 0x00, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Master Playback Volume", 0x13, 0x00, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("MIC1 pin Volume", 0x17, 0x1, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("MIC1 Playback Volume", 0x12, 0x01, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("MIC2 Playback Volume", 0x12, 0x02, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x1a, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Mic Boost Volume", 0x1a, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x17, 0x1, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x17, 0x2, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Mic Playback Volume", 0x19, 0x02, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Mic Volume", 0x14, 0x01, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Mic Volume", 0x14, 0x01, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Mic Volume", 0x15, 0x00, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME_MONO("Beep Playback Volume", 0, 1, 0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:		HDA_CODEC_VOLUME(name, 0, 0, 0),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("OutAmp-1 Volume", 0x10, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("OutAmp-2 Volume", 0x1c, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x17, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("PCM Playback Volume", 0x17, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("PCM Volume", 0x10, 0x00, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("PCM Volume", 0x17, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Speaker Playback Volume", 0x10, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Speaker Playback Volume", 0x1d, 0x01, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	HDA_CODEC_VOLUME("Speaker Playback Volume", 0x1d, 0x0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_conexant.c:	hda_nid_t boost;	/* optional boost volume NID */
/root/machinex/sound/pci/hda/patch_conexant.c:		.info = snd_hda_mixer_amp_volume_info,
/root/machinex/sound/pci/hda/patch_conexant.c:			int err = cx_auto_add_volume_idx(codec, label, " Boost",
/root/machinex/sound/pci/hda/patch_conexant.c:			int err = cx_auto_add_volume_idx(codec, label, pfx,
/root/machinex/sound/pci/hda/patch_conexant.c:		/* offset by 28 volume steps to limit minimum gain to -46dB */
/root/machinex/sound/pci/hda/patch_conexant.c:		.put = snd_hda_mixer_amp_volume_put,
/root/machinex/sound/pci/hda/patch_conexant.c:			return cx_auto_add_pb_volume(codec, dac, name, idx);
/root/machinex/sound/pci/hda/patch_conexant.c:		return cx_auto_add_pb_volume(codec, pin, name, idx);
/root/machinex/sound/pci/hda/patch_conexant.c:		return cx_auto_add_volume(codec, label, " Boost", 0,
/root/machinex/sound/pci/hda/patch_conexant.c:		return cx_auto_add_volume(codec, label, " Boost", cidx,
/root/machinex/sound/pci/hda/patch_conexant.c:		return cx_auto_add_volume_idx(codec, label, pfx,
/root/machinex/sound/pci/hda/patch_conexant.c:			return cx_auto_add_volume_idx(codec, rightch_label, " Boost",
/root/machinex/sound/pci/hda/patch_conexant.c:			return cx_auto_add_volume_idx(codec, rightch_label, pfx,
/root/machinex/sound/pci/hda/patch_conexant.c:		return try_add_pb_volume(codec, spec->dac_info[0].dac,
/root/machinex/sound/pci/hda/patch_conexant.c:	 * set index 0x01 for the volume from the mixer amp 0x19.
/root/machinex/sound/pci/hda/patch_conexant.c:		snd_hda_codec_write(codec, nid, 0, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_conexant.c:		spec->mic_boost = 2;	/* default 20dB gain */
/root/machinex/sound/pci/hda/patch_conexant.c:		spec->mic_boost = 2;	/* default 20dB gain */
/root/machinex/sound/pci/hda/patch_conexant.c:		spec->mic_boost = 3; /* default 30dB gain */
/root/machinex/sound/pci/hda/patch_conexant.c:		spec->mic_boost = 3; /* default 30dB gain */
/root/machinex/sound/pci/hda/patch_conexant.c:		spec->mic_boost = 3; /* default 30dB gain */
/root/machinex/sound/pci/hda/patch_conexant.c:	/* Start with output sum widgets muted and their output gains at min */
/root/machinex/sound/pci/hda/patch_conexant.c:static int cx_auto_add_boost_volume(struct hda_codec *codec, int idx,
/root/machinex/sound/pci/hda/patch_conexant.c:static int cx_auto_add_capture_volume(struct hda_codec *codec, hda_nid_t nid,
/root/machinex/sound/pci/hda/patch_conexant.c:static int cx_auto_add_volume_idx(struct hda_codec *codec, const char *basename,
/root/machinex/sound/pci/hda/patch_conexant.c:static int try_add_pb_volume(struct hda_codec *codec, hda_nid_t dac,
/root/machinex/sound/pci/hda/patch_hdmi.c:				    AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_hdmi.c:				AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE);
/root/machinex/sound/pci/hda/patch_hdmi.c:	/* turn on again (if needed) */
/root/machinex/sound/pci/hda/patch_hdmi.c:		/* turn on again (if needed) */
/root/machinex/sound/pci/hda/patch_realtek.c:	{0x0f, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_realtek.c:	{0x10, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_MUTE(1)},
/root/machinex/sound/pci/hda/patch_realtek.c:	{0x1d, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_realtek.c:				 AC_VERB_GET_VOLUME_KNOB_CONTROL, 0);
/root/machinex/sound/pci/hda/patch_realtek.c:				    AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_realtek.c:				    AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_realtek.c:				    AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_realtek.c:					    AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_realtek.c:						    AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_realtek.c: again:
/root/machinex/sound/pci/hda/patch_realtek.c:	/* bind volumes */
/root/machinex/sound/pci/hda/patch_realtek.c:	/* check whether either of ADC or MUX has a volume control */
/root/machinex/sound/pci/hda/patch_realtek.c:			dac = dacs[i]; /* with individual volumes */
/root/machinex/sound/pci/hda/patch_realtek.c:#define nid_has_volume(codec, nid, dir) \
/root/machinex/sound/pci/hda/patch_realtek.c:	else if (nid_has_volume(codec, mix, HDA_OUTPUT))
/root/machinex/sound/pci/hda/patch_realtek.c:	else if (nid_has_volume(codec, pin, HDA_OUTPUT))
/root/machinex/sound/pci/hda/patch_realtek.c:/* enable the volume-knob widget support on NID 0x21 */
/root/machinex/sound/pci/hda/patch_realtek.c:	err = snd_hda_mixer_amp_volume_info(kcontrol, uinfo);
/root/machinex/sound/pci/hda/patch_realtek.c:				goto again;
/root/machinex/sound/pci/hda/patch_realtek.c:	HDA_CODEC_VOLUME("Beep Playback Volume", 0, 0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_realtek.c:	HDA_CODEC_VOLUME("Beep Playback Volume", 0x1d, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_realtek.c:	HDA_CODEC_VOLUME(NULL, 0, 0, 0),
/root/machinex/sound/pci/hda/patch_realtek.c:	if (nid_has_volume(codec, dac, HDA_OUTPUT))
/root/machinex/sound/pci/hda/patch_realtek.c:	if (!nid_has_volume(codec, spec->adc_nids[0], HDA_INPUT)) {
/root/machinex/sound/pci/hda/patch_realtek.c:		if (!nid_has_volume(codec, spec->capsrc_nids[0], HDA_OUTPUT))
/root/machinex/sound/pci/hda/patch_realtek.c:	/* initialize volume */
/root/machinex/sound/pci/hda/patch_realtek.c:	/* Let's create a bind-controls for volumes */
/root/machinex/sound/pci/hda/patch_realtek.c:/* mark up volume and mute control NIDs: used during badness parsing and
/root/machinex/sound/pci/hda/patch_realtek.c:			return; /* no volume */
/root/machinex/sound/pci/hda/patch_realtek.c:			return; /* no volume in capsrc, too */
/root/machinex/sound/pci/hda/patch_realtek.c:		snd_hda_codec_write(codec, dac, 0, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_realtek.c:		snd_hda_codec_write(codec, mix, 0, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_realtek.c:		snd_hda_codec_write(codec, mix, 0, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_realtek.c:		snd_hda_codec_write(codec, nid, 0, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_realtek.c:		snd_hda_codec_write(codec, nid, 0, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_realtek.c:				     snd_hda_mixer_amp_volume_get, false);
/root/machinex/sound/pci/hda/patch_realtek.c:				     snd_hda_mixer_amp_volume_put, true);
/root/machinex/sound/pci/hda/patch_realtek.c:	unsigned int vol_in_capsrc:1; /* use capsrc volume (ADC has no vol) */
/root/machinex/sound/pci/hda/patch_realtek.c:/* update the master volume per volume-knob's unsol event */
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{ 0x0a, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{ 0x0d, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{ 0x0e, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_MUTE },
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{ 0x0f, AC_VERB_SET_AMP_GAIN_MUTE, AMP_IN_UNMUTE(0)},
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{0x15, AC_VERB_SET_AMP_GAIN_MUTE, AMP_OUT_UNMUTE}, /* Mic-in -> 0x9 */
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{ 0x16, AC_VERB_SET_VOLUME_KNOB_CONTROL, 0xff},
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{ 0x1b, AC_VERB_SET_AMP_GAIN_MUTE, 0xb000},
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{0x1b, AC_VERB_SET_AMP_GAIN_MUTE, 0xb000},
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{ 0x1f, AC_VERB_SET_VOLUME_KNOB_CONTROL, 0xec},
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{ 0x1f, AC_VERB_SET_VOLUME_KNOB_CONTROL, 0xff},
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{0x24, AC_VERB_SET_VOLUME_KNOB_CONTROL, 0x7f},
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{0x24, AC_VERB_SET_VOLUME_KNOB_CONTROL, 0x7f},
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{ 0x24, AC_VERB_SET_VOLUME_KNOB_CONTROL, 0xff},
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{ 0x24, AC_VERB_SET_VOLUME_KNOB_CONTROL, 0xff},
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{ 0x24, AC_VERB_SET_VOLUME_KNOB_CONTROL, 0xff},
/root/machinex/sound/pci/hda/patch_sigmatel.c:	{ 0x28, AC_VERB_SET_VOLUME_KNOB_CONTROL, 0xff},
/root/machinex/sound/pci/hda/patch_sigmatel.c:				/* 92hd codecs capture volume is in mux */
/root/machinex/sound/pci/hda/patch_sigmatel.c:again:
/root/machinex/sound/pci/hda/patch_sigmatel.c:again:
/root/machinex/sound/pci/hda/patch_sigmatel.c:again:
/root/machinex/sound/pci/hda/patch_sigmatel.c: again:
/root/machinex/sound/pci/hda/patch_sigmatel.c: again:
/root/machinex/sound/pci/hda/patch_sigmatel.c: again:
/root/machinex/sound/pci/hda/patch_sigmatel.c: again:
/root/machinex/sound/pci/hda/patch_sigmatel.c:			/* check for volume support for the amp */
/root/machinex/sound/pci/hda/patch_sigmatel.c:	/* check the auto-mute again: we need to mute/unmute the speaker
/root/machinex/sound/pci/hda/patch_sigmatel.c:	/* check to see if there is volume support for the amp */
/root/machinex/sound/pci/hda/patch_sigmatel.c:	const unsigned long *capvols; /* amp-volume attr: HDA_COMPOSE_AMP_VAL() */
/root/machinex/sound/pci/hda/patch_sigmatel.c:	/* correct volume offset */
/root/machinex/sound/pci/hda/patch_sigmatel.c:/* create a volume assigned to the given pin (only if supported) */
/root/machinex/sound/pci/hda/patch_sigmatel.c:/* create PC beep volume controls */
/root/machinex/sound/pci/hda/patch_sigmatel.c:/* create volume control/switch for the given prefx type */
/root/machinex/sound/pci/hda/patch_sigmatel.c:	/* fake event to set up pins again to override cached values */
/root/machinex/sound/pci/hda/patch_sigmatel.c:			goto again;
/root/machinex/sound/pci/hda/patch_sigmatel.c:			goto again;
/root/machinex/sound/pci/hda/patch_sigmatel.c:			goto again;
/root/machinex/sound/pci/hda/patch_sigmatel.c:			goto again;
/root/machinex/sound/pci/hda/patch_sigmatel.c:			goto again;
/root/machinex/sound/pci/hda/patch_sigmatel.c:			goto again;
/root/machinex/sound/pci/hda/patch_sigmatel.c:			goto again;
/root/machinex/sound/pci/hda/patch_sigmatel.c:	HDA_CODEC_VOLUME("Capture Volume", 0x0a, 0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_sigmatel.c:	HDA_CODEC_VOLUME_MIN_MUTE("PCM Playback Volume", 0xb, 0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_sigmatel.c:	HDA_CODEC_VOLUME_MIN_MUTE("PCM Playback Volume", 0xe, 0, HDA_OUTPUT),
/root/machinex/sound/pci/hda/patch_sigmatel.c:	HDA_CODEC_VOLUME(NULL, 0, 0, 0),
/root/machinex/sound/pci/hda/patch_sigmatel.c:	if (!spec->check_volume_offset) {
/root/machinex/sound/pci/hda/patch_sigmatel.c:	int volume_offset;
/root/machinex/sound/pci/hda/patch_sigmatel.c:	/* mute the master volume */
/root/machinex/sound/pci/hda/patch_sigmatel.c:			/* mux and volume for adc_nids[i] */
/root/machinex/sound/pci/hda/patch_sigmatel.c:/* return 1 if the volume control is created */
/root/machinex/sound/pci/hda/patch_sigmatel.c:	/* set master volume and direct control */
/root/machinex/sound/pci/hda/patch_sigmatel.c:	/* set master volume and direct control */
/root/machinex/sound/pci/hda/patch_sigmatel.c:	/* set master volume and direct control */	
/root/machinex/sound/pci/hda/patch_sigmatel.c:	/* set master volume and direct control */	
/root/machinex/sound/pci/hda/patch_sigmatel.c:	/* set master volume and direct control */	
/root/machinex/sound/pci/hda/patch_sigmatel.c:	/* set master volume and direct control */	
/root/machinex/sound/pci/hda/patch_sigmatel.c:	/* set master volume to max value without distortion
/root/machinex/sound/pci/hda/patch_sigmatel.c:				 * so let's drop the broken ones again
/root/machinex/sound/pci/hda/patch_sigmatel.c:		spec->check_volume_offset = 1;
/root/machinex/sound/pci/hda/patch_sigmatel.c:					spec->volume_offset));
/root/machinex/sound/pci/hda/patch_sigmatel.c:			spec->volume_offset = nums / 2;
/root/machinex/sound/pci/hda/patch_sigmatel.c: * that corresponds to the NOT muted state of the master volume
/root/machinex/sound/pci/hda/patch_sigmatel.c:	unsigned int check_volume_offset:1;
/root/machinex/sound/pci/hda/patch_sigmatel.c:	unsigned int num_caps; /* number of capture volume/switch elements */
/root/machinex/sound/pci/hda/patch_sigmatel.c:	vmaster_tlv[2] += vmaster_tlv[3] * spec->volume_offset;
/root/machinex/sound/pci/hda/patch_sigmatel.c:	/* volume-knob fixes */
/root/machinex/sound/pci/hda/patch_via.c:					AC_VERB_GET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_via.c:				    AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_via.c:					    AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/hda/patch_via.c:				    AC_VERB_SET_AMP_GAIN_MUTE, val);
/root/machinex/sound/pci/hda/patch_via.c:					    AC_VERB_SET_AMP_GAIN_MUTE, val);
/root/machinex/sound/pci/hda/patch_via.c:	/* bind capture-volume */
/root/machinex/sound/pci/hda/patch_via.c:/* bind capture volume/switch */
/root/machinex/sound/pci/hda/patch_via.c:/* create analog-loopback volume/switch controls */
/root/machinex/sound/pci/hda/patch_via.c:			/* decrease volume */
/root/machinex/sound/pci/hda/patch_via.c:	HDA_CODEC_VOLUME("Digital Mic Capture Volume", 0x22, 0x0, HDA_INPUT),
/root/machinex/sound/pci/hda/patch_via.c:	HDA_CODEC_VOLUME(NULL, 0, 0, 0),
/root/machinex/sound/pci/hda/patch_via.c:			/* increase volume */
/root/machinex/sound/pci/hda/patch_via.c:	/* limit AA path volume to 0 dB */
/root/machinex/sound/pci/hda/patch_via.c:		snd_hda_codec_write(codec, pin, 0, AC_VERB_SET_AMP_GAIN_MUTE,
/root/machinex/sound/pci/ice1712/aureon.c: * AC'97 volume controls
/root/machinex/sound/pci/ice1712/aureon.c: * ADC gain mixer control
/root/machinex/sound/pci/ice1712/aureon.c: * - DAC digital volumes are not implemented in the mixer.
/root/machinex/sound/pci/ice1712/aureon.c: * DAC volume attenuation mixer control
/root/machinex/sound/pci/ice1712/aureon.c:#define WM_ADC_GAIN		0x19	/* ADC gain L(19)/R(1a) */
/root/machinex/sound/pci/ice1712/aureon.c:/* digital master volume */
/root/machinex/sound/pci/ice1712/aureon.c:		idx  = WM_ADC_GAIN + i;
/root/machinex/sound/pci/ice1712/aureon.c:		idx = WM_ADC_GAIN + i;
/root/machinex/sound/pci/ice1712/aureon.c: *   if they show better response than DAC analog volumes, we can use them
/root/machinex/sound/pci/ice1712/aureon.c:	 * just set stored volume again */
/root/machinex/sound/pci/ice1712/aureon.c: * Master volume attenuation mixer control
/root/machinex/sound/pci/ice1712/aureon.c:		old = wm_get(ice, WM_ADC_GAIN + i);
/root/machinex/sound/pci/ice1712/aureon.c:static const DECLARE_TLV_DB_SCALE(db_scale_ac97_gain, -3450, 150, 0);
/root/machinex/sound/pci/ice1712/aureon.c:		.tlv = { .p = db_scale_ac97_gain }
/root/machinex/sound/pci/ice1712/aureon.c:		.tlv = { .p = db_scale_ac97_gain }
/root/machinex/sound/pci/ice1712/aureon.c:		.tlv = { .p = db_scale_ac97_gain }
/root/machinex/sound/pci/ice1712/aureon.c:		.tlv = { .p = db_scale_ac97_gain }
/root/machinex/sound/pci/ice1712/aureon.c:		.tlv = { .p = db_scale_ac97_gain }
/root/machinex/sound/pci/ice1712/aureon.c:		.tlv = { .p = db_scale_ac97_gain }
/root/machinex/sound/pci/ice1712/aureon.c:		.tlv = { .p = db_scale_ac97_gain }
/root/machinex/sound/pci/ice1712/aureon.c:		.tlv = { .p = db_scale_ac97_gain }
/root/machinex/sound/pci/ice1712/aureon.c:		.tlv = { .p = db_scale_ac97_gain }
/root/machinex/sound/pci/ice1712/aureon.c:	/* Unmute AC'97 master volume permanently - muting is done by WM8770 */
/root/machinex/sound/pci/ice1712/aureon.c:		val = wm_get(ice, WM_ADC_GAIN + i);
/root/machinex/sound/pci/ice1712/aureon.c:			wm_put(ice, WM_ADC_GAIN + i, new);
/root/machinex/sound/pci/ice1712/aureon.c:	/* workaround for poking volume with alsamixer after resume:
/root/machinex/sound/pci/ice1712/delta.c:	/* do it again */
/root/machinex/sound/pci/ice1712/envy24ht.h:#define   VT1724_CFG_I2S_VOLUME	0x80	/* volume/mute capability */
/root/machinex/sound/pci/ice1712/ice1712.c:	change = nval != ice->pro_volumes[priv_idx];
/root/machinex/sound/pci/ice1712/ice1712.c:	change = nval != ice->pro_volumes[priv_idx];
/root/machinex/sound/pci/ice1712/ice1712.c:	err = snd_ctl_add(card, snd_ctl_new1(&snd_ice1712_multi_capture_spdif_volume, ice));
/root/machinex/sound/pci/ice1712/ice1712.c:	err = snd_ctl_add(ice->card, snd_ctl_new1(&snd_ice1712_mixer_pro_volume_rate, ice));
/root/machinex/sound/pci/ice1712/ice1712.c:		.get = snd_ice1712_pro_mixer_volume_get,
/root/machinex/sound/pci/ice1712/ice1712.c:	.get = snd_ice1712_pro_mixer_volume_get,
/root/machinex/sound/pci/ice1712/ice1712.c:	.get = snd_ice1712_pro_mixer_volume_get,
/root/machinex/sound/pci/ice1712/ice1712.c:	.get = snd_ice1712_pro_volume_rate_get,
/root/machinex/sound/pci/ice1712/ice1712.c:		ice->pro_volumes[idx] = 0x80008000;	/* mute */
/root/machinex/sound/pci/ice1712/ice1712.c:		ice->pro_volumes[idx] = 0x80008000;	/* mute */
/root/machinex/sound/pci/ice1712/ice1712.c:		ice->pro_volumes[idx] = 0x80008000;	/* mute */
/root/machinex/sound/pci/ice1712/ice1712.c:		(ice->pro_volumes[priv_idx] >> 0) & 127;
/root/machinex/sound/pci/ice1712/ice1712.c:		!((ice->pro_volumes[priv_idx] >> 15) & 1);
/root/machinex/sound/pci/ice1712/ice1712.c:		(ice->pro_volumes[priv_idx] >> 16) & 127;
/root/machinex/sound/pci/ice1712/ice1712.c:		!((ice->pro_volumes[priv_idx] >> 31) & 1);
/root/machinex/sound/pci/ice1712/ice1712.c:	ice->pro_volumes[priv_idx] = nval;
/root/machinex/sound/pci/ice1712/ice1712.c:	ice->pro_volumes[priv_idx] = nval;
/root/machinex/sound/pci/ice1712/ice1712.c:		.info = snd_ice1712_pro_mixer_volume_info,
/root/machinex/sound/pci/ice1712/ice1712.c:	.info = snd_ice1712_pro_mixer_volume_info,
/root/machinex/sound/pci/ice1712/ice1712.c:	.info = snd_ice1712_pro_mixer_volume_info,
/root/machinex/sound/pci/ice1712/ice1712.c:	.info = snd_ice1712_pro_volume_rate_info,
/root/machinex/sound/pci/ice1712/ice1712.c:	/* initialize volumes */
/root/machinex/sound/pci/ice1712/ice1712.c:	.name = SNDRV_CTL_NAME_IEC958("Multi ", CAPTURE, VOLUME),
/root/machinex/sound/pci/ice1712/ice1712.c:	nval |= ice->pro_volumes[priv_idx] & ~0x007f007f;
/root/machinex/sound/pci/ice1712/ice1712.c:	nval |= ice->pro_volumes[priv_idx] & ~0x80008000;
/root/machinex/sound/pci/ice1712/ice1712.c:	outw(val, ICEMT(ice, MONITOR_VOLUME));
/root/machinex/sound/pci/ice1712/ice1712.c:		.put = snd_ice1712_pro_mixer_volume_put,
/root/machinex/sound/pci/ice1712/ice1712.c:	.put = snd_ice1712_pro_mixer_volume_put,
/root/machinex/sound/pci/ice1712/ice1712.c:	.put = snd_ice1712_pro_mixer_volume_put,
/root/machinex/sound/pci/ice1712/ice1712.c:	.put = snd_ice1712_pro_volume_rate_put
/root/machinex/sound/pci/ice1712/ice1712.c:		snd_ice1712_ds_write(ice, chn + 1, ICE1712_DSC_VOLUME, 0);
/root/machinex/sound/pci/ice1712/ice1712.c:	snd_ice1712_ds_write(ice, chn, ICE1712_DSC_VOLUME, 0);
/root/machinex/sound/pci/ice1712/ice1712.c:		snd_ice1712_update_volume(ice, idx);
/root/machinex/sound/pci/ice1712/ice1712.c:		snd_ice1712_update_volume(ice, idx);
/root/machinex/sound/pci/ice1712/ice1712.c:		snd_ice1712_update_volume(ice, idx);
/root/machinex/sound/pci/ice1712/ice1712.c:	snd_ice1712_update_volume(ice, priv_idx);
/root/machinex/sound/pci/ice1712/ice1712.c:	snd_ice1712_update_volume(ice, priv_idx);
/root/machinex/sound/pci/ice1712/ice1712.c:static int snd_ice1712_pro_mixer_volume_get(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/pci/ice1712/ice1712.c:static int snd_ice1712_pro_mixer_volume_info(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_info *uinfo)
/root/machinex/sound/pci/ice1712/ice1712.c:static int snd_ice1712_pro_mixer_volume_put(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/pci/ice1712/ice1712.c:static int snd_ice1712_pro_volume_rate_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/ice1712/ice1712.c:static int snd_ice1712_pro_volume_rate_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/ice1712/ice1712.c:static int snd_ice1712_pro_volume_rate_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/ice1712/ice1712.c:static struct snd_kcontrol_new snd_ice1712_mixer_pro_volume_rate = {
/root/machinex/sound/pci/ice1712/ice1712.c:static struct snd_kcontrol_new snd_ice1712_multi_capture_analog_volume = {
/root/machinex/sound/pci/ice1712/ice1712.c:static struct snd_kcontrol_new snd_ice1712_multi_capture_spdif_volume = {
/root/machinex/sound/pci/ice1712/ice1712.c:static void snd_ice1712_update_volume(struct snd_ice1712 *ice, int index)
/root/machinex/sound/pci/ice1712/ice1712.c:		struct snd_kcontrol_new tmp = snd_ice1712_multi_capture_analog_volume;
/root/machinex/sound/pci/ice1712/ice1712.c:	unsigned int vol = ice->pro_volumes[index];
/root/machinex/sound/pci/ice1712/ice1712.h:#define ICE1712_CFG_I2S_VOLUME	0x80	/* volume/mute capability */
/root/machinex/sound/pci/ice1712/ice1712.h:#define ICE1712_DSC_VOLUME		0x06	/* word - volume control */
/root/machinex/sound/pci/ice1712/ice1712.h:#define ICE1712_IREG_PBK_LEFT		0x03	/* left volume */
/root/machinex/sound/pci/ice1712/ice1712.h:#define ICE1712_IREG_PBK_RIGHT		0x04	/* right volume */
/root/machinex/sound/pci/ice1712/ice1712.h:#define ICE1712_IREG_PBK_SOFT		0x05	/* soft volume */
/root/machinex/sound/pci/ice1712/ice1712.h:#define ICE1712_MT_MONITOR_VOLUME	0x38	/* word */
/root/machinex/sound/pci/ice1712/ice1712.h:	unsigned int pro_volumes[20];
/root/machinex/sound/pci/ice1712/ice1724.c:	 * enabled again in output_trigger when the new data comes in.
/root/machinex/sound/pci/ice1712/ice1724.c:	[ICE_EEP2_I2S]         = 0x78,	/* no volume, 96k, 24bit, 192k */
/root/machinex/sound/pci/ice1712/juli.c:	AK_DAC(MONITOR_AN_IN_VOLUME, 2),
/root/machinex/sound/pci/ice1712/juli.c:	AK_DAC(MONITOR_DIG_IN_VOLUME, 2),
/root/machinex/sound/pci/ice1712/juli.c:	AK_DAC(MONITOR_DIG_OUT_VOLUME, 2),
/root/machinex/sound/pci/ice1712/juli.c:	AK_DAC(PCM_VOLUME, 2),
/root/machinex/sound/pci/ice1712/juli.c:#define MONITOR_AN_IN_VOLUME	"Monitor Analog In Volume"
/root/machinex/sound/pci/ice1712/juli.c:#define MONITOR_DIG_IN_VOLUME	"Monitor Digital In Volume"
/root/machinex/sound/pci/ice1712/juli.c:#define MONITOR_DIG_OUT_VOLUME	"Monitor Digital Out Volume"
/root/machinex/sound/pci/ice1712/juli.c:#define PCM_VOLUME		"PCM Playback Volume"
/root/machinex/sound/pci/ice1712/juli.c:	MONITOR_AN_IN_VOLUME,
/root/machinex/sound/pci/ice1712/juli.c:	MONITOR_DIG_IN_VOLUME,
/root/machinex/sound/pci/ice1712/juli.c:	MONITOR_DIG_OUT_VOLUME,
/root/machinex/sound/pci/ice1712/juli.c:	PCM_VOLUME,
/root/machinex/sound/pci/ice1712/juli.c: * The card itself has no HW master volume control, implemented using the
/root/machinex/sound/pci/ice1712/juli.c:	 * volume of the monitor sound.
/root/machinex/sound/pci/ice1712/maya44.c:/* ADC gain: mute, -21..+24db (0.5db step) */
/root/machinex/sound/pci/ice1712/maya44.c:		if (val == wm->volumes[idx][ch])
/root/machinex/sound/pci/ice1712/maya44.c:	ucontrol->value.integer.value[0] = wm->volumes[idx][0];
/root/machinex/sound/pci/ice1712/maya44.c:	ucontrol->value.integer.value[1] = wm->volumes[idx][1];
/root/machinex/sound/pci/ice1712/maya44.c:	unsigned char volumes[WM_NUM_VOLS][2];
/root/machinex/sound/pci/ice1712/maya44.c:	unsigned int maxval;		/* volume range: 0..maxval */
/root/machinex/sound/pci/ice1712/maya44.c: * WM8776 volume controls
/root/machinex/sound/pci/ice1712/maya44.c:		wm->volumes[idx][ch] = val;
/root/machinex/sound/pci/ice1712/phase.c: * DAC volume attenuation mixer control
/root/machinex/sound/pci/ice1712/phase.c:#define WM_ADC_GAIN		0x19	/* ADC gain L(19)/R(1a) */
/root/machinex/sound/pci/ice1712/phase.c:/* digital master volume */
/root/machinex/sound/pci/ice1712/phase.c: * Logarithmic volume values for WM8770
/root/machinex/sound/pci/ice1712/phase.c: * Master volume attenuation mixer control
/root/machinex/sound/pci/ice1712/pontis.c: * ADC gain mixer control (-64dB to 0dB)
/root/machinex/sound/pci/ice1712/pontis.c: * DAC volume attenuation mixer control (-64dB to 0dB)
/root/machinex/sound/pci/ice1712/pontis.c:static const DECLARE_TLV_DB_SCALE(db_scale_volume, -6400, 50, 1);
/root/machinex/sound/pci/ice1712/pontis.c:		.tlv = { .p = db_scale_volume },
/root/machinex/sound/pci/ice1712/pontis.c:		.tlv = { .p = db_scale_volume },
/root/machinex/sound/pci/ice1712/prodigy192.c: * ADC gain mixer control
/root/machinex/sound/pci/ice1712/prodigy192.c: * DAC volume attenuation mixer control
/root/machinex/sound/pci/ice1712/prodigy192.c:		idx  = snd_ctl_get_ioffidx(kcontrol, &ucontrol->id) + STAC946X_LF_VOLUME;
/root/machinex/sound/pci/ice1712/prodigy192.c:		idx  = snd_ctl_get_ioffidx(kcontrol, &ucontrol->id) + STAC946X_LF_VOLUME;
/root/machinex/sound/pci/ice1712/prodigy192.c:		idx  = snd_ctl_get_ioffidx(kcontrol, &ucontrol->id) + STAC946X_LF_VOLUME;
/root/machinex/sound/pci/ice1712/prodigy192.c:		idx  = snd_ctl_get_ioffidx(kcontrol, &ucontrol->id) + STAC946X_LF_VOLUME;
/root/machinex/sound/pci/ice1712/prodigy192.c: * idx = STAC9460 volume register number, mute: 0 = mute, 1 = unmute
/root/machinex/sound/pci/ice1712/prodigy192.c:		idx = STAC946X_MASTER_VOLUME;
/root/machinex/sound/pci/ice1712/prodigy192.c:		idx = STAC946X_MASTER_VOLUME;
/root/machinex/sound/pci/ice1712/prodigy192.c:		idx = STAC946X_MASTER_VOLUME;
/root/machinex/sound/pci/ice1712/prodigy192.c:		idx = STAC946X_MASTER_VOLUME;
/root/machinex/sound/pci/ice1712/prodigy192.c:		reg = STAC946X_MIC_L_VOLUME + i;
/root/machinex/sound/pci/ice1712/prodigy192.c:		reg = STAC946X_MIC_L_VOLUME + i;
/root/machinex/sound/pci/ice1712/prodigy192.c:		reg = STAC946X_MIC_L_VOLUME + i;
/root/machinex/sound/pci/ice1712/prodigy192.c:			stac9460_dac_mute(ice, STAC946X_MASTER_VOLUME + idx, 1);
/root/machinex/sound/pci/ice1712/prodigy192.c:		STAC946X_CENTER_VOLUME, 0,
/root/machinex/sound/pci/ice1712/prodigy192.c:		STAC946X_LFE_VOLUME, 0,*/
/root/machinex/sound/pci/ice1712/prodigy192.c:		STAC946X_LF_VOLUME, 0,
/root/machinex/sound/pci/ice1712/prodigy192.c:		STAC946X_LR_VOLUME, 0,
/root/machinex/sound/pci/ice1712/prodigy192.c:/*		STAC946X_MASTER_VOLUME, 0,
/root/machinex/sound/pci/ice1712/prodigy192.c:				STAC946X_MASTER_VOLUME + idx, 0);
/root/machinex/sound/pci/ice1712/prodigy192.c:		STAC946X_RF_VOLUME, 0,
/root/machinex/sound/pci/ice1712/prodigy192.c:		STAC946X_RR_VOLUME, 0,
/root/machinex/sound/pci/ice1712/prodigy192.c:		val = stac9460_get(ice, STAC946X_MIC_L_VOLUME + i);
/root/machinex/sound/pci/ice1712/prodigy_hifi.c: * ADC gain mixer control (-64dB to 0dB)
/root/machinex/sound/pci/ice1712/prodigy_hifi.c: * DAC volume attenuation mixer control (-64dB to 0dB)
/root/machinex/sound/pci/ice1712/prodigy_hifi.c: * DAC volume attenuation mixer control (-64dB to 0dB)
/root/machinex/sound/pci/ice1712/prodigy_hifi.c:	/* initialize ak4396 codec and restore previous mixer volumes */
/root/machinex/sound/pci/ice1712/prodigy_hifi.c: * Logarithmic volume values for WM87*6
/root/machinex/sound/pci/ice1712/prodigy_hifi.c: * Master volume attenuation mixer control / applied to WM8776+WM8766
/root/machinex/sound/pci/ice1712/prodigy_hifi.c:static const DECLARE_TLV_DB_LINEAR(ak4396_db_scale, TLV_DB_GAIN_MUTE, 0);
/root/machinex/sound/pci/ice1712/prodigy_hifi.c: * WM8766 DAC volume attenuation mixer control
/root/machinex/sound/pci/ice1712/quartet.c:	AK_CONTROL(PCM_12_CAPTURE_VOLUME, 2),
/root/machinex/sound/pci/ice1712/quartet.c:	AK_CONTROL(PCM_12_PLAYBACK_VOLUME, 2),
/root/machinex/sound/pci/ice1712/quartet.c:	AK_CONTROL(PCM_34_CAPTURE_VOLUME, 2),
/root/machinex/sound/pci/ice1712/quartet.c:	AK_CONTROL(PCM_34_PLAYBACK_VOLUME, 2),
/root/machinex/sound/pci/ice1712/quartet.c:#define PCM_12_CAPTURE_VOLUME	"PCM 1/2 Capture Volume"
/root/machinex/sound/pci/ice1712/quartet.c:#define PCM_12_PLAYBACK_VOLUME	"PCM 1/2 Playback Volume"
/root/machinex/sound/pci/ice1712/quartet.c:#define PCM_34_CAPTURE_VOLUME	"PCM 3/4 Capture Volume"
/root/machinex/sound/pci/ice1712/quartet.c:#define PCM_34_PLAYBACK_VOLUME	"PCM 3/4 Playback Volume"
/root/machinex/sound/pci/ice1712/quartet.c:	PCM_12_PLAYBACK_VOLUME,
/root/machinex/sound/pci/ice1712/quartet.c:	PCM_34_PLAYBACK_VOLUME,
/root/machinex/sound/pci/ice1712/revo.c:		err = revo51_i2c_init(ice, &ptc_revo51_volume);
/root/machinex/sound/pci/ice1712/revo.c: * I2C access to the PT2258 volume controller on GPIO 6/7 (Revolution 5.1)
/root/machinex/sound/pci/ice1712/revo.c:static struct snd_pt2258 ptc_revo51_volume;
/root/machinex/sound/pci/ice1712/se.c:		case VOLUME1:
/root/machinex/sound/pci/ice1712/se.c:		case VOLUME2:
/root/machinex/sound/pci/ice1712/se.c:			cont.get = se200pci_cont_volume_get;
/root/machinex/sound/pci/ice1712/se.c:			cont.info = se200pci_cont_volume_info;
/root/machinex/sound/pci/ice1712/se.c:			cont.put = se200pci_cont_volume_put;
/root/machinex/sound/pci/ice1712/se.c:				cont.tlv.p = db_scale_gain1;
/root/machinex/sound/pci/ice1712/se.c:				cont.tlv.p = db_scale_gain2;
/root/machinex/sound/pci/ice1712/se.c:	enum { VOLUME1, VOLUME2, BOOLEAN, ENUM } type;
/root/machinex/sound/pci/ice1712/se.c: *    I2S codec has no volume/mute control feature
/root/machinex/sound/pci/ice1712/se.c:			if (se200pci_cont[i].type == VOLUME1)
/root/machinex/sound/pci/ice1712/se.c:		se200pci_WM8766_set_volume(ice,
/root/machinex/sound/pci/ice1712/se.c:	se200pci_WM8766_set_volume(ice, 0, 0, 0); /* volume L=0 R=0 */
/root/machinex/sound/pci/ice1712/se.c:	se200pci_WM8766_set_volume(ice, 1, 0, 0); /* volume L=0 R=0 */
/root/machinex/sound/pci/ice1712/se.c:	se200pci_WM8766_set_volume(ice, 2, 0, 0); /* volume L=0 R=0 */
/root/machinex/sound/pci/ice1712/se.c:		se200pci_WM8776_set_input_volume(ice,
/root/machinex/sound/pci/ice1712/se.c:	se200pci_WM8776_set_input_volume(ice, 0, 0);
/root/machinex/sound/pci/ice1712/se.c:		se200pci_WM8776_set_output_volume(ice,
/root/machinex/sound/pci/ice1712/se.c:	se200pci_WM8776_set_output_volume(ice, 0, 0);
/root/machinex/sound/pci/ice1712/se.c:static const DECLARE_TLV_DB_SCALE(db_scale_gain1, -12750, 50, 1);
/root/machinex/sound/pci/ice1712/se.c:static const DECLARE_TLV_DB_SCALE(db_scale_gain2, -10350, 50, 1);
/root/machinex/sound/pci/ice1712/se.c:static int se200pci_cont_volume_get(struct snd_kcontrol *kc,
/root/machinex/sound/pci/ice1712/se.c:static int se200pci_cont_volume_info(struct snd_kcontrol *kc,
/root/machinex/sound/pci/ice1712/se.c:static int se200pci_cont_volume_put(struct snd_kcontrol *kc,
/root/machinex/sound/pci/ice1712/se.c:static void se200pci_WM8766_set_volume(struct snd_ice1712 *ice, int ch,
/root/machinex/sound/pci/ice1712/se.c:static void se200pci_WM8776_set_input_volume(struct snd_ice1712 *ice,
/root/machinex/sound/pci/ice1712/se.c:static void se200pci_WM8776_set_output_volume(struct snd_ice1712 *ice,
/root/machinex/sound/pci/ice1712/se.c:		.type = VOLUME1,
/root/machinex/sound/pci/ice1712/se.c:		.type = VOLUME1,
/root/machinex/sound/pci/ice1712/se.c:		.type = VOLUME1,
/root/machinex/sound/pci/ice1712/se.c:		.type = VOLUME1,
/root/machinex/sound/pci/ice1712/se.c:		.type = VOLUME2
/root/machinex/sound/pci/ice1712/stac946x.h:#define STAC946X_CENTER_VOLUME		0x07
/root/machinex/sound/pci/ice1712/stac946x.h:#define STAC946X_LFE_VOLUME		0x08
/root/machinex/sound/pci/ice1712/stac946x.h:#define STAC946X_LF_VOLUME		0x03
/root/machinex/sound/pci/ice1712/stac946x.h:#define STAC946X_LR_VOLUME		0x05
/root/machinex/sound/pci/ice1712/stac946x.h:#define STAC946X_MASTER_VOLUME		0x02
/root/machinex/sound/pci/ice1712/stac946x.h:#define STAC946X_MIC_L_VOLUME		0x09
/root/machinex/sound/pci/ice1712/stac946x.h:#define STAC946X_MIC_R_VOLUME		0x0a
/root/machinex/sound/pci/ice1712/stac946x.h:#define STAC946X_RF_VOLUME		0x04
/root/machinex/sound/pci/ice1712/stac946x.h:#define STAC946X_RR_VOLUME		0x06
/root/machinex/sound/pci/ice1712/wtm.c: *ADC gain mixer control
/root/machinex/sound/pci/ice1712/wtm.c: * 	DAC volume attenuation mixer control
/root/machinex/sound/pci/ice1712/wtm.c:		idx = id + STAC946X_LF_VOLUME;
/root/machinex/sound/pci/ice1712/wtm.c:		idx = id + STAC946X_LF_VOLUME;
/root/machinex/sound/pci/ice1712/wtm.c:		idx = id + STAC946X_LF_VOLUME;
/root/machinex/sound/pci/ice1712/wtm.c:		idx = id + STAC946X_LF_VOLUME;
/root/machinex/sound/pci/ice1712/wtm.c:		idx = STAC946X_MASTER_VOLUME;
/root/machinex/sound/pci/ice1712/wtm.c:		idx = STAC946X_MASTER_VOLUME;
/root/machinex/sound/pci/ice1712/wtm.c:		idx = STAC946X_MASTER_VOLUME;
/root/machinex/sound/pci/ice1712/wtm.c:		idx = STAC946X_MASTER_VOLUME;
/root/machinex/sound/pci/ice1712/wtm.c:			reg = STAC946X_MIC_L_VOLUME + i;
/root/machinex/sound/pci/ice1712/wtm.c:			reg = STAC946X_MIC_L_VOLUME + i;
/root/machinex/sound/pci/ice1712/wtm.c:			reg = STAC946X_MIC_L_VOLUME + i;
/root/machinex/sound/pci/ice1712/wtm.c:			reg = STAC946X_MIC_L_VOLUME + i;
/root/machinex/sound/pci/ice1712/wtm.c:			reg = STAC946X_MIC_L_VOLUME + i;
/root/machinex/sound/pci/ice1712/wtm.c:			reg = STAC946X_MIC_L_VOLUME + i;
/root/machinex/sound/pci/ice1712/wtm.c:			val = stac9460_2_get(ice, STAC946X_MIC_L_VOLUME + i);
/root/machinex/sound/pci/ice1712/wtm.c:			val = stac9460_get(ice, STAC946X_MIC_L_VOLUME + i);
/root/machinex/sound/pci/intel8x0.c:      __again:
/root/machinex/sound/pci/intel8x0.c:			goto __again;
/root/machinex/sound/pci/intel8x0.c:	ICH_REG_ALI_HWVOL = 0xf0,	/* hardware volume control/status */
/root/machinex/sound/pci/Kconfig:	  (and again) between digital and analog input until it works.
/root/machinex/sound/pci/Kconfig:	bool "Enable input device for es1968 volume buttons"
/root/machinex/sound/pci/Kconfig:	bool "Enable input device for maestro3 volume buttons"
/root/machinex/sound/pci/Kconfig:	  If you say N the buttons will directly control the master volume.
/root/machinex/sound/pci/Kconfig:	  If you say N the buttons will directly control the master volume.
/root/machinex/sound/pci/Kconfig:	  It can produce continuous noise. The workaround is to switch again
/root/machinex/sound/pci/Kconfig:	  keypresses for the volume buttons connected to the es1968 chip.
/root/machinex/sound/pci/Kconfig:	  keypresses for the volume buttons connected to the maestro3 chip.
/root/machinex/sound/pci/korg1212/korg1212.c:	    abs(korg1212->sharedBufferPtr->volumeData[i])) {
/root/machinex/sound/pci/korg1212/korg1212.c:		    abs(korg1212->sharedBufferPtr->volumeData[i+1])) {
/root/machinex/sound/pci/korg1212/korg1212.c:                .get =		snd_korg1212_control_volume_get,				\
/root/machinex/sound/pci/korg1212/korg1212.c:                .info =		snd_korg1212_control_volume_info,				\
/root/machinex/sound/pci/korg1212/korg1212.c:        // Initialize the routing and volume tables, then update the card's state.
/root/machinex/sound/pci/korg1212/korg1212.c:        int volumePhase[kAudioChannels];
/root/machinex/sound/pci/korg1212/korg1212.c:                korg1212->sharedBufferPtr->volumeData[channel] = k1212MaxVolume;
/root/machinex/sound/pci/korg1212/korg1212.c:			korg1212->sharedBufferPtr->volumeData[i+1] = val;
/root/machinex/sound/pci/korg1212/korg1212.c:			korg1212->sharedBufferPtr->volumeData[i+1] = val;
/root/machinex/sound/pci/korg1212/korg1212.c:		korg1212->sharedBufferPtr->volumeData[i] = val;
/root/machinex/sound/pci/korg1212/korg1212.c:		korg1212->sharedBufferPtr->volumeData[i] = val;
/root/machinex/sound/pci/korg1212/korg1212.c:                                    korg1212->sharedBufferPtr->volumeData[n]);
/root/machinex/sound/pci/korg1212/korg1212.c:                korg1212->volumePhase[i] = 0;
/root/machinex/sound/pci/korg1212/korg1212.c:		korg1212->volumePhase[i+1] = !!u->value.integer.value[1];
/root/machinex/sound/pci/korg1212/korg1212.c:	korg1212->volumePhase[i] = !!u->value.integer.value[0];
/root/machinex/sound/pci/korg1212/korg1212.c:        // later when setting the SPDIF FF after the volume has been shifted in.
/root/machinex/sound/pci/korg1212/korg1212.c:		offsetof(struct KorgSharedBuffer, volumeData);
/root/machinex/sound/pci/korg1212/korg1212.c:                .put =		snd_korg1212_control_volume_put,				\
/root/machinex/sound/pci/korg1212/korg1212.c:		return -EAGAIN;
/root/machinex/sound/pci/korg1212/korg1212.c:   short             volumeData[kAudioChannels];
/root/machinex/sound/pci/korg1212/korg1212.c:static int snd_korg1212_control_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/korg1212/korg1212.c:static int snd_korg1212_control_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/korg1212/korg1212.c:static int snd_korg1212_control_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/korg1212/korg1212.c:	    (unsigned) korg1212->sharedBufferPtr->volumeData[i]) {
/root/machinex/sound/pci/korg1212/korg1212.c:		    (unsigned) korg1212->sharedBufferPtr->volumeData[i+1]) {
/root/machinex/sound/pci/korg1212/korg1212.c:        u->value.integer.value[0] = abs(korg1212->sharedBufferPtr->volumeData[i]);
/root/machinex/sound/pci/korg1212/korg1212.c:        u->value.integer.value[0] = korg1212->volumePhase[i];
/root/machinex/sound/pci/korg1212/korg1212.c:                u->value.integer.value[1] = abs(korg1212->sharedBufferPtr->volumeData[i+1]);
/root/machinex/sound/pci/korg1212/korg1212.c:        	u->value.integer.value[1] = korg1212->volumePhase[i+1];
/root/machinex/sound/pci/korg1212/korg1212.c:		val = abs(val) * (korg1212->volumePhase[i] > 0 ? -1 : 1);
/root/machinex/sound/pci/korg1212/korg1212.c:			val = abs(val) * (korg1212->volumePhase[i+1] > 0 ? -1 : 1);
/root/machinex/sound/pci/korg1212/korg1212.c:	val = korg1212->sharedBufferPtr->volumeData[kcontrol->private_value];
/root/machinex/sound/pci/korg1212/korg1212.c:		val = korg1212->sharedBufferPtr->volumeData[kcontrol->private_value+1];
/root/machinex/sound/pci/korg1212/korg1212.c:		val = korg1212->volumePhase[i] > 0 ? -1 : 1;
/root/machinex/sound/pci/korg1212/korg1212.c:			val = korg1212->volumePhase[i+1] > 0 ? -1 : 1;
/root/machinex/sound/pci/lola/lola.c: again:
/root/machinex/sound/pci/lola/lola.c:		goto again;
/root/machinex/sound/pci/lola/lola.c:	lola_setup_all_analog_gains(chip, CAPT, false); /* input, update */
/root/machinex/sound/pci/lola/lola.c:	lola_setup_all_analog_gains(chip, PLAY, false); /* output, update */
/root/machinex/sound/pci/lola/lola.c:	 * the state of the card; initialize here again
/root/machinex/sound/pci/lola/lola.c:	/* update the analog gains */
/root/machinex/sound/pci/lola/lola.h:#define LOLA_BAR1_DEST00_MIX00_01_GAIN		0x10c4
/root/machinex/sound/pci/lola/lola.h:#define LOLA_BAR1_DEST00_MIX30_31_GAIN		0x1100
/root/machinex/sound/pci/lola/lola.h:#define LOLA_BAR1_DEST00_MIX_GAIN_ENABLE	0x1004
/root/machinex/sound/pci/lola/lola.h:#define LOLA_BAR1_DEST01_MIX00_01_GAIN		0x1104
/root/machinex/sound/pci/lola/lola.h:#define LOLA_BAR1_DEST01_MIX30_31_GAIN		0x1140
/root/machinex/sound/pci/lola/lola.h:#define LOLA_BAR1_DEST31_MIX00_01_GAIN		0x1884
/root/machinex/sound/pci/lola/lola.h:#define LOLA_BAR1_DEST31_MIX30_31_GAIN		0x18c0
/root/machinex/sound/pci/lola/lola.h:#define LOLA_BAR1_DEST31_MIX_GAIN_ENABLE	0x1080
/root/machinex/sound/pci/lola/lola.h:#define LOLA_BAR1_MIX_GAIN(dest, mix) \
/root/machinex/sound/pci/lola/lola.h:#define LOLA_BAR1_SOURCE00_01_GAIN		0x1084
/root/machinex/sound/pci/lola/lola.h:#define LOLA_BAR1_SOURCE30_31_GAIN		0x10c0
/root/machinex/sound/pci/lola/lola.h:#define LOLA_BAR1_SOURCE_GAIN_ENABLE		0x1000
/root/machinex/sound/pci/lola/lola.h:#define LOLA_BAR1_SOURCE_GAIN(src) \
/root/machinex/sound/pci/lola/lola.h:#define LOLA_PAR_FIXED_GAIN_LIST		0x81
/root/machinex/sound/pci/lola/lola.h:#define LOLA_VERB_GET_AMP_GAIN_MUTE		0xb00
/root/machinex/sound/pci/lola/lola.h:#define LOLA_VERB_GET_FIXED_GAIN		0xfc0
/root/machinex/sound/pci/lola/lola.h:#define LOLA_VERB_GET_GAIN_SELECT		0xfc1
/root/machinex/sound/pci/lola/lola.h:#define LOLA_VERB_SET_AMP_GAIN_MUTE		0x300
/root/machinex/sound/pci/lola/lola.h:#define LOLA_VERB_SET_DESTINATION_GAIN		0xf89
/root/machinex/sound/pci/lola/lola.h:#define LOLA_VERB_SET_GAIN_SELECT		0xf81
/root/machinex/sound/pci/lola/lola.h:#define LOLA_VERB_SET_MIX_GAIN			0xf88
/root/machinex/sound/pci/lola/lola.h:#define LOLA_VERB_SET_SOURCE_GAIN		0xf87
/root/machinex/sound/pci/lola/lola.h:int lola_setup_all_analog_gains(struct lola *chip, int dir, bool mute);
/root/machinex/sound/pci/lola/lola.h:	(LOLA_BAR1_DEST00_MIX00_01_GAIN + (dest) * 0x40 + (mix) * 2)
/root/machinex/sound/pci/lola/lola.h:	(LOLA_BAR1_SOURCE00_01_GAIN + (src) * 2)
/root/machinex/sound/pci/lola/lola.h:	u16 dest_mix_gain[LOLA_MIXER_DIM][LOLA_MIXER_DIM];
/root/machinex/sound/pci/lola/lola.h:	u16 src_gain[LOLA_MIXER_DIM];
/root/machinex/sound/pci/lola/lola.h:	u32 dest_mix_gain_enable[LOLA_MIXER_DIM];
/root/machinex/sound/pci/lola/lola.h:	u32 src_gain_enable;
/root/machinex/sound/pci/lola/lola.h:	unsigned int cur_gain_step;
/root/machinex/sound/pci/lola/lola.h:	unsigned int fixed_gain_list_len;
/root/machinex/sound/pci/lola/lola_mixer.c:	 * |a|  | dest_mix_gain_enable array |
/root/machinex/sound/pci/lola/lola_mixer.c:		(chip->bar[BAR1].remap_addr + LOLA_BAR1_SOURCE_GAIN_ENABLE);
/root/machinex/sound/pci/lola/lola_mixer.c:			chip->pin[dir].pins[i].cur_gain_step;
/root/machinex/sound/pci/lola/lola_mixer.c: * destination gain (matrix-like) mixer
/root/machinex/sound/pci/lola/lola_mixer.c:	 *      |  dest_mix_gain_enable array   |
/root/machinex/sound/pci/lola/lola_mixer.c:	err = create_dest_gain_mixer(chip,
/root/machinex/sound/pci/lola/lola_mixer.c:	err = create_dest_gain_mixer(chip,
/root/machinex/sound/pci/lola/lola_mixer.c:	err = create_dest_gain_mixer(chip,
/root/machinex/sound/pci/lola/lola_mixer.c:	err = create_dest_gain_mixer(chip,
/root/machinex/sound/pci/lola/lola_mixer.c:	err = create_src_gain_mixer(chip, chip->mixer.src_phys_ins, 0,
/root/machinex/sound/pci/lola/lola_mixer.c:	err = create_src_gain_mixer(chip, chip->mixer.src_stream_outs,
/root/machinex/sound/pci/lola/lola_mixer.c:		err = lola_mixer_set_src_gain(chip, idx, val, !!val);
/root/machinex/sound/pci/lola/lola_mixer.c:		err = set_analog_volume(chip, dir, i,
/root/machinex/sound/pci/lola/lola_mixer.c:	    (gain == readw(&chip->mixer.array->src_gain[id])))
/root/machinex/sound/pci/lola/lola_mixer.c:			gains++;
/root/machinex/sound/pci/lola/lola_mixer.c:			gains++;
/root/machinex/sound/pci/lola/lola_mixer.c:			gains[num++] = val - 1;
/root/machinex/sound/pci/lola/lola_mixer.c:	.get = lola_dest_gain_get,
/root/machinex/sound/pci/lola/lola_mixer.c:	.get = lola_src_gain_get,
/root/machinex/sound/pci/lola/lola_mixer.c:			id, gain, val);
/root/machinex/sound/pci/lola/lola_mixer.c:	if (external_call && pin->cur_gain_step == val)
/root/machinex/sound/pci/lola/lola_mixer.c:	.info = lola_dest_gain_info,
/root/machinex/sound/pci/lola/lola_mixer.c:	.info = lola_src_gain_info,
/root/machinex/sound/pci/lola/lola_mixer.c:	/* inform micro-controller about the new source gain */
/root/machinex/sound/pci/lola/lola_mixer.c:int lola_setup_all_analog_gains(struct lola *chip, int dir, bool mute)
/root/machinex/sound/pci/lola/lola_mixer.c:	lola_dest_gain_mixer.count = num;
/root/machinex/sound/pci/lola/lola_mixer.c:	lola_dest_gain_mixer.name = name;
/root/machinex/sound/pci/lola/lola_mixer.c:	lola_dest_gain_mixer.private_value =
/root/machinex/sound/pci/lola/lola_mixer.c:		lola_mixer_set_mapping_gain(chip, src, dst, 336, true);
/root/machinex/sound/pci/lola/lola_mixer.c:		lola_mixer_set_mapping_gain(chip, src, i, 336, true);
/root/machinex/sound/pci/lola/lola_mixer.c:		lola_mixer_set_src_gain(chip,
/root/machinex/sound/pci/lola/lola_mixer.c:		lola_mixer_set_src_gain(chip, i, 336, true); /* 0dB */
/root/machinex/sound/pci/lola/lola_mixer.c:	lola_setup_all_analog_gains(chip, PLAY, true); /* output mute */
/root/machinex/sound/pci/lola/lola_mixer.c:	lola_src_gain_mixer.name = name;
/root/machinex/sound/pci/lola/lola_mixer.c:	lola_src_gain_mixer.private_value = ofs + (num << 8);
/root/machinex/sound/pci/lola/lola_mixer.c:			       LOLA_VERB_SET_AMP_GAIN_MUTE, val, 0);
/root/machinex/sound/pci/lola/lola_mixer.c:				 LOLA_VERB_SET_DESTINATION_GAIN,
/root/machinex/sound/pci/lola/lola_mixer.c:				 LOLA_VERB_SET_DESTINATION_GAIN,
/root/machinex/sound/pci/lola/lola_mixer.c:					 LOLA_VERB_SET_DESTINATION_GAIN,
/root/machinex/sound/pci/lola/lola_mixer.c:					 LOLA_VERB_SET_DESTINATION_GAIN,
/root/machinex/sound/pci/lola/lola_mixer.c:				LOLA_VERB_SET_DESTINATION_GAIN, id, 0);
/root/machinex/sound/pci/lola/lola_mixer.c:					 LOLA_VERB_SET_SOURCE_GAIN,
/root/machinex/sound/pci/lola/lola_mixer.c:					 LOLA_VERB_SET_SOURCE_GAIN,
/root/machinex/sound/pci/lola/lola_mixer.c:					LOLA_VERB_SET_SOURCE_GAIN, 0x80, 0);
/root/machinex/sound/pci/lola/lola_mixer.c:					 LOLA_VERB_SET_SOURCE_GAIN, i, 0);
/root/machinex/sound/pci/lola/lola_mixer.c:				LOLA_VERB_SET_SOURCE_GAIN, id, 0);
/root/machinex/sound/pci/lola/lola_mixer.c:	mask = readl(&chip->mixer.array->dest_mix_gain_enable[dst]);
/root/machinex/sound/pci/lola/lola_mixer.c:	mask = readl(&chip->mixer.array->src_gain_enable);
/root/machinex/sound/pci/lola/lola_mixer.c:	/* no analog volumes on digital only adapters */
/root/machinex/sound/pci/lola/lola_mixer.c:	oldval = val = readl(&chip->mixer.array->src_gain_enable);
/root/machinex/sound/pci/lola/lola_mixer.c:	pin->cur_gain_step = 0;
/root/machinex/sound/pci/lola/lola_mixer.c:		pin->cur_gain_step = val;
/root/machinex/sound/pci/lola/lola_mixer.c:	pin->fixed_gain_list_len = 0;
/root/machinex/sound/pci/lola/lola_mixer.c:	.put = lola_dest_gain_put,
/root/machinex/sound/pci/lola/lola_mixer.c:	.put = lola_src_gain_put,
/root/machinex/sound/pci/lola/lola_mixer.c:	return lola_codec_write(chip, chip->mixer.nid, LOLA_VERB_SET_MIX_GAIN,
/root/machinex/sound/pci/lola/lola_mixer.c:	return lola_mixer_set_dest_gains(chip, dst, mask, gains);
/root/machinex/sound/pci/lola/lola_mixer.c:	/* set all digital input source (master) gains to 0dB */
/root/machinex/sound/pci/lola/lola_mixer.c:	/* set all digital playback source (master) gains to 0dB */
/root/machinex/sound/pci/lola/lola_mixer.c:			set_analog_volume(chip, dir, idx, val, false);
/root/machinex/sound/pci/lola/lola_mixer.c:	/* set gain value 0dB diagonally in matrix - part INPUT -> CAPTURE */
/root/machinex/sound/pci/lola/lola_mixer.c:	/* set gain value 0dB diagonally in matrix , part PLAYBACK -> OUTPUT
/root/machinex/sound/pci/lola/lola_mixer.c:			/* set volume and do not save the value */
/root/machinex/sound/pci/lola/lola_mixer.c:			  snd_ctl_new1(&lola_dest_gain_mixer, chip));
/root/machinex/sound/pci/lola/lola_mixer.c:			   snd_ctl_new1(&lola_src_gain_mixer, chip));
/root/machinex/sound/pci/lola/lola_mixer.c:	snd_printdd("lola_mixer_set_src_gain (id=%d, gain=%d) enable=%x\n",
/root/machinex/sound/pci/lola/lola_mixer.c:	snd_printdd("set_analog_volume (dir=%d idx=%d, volume=%d)\n",
/root/machinex/sound/pci/lola/lola_mixer.c: * src gain mixer
/root/machinex/sound/pci/lola/lola_mixer.c:static const DECLARE_TLV_DB_SCALE(lola_dest_gain_tlv, -8425, 25, 1);
/root/machinex/sound/pci/lola/lola_mixer.c:static const DECLARE_TLV_DB_SCALE(lola_src_gain_tlv, -8425, 25, 1);
/root/machinex/sound/pci/lola/lola_mixer.c:static int create_dest_gain_mixer(struct lola *chip,
/root/machinex/sound/pci/lola/lola_mixer.c:static int create_src_gain_mixer(struct lola *chip,
/root/machinex/sound/pci/lola/lola_mixer.c:static int lola_dest_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/lola/lola_mixer.c:static int lola_dest_gain_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/lola/lola_mixer.c:static int lola_dest_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/lola/lola_mixer.c:static int lola_mixer_set_dest_gains(struct lola *chip, unsigned int id,
/root/machinex/sound/pci/lola/lola_mixer.c:static int lola_mixer_set_mapping_gain(struct lola *chip,
/root/machinex/sound/pci/lola/lola_mixer.c:static int lola_mixer_set_src_gains(struct lola *chip, unsigned int mask,
/root/machinex/sound/pci/lola/lola_mixer.c:static int lola_mixer_set_src_gain(struct lola *chip, unsigned int id,
/root/machinex/sound/pci/lola/lola_mixer.c:static int lola_src_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/lola/lola_mixer.c:static int lola_src_gain_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/lola/lola_mixer.c:static int lola_src_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/lola/lola_mixer.c:static int set_analog_volume(struct lola *chip, int dir,
/root/machinex/sound/pci/lola/lola_mixer.c:static int set_analog_volume(struct lola *chip, int dir,
/root/machinex/sound/pci/lola/lola_mixer.c:static struct snd_kcontrol_new lola_dest_gain_mixer = {
/root/machinex/sound/pci/lola/lola_mixer.c:static struct snd_kcontrol_new lola_src_gain_mixer = {
/root/machinex/sound/pci/lola/lola_mixer.c:	.tlv.p = lola_dest_gain_tlv,
/root/machinex/sound/pci/lola/lola_mixer.c:	.tlv.p = lola_src_gain_tlv,
/root/machinex/sound/pci/lola/lola_mixer.c:				     unsigned int mask, unsigned short *gains)
/root/machinex/sound/pci/lola/lola_mixer.c:			unsigned int val = mute ? 0 : pin[idx].cur_gain_step;
/root/machinex/sound/pci/lola/lola_mixer.c:				       unsigned short gain, bool on)
/root/machinex/sound/pci/lola/lola_mixer.c:				   unsigned short gain, bool on)
/root/machinex/sound/pci/lola/lola_mixer.c:				    unsigned short *gains)
/root/machinex/sound/pci/lola/lola_mixer.c:	unsigned short gains[MAX_STREAM_COUNT];
/root/machinex/sound/pci/lola/lola_mixer.c:	val = readl(&chip->mixer.array->dest_mix_gain_enable[dest]);
/root/machinex/sound/pci/lola/lola_mixer.c:			val = readw(&chip->mixer.array->dest_mix_gain[dst][src]) + 1;
/root/machinex/sound/pci/lola/lola_mixer.c:			val = readw(&chip->mixer.array->src_gain[idx]) + 1;
/root/machinex/sound/pci/lola/lola_mixer.c:	writel(mask, &chip->mixer.array->dest_mix_gain_enable[id]);
/root/machinex/sound/pci/lola/lola_mixer.c:	writel(mask, &chip->mixer.array->src_gain_enable);
/root/machinex/sound/pci/lola/lola_mixer.c:	writel(val, &chip->mixer.array->dest_mix_gain_enable[dest]);
/root/machinex/sound/pci/lola/lola_mixer.c:	writel(val, &chip->mixer.array->src_gain_enable);
/root/machinex/sound/pci/lola/lola_mixer.c:		writew(gain, &chip->mixer.array->dest_mix_gain[dest][src]);
/root/machinex/sound/pci/lola/lola_mixer.c:	writew(gain, &chip->mixer.array->src_gain[id]);
/root/machinex/sound/pci/lola/lola_mixer.c:			writew(*gains, &chip->mixer.array->dest_mix_gain[id][i]);
/root/machinex/sound/pci/lola/lola_mixer.c:			writew(*gains, &chip->mixer.array->src_gain[i]);
/root/machinex/sound/pci/lola/lola_pcm.c: * clear paused flag when FIFO gets ready again
/root/machinex/sound/pci/lx6464es/lx6464es.c:		err = -EAGAIN;
/root/machinex/sound/pci/lx6464es/lx6464es.c:		err = -EAGAIN;
/root/machinex/sound/pci/lx6464es/lx6464es.c:			return -EAGAIN; /* seems to be appropriate */
/root/machinex/sound/pci/lx6464es/lx_core.c:/* low-level gain/peak handling
/root/machinex/sound/pci/lx6464es/lx_core.c:		return -EAGAIN;
/root/machinex/sound/pci/lx6464es/lx_core.h:/* low-level gain/peak handling */
/root/machinex/sound/pci/maestro3.c: * an arbitrary volume we set the internal
/root/machinex/sound/pci/maestro3.c:	{CDATA_LEFT_VOLUME, ARB_VOLUME},
/root/machinex/sound/pci/maestro3.c:	{CDATA_LEFT_VOLUME, ARB_VOLUME},
/root/machinex/sound/pci/maestro3.c:	{CDATA_RIGHT_VOLUME, ARB_VOLUME},
/root/machinex/sound/pci/maestro3.c:	{CDATA_RIGHT_VOLUME, ARB_VOLUME},
/root/machinex/sound/pci/maestro3.c:	chip->master_volume = snd_ctl_find_id(chip->card, &elem_id);
/root/machinex/sound/pci/maestro3.c:		/* counters decreased by 1 -> volume down */
/root/machinex/sound/pci/maestro3.c:		/* counters decreased by 1 -> volume down */
/root/machinex/sound/pci/maestro3.c:		/* counters increased by 1 -> volume up */
/root/machinex/sound/pci/maestro3.c:		/* counters increased by 1 -> volume up */
/root/machinex/sound/pci/maestro3.c:/*#define AC97_RECORD_GAIN        0x1C*/
/root/machinex/sound/pci/maestro3.c:#define ARB_VOLUME ( 0x6800 )
/root/machinex/sound/pci/maestro3.c:#define CDATA_LEFT_VOLUME               0x14
/root/machinex/sound/pci/maestro3.c:#define CDATA_RIGHT_VOLUME              0x15
/root/machinex/sound/pci/maestro3.c:#define KDATA_ADC1_LEFT_VOLUME			(KDATA_BASE_ADDR + 0x003D)
/root/machinex/sound/pci/maestro3.c:#define KDATA_ADC1_RIGHT_VOLUME  		(KDATA_BASE_ADDR + 0x003E)
/root/machinex/sound/pci/maestro3.c:#define KDATA_ADC2_LEFT_VOLUME			(KDATA_BASE_ADDR + 0x0043)
/root/machinex/sound/pci/maestro3.c:#define KDATA_ADC2_RIGHT_VOLUME			(KDATA_BASE_ADDR + 0x0044)
/root/machinex/sound/pci/maestro3.c:#define KDATA_CD_LEFT_VOLUME			(KDATA_BASE_ADDR + 0x0049)
/root/machinex/sound/pci/maestro3.c:#define KDATA_CD_RIGHT_VOLUME			(KDATA_BASE_ADDR + 0x004A)
/root/machinex/sound/pci/maestro3.c:#define KDATA_DAC_LEFT_VOLUME	        (KDATA_BASE_ADDR2 + 0x001F)
/root/machinex/sound/pci/maestro3.c:#define KDATA_DAC_RIGHT_VOLUME          (KDATA_BASE_ADDR2 + 0x0020)
/root/machinex/sound/pci/maestro3.c:#define KDATA_MIC_VOLUME				(KDATA_BASE_ADDR + 0x004F)
/root/machinex/sound/pci/maestro3.c:	 * EXTREME KERNEL MASTER VOLUME
/root/machinex/sound/pci/maestro3.c:	/* Figure out which volume control button was pushed,
/root/machinex/sound/pci/maestro3.c:/* hardware volume quirks */
/root/machinex/sound/pci/maestro3.c:	if (!chip->master_switch || !chip->master_volume)
/root/machinex/sound/pci/maestro3.c:	INIT_WORK(&chip->hwvol_work, snd_m3_update_hw_volume);
/root/machinex/sound/pci/maestro3.c:			  KDATA_DAC_LEFT_VOLUME, ARB_VOLUME);
/root/machinex/sound/pci/maestro3.c:			  KDATA_DAC_RIGHT_VOLUME, ARB_VOLUME);
/root/machinex/sound/pci/maestro3.c:	/* Reset the volume counters to 4. Tests on the allegro integrated
/root/machinex/sound/pci/maestro3.c:	__set_bit(KEY_VOLUMEDOWN, input_dev->keybit);
/root/machinex/sound/pci/maestro3.c:	__set_bit(KEY_VOLUMEUP, input_dev->keybit);
/root/machinex/sound/pci/maestro3.c:static void snd_m3_update_hw_volume(struct work_struct *work)
/root/machinex/sound/pci/maestro3.c:	struct snd_kcontrol *master_volume;
/root/machinex/sound/pci/maestro3.c:/* The m3's hardware volume works by incrementing / decrementing 2 counters
/root/machinex/sound/pci/maestro3.c:	unsigned int hv_config;		/* hardware-volume config bits */
/root/machinex/sound/pci/maestro3.c:		val = KEY_VOLUMEDOWN;
/root/machinex/sound/pci/maestro3.c:		val = KEY_VOLUMEUP;
/root/machinex/sound/pci/maestro3.c: * volume settings to so that the ac97 volume
/root/machinex/sound/pci/maestro3.c:   (without wrap around) in response to volume button presses and then
/root/machinex/sound/pci/mixart/mixart.c:		group_state.pipe_count = 0; /* in case of start same command once again with pipe_count=0 */
/root/machinex/sound/pci/mixart/mixart_core.c:	/* allow interrupt again */
/root/machinex/sound/pci/mixart/mixart_core.h:	u32 fix_gain;          /* float */
/root/machinex/sound/pci/mixart/mixart.h:	int analog_capture_volume[2];		/* Mixer : Master Capture Volume */
/root/machinex/sound/pci/mixart/mixart.h:	int analog_playback_volume[2];		/* Mixer : Master Playback Volume */
/root/machinex/sound/pci/mixart/mixart.h:	int digital_capture_volume[2][2];	/* Mixer : Digital Capture Volume [analog+AES output][stereo] */
/root/machinex/sound/pci/mixart/mixart.h:	int digital_playback_volume[2*MIXART_PLAYBACK_STREAMS][2];	/* Mixer : Digital Playback Volume [(analog+AES output)*streams][stereo]*/
/root/machinex/sound/pci/mixart/mixart.h:	int monitoring_volume[2];		/* Mixer : Monitoring Volume */
/root/machinex/sound/pci/mixart/mixart.h:	int volume;
/root/machinex/sound/pci/mixart/mixart_hwdep.c:		return -EAGAIN; /* try again later */
/root/machinex/sound/pci/mixart/mixart_mixer.c:	/* analog volumes can be set even if there is no pipe */
/root/machinex/sound/pci/mixart/mixart_mixer.c:	audio_level.monitor_level = mixart_digital_level[chip->monitoring_volume[channel!=0]];
/root/machinex/sound/pci/mixart/mixart_mixer.c:			&chip->analog_capture_volume[i] :
/root/machinex/sound/pci/mixart/mixart_mixer.c:			&chip->analog_playback_volume[i];
/root/machinex/sound/pci/mixart/mixart_mixer.c:			chip->monitoring_volume[i] =
/root/machinex/sound/pci/mixart/mixart_mixer.c:		else		stored_volume = chip->digital_capture_volume[0];	/* analog capture */
/root/machinex/sound/pci/mixart/mixart_mixer.c:		else		stored_volume = chip->digital_playback_volume[idx];	/* analog playback */
/root/machinex/sound/pci/mixart/mixart_mixer.c:		if (chip->monitoring_volume[i] !=
/root/machinex/sound/pci/mixart/mixart_mixer.c:		if(is_aes)	stored_volume = chip->digital_capture_volume[1];	/* AES capture */
/root/machinex/sound/pci/mixart/mixart_mixer.c:		if(is_aes)	stored_volume = chip->digital_playback_volume[MIXART_PLAYBACK_STREAMS + idx]; /* AES playback */
/root/machinex/sound/pci/mixart/mixart_mixer.c:			if (new_volume < MIXART_ANALOG_CAPTURE_LEVEL_MIN ||
/root/machinex/sound/pci/mixart/mixart_mixer.c:			if (new_volume < MIXART_ANALOG_PLAYBACK_LEVEL_MIN ||
/root/machinex/sound/pci/mixart/mixart_mixer.c:		if (stored_volume[i] != vol) {
/root/machinex/sound/pci/mixart/mixart_mixer.c:		if (*stored_volume != new_volume) {
/root/machinex/sound/pci/mixart/mixart_mixer.c:		/* init all mixer data and program the master volumes/switches */
/root/machinex/sound/pci/mixart/mixart_mixer.c:		int new_volume = ucontrol->value.integer.value[i];
/root/machinex/sound/pci/mixart/mixart_mixer.c:	int *stored_volume;
/root/machinex/sound/pci/mixart/mixart_mixer.c:	int* stored_volume;
/root/machinex/sound/pci/mixart/mixart_mixer.c:		int *stored_volume = is_capture ?
/root/machinex/sound/pci/mixart/mixart_mixer.c:	int volume[2];
/root/machinex/sound/pci/mixart/mixart_mixer.c:			io_level.level[i].analog_level = mixart_analog_level[chip->analog_capture_volume[i]];
/root/machinex/sound/pci/mixart/mixart_mixer.c:				io_level.level[i].analog_level = mixart_analog_level[chip->analog_playback_volume[i]];
/root/machinex/sound/pci/mixart/mixart_mixer.c:			    new_volume > MIXART_ANALOG_CAPTURE_LEVEL_MAX)
/root/machinex/sound/pci/mixart/mixart_mixer.c:			    new_volume > MIXART_ANALOG_PLAYBACK_LEVEL_MAX)
/root/machinex/sound/pci/mixart/mixart_mixer.c:		set_level.level[i].digital_level = mixart_digital_level[chip->digital_capture_volume[idx][i]];
/root/machinex/sound/pci/mixart/mixart_mixer.c:	set_level.stream_level.out_level.left_to_out1_level = mixart_digital_level[volume[0]];
/root/machinex/sound/pci/mixart/mixart_mixer.c:	set_level.stream_level.out_level.right_to_out2_level = mixart_digital_level[volume[1]];
/root/machinex/sound/pci/mixart/mixart_mixer.c:			stored_volume = chip->digital_capture_volume[0];
/root/machinex/sound/pci/mixart/mixart_mixer.c:			stored_volume = chip->digital_capture_volume[1];
/root/machinex/sound/pci/mixart/mixart_mixer.c:			stored_volume = chip->digital_playback_volume[idx];
/root/machinex/sound/pci/mixart/mixart_mixer.c:			stored_volume = chip->digital_playback_volume[MIXART_PLAYBACK_STREAMS + idx];
/root/machinex/sound/pci/mixart/mixart_mixer.c:			stored_volume[i] = vol;
/root/machinex/sound/pci/mixart/mixart_mixer.c:			*stored_volume = new_volume;
/root/machinex/sound/pci/mixart/mixart_mixer.c:		ucontrol->value.integer.value[0] = chip->analog_capture_volume[0];
/root/machinex/sound/pci/mixart/mixart_mixer.c:		ucontrol->value.integer.value[0] = chip->analog_playback_volume[0];
/root/machinex/sound/pci/mixart/mixart_mixer.c:	ucontrol->value.integer.value[0] = chip->monitoring_volume[0];
/root/machinex/sound/pci/mixart/mixart_mixer.c:	ucontrol->value.integer.value[0] = stored_volume[0];
/root/machinex/sound/pci/mixart/mixart_mixer.c:		ucontrol->value.integer.value[1] = chip->analog_capture_volume[1];
/root/machinex/sound/pci/mixart/mixart_mixer.c:		ucontrol->value.integer.value[1] = chip->analog_playback_volume[1];
/root/machinex/sound/pci/mixart/mixart_mixer.c:	ucontrol->value.integer.value[1] = chip->monitoring_volume[1];
/root/machinex/sound/pci/mixart/mixart_mixer.c:	ucontrol->value.integer.value[1] = stored_volume[1];
/root/machinex/sound/pci/mixart/mixart_mixer.c:			volume[i] = chip->digital_playback_volume[idx][i];
/root/machinex/sound/pci/mixart/mixart_mixer.c:			volume[i] = MIXART_DIGITAL_LEVEL_MIN;
/root/machinex/sound/pci/nm256/nm256.c:	{ AC97_REC_GAIN,	0x0B0B },
/root/machinex/sound/pci/nm256/nm256.c:	{ AC97_REC_GAIN, 0x0f0f },
/root/machinex/sound/pci/oxygen/cs4245.h:#define CS4245_PGA_GAIN_MASK	0x3f
/root/machinex/sound/pci/oxygen/oxygen.c:			     chip->dac_volume[i * 2]);
/root/machinex/sound/pci/oxygen/oxygen.c:				    chip->dac_volume[i * 2]);
/root/machinex/sound/pci/oxygen/oxygen.c:			     chip->dac_volume[i * 2 + 1]);
/root/machinex/sound/pci/oxygen/oxygen.c:				    chip->dac_volume[i * 2 + 1]);
/root/machinex/sound/pci/oxygen/oxygen.c:	.dac_volume_max = 255,
/root/machinex/sound/pci/oxygen/oxygen.c:	.dac_volume_min = 0,
/root/machinex/sound/pci/oxygen/oxygen.c:static const DECLARE_TLV_DB_LINEAR(ak4396_db_scale, TLV_DB_GAIN_MUTE, 0);
/root/machinex/sound/pci/oxygen/oxygen.c:static void update_ak4396_volume(struct oxygen *chip)
/root/machinex/sound/pci/oxygen/oxygen.c:	.update_dac_volume = update_ak4396_volume,
/root/machinex/sound/pci/oxygen/oxygen.h:	u8 dac_volume[8];
/root/machinex/sound/pci/oxygen/oxygen.h:	u8 dac_volume_max;
/root/machinex/sound/pci/oxygen/oxygen.h:	u8 dac_volume_min;
/root/machinex/sound/pci/oxygen/oxygen.h:	void (*update_dac_volume)(struct oxygen *chip);
/root/machinex/sound/pci/oxygen/oxygen_lib.c:		chip->dac_volume[i] = chip->model.dac_volume_min;
/root/machinex/sound/pci/oxygen/oxygen_lib.c:		oxygen_write_ac97(chip, 0, AC97_REC_GAIN, 0x8000);
/root/machinex/sound/pci/oxygen/oxygen_lib.c:		oxygen_write_ac97(chip, 1, AC97_REC_GAIN, 0x0000);
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:	AC97_SWITCH("Front Panel Capture Switch", 1, AC97_REC_GAIN, 15, 1),
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:	AC97_VOLUME("Aux Capture Volume", 0, AC97_AUX, 1),
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:	AC97_VOLUME("CD Capture Volume", 0, AC97_CD, 1),
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:	AC97_VOLUME("Front Panel Playback Volume", 1, AC97_HEADPHONE, 1),
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:	AC97_VOLUME("Mic Capture Volume", 0, AC97_MIC, 0),
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:			chip->dac_volume[i] = value->value.integer.value[i];
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:		chip->model.update_dac_volume(chip);
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:#define AC97_VOLUME(xname, codec, index, stereo) { \
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:		.get = ac97_fp_rec_volume_get,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:		.get = ac97_volume_get, \
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:		.get = dac_volume_get,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:		if (value->value.integer.value[i] != chip->dac_volume[i]) {
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:		.info = ac97_fp_rec_volume_info,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:		.info = ac97_volume_info, \
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:		.info = dac_volume_info,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:				.info = monitor_volume_info,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:				.info = monitor_volume_info,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:				.info = monitor_volume_info,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:				.info = monitor_volume_info,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:	info->value.integer.max = chip->model.dac_volume_max;
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:	info->value.integer.min = chip->model.dac_volume_min;
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:	oldreg = oxygen_read_ac97(chip, 1, AC97_REC_GAIN);
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:		oxygen_write_ac97(chip, 1, AC97_REC_GAIN, newreg);
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:		.put = ac97_fp_rec_volume_put,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:		.put = ac97_volume_put, \
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:		.put = dac_volume_put,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:	reg = oxygen_read_ac97(chip, 1, AC97_REC_GAIN);
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:static int ac97_fp_rec_volume_get(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:static int ac97_fp_rec_volume_info(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:static int ac97_fp_rec_volume_put(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:static int ac97_volume_get(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:static int ac97_volume_info(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:static int ac97_volume_put(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:static int dac_volume_get(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:static int dac_volume_info(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:static int dac_volume_put(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:static int monitor_volume_info(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/oxygen_mixer.c:		value->value.integer.value[i] = chip->dac_volume[i];
/root/machinex/sound/pci/oxygen/wm8776.h:#define WM8776_MAXGAIN_MASK	0x070
/root/machinex/sound/pci/oxygen/xonar_cs43xx.c:				     (127 - chip->dac_volume[2 + i]) | mute);
/root/machinex/sound/pci/oxygen/xonar_cs43xx.c:	cs4398_write_cached(chip, 5, (127 - chip->dac_volume[0]) * 2);
/root/machinex/sound/pci/oxygen/xonar_cs43xx.c:	cs4398_write_cached(chip, 6, (127 - chip->dac_volume[1]) * 2);
/root/machinex/sound/pci/oxygen/xonar_cs43xx.c:	.dac_volume_max = 127,
/root/machinex/sound/pci/oxygen/xonar_cs43xx.c:	.dac_volume_min = 127 - 60,
/root/machinex/sound/pci/oxygen/xonar_cs43xx.c:static void update_cs4362a_volumes(struct oxygen *chip)
/root/machinex/sound/pci/oxygen/xonar_cs43xx.c:static void update_cs43xx_volume(struct oxygen *chip)
/root/machinex/sound/pci/oxygen/xonar_cs43xx.c:	update_cs4362a_volumes(chip);
/root/machinex/sound/pci/oxygen/xonar_cs43xx.c:	update_cs4362a_volumes(chip);
/root/machinex/sound/pci/oxygen/xonar_cs43xx.c:	.update_dac_volume = update_cs43xx_volume,
/root/machinex/sound/pci/oxygen/xonar_dg.c:#define INPUT_VOLUME(xname, index) { \
/root/machinex/sound/pci/oxygen/xonar_dg.c:		.get = hp_volume_offset_get,
/root/machinex/sound/pci/oxygen/xonar_dg.c:		.info = hp_volume_offset_info,
/root/machinex/sound/pci/oxygen/xonar_dg.c:	INPUT_VOLUME("Aux Capture Volume", 1),
/root/machinex/sound/pci/oxygen/xonar_dg.c:	INPUT_VOLUME("Front Mic Capture Volume", 2),
/root/machinex/sound/pci/oxygen/xonar_dg.c:	INPUT_VOLUME("Line Capture Volume", 3),
/root/machinex/sound/pci/oxygen/xonar_dg.c:	INPUT_VOLUME("Mic Capture Volume", 0),
/root/machinex/sound/pci/oxygen/xonar_dg.c:		.put = hp_volume_offset_put,
/root/machinex/sound/pci/oxygen/xonar_dg.c:static int hp_volume_offset_get(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/xonar_dg.c:static int hp_volume_offset_info(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/xonar_dg.c:static int hp_volume_offset_put(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	changed = offset != data->hp_gain_offset;
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:			chip->model.dac_volume_min = 255;
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	.dac_volume_max = 255,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	.dac_volume_max = 255,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	.dac_volume_max = 255,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	.dac_volume_min = 255 - 2*60,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	.dac_volume_min = 255 - 2*60,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	.dac_volume_min = 255 - 2*60,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	data->hp_gain_offset = 2*-18;
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:		data->hp_gain_offset = offset;
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	else if (data->hp_gain_offset < 0)
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:			      + gain_offset);
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:			      + gain_offset);
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:				     + gain_offset);
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:				     + gain_offset);
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:		gain_offset = 0;
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:		gain_offset = 0;
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	gain_offset = data->hp_active ? data->hp_gain_offset : 0;
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	gain_offset = data->hp_active ? data->hp_gain_offset : 0;
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:		.get = st_hp_volume_offset_get,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	if (data->hp_gain_offset < 2*-6)
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:		.info = st_hp_volume_offset_info,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:		/* no volume/mute, as I²C to the third DAC does not work */
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:		pcm1796_write_cached(chip, i, 16, chip->dac_volume[i * 2]
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:		pcm1796_write_cached(chip, i, 17, chip->dac_volume[i * 2 + 1]
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:		pcm1796_write(chip, i, 16, chip->dac_volume[i * 2]
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:		pcm1796_write(chip, i, 17, chip->dac_volume[i * 2 + 1]
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:		.put = st_hp_volume_offset_put,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	s8 gain_offset;
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	s8 gain_offset;
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	s8 hp_gain_offset;
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:static int st_hp_volume_offset_get(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:static int st_hp_volume_offset_info(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:static int st_hp_volume_offset_put(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:static void update_pcm1796_volume(struct oxygen *chip)
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	.update_dac_volume = update_pcm1796_volume,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	.update_dac_volume = update_pcm1796_volume,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	.update_dac_volume = update_pcm1796_volume,
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:	update_pcm1796_volume(chip);
/root/machinex/sound/pci/oxygen/xonar_pcm179x.c:		update_pcm1796_volume(chip);
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:				     chip->dac_volume[0] | WM8776_UPDATE);
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:		    chip->dac_volume[1] != data->wm8776_regs[WM8776_DACRVOL]) {
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:				     chip->dac_volume[1] | WM8776_UPDATE);
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:					chip->dac_volume[2];
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	    chip->dac_volume[2] == chip->dac_volume[4] &&
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	    chip->dac_volume[2] == chip->dac_volume[5] &&
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	    chip->dac_volume[2] == chip->dac_volume[6] &&
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	    chip->dac_volume[2] == chip->dac_volume[7]) {
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:					     chip->dac_volume[2 + i] |
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:				     chip->dac_volume[2] | WM8766_UPDATE);
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	.dac_volume_max = 255,
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	.dac_volume_max = 255,
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	.dac_volume_min = 255 - 2*60,
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	.dac_volume_min = 255 - 2*60,
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:			data->wm8776_regs[WM8776_DACLVOL] = chip->dac_volume[0];
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:			data->wm8776_regs[WM8776_DACRVOL] = chip->dac_volume[0];
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:#define WM8776_FIELD_CTL_VOLUME(a, b, c, d, e, f, g, h, tlv_p) { \
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	.get = wm8776_field_volume_get, \
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	if (chip->dac_volume[0] == chip->dac_volume[1]) {
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:		if (chip->dac_volume[0] != data->wm8776_regs[WM8776_DACLVOL] ||
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:			if (chip->dac_volume[2] !=
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	if (chip->dac_volume[2] == chip->dac_volume[3] &&
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	.info = wm8776_field_volume_info, \
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:				LC_CONTROL_ALC, wm8776_maxgain_db_scale),
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	.put = wm8776_field_volume_put, \
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:static const DECLARE_TLV_DB_SCALE(wm8776_maxgain_db_scale, 0, 400, 0);
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:static int wm8776_field_volume_get(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:static int wm8776_field_volume_info(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:static int wm8776_field_volume_put(struct snd_kcontrol *ctl,
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:static void update_wm8776_volume(struct oxygen *chip)
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:static void update_wm87x6_volume(struct oxygen *chip)
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:		to_change = (chip->dac_volume[0] !=
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:		to_change |= (chip->dac_volume[1] !=
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:			to_change |= (chip->dac_volume[2 + i] !=
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	.update_dac_volume = update_wm8776_volume,
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	.update_dac_volume = update_wm87x6_volume,
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	update_wm8776_volume(chip);
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	wm8766_write(chip, WM8766_LDA1, chip->dac_volume[2]);
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	wm8766_write(chip, WM8766_LDA2, chip->dac_volume[4]);
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	wm8766_write(chip, WM8766_LDA3, chip->dac_volume[6]);
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	wm8766_write(chip, WM8766_RDA1, chip->dac_volume[3]);
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	wm8766_write(chip, WM8766_RDA2, chip->dac_volume[5]);
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	wm8766_write(chip, WM8766_RDA3, chip->dac_volume[7] | WM8766_UPDATE);
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	WM8776_FIELD_CTL_VOLUME("ALC Maximum Attenuation",
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	WM8776_FIELD_CTL_VOLUME("ALC Maximum Gain",
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	WM8776_FIELD_CTL_VOLUME("ALC Target Level",
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	WM8776_FIELD_CTL_VOLUME("Limiter Maximum Attenuation",
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	WM8776_FIELD_CTL_VOLUME("Limiter Threshold",
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	WM8776_FIELD_CTL_VOLUME("Noise Gate Threshold",
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:			wm8776_write(chip, WM8776_DACLVOL, chip->dac_volume[0] |
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	wm8776_write(chip, WM8776_DACLVOL, chip->dac_volume[0]);
/root/machinex/sound/pci/oxygen/xonar_wm87x6.c:	wm8776_write(chip, WM8776_DACRVOL, chip->dac_volume[1] | WM8776_UPDATE);
/root/machinex/sound/pci/pcxhr/pcxhr.h:	int analog_capture_volume[2];	/* Mixer : Master Capture Volume */
/root/machinex/sound/pci/pcxhr/pcxhr.h:	int analog_playback_volume[2];	/* Mixer : Master Playback Volume */
/root/machinex/sound/pci/pcxhr/pcxhr.h:	int digital_capture_volume[2];	/* Mixer : Digital Capture Volume */
/root/machinex/sound/pci/pcxhr/pcxhr.h:	int digital_playback_volume[PCXHR_PLAYBACK_STREAMS][2];
/root/machinex/sound/pci/pcxhr/pcxhr.h:	int mic_volume;			/* used by cards with MIC only */
/root/machinex/sound/pci/pcxhr/pcxhr.h:	int monitoring_volume[2];	/* Mixer : Monitoring Volume */
/root/machinex/sound/pci/pcxhr/pcxhr_mix22.c:		chip->mic_volume = ucontrol->value.integer.value[0];
/root/machinex/sound/pci/pcxhr/pcxhr_mix22.c:	/* gains from 9 dB to 31.5 dB not recommended; use micboost instead */
/root/machinex/sound/pci/pcxhr/pcxhr_mix22.c:	if (chip->mic_volume != ucontrol->value.integer.value[0]) {
/root/machinex/sound/pci/pcxhr/pcxhr_mix22.c:			level_l = chip->analog_capture_volume[0];
/root/machinex/sound/pci/pcxhr/pcxhr_mix22.c:			level_mic = chip->mic_volume;
/root/machinex/sound/pci/pcxhr/pcxhr_mix22.c:			level_r = chip->analog_capture_volume[1];
/root/machinex/sound/pci/pcxhr/pcxhr_mix22.c:	ucontrol->value.integer.value[0] = chip->mic_volume;
/root/machinex/sound/pci/pcxhr/pcxhr_mix22.c:			vol = chip->analog_playback_volume[channel];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:			/* analog volumes for playback
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:			/* analog volumes for playback
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:			/* at boot time the digital volumes are unmuted 0dB */
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:			/* at boot time the digital volumes are unmuted 0dB */
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:				chip->analog_capture_volume[i] =
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:				chip->analog_capture_volume[i] =
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:			&chip->analog_capture_volume[i] :
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:			&chip->analog_playback_volume[i];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:				chip->analog_playback_volume[i] =
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:				chip->analog_playback_volume[i] =
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:			chip->digital_capture_volume[i] =
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:				chip->digital_playback_volume[j][i] =
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:			chip->monitoring_volume[i] =
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		if (chip->monitoring_volume[i] !=
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:	if (!is_capture && changed)	/* update playback volume */
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:			if (is_capture)	/* update capture volume */
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:				if (new_volume < HR222_LINE_CAPTURE_LEVEL_MIN ||
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:				if (new_volume < HR222_LINE_PLAYBACK_LEVEL_MIN ||
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:				if (new_volume < PCXHR_LINE_CAPTURE_LEVEL_MIN ||
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:				if (new_volume < PCXHR_LINE_PLAYBACK_LEVEL_MIN ||
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		if (stored_volume[i] != vol) {
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		if (*stored_volume != new_volume) {
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		int  new_volume = ucontrol->value.integer.value[i];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:	int *stored_volume;
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:	int *stored_volume;
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		int *stored_volume = is_capture ?
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		left = chip->digital_playback_volume[idx][0];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:				    new_volume > HR222_LINE_CAPTURE_LEVEL_MAX)
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:				    new_volume > HR222_LINE_PLAYBACK_LEVEL_MAX)
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:				    new_volume > PCXHR_LINE_CAPTURE_LEVEL_MAX)
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:				    new_volume > PCXHR_LINE_PLAYBACK_LEVEL_MAX)
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		right = chip->digital_playback_volume[idx][1];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		rmh.cmd[2] = chip->analog_capture_volume[channel];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		rmh.cmd[2] = chip->digital_capture_volume[channel];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		rmh.cmd[2] = chip->monitoring_volume[channel] << 10;
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		stored_volume = chip->digital_capture_volume;
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		stored_volume = chip->digital_capture_volume;
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		stored_volume = chip->digital_playback_volume[idx];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		stored_volume = chip->digital_playback_volume[idx];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:			stored_volume[i] = vol;
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:			*stored_volume = new_volume;
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:	  ucontrol->value.integer.value[0] = chip->analog_capture_volume[0];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:	  ucontrol->value.integer.value[0] = chip->analog_playback_volume[0];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:	ucontrol->value.integer.value[0] = chip->monitoring_volume[0];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:	ucontrol->value.integer.value[0] = stored_volume[0];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:	  ucontrol->value.integer.value[1] = chip->analog_capture_volume[1];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:	  ucontrol->value.integer.value[1] = chip->analog_playback_volume[1];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:	ucontrol->value.integer.value[1] = chip->monitoring_volume[1];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:	ucontrol->value.integer.value[1] = stored_volume[1];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		/* update left monitoring volume and mute */
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:				/* update monitoring volume and mute */
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:		/* update right monitoring volume and mute */
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:			vol = chip->analog_playback_volume[channel];
/root/machinex/sound/pci/pcxhr/pcxhr_mixer.c:	/* volume left->left / right->right panoramic level */
/root/machinex/sound/pci/riptide/riptide.c:	DIGITAL_MIXER_OUT0, GAINFUNC0_OUT, GAINFUNC1_OUT, GAINFUNC2_OUT,
/root/machinex/sound/pci/riptide/riptide.c:	GAINFUNC0_IN, GAINFUNC1_IN, GAINFUNC2_IN, GAINFUNC3_IN, GAINFUNC4_IN,
/root/machinex/sound/pci/riptide/riptide.c:	{GAINFUNC0_OUT, LS_MIXER_GAIN_FUNCTION}, {GAINFUNC1_OUT,
/root/machinex/sound/pci/riptide/riptide.c:	{GAINFUNC2_OUT, LS_MIXER_GAIN_FUNCTION}, {GAINFUNC3_OUT,
/root/machinex/sound/pci/riptide/riptide.c:	GAINFUNC3_OUT, GAINFUNC4_OUT, SOFTMODEMTX, SPLITTER0_OUTL,
/root/machinex/sound/pci/riptide/riptide.c:	{GAINFUNC4_OUT, LS_MIXER_GAIN_FUNCTION}, {SOFTMODEMTX, LS_NONE1},
/root/machinex/sound/pci/riptide/riptide.c:						  LS_MIXER_GAIN_FUNCTION},
/root/machinex/sound/pci/riptide/riptide.c:						  LS_MIXER_GAIN_FUNCTION},
/root/machinex/sound/pci/riptide/riptide.c:	LS_SRC_DECIMATORM, LS_MIXER_IN, LS_MIXER_GAIN_FUNCTION,
/root/machinex/sound/pci/rme9652/hdsp.c:	change = gain != hdsp_read_gain(hdsp, addr);
/root/machinex/sound/pci/rme9652/hdsp.c:		change = (hdsp_set_ad_gain(hdsp, val) == 0) ? 1 : 0;
/root/machinex/sound/pci/rme9652/hdsp.c:		change = (hdsp_set_da_gain(hdsp, val) == 0) ? 1 : 0;
/root/machinex/sound/pci/rme9652/hdsp.c:		change = (hdsp_set_phone_gain(hdsp, val) == 0) ? 1 : 0;
/root/machinex/sound/pci/rme9652/hdsp.c:	/* DA, AD and Phone gain and XLR breakout cable controls for H9632 cards */
/root/machinex/sound/pci/rme9652/hdsp.c:#define HDSP_AD_GAIN(xname, xindex) \
/root/machinex/sound/pci/rme9652/hdsp.c:#define HDSP_DA_GAIN(xname, xindex) \
/root/machinex/sound/pci/rme9652/hdsp.c:#define HDSP_PHONE_GAIN(xname, xindex) \
/root/machinex/sound/pci/rme9652/hdsp.c:#define MINUS_INFINITY_GAIN              0
/root/machinex/sound/pci/rme9652/hdsp.c:#define UNITY_GAIN                       32768
/root/machinex/sound/pci/rme9652/hdsp.c:	gain = ucontrol->value.integer.value[2];
/root/machinex/sound/pci/rme9652/hdsp.c:  .get = snd_hdsp_get_ad_gain, \
/root/machinex/sound/pci/rme9652/hdsp.c:  .get = snd_hdsp_get_da_gain, \
/root/machinex/sound/pci/rme9652/hdsp.c:  .get = snd_hdsp_get_phone_gain, \
/root/machinex/sound/pci/rme9652/hdsp.c:HDSP_AD_GAIN("AD Gain", 0),
/root/machinex/sound/pci/rme9652/hdsp.c:HDSP_DA_GAIN("DA Gain", 0),
/root/machinex/sound/pci/rme9652/hdsp.c:		hdsp->mixer_matrix[i] = MINUS_INFINITY_GAIN;
/root/machinex/sound/pci/rme9652/hdsp.c:HDSP_PHONE_GAIN("Phones Gain", 0),
/root/machinex/sound/pci/rme9652/hdsp.c:		hdsp_write_gain(hdsp, addr, gain);
/root/machinex/sound/pci/rme9652/hdsp.c:		if (hdsp_write_gain (hdsp, i, MINUS_INFINITY_GAIN))
/root/machinex/sound/pci/rme9652/hdsp.c:	if (val != hdsp_ad_gain(hdsp))
/root/machinex/sound/pci/rme9652/hdsp.c:	if (val != hdsp_da_gain(hdsp))
/root/machinex/sound/pci/rme9652/hdsp.c:	if (val != hdsp_phone_gain(hdsp))
/root/machinex/sound/pci/rme9652/hdsp.c:			info.ad_gain = (unsigned char)hdsp_ad_gain(hdsp);
/root/machinex/sound/pci/rme9652/hdsp.c:			info.ad_gain = (unsigned char) hdsp_rpm_input34(hdsp);
/root/machinex/sound/pci/rme9652/hdsp.c:			info.da_gain = (unsigned char)hdsp_da_gain(hdsp);
/root/machinex/sound/pci/rme9652/hdsp.c:			info.da_gain = (unsigned char) hdsp_rpm_input12(hdsp);
/root/machinex/sound/pci/rme9652/hdsp.c:			info.phone_gain = (unsigned char)hdsp_phone_gain(hdsp);
/root/machinex/sound/pci/rme9652/hdsp.c:  .info = snd_hdsp_info_ad_gain, \
/root/machinex/sound/pci/rme9652/hdsp.c:  .info = snd_hdsp_info_da_gain, \
/root/machinex/sound/pci/rme9652/hdsp.c:  .info = snd_hdsp_info_phone_gain, \
/root/machinex/sound/pci/rme9652/hdsp.c:	int gain;
/root/machinex/sound/pci/rme9652/hdsp.c:  .put = snd_hdsp_put_ad_gain \
/root/machinex/sound/pci/rme9652/hdsp.c:  .put = snd_hdsp_put_da_gain \
/root/machinex/sound/pci/rme9652/hdsp.c:  .put = snd_hdsp_put_phone_gain \
/root/machinex/sound/pci/rme9652/hdsp.c:		 * requires (?) to write again DDS value after a reset pointer
/root/machinex/sound/pci/rme9652/hdsp.c:static int hdsp_ad_gain(struct hdsp *hdsp)
/root/machinex/sound/pci/rme9652/hdsp.c:static int hdsp_da_gain(struct hdsp *hdsp)
/root/machinex/sound/pci/rme9652/hdsp.c:static int hdsp_phone_gain(struct hdsp *hdsp)
/root/machinex/sound/pci/rme9652/hdsp.c:static int hdsp_read_gain (struct hdsp *hdsp, unsigned int addr)
/root/machinex/sound/pci/rme9652/hdsp.c:static int hdsp_set_ad_gain(struct hdsp *hdsp, int mode)
/root/machinex/sound/pci/rme9652/hdsp.c:static int hdsp_set_da_gain(struct hdsp *hdsp, int mode)
/root/machinex/sound/pci/rme9652/hdsp.c:static int hdsp_set_phone_gain(struct hdsp *hdsp, int mode)
/root/machinex/sound/pci/rme9652/hdsp.c:static int hdsp_write_gain(struct hdsp *hdsp, unsigned int addr, unsigned short data)
/root/machinex/sound/pci/rme9652/hdsp.c:static int snd_hdsp_get_ad_gain(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/pci/rme9652/hdsp.c:static int snd_hdsp_get_da_gain(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/pci/rme9652/hdsp.c:static int snd_hdsp_get_phone_gain(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/pci/rme9652/hdsp.c:static int snd_hdsp_info_ad_gain(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_info *uinfo)
/root/machinex/sound/pci/rme9652/hdsp.c:static int snd_hdsp_info_da_gain(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_info *uinfo)
/root/machinex/sound/pci/rme9652/hdsp.c:static int snd_hdsp_info_phone_gain(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_info *uinfo)
/root/machinex/sound/pci/rme9652/hdsp.c:static int snd_hdsp_put_ad_gain(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/pci/rme9652/hdsp.c:static int snd_hdsp_put_da_gain(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/pci/rme9652/hdsp.c:static int snd_hdsp_put_phone_gain(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/pci/rme9652/hdsp.c:		switch (hdsp_ad_gain(hdsp)) {
/root/machinex/sound/pci/rme9652/hdsp.c:		switch (hdsp_da_gain(hdsp)) {
/root/machinex/sound/pci/rme9652/hdsp.c:		switch (hdsp_phone_gain(hdsp)) {
/root/machinex/sound/pci/rme9652/hdsp.c:	ucontrol->value.enumerated.item[0] = hdsp_ad_gain(hdsp);
/root/machinex/sound/pci/rme9652/hdsp.c:	ucontrol->value.enumerated.item[0] = hdsp_da_gain(hdsp);
/root/machinex/sound/pci/rme9652/hdsp.c:	ucontrol->value.enumerated.item[0] = hdsp_phone_gain(hdsp);
/root/machinex/sound/pci/rme9652/hdsp.c:	ucontrol->value.integer.value[2] = hdsp_read_gain (hdsp, addr);
/root/machinex/sound/pci/rme9652/hdspm.c:	all_in_all_mixer(hdspm, 0 * UNITY_GAIN);
/root/machinex/sound/pci/rme9652/hdspm.c:		change = gain != hdspm_read_in_gain(hdspm, destination,
/root/machinex/sound/pci/rme9652/hdspm.c:		change = gain != hdspm_read_pb_gain(hdspm, destination,
/root/machinex/sound/pci/rme9652/hdspm.c:#define MINUS_INFINITY_GAIN 0
/root/machinex/sound/pci/rme9652/hdspm.c:#define UNITY_GAIN          32768	/* = 65536/2 */
/root/machinex/sound/pci/rme9652/hdspm.c:	else if (sgain < 0)
/root/machinex/sound/pci/rme9652/hdspm.c:				    gain);
/root/machinex/sound/pci/rme9652/hdspm.c:					    gain);
/root/machinex/sound/pci/rme9652/hdspm.c:					    gain);
/root/machinex/sound/pci/rme9652/hdspm.c:		gain = 0;
/root/machinex/sound/pci/rme9652/hdspm.c:	    gain != hdspm_read_pb_gain(hdspm, channel,
/root/machinex/sound/pci/rme9652/hdspm.c:		gain = sgain;
/root/machinex/sound/pci/rme9652/hdspm.c:	gain = ucontrol->value.integer.value[0]*UNITY_GAIN/64;
/root/machinex/sound/pci/rme9652/hdspm.c:	gain = ucontrol->value.integer.value[2];
/root/machinex/sound/pci/rme9652/hdspm.c:		gain = UNITY_GAIN;
/root/machinex/sound/pci/rme9652/hdspm.c:		    hdspm_read_in_gain(hdspm, destination, source);
/root/machinex/sound/pci/rme9652/hdspm.c:	  (hdspm_read_pb_gain(hdspm, channel, channel)*64)/UNITY_GAIN;
/root/machinex/sound/pci/rme9652/hdspm.c:		    hdspm_read_pb_gain(hdspm, destination,
/root/machinex/sound/pci/rme9652/hdspm.c:			hdspm_write_in_gain(hdspm, destination, source,
/root/machinex/sound/pci/rme9652/hdspm.c:			hdspm_write_in_gain(hdspm, i, j, gain);
/root/machinex/sound/pci/rme9652/hdspm.c:		hdspm_write_pb_gain(hdspm, channel, channel,
/root/machinex/sound/pci/rme9652/hdspm.c:			hdspm_write_pb_gain(hdspm, destination,
/root/machinex/sound/pci/rme9652/hdspm.c:			hdspm_write_pb_gain(hdspm, i, j, gain);
/root/machinex/sound/pci/rme9652/hdspm.c:	if (sgain > UNITY_GAIN)
/root/machinex/sound/pci/rme9652/hdspm.c:	int gain;
/root/machinex/sound/pci/rme9652/hdspm.c:	int gain;
/root/machinex/sound/pci/rme9652/hdspm.c:static inline int hdspm_read_in_gain(struct hdspm * hdspm, unsigned int chan,
/root/machinex/sound/pci/rme9652/hdspm.c:static inline int hdspm_read_pb_gain(struct hdspm * hdspm, unsigned int chan,
/root/machinex/sound/pci/rme9652/hdspm.c:static int hdspm_write_in_gain(struct hdspm *hdspm, unsigned int chan,
/root/machinex/sound/pci/rme9652/hdspm.c:static int hdspm_write_pb_gain(struct hdspm *hdspm, unsigned int chan,
/root/machinex/sound/pci/rme9652/hdspm.c:static void all_in_all_mixer(struct hdspm * hdspm, int sgain)
/root/machinex/sound/pci/rme9652/hdspm.c:/* The simple mixer control(s) provide gain control for the
/root/machinex/sound/pci/rme9652/hdspm.c:	unsigned int gain;
/root/machinex/sound/pci/rme96.c:		apply_dac_volume = err > 0; /* need to restore volume later? */
/root/machinex/sound/pci/rme96.c:	bool apply_dac_volume = false;
/root/machinex/sound/pci/rme96.c:#define RME96_WCR_BITPOS_GAIN_0 2
/root/machinex/sound/pci/rme96.c:#define RME96_WCR_BITPOS_GAIN_1 3
/root/machinex/sound/pci/rme96.c:#define RME96_WCR_GAIN_0    (1 << 2)
/root/machinex/sound/pci/rme96.c:#define RME96_WCR_GAIN_1    (1 << 3)
/root/machinex/sound/pci/rme96.c:	.get =          snd_rme96_dac_volume_get,
/root/machinex/sound/pci/rme96.c:	if (apply_dac_volume) {
/root/machinex/sound/pci/rme96.c:	.info =         snd_rme96_dac_volume_info,
/root/machinex/sound/pci/rme96.c:	.put =          snd_rme96_dac_volume_put
/root/machinex/sound/pci/rme96.c:	/* reset volume */
/root/machinex/sound/pci/rme96.c:		return 1; /* need to restore volume */
/root/machinex/sound/pci/rme96.c:	return ((rme96->wcreg >> RME96_WCR_BITPOS_GAIN_0) & 1) +
/root/machinex/sound/pci/rme96.c:		(((rme96->wcreg >> RME96_WCR_BITPOS_GAIN_1) & 1) << 1);
/root/machinex/sound/pci/rme96.c:		rme96->wcreg = (rme96->wcreg | RME96_WCR_GAIN_0) |
/root/machinex/sound/pci/rme96.c:		rme96->wcreg = (rme96->wcreg | RME96_WCR_GAIN_0) &
/root/machinex/sound/pci/rme96.c:		rme96->wcreg = (rme96->wcreg & ~RME96_WCR_GAIN_0) |
/root/machinex/sound/pci/rme96.c:		rme96->wcreg = (rme96->wcreg & ~RME96_WCR_GAIN_0) &
/root/machinex/sound/pci/rme96.c:			~RME96_WCR_GAIN_1;
/root/machinex/sound/pci/rme96.c:			~RME96_WCR_GAIN_1;
/root/machinex/sound/pci/rme96.c:			RME96_WCR_GAIN_1;
/root/machinex/sound/pci/rme96.c:			RME96_WCR_GAIN_1;
/root/machinex/sound/pci/rme96.c:		snd_iprintf(buffer, "  volume left: %u\n", rme96->vol[0]);
/root/machinex/sound/pci/rme96.c:		snd_iprintf(buffer, "  volume right: %u\n", rme96->vol[1]);
/root/machinex/sound/pci/rme96.c:		snd_rme96_apply_dac_volume(rme96);
/root/machinex/sound/pci/rme96.c:		snd_rme96_apply_dac_volume(rme96);
/root/machinex/sound/pci/rme96.c:		snd_rme96_apply_dac_volume(rme96);
/root/machinex/sound/pci/rme96.c:snd_rme96_apply_dac_volume(struct rme96 *rme96)
/root/machinex/sound/pci/rme96.c:snd_rme96_dac_volume_get(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *u)
/root/machinex/sound/pci/rme96.c:snd_rme96_dac_volume_info(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_info *uinfo)
/root/machinex/sound/pci/rme96.c:snd_rme96_dac_volume_put(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *u)
/root/machinex/sound/pci/rme96.c: *      Thanks to Henk Hesselink <henk@anda.nl> for the analog volume control
/root/machinex/sound/pci/rme96.c: * the volume.
/root/machinex/sound/pci/rme96.c:	u16 vol[2]; /* cached volume of analog output */
/root/machinex/sound/pci/sis7019.c:		dev_err(&pci->dev, "unable to regain IRQ %d\n", pci->irq);
/root/machinex/sound/pci/sis7019.c:	/* Protect against more than one thread hitting the AC97
/root/machinex/sound/pci/sis7019.c:		return -EAGAIN;
/root/machinex/sound/pci/sis7019.c:		return -EAGAIN;
/root/machinex/sound/pci/sis7019.c:		 * we'll need to come back in a few samples and try again.
/root/machinex/sound/pci/sis7019.c:	writel(SIS_WAVE_GENERAL_WAVE_VOLUME, wave_base + SIS_WAVE_GENERAL);
/root/machinex/sound/pci/sis7019.c:	writel(SIS_WAVE_GENERAL_WAVE_VOLUME, wave_base + SIS_WAVE_GENERAL);
/root/machinex/sound/pci/sis7019.h:#define		SIS_WAVE_GENERAL_MUSIC_VOLUME			0x00000000
/root/machinex/sound/pci/sis7019.h:#define		SIS_WAVE_GENERAL_VOLUME_MASK			0x7f000000
/root/machinex/sound/pci/sis7019.h:#define		SIS_WAVE_GENERAL_WAVE_VOLUME			0x80000000
/root/machinex/sound/pci/sonicvibes.c:		snd_ctl_notify(sonic->card, SNDRV_CTL_EVENT_MASK_VALUE, &sonic->master_volume->id);
/root/machinex/sound/pci/sonicvibes.c:	sonic->master_volume = NULL;
/root/machinex/sound/pci/sonicvibes.c:	struct snd_kcontrol *master_volume;
/root/machinex/sound/pci/trident/trident_main.c:      __again:
/root/machinex/sound/pci/trident/trident_main.c:                CVol - new chorus volume
/root/machinex/sound/pci/trident/trident_main.c:    Description: PCM chorus volume control
/root/machinex/sound/pci/trident/trident_main.c:    Description: PCM front volume control
/root/machinex/sound/pci/trident/trident_main.c:    Description: PCM reverb volume control
/root/machinex/sound/pci/trident/trident_main.c:   Description: This routine will write the new chorus volume
/root/machinex/sound/pci/trident/trident_main.c:   Description: This routine will write the new reverb volume
/root/machinex/sound/pci/trident/trident_main.c:   Description: This routine will write the new voice volume
/root/machinex/sound/pci/trident/trident_main.c:    Description: wave & music volume control
/root/machinex/sound/pci/trident/trident_main.c:				goto __again;
/root/machinex/sound/pci/trident/trident_main.c:		return -EAGAIN;
/root/machinex/sound/pci/trident/trident_main.c:		return -EAGAIN;
/root/machinex/sound/pci/trident/trident_main.c:		return -EAGAIN;
/root/machinex/sound/pci/trident/trident_main.c:		return -EAGAIN;
/root/machinex/sound/pci/trident/trident_main.c:                RVol - new reverb volume
/root/machinex/sound/pci/trident/trident_main.c:                Vol - new voice volume
/root/machinex/sound/pci/via82xx.c:		change |= val != chip->playback_volume[idx][i];
/root/machinex/sound/pci/via82xx.c:			chip->playback_volume_c[i] = val;
/root/machinex/sound/pci/via82xx.c:				chip->playback_volume[idx][i]=chip->playback_volume_c[i];
/root/machinex/sound/pci/via82xx.c:				chip->playback_volume[idx][i] = val;
/root/machinex/sound/pci/via82xx.c:			chip->playback_volume[idx][i] = val;
/root/machinex/sound/pci/via82xx.c:		chip->playback_volume[stream][0] =
/root/machinex/sound/pci/via82xx.c:		chip->playback_volume[stream][1] =
/root/machinex/sound/pci/via82xx.c:#define VIA_DXS_MAX_VOLUME		31	/* max. volume (attenuation) of reg 0x32/33 */
/root/machinex/sound/pci/via82xx.c:#define VIA_REG_OFS_PLAYBACK_VOLUME_L	0x02	/* byte */
/root/machinex/sound/pci/via82xx.c:#define VIA_REG_OFS_PLAYBACK_VOLUME_R	0x03	/* byte */
/root/machinex/sound/pci/via82xx.c:			err = snd_ctl_add(chip->card, snd_ctl_new1(&snd_via8233_pcmdxs_volume_control, chip));
/root/machinex/sound/pci/via82xx.c:	.get = snd_via8233_dxs_volume_get,
/root/machinex/sound/pci/via82xx.c:	.get = snd_via8233_pcmdxs_volume_get,
/root/machinex/sound/pci/via82xx.c:      		if (again++ > 3) {
/root/machinex/sound/pci/via82xx.c:		if (val != chip->playback_volume_c[i]) {
/root/machinex/sound/pci/via82xx.c:		if (val > VIA_DXS_MAX_VOLUME)
/root/machinex/sound/pci/via82xx.c:		if (val > VIA_DXS_MAX_VOLUME)
/root/machinex/sound/pci/via82xx.c:	.info = snd_via8233_dxs_volume_info,
/root/machinex/sound/pci/via82xx.c:	.info = snd_via8233_dxs_volume_info,
/root/machinex/sound/pci/via82xx.c:	int again = 0;
/root/machinex/sound/pci/via82xx.c:module_param(dxs_init_volume, int, 0644);
/root/machinex/sound/pci/via82xx.c:MODULE_PARM_DESC(dxs_init_volume, "initial DXS volume (0-31)");
/root/machinex/sound/pci/via82xx.c:				outb(chip->playback_volume_c[i],
/root/machinex/sound/pci/via82xx.c:	outb(chip->playback_volume[viadev->reg_offset / 0x10][0],
/root/machinex/sound/pci/via82xx.c:	outb(chip->playback_volume[viadev->reg_offset / 0x10][1],
/root/machinex/sound/pci/via82xx.c:				outb(val, port + VIA_REG_OFS_PLAYBACK_VOLUME_L + i);
/root/machinex/sound/pci/via82xx.c:			outb(val, port + VIA_REG_OFS_PLAYBACK_VOLUME_L + i);
/root/machinex/sound/pci/via82xx.c:				     port + VIA_REG_OFS_PLAYBACK_VOLUME_L + i);
/root/machinex/sound/pci/via82xx.c:	.put = snd_via8233_dxs_volume_put,
/root/machinex/sound/pci/via82xx.c:	.put = snd_via8233_pcmdxs_volume_put,
/root/machinex/sound/pci/via82xx.c:					&snd_via8233_dxs_volume_control, chip);
/root/machinex/sound/pci/via82xx.c:static int dxs_init_volume = 31;
/root/machinex/sound/pci/via82xx.c:static int snd_via8233_dxs_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/via82xx.c:static int snd_via8233_dxs_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/via82xx.c:static int snd_via8233_dxs_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/via82xx.c:static int snd_via8233_pcmdxs_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/via82xx.c:static int snd_via8233_pcmdxs_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/pci/via82xx.c:static struct snd_kcontrol_new snd_via8233_dxs_volume_control = {
/root/machinex/sound/pci/via82xx.c:static struct snd_kcontrol_new snd_via8233_pcmdxs_volume_control = {
/root/machinex/sound/pci/via82xx.c:	ucontrol->value.integer.value[0] = VIA_DXS_MAX_VOLUME - chip->playback_volume_c[0];
/root/machinex/sound/pci/via82xx.c:	ucontrol->value.integer.value[0] = VIA_DXS_MAX_VOLUME - chip->playback_volume[idx][0];
/root/machinex/sound/pci/via82xx.c:	ucontrol->value.integer.value[1] = VIA_DXS_MAX_VOLUME - chip->playback_volume_c[1];
/root/machinex/sound/pci/via82xx.c:	ucontrol->value.integer.value[1] = VIA_DXS_MAX_VOLUME - chip->playback_volume[idx][1];
/root/machinex/sound/pci/via82xx.c:	uinfo->value.integer.max = VIA_DXS_MAX_VOLUME;
/root/machinex/sound/pci/via82xx.c:	unsigned char playback_volume[4][2]; /* for VIA8233/C/8235; default = 0 */
/root/machinex/sound/pci/via82xx.c:	unsigned char playback_volume_c[2]; /* for VIA8233/C/8235; default = 0 */
/root/machinex/sound/pci/via82xx.c:			val = VIA_DXS_MAX_VOLUME;
/root/machinex/sound/pci/via82xx.c:			val = VIA_DXS_MAX_VOLUME;
/root/machinex/sound/pci/via82xx.c:		val = VIA_DXS_MAX_VOLUME - val;
/root/machinex/sound/pci/via82xx.c:		val = VIA_DXS_MAX_VOLUME - val;
/root/machinex/sound/pci/via82xx.c:	     VIADEV_REG(viadev, OFS_PLAYBACK_VOLUME_L));
/root/machinex/sound/pci/via82xx.c:	     VIADEV_REG(viadev, OFS_PLAYBACK_VOLUME_R));
/root/machinex/sound/pci/via82xx.c:				VIA_DXS_MAX_VOLUME - (dxs_init_volume & 31);
/root/machinex/sound/pci/via82xx.c:				VIA_DXS_MAX_VOLUME - (dxs_init_volume & 31);
/root/machinex/sound/pci/via82xx.c:		/* when no h/w PCM volume control is found, use DXS volume control
/root/machinex/sound/pci/via82xx_modem.c:      		if (again++ > 3) {
/root/machinex/sound/pci/via82xx_modem.c:	int again = 0;
/root/machinex/sound/pci/vx222/vx222_ops.c:	if (snd_BUG_ON(data >= sizeof(vx2_akm_gains_lut)))
/root/machinex/sound/pci/vx222/vx222_ops.c:static const u8 vx2_akm_gains_lut[VX2_AKM_LEVEL_MAX+1] = {
/root/machinex/sound/pci/vx222/vx222_ops.c:	val |= vx2_akm_gains_lut[data];
/root/machinex/sound/pci/vx222/vx222_ops.c:        while (miclevel > 210) { /* limitation to +9dB of 3310 real gain */
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:        				bank->eff2_gain =
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:        				bank->eff2_gain =
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:        				bank->eff2_gain_end = vol_left;
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:        				bank->eff2_gain_end = vol_right;
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:				bank->eff2_gain_end = volume;
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:        				bank->eff3_gain =
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:        				bank->eff3_gain =
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:        				bank->eff3_gain_end = vol_left;
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:        				bank->eff3_gain_end = vol_right;
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:				bank->eff3_gain_end = volume;
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:		bank->eg_gain =
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:		bank->eg_gain_end = cpu_to_le32(0x40000000);
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:				bank->left_gain =
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:				bank->left_gain_end = vol_left;
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:			bank->left_gain_end = volume;
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:				bank->right_gain =
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:				bank->right_gain_end = vol_right;
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:			bank->right_gain_end = volume;
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:	if (has_pcm_volume) {
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:				      int has_pcm_volume)
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:		kctl = snd_ctl_new1(&snd_ymfpci_pcm_volume, chip);
/root/machinex/sound/pci/ymfpci/ymfpci_main.c: * PCM voice volume
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:	/* per-voice volume */
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:	/* start hw again */
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:static const DECLARE_TLV_DB_LINEAR(db_scale_native, TLV_DB_GAIN_MUTE, 0);
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:static struct snd_kcontrol_new snd_ymfpci_pcm_volume = {
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:	 * the chip again unless reboot.  ACPI bug?
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:			u32 volume;
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:			volume = cpu_to_le32(chip->pcm_mixer[subs].left << 15);
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:			volume = cpu_to_le32(chip->pcm_mixer[subs].right << 15);
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:	/* volumes */
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:YMFPCI_DOUBLE(SNDRV_CTL_NAME_IEC958("AC97 ", PLAYBACK,VOLUME), 0, YDSXGR_ZVOUTVOL),
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:YMFPCI_DOUBLE(SNDRV_CTL_NAME_IEC958("AC97 ",PLAYBACK,VOLUME), 1, YDSXGR_SPDIFOUTVOL),
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:YMFPCI_DOUBLE(SNDRV_CTL_NAME_IEC958("", CAPTURE,VOLUME), 0, YDSXGR_ZVLOOPVOL),
/root/machinex/sound/pci/ymfpci/ymfpci_main.c:YMFPCI_DOUBLE(SNDRV_CTL_NAME_IEC958("",CAPTURE,VOLUME), 1, YDSXGR_SPDIFLOOPVOL),
/root/machinex/sound/pcmcia/pdaudiocf/pdaudiocf.h:#define PDAUDIOCF_BLUESDD	(1<<12)	/* blue LED against SDD bit */
/root/machinex/sound/ppc/awacs.c:	AWACS_SWITCH("Line Boost Capture Switch", 0, SHIFT_GAINLINE, 0),
/root/machinex/sound/ppc/awacs.c:	AWACS_SWITCH("Line Boost Capture Switch", 0, SHIFT_GAINLINE, 0),
/root/machinex/sound/ppc/awacs.c:	AWACS_SWITCH("Line Boost Capture Switch", 0, SHIFT_GAINLINE, 0),
/root/machinex/sound/ppc/awacs.c:	AWACS_SWITCH("Mic Boost Capture Switch", 0, SHIFT_GAINLINE, 0),
/root/machinex/sound/ppc/awacs.c: * AWACS volume callbacks
/root/machinex/sound/ppc/awacs.c:	AWACS_VOLUME("Headphone Playback Volume", 2, 6, 1),
/root/machinex/sound/ppc/awacs.c:	AWACS_VOLUME("Line out Playback Volume", 2, 6, 1),
/root/machinex/sound/ppc/awacs.c:	AWACS_VOLUME("Line out Playback Volume", 2, 6, 1),
/root/machinex/sound/ppc/awacs.c:	AWACS_VOLUME("Line out Playback Volume", 2, 6, 1),
/root/machinex/sound/ppc/awacs.c:	AWACS_VOLUME("Master Capture Volume", 0, 4, 0),
/root/machinex/sound/ppc/awacs.c:	AWACS_VOLUME("Master Playback Volume", 2, 6, 1),
/root/machinex/sound/ppc/awacs.c:	AWACS_VOLUME("Master Playback Volume", 2, 6, 1),
/root/machinex/sound/ppc/awacs.c:	AWACS_VOLUME("Master Playback Volume", 5, 6, 1),
/root/machinex/sound/ppc/awacs.c:	AWACS_VOLUME("Play-through Playback Volume", 5, 6, 1),
/root/machinex/sound/ppc/awacs.c:	AWACS_VOLUME("Play-through Playback Volume", 5, 6, 1),
/root/machinex/sound/ppc/awacs.c:	AWACS_VOLUME("Speaker Playback Volume", 4, 6, 1),
/root/machinex/sound/ppc/awacs.c:	chip->awacs_reg[0] = MASK_MUX_CD | 0xff | MASK_GAINLINE;
/root/machinex/sound/ppc/awacs.c:#define AWACS_VOLUME(xname, xreg, xshift, xinverted) \
/root/machinex/sound/ppc/awacs.c:	/* get default volume from nvram */
/root/machinex/sound/ppc/awacs.c:  .get = snd_pmac_awacs_get_volume, \
/root/machinex/sound/ppc/awacs.c:	  .get = snd_pmac_awacs_get_volume_amp,
/root/machinex/sound/ppc/awacs.c:	  .get = snd_pmac_awacs_get_volume_amp,
/root/machinex/sound/ppc/awacs.c:	if (chip->awacs_reg[0] & MASK_GAINLINE)
/root/machinex/sound/ppc/awacs.c:  .info = snd_pmac_awacs_info_volume, \
/root/machinex/sound/ppc/awacs.c:	  .info = snd_pmac_awacs_info_volume_amp,
/root/machinex/sound/ppc/awacs.c:	  .info = snd_pmac_awacs_info_volume_amp,
/root/machinex/sound/ppc/awacs.c:	/* looks like MASK_GAINLINE triggers something, so we set here
/root/machinex/sound/ppc/awacs.c: * mute master/ogain for AWACS: mono
/root/machinex/sound/ppc/awacs.c:  .put = snd_pmac_awacs_put_volume, \
/root/machinex/sound/ppc/awacs.c:	  .put = snd_pmac_awacs_put_volume_amp,
/root/machinex/sound/ppc/awacs.c:	  .put = snd_pmac_awacs_put_volume_amp,
/root/machinex/sound/ppc/awacs.c:static int snd_pmac_awacs_get_volume_amp(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/awacs.c:static int snd_pmac_awacs_get_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/awacs.c:static int snd_pmac_awacs_info_volume_amp(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/awacs.c:static int snd_pmac_awacs_info_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/awacs.c:static int snd_pmac_awacs_put_volume_amp(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/awacs.c:static int snd_pmac_awacs_put_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/awacs.c:	val0 = chip->awacs_reg[0] & ~MASK_GAINLINE;
/root/machinex/sound/ppc/awacs.c:		val0 |= MASK_GAINLINE;
/root/machinex/sound/ppc/awacs.c: * volumes: 0-15 stereo
/root/machinex/sound/ppc/awacs.c:		 * volumes and mute switches, so we use them instead of
/root/machinex/sound/ppc/awacs.h:#define GAINLEFT(x)	(((x) << 4) & MASK_GAINLEFT)
/root/machinex/sound/ppc/awacs.h:#define GAINRIGHT(x)	((x) & MASK_GAINRIGHT)
/root/machinex/sound/ppc/awacs.h:#define MASK_ADDR_GAIN	MASK_ADDR0
/root/machinex/sound/ppc/awacs.h:#define MASK_GAINLEFT	(0xf << 4)	/* Gain Left Mask */
/root/machinex/sound/ppc/awacs.h:#define MASK_GAINLINE	(0x1 << 8)	/* Disable Mic preamp */
/root/machinex/sound/ppc/awacs.h:#define MASK_GAINMIC	(0x0 << 8)	/* Enable Mic preamp */
/root/machinex/sound/ppc/awacs.h:#define MASK_GAINRIGHT	(0xf)		/* Gain Right Mask */
/root/machinex/sound/ppc/awacs.h:#define SHIFT_GAINLINE	8
/root/machinex/sound/ppc/beep.c:	beep->volume = BEEP_VOLUME;
/root/machinex/sound/ppc/beep.c: * beep volume mixer
/root/machinex/sound/ppc/beep.c:		beep->volume_play = beep->volume;
/root/machinex/sound/ppc/beep.c:	chip->beep->volume = nval;
/root/machinex/sound/ppc/beep.c:#define BEEP_VOLUME	15	/* 0 - 100 */
/root/machinex/sound/ppc/beep.c:	if (hz == beep->hz && beep->volume == beep->volume_play) {
/root/machinex/sound/ppc/beep.c:	int volume;		/* mixer volume: 0-100 */
/root/machinex/sound/ppc/beep.c:	int volume_play;	/* currently playing volume */
/root/machinex/sound/ppc/beep.c:	oval = chip->beep->volume;
/root/machinex/sound/ppc/beep.c:			p[0] = p[1] = beep_wform[j >> 8] * beep->volume;
/root/machinex/sound/ppc/beep.c:	return oval != chip->beep->volume;
/root/machinex/sound/ppc/beep.c:	ucontrol->value.integer.value[0] = chip->beep->volume;
/root/machinex/sound/ppc/burgundy.c: * Burgundy gain/attenuation: 0 - 15, mono/stereo, byte reg
/root/machinex/sound/ppc/burgundy.c: * Burgundy volume: 0 - 100, stereo, 2-byte reg
/root/machinex/sound/ppc/burgundy.c: * Burgundy volume: 0 - 100, stereo, word reg
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_2B("Input Capture Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_2B("Mixer Playback Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_B("CD Gain Capture Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_B("Headphone Playback Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_B("Line in Gain Capture Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_B("Line in Gain Capture Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_B("Line out Playback Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_B("Line out Playback Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_B("Mic Gain Capture Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_B("Speaker Playback Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_B("Speaker Playback Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_W("CD Capture Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_W("Line in Capture Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_W("Line in Capture Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_W("Master Playback Volume", 0,
/root/machinex/sound/ppc/burgundy.c:	BURGUNDY_VOLUME_W("Mic Capture Volume", 0,
/root/machinex/sound/ppc/burgundy.c:			   DEF_BURGUNDY_GAINCD);
/root/machinex/sound/ppc/burgundy.c:			   DEF_BURGUNDY_GAINLINE);
/root/machinex/sound/ppc/burgundy.c:			   DEF_BURGUNDY_GAINMIC);
/root/machinex/sound/ppc/burgundy.c:			   DEF_BURGUNDY_GAINMODEM);
/root/machinex/sound/ppc/burgundy.c:			   DEF_BURGUNDY_MASTER_VOLUME);
/root/machinex/sound/ppc/burgundy.c:#define BURGUNDY_VOLUME_2B(xname, xindex, addr, off) \
/root/machinex/sound/ppc/burgundy.c:#define BURGUNDY_VOLUME_B(xname, xindex, addr, stereo, atten) \
/root/machinex/sound/ppc/burgundy.c:#define BURGUNDY_VOLUME_W(xname, xindex, addr, shift) \
/root/machinex/sound/ppc/burgundy.c:  .get = snd_pmac_burgundy_get_gain,\
/root/machinex/sound/ppc/burgundy.c:  .get = snd_pmac_burgundy_get_volume,\
/root/machinex/sound/ppc/burgundy.c:  .get = snd_pmac_burgundy_get_volume_2b,\
/root/machinex/sound/ppc/burgundy.c:		hardvolume |= hardvolume << 16;
/root/machinex/sound/ppc/burgundy.c:	hardvolume = lvolume + (rvolume << shift);
/root/machinex/sound/ppc/burgundy.c:	if (volume[0] < 0 || volume[0] > 100 ||
/root/machinex/sound/ppc/burgundy.c:	if (volume[0] >= BURGUNDY_VOLUME_OFFSET)
/root/machinex/sound/ppc/burgundy.c:	if (volume[0] >= BURGUNDY_VOLUME_OFFSET)
/root/machinex/sound/ppc/burgundy.c:	if (volume[1] >= BURGUNDY_VOLUME_OFFSET)
/root/machinex/sound/ppc/burgundy.c:	if (volume[1] >= BURGUNDY_VOLUME_OFFSET)
/root/machinex/sound/ppc/burgundy.c:  .info = snd_pmac_burgundy_info_gain,\
/root/machinex/sound/ppc/burgundy.c:  .info = snd_pmac_burgundy_info_volume,\
/root/machinex/sound/ppc/burgundy.c:  .info = snd_pmac_burgundy_info_volume_2b,\
/root/machinex/sound/ppc/burgundy.c:	int hardvolume, lvolume, rvolume;
/root/machinex/sound/ppc/burgundy.c:	int lvolume, rvolume;
/root/machinex/sound/ppc/burgundy.c:	int wvolume;
/root/machinex/sound/ppc/burgundy.c:				  long *volume, int off)
/root/machinex/sound/ppc/burgundy.c:				 long *volume, int off)
/root/machinex/sound/ppc/burgundy.c:			       long *volume, int shift)
/root/machinex/sound/ppc/burgundy.c:			      long *volume, int shift)
/root/machinex/sound/ppc/burgundy.c:	lvolume = volume[0] ? volume[0] + BURGUNDY_VOLUME_OFFSET : 0;
/root/machinex/sound/ppc/burgundy.c:	lvolume = volume[0] ? volume[0] + BURGUNDY_VOLUME_OFFSET : 0;
/root/machinex/sound/ppc/burgundy.c:			MASK_ADDR_BURGUNDY_GAINCD, 1, 0),
/root/machinex/sound/ppc/burgundy.c:			MASK_ADDR_BURGUNDY_GAINLINE, 1, 0),
/root/machinex/sound/ppc/burgundy.c:			MASK_ADDR_BURGUNDY_GAINMIC, 1, 0),
/root/machinex/sound/ppc/burgundy.c:			MASK_ADDR_BURGUNDY_GAINMIC, 1, 0),
/root/machinex/sound/ppc/burgundy.c:			MASK_ADDR_BURGUNDY_MASTER_VOLUME, 8),
/root/machinex/sound/ppc/burgundy.c:  .put = snd_pmac_burgundy_put_gain,\
/root/machinex/sound/ppc/burgundy.c:  .put = snd_pmac_burgundy_put_volume,\
/root/machinex/sound/ppc/burgundy.c:  .put = snd_pmac_burgundy_put_volume_2b,\
/root/machinex/sound/ppc/burgundy.c:	rvolume = volume[1] ? volume[1] + BURGUNDY_VOLUME_OFFSET : 0;
/root/machinex/sound/ppc/burgundy.c:	rvolume = volume[1] ? volume[1] + BURGUNDY_VOLUME_OFFSET : 0;
/root/machinex/sound/ppc/burgundy.c:	snd_pmac_burgundy_read_volume_2b(chip, addr,
/root/machinex/sound/ppc/burgundy.c:	snd_pmac_burgundy_read_volume_2b(chip, addr, nvoices, off);
/root/machinex/sound/ppc/burgundy.c:snd_pmac_burgundy_read_volume_2b(struct snd_pmac *chip, unsigned int address,
/root/machinex/sound/ppc/burgundy.c:	snd_pmac_burgundy_read_volume(chip, addr,
/root/machinex/sound/ppc/burgundy.c:	snd_pmac_burgundy_read_volume(chip, addr, nvoices, shift);
/root/machinex/sound/ppc/burgundy.c:snd_pmac_burgundy_read_volume(struct snd_pmac *chip, unsigned int address,
/root/machinex/sound/ppc/burgundy.c:	snd_pmac_burgundy_wcb(chip, address + off + 0x500, rvolume);
/root/machinex/sound/ppc/burgundy.c:	snd_pmac_burgundy_wcb(chip, address + off, lvolume);
/root/machinex/sound/ppc/burgundy.c:	snd_pmac_burgundy_wcb(chip, MASK_ADDR_BURGUNDY_GAINCD,
/root/machinex/sound/ppc/burgundy.c:	snd_pmac_burgundy_wcb(chip, MASK_ADDR_BURGUNDY_GAINLINE,
/root/machinex/sound/ppc/burgundy.c:	snd_pmac_burgundy_wcb(chip, MASK_ADDR_BURGUNDY_GAINMIC,
/root/machinex/sound/ppc/burgundy.c:	snd_pmac_burgundy_wcb(chip, MASK_ADDR_BURGUNDY_GAINMODEM,
/root/machinex/sound/ppc/burgundy.c:	snd_pmac_burgundy_wcw(chip, address, hardvolume);
/root/machinex/sound/ppc/burgundy.c:	snd_pmac_burgundy_wcw(chip, MASK_ADDR_BURGUNDY_MASTER_VOLUME,
/root/machinex/sound/ppc/burgundy.c:	snd_pmac_burgundy_write_volume_2b(chip, addr,
/root/machinex/sound/ppc/burgundy.c:snd_pmac_burgundy_write_volume_2b(struct snd_pmac *chip, unsigned int address,
/root/machinex/sound/ppc/burgundy.c:	snd_pmac_burgundy_write_volume(chip, addr,
/root/machinex/sound/ppc/burgundy.c:snd_pmac_burgundy_write_volume(struct snd_pmac *chip, unsigned int address,
/root/machinex/sound/ppc/burgundy.c:static int snd_pmac_burgundy_get_gain(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/burgundy.c:static int snd_pmac_burgundy_get_volume_2b(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/burgundy.c:static int snd_pmac_burgundy_get_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/burgundy.c:static int snd_pmac_burgundy_info_gain(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/burgundy.c:static int snd_pmac_burgundy_info_volume_2b(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/burgundy.c:static int snd_pmac_burgundy_info_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/burgundy.c:static int snd_pmac_burgundy_put_gain(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/burgundy.c:static int snd_pmac_burgundy_put_volume_2b(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/burgundy.c:static int snd_pmac_burgundy_put_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/burgundy.c:		volume[0] = 0;
/root/machinex/sound/ppc/burgundy.c:		volume[0] = 0;
/root/machinex/sound/ppc/burgundy.c:		volume[0] -= BURGUNDY_VOLUME_OFFSET;
/root/machinex/sound/ppc/burgundy.c:		volume[0] -= BURGUNDY_VOLUME_OFFSET;
/root/machinex/sound/ppc/burgundy.c:	volume[0] = snd_pmac_burgundy_rcb(chip, address + off);
/root/machinex/sound/ppc/burgundy.c:	volume[0] = wvolume & 0xff;
/root/machinex/sound/ppc/burgundy.c:		volume[1] = 0;
/root/machinex/sound/ppc/burgundy.c:		volume[1] = 0;
/root/machinex/sound/ppc/burgundy.c:	    volume[1] < 0 || volume[1] > 100)
/root/machinex/sound/ppc/burgundy.c:		volume[1] -= BURGUNDY_VOLUME_OFFSET;
/root/machinex/sound/ppc/burgundy.c:		volume[1] -= BURGUNDY_VOLUME_OFFSET;
/root/machinex/sound/ppc/burgundy.c:	volume[1] = snd_pmac_burgundy_rcb(chip, address + off + 0x100);
/root/machinex/sound/ppc/burgundy.c:	volume[1] = (wvolume >> shift) & 0xff;
/root/machinex/sound/ppc/burgundy.c:	wvolume = snd_pmac_burgundy_rcw(chip, address);
/root/machinex/sound/ppc/burgundy.h:#define BURGUNDY_VOLUME_OFFSET	155
/root/machinex/sound/ppc/burgundy.h:#define DEF_BURGUNDY_GAINCD (0x33)
/root/machinex/sound/ppc/burgundy.h:#define DEF_BURGUNDY_GAINLINE (0x44)
/root/machinex/sound/ppc/burgundy.h:#define DEF_BURGUNDY_GAINMIC (0x44)
/root/machinex/sound/ppc/burgundy.h:#define DEF_BURGUNDY_GAINMODEM (0x06)
/root/machinex/sound/ppc/burgundy.h:#define DEF_BURGUNDY_MASTER_VOLUME (0xDDDDDDDD)
/root/machinex/sound/ppc/burgundy.h:/* #define DEF_BURGUNDY_MASTER_VOLUME (0xFFFFFFFF) */ /* too loud */
/root/machinex/sound/ppc/burgundy.h:#define MASK_ADDR_BURGUNDY_GAINCD (MASK_ADDR_BURGUNDY_GAINCH1)
/root/machinex/sound/ppc/burgundy.h:#define MASK_ADDR_BURGUNDY_GAINCH1 (0x13 << 12)
/root/machinex/sound/ppc/burgundy.h:#define MASK_ADDR_BURGUNDY_GAINCH2 (0x14 << 12)
/root/machinex/sound/ppc/burgundy.h:#define MASK_ADDR_BURGUNDY_GAINCH3 (0x15 << 12)
/root/machinex/sound/ppc/burgundy.h:#define MASK_ADDR_BURGUNDY_GAINCH4 (0x16 << 12)
/root/machinex/sound/ppc/burgundy.h:#define MASK_ADDR_BURGUNDY_GAINLINE (MASK_ADDR_BURGUNDY_GAINCH2)
/root/machinex/sound/ppc/burgundy.h:#define MASK_ADDR_BURGUNDY_GAINMIC (MASK_ADDR_BURGUNDY_GAINCH3)
/root/machinex/sound/ppc/burgundy.h:#define MASK_ADDR_BURGUNDY_GAINMODEM (MASK_ADDR_BURGUNDY_VOLCH4)
/root/machinex/sound/ppc/burgundy.h:#define MASK_ADDR_BURGUNDY_MASTER_VOLUME (0x30 << 12)
/root/machinex/sound/ppc/burgundy.h:/* Remember: lowest volume here is 0x9B (155) */
/root/machinex/sound/ppc/daca.c:	daca_set_volume(mix);
/root/machinex/sound/ppc/daca.c:		daca_set_volume(mix);
/root/machinex/sound/ppc/daca.c:		daca_set_volume(mix);
/root/machinex/sound/ppc/daca.c:	  .get = daca_get_volume,
/root/machinex/sound/ppc/daca.c:	  .info = daca_info_volume,
/root/machinex/sound/ppc/daca.c:/* maximum volume value */
/root/machinex/sound/ppc/daca.c:/* output volume */
/root/machinex/sound/ppc/daca.c:	  .put = daca_put_volume
/root/machinex/sound/ppc/daca.c:		snd_printk(KERN_ERR "failed to set volume \n");
/root/machinex/sound/ppc/daca.c:static int daca_get_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/daca.c:static int daca_info_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/daca.c:static int daca_put_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/daca.c:static int daca_set_volume(struct pmac_daca *mix)
/root/machinex/sound/ppc/daca.c: * update volume
/root/machinex/sound/ppc/tumbler.c:	DBG("(I) succeeded to set volume (%u, %u)\n", left_vol, right_vol);
/root/machinex/sound/ppc/tumbler.c:	  .get = tumbler_get_master_volume,
/root/machinex/sound/ppc/tumbler.c:	  .get = tumbler_get_master_volume,
/root/machinex/sound/ppc/tumbler.c:		if (left_vol >= ARRAY_SIZE(master_volume_table))
/root/machinex/sound/ppc/tumbler.c:		if (right_vol >= ARRAY_SIZE(master_volume_table))
/root/machinex/sound/ppc/tumbler.c:	if (vol[0] >= ARRAY_SIZE(master_volume_table) ||
/root/machinex/sound/ppc/tumbler.c:	if (vol[0] >= ARRAY_SIZE(mixer_volume_table) ||
/root/machinex/sound/ppc/tumbler.c:	if (vol >= ARRAY_SIZE(mixer_volume_table)) {
/root/machinex/sound/ppc/tumbler.c:#include "tumbler_volume.h"
/root/machinex/sound/ppc/tumbler.c:	  .info = tumbler_info_master_volume,
/root/machinex/sound/ppc/tumbler.c:	  .info = tumbler_info_master_volume,
/root/machinex/sound/ppc/tumbler.c:			left_vol = ARRAY_SIZE(master_volume_table) - 1;
/root/machinex/sound/ppc/tumbler.c:		left_vol = master_volume_table[left_vol];
/root/machinex/sound/ppc/tumbler.c:	.max = ARRAY_SIZE(bass_volume_table),
/root/machinex/sound/ppc/tumbler.c:	.max = ARRAY_SIZE(mixer_volume_table),
/root/machinex/sound/ppc/tumbler.c:	.max = ARRAY_SIZE(snapper_bass_volume_table),
/root/machinex/sound/ppc/tumbler.c:	.max = ARRAY_SIZE(snapper_treble_volume_table),
/root/machinex/sound/ppc/tumbler.c:	.max = ARRAY_SIZE(treble_volume_table),
/root/machinex/sound/ppc/tumbler.c: * mono volumes
/root/machinex/sound/ppc/tumbler.c:/* mono volumes for tas3001c/tas3004 */
/root/machinex/sound/ppc/tumbler.c:/* output volume */
/root/machinex/sound/ppc/tumbler.c:	  .put = tumbler_put_master_volume
/root/machinex/sound/ppc/tumbler.c:	  .put = tumbler_put_master_volume
/root/machinex/sound/ppc/tumbler.c:	/* reset the master volume so the correct amplification is applied */
/root/machinex/sound/ppc/tumbler.c:			right_vol = ARRAY_SIZE(master_volume_table) - 1;
/root/machinex/sound/ppc/tumbler.c:		right_vol = master_volume_table[right_vol];
/root/machinex/sound/ppc/tumbler.c: * snapper mixer volumes
/root/machinex/sound/ppc/tumbler.c:		snd_printk(KERN_ERR "failed to set mono volume %d\n",
/root/machinex/sound/ppc/tumbler.c:		snd_printk(KERN_ERR "failed to set mono volume %d\n", reg);
/root/machinex/sound/ppc/tumbler.c:		snd_printk(KERN_ERR "failed to set volume \n");
/root/machinex/sound/ppc/tumbler.c:static int tumbler_get_master_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/tumbler.c:static int tumbler_info_master_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/tumbler.c:static int tumbler_put_master_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/ppc/tumbler.c:static int tumbler_set_master_volume(struct pmac_tumbler *mix)
/root/machinex/sound/ppc/tumbler.c:static int tumbler_set_mono_volume(struct pmac_tumbler *mix,
/root/machinex/sound/ppc/tumbler.c:/* stereo volumes for tas3004 */
/root/machinex/sound/ppc/tumbler.c:	.table = bass_volume_table,
/root/machinex/sound/ppc/tumbler.c:	.table = mixer_volume_table,
/root/machinex/sound/ppc/tumbler.c:	.table = snapper_bass_volume_table,
/root/machinex/sound/ppc/tumbler.c:	.table = snapper_treble_volume_table,
/root/machinex/sound/ppc/tumbler.c:	.table = treble_volume_table,
/root/machinex/sound/ppc/tumbler.c:/* TAS3001c mono volumes */
/root/machinex/sound/ppc/tumbler.c:/* TAS3004 mono volumes */
/root/machinex/sound/ppc/tumbler.c:	tumbler_set_master_volume(mix);
/root/machinex/sound/ppc/tumbler.c:	tumbler_set_master_volume(mix);
/root/machinex/sound/ppc/tumbler.c:	tumbler_set_master_volume(mix);
/root/machinex/sound/ppc/tumbler.c:		tumbler_set_master_volume(mix);
/root/machinex/sound/ppc/tumbler.c:		tumbler_set_master_volume(mix);
/root/machinex/sound/ppc/tumbler.c:		tumbler_set_mono_volume(mix, info);
/root/machinex/sound/ppc/tumbler.c:		tumbler_set_mono_volume(mix, &snapper_bass_vol_info);
/root/machinex/sound/ppc/tumbler.c:		tumbler_set_mono_volume(mix, &snapper_treble_vol_info);
/root/machinex/sound/ppc/tumbler.c:		tumbler_set_mono_volume(mix, &tumbler_bass_vol_info);
/root/machinex/sound/ppc/tumbler.c:		tumbler_set_mono_volume(mix, &tumbler_pcm_vol_info);
/root/machinex/sound/ppc/tumbler.c:		tumbler_set_mono_volume(mix, &tumbler_treble_vol_info);
/root/machinex/sound/ppc/tumbler.c:	uinfo->value.integer.max = ARRAY_SIZE(master_volume_table) - 1;
/root/machinex/sound/ppc/tumbler.c:	uinfo->value.integer.max = ARRAY_SIZE(mixer_volume_table) - 1;
/root/machinex/sound/ppc/tumbler.c:	unsigned int mix_vol[VOL_IDX_LAST_MIX][2]; /* stereo volumes for tas3004 */
/root/machinex/sound/ppc/tumbler.c: * update master volume
/root/machinex/sound/ppc/tumbler.c:	    vol[1] >= ARRAY_SIZE(master_volume_table))
/root/machinex/sound/ppc/tumbler.c:	    vol[1] >= ARRAY_SIZE(mixer_volume_table))
/root/machinex/sound/ppc/tumbler.c:		vol = ARRAY_SIZE(mixer_volume_table) - 1;
/root/machinex/sound/ppc/tumbler.c:		vol = mixer_volume_table[vol];
/root/machinex/sound/ppc/tumbler_volume.h:/* mixer (pcm) volume table */
/root/machinex/sound/ppc/tumbler_volume.h:static unsigned int bass_volume_table[] = {
/root/machinex/sound/ppc/tumbler_volume.h:static unsigned int master_volume_table[] = {
/root/machinex/sound/ppc/tumbler_volume.h:static unsigned int mixer_volume_table[] = {
/root/machinex/sound/ppc/tumbler_volume.h:static unsigned int snapper_bass_volume_table[] = {
/root/machinex/sound/ppc/tumbler_volume.h:static unsigned int snapper_treble_volume_table[] = {
/root/machinex/sound/ppc/tumbler_volume.h:static unsigned int treble_volume_table[] = {
/root/machinex/sound/ppc/tumbler_volume.h:/* volume gain values */
/root/machinex/sound/ppc/tumbler_volume.h:/* volume tables, taken from TAS3001c data manual */
/root/machinex/sound/sh/aica.c:	channel->vol = dreamcastcard->master_volume;
/root/machinex/sound/sh/aica.c:	dreamcastcard->master_volume = ucontrol->value.integer.value[0];
/root/machinex/sound/sh/aica.c:	.get = aica_pcmvolume_get,
/root/machinex/sound/sh/aica.c:	.info = aica_pcmvolume_info,
/root/machinex/sound/sh/aica.c:	.put = aica_pcmvolume_put
/root/machinex/sound/sh/aica.c:	     snd_ctl_new1(&snd_aica_pcmvolume_control, dreamcastcard));
/root/machinex/sound/sh/aica.c:static int aica_pcmvolume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/sh/aica.c:static int aica_pcmvolume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/sh/aica.c:static int aica_pcmvolume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/sh/aica.c:static struct snd_kcontrol_new snd_aica_pcmvolume_control = {
/root/machinex/sound/sh/aica.h:	int master_volume;
/root/machinex/sound/soc/atmel/atmel-pcm.c: *	 them against real values for AT32
/root/machinex/sound/soc/au1x/psc-ac97.c:		/* ...enable the AC97 controller again... */
/root/machinex/sound/soc/au1x/psc-ac97.c:			tmo = 1;	/* wrong register, try again */
/root/machinex/sound/soc/blackfin/bf5xx-i2s.c:	/* No active stream, SPORT is allowed to be configured again. */
/root/machinex/sound/soc/blackfin/bf5xx-tdm.c:	/* No active stream, SPORT is allowed to be configured again. */
/root/machinex/sound/soc/codecs/88pm860x-codec.c:			     PM860X_HIFIL_GAIN_LEFT,
/root/machinex/sound/soc/codecs/88pm860x-codec.c:			     PM860X_HIFIL_GAIN_RIGHT, 0, 63, 0,
/root/machinex/sound/soc/codecs/88pm860x-codec.c:			     PM860X_HIFIR_GAIN_LEFT,
/root/machinex/sound/soc/codecs/88pm860x-codec.c:			     PM860X_HIFIR_GAIN_RIGHT, 0, 63, 0,
/root/machinex/sound/soc/codecs/88pm860x-codec.c:			     PM860X_LOFI_GAIN_RIGHT, 0, 63, 0,
/root/machinex/sound/soc/codecs/88pm860x-codec.c:			     PM860X_SIDETONE_R_GAIN, 0, ARRAY_SIZE(st_table)-1,
/root/machinex/sound/soc/codecs/88pm860x-codec.c:	SOC_DOUBLE_R_EXT_TLV("Lofi Playback Volume", PM860X_LOFI_GAIN_LEFT,
/root/machinex/sound/soc/codecs/88pm860x-codec.c:	SOC_DOUBLE_R_EXT_TLV("Sidetone Volume", PM860X_SIDETONE_L_GAIN,
/root/machinex/sound/soc/codecs/88pm860x-codec.c:static struct st_gain st_table[] = {
/root/machinex/sound/soc/codecs/88pm860x-codec.c:struct st_gain {
/root/machinex/sound/soc/codecs/88pm860x-codec.h:#define PM860X_HIFIL_GAIN_LEFT		0x17
/root/machinex/sound/soc/codecs/88pm860x-codec.h:#define PM860X_HIFIL_GAIN_RIGHT		0x18
/root/machinex/sound/soc/codecs/88pm860x-codec.h:#define PM860X_HIFIR_GAIN_LEFT		0x19
/root/machinex/sound/soc/codecs/88pm860x-codec.h:#define PM860X_HIFIR_GAIN_RIGHT		0x1a
/root/machinex/sound/soc/codecs/88pm860x-codec.h:#define PM860X_LOFI_GAIN_LEFT		0x15
/root/machinex/sound/soc/codecs/88pm860x-codec.h:#define PM860X_LOFI_GAIN_RIGHT		0x16
/root/machinex/sound/soc/codecs/88pm860x-codec.h:#define PM860X_SIDETONE_L_GAIN		0x05
/root/machinex/sound/soc/codecs/88pm860x-codec.h:#define PM860X_SIDETONE_R_GAIN		0x06
/root/machinex/sound/soc/codecs/ad1836.c:	AD1836_DAC_VOLUME(1),
/root/machinex/sound/soc/codecs/ad1836.c:	AD1836_DAC_VOLUME(2),
/root/machinex/sound/soc/codecs/ad1836.c:	AD1836_DAC_VOLUME(3),
/root/machinex/sound/soc/codecs/ad1836.c:	AD1836_DAC_VOLUME(4),
/root/machinex/sound/soc/codecs/ad1836.c: * AD1836 volume/mute/de-emphasis etc. controls
/root/machinex/sound/soc/codecs/ad1836.c:#define AD1836_DAC_VOLUME(x) \
/root/machinex/sound/soc/codecs/ad1836.c:	/* volume */
/root/machinex/sound/soc/codecs/ad193x.c: * AD193X volume/mute/de-emphasis etc. controls
/root/machinex/sound/soc/codecs/ad193x.c:	/* DAC volume control */
/root/machinex/sound/soc/codecs/ad1980.c:	ac97_write(codec, AC97_REC_GAIN, 0x0000);
/root/machinex/sound/soc/codecs/ad1980.c:SOC_DOUBLE("PCM Capture Volume", AC97_REC_GAIN, 8, 0, 31, 0),
/root/machinex/sound/soc/codecs/ad1980.c:SOC_SINGLE("PCM Capture Switch", AC97_REC_GAIN, 15, 1, 1),
/root/machinex/sound/soc/codecs/ad1980.c:	/* unmute captures and playbacks volume */
/root/machinex/sound/soc/codecs/adau1373.c:		1, 0, adau1373_gain_boost_tlv),
/root/machinex/sound/soc/codecs/adau1373.c:		1, 0, adau1373_gain_boost_tlv),
/root/machinex/sound/soc/codecs/adau1373.c:		1, 0, adau1373_gain_boost_tlv),
/root/machinex/sound/soc/codecs/adau1373.c:		1, 0, adau1373_gain_boost_tlv),
/root/machinex/sound/soc/codecs/adau1373.c:		1, 0, adau1373_gain_boost_tlv),
/root/machinex/sound/soc/codecs/adau1373.c:		1, 0, adau1373_gain_boost_tlv),
/root/machinex/sound/soc/codecs/adau1373.c:		1, 0, adau1373_gain_boost_tlv),
/root/machinex/sound/soc/codecs/adau1373.c:		1, 0, adau1373_gain_boost_tlv),
/root/machinex/sound/soc/codecs/adau1373.c:		1, 0, adau1373_gain_boost_tlv),
/root/machinex/sound/soc/codecs/adau1373.c:		1, 0, adau1373_gain_boost_tlv),
/root/machinex/sound/soc/codecs/adau1373.c:#define ADAU1373_ADC_GAIN	0x11
/root/machinex/sound/soc/codecs/adau1373.c:#define ADAU1373_VOL_GAIN1	0x76
/root/machinex/sound/soc/codecs/adau1373.c:#define ADAU1373_VOL_GAIN2	0x77
/root/machinex/sound/soc/codecs/adau1373.c:#define ADAU1373_VOL_GAIN3	0x78
/root/machinex/sound/soc/codecs/adau1373.c:	SOC_DOUBLE_TLV("ADC Boost Capture Volume", ADAU1373_VOL_GAIN3, 4, 5,
/root/machinex/sound/soc/codecs/adau1373.c:	SOC_DOUBLE_TLV("AIF1 Boost Capture Volume", ADAU1373_VOL_GAIN2, 0, 1,
/root/machinex/sound/soc/codecs/adau1373.c:	SOC_DOUBLE_TLV("AIF1 Boost Playback Volume", ADAU1373_VOL_GAIN1, 0, 1,
/root/machinex/sound/soc/codecs/adau1373.c:	SOC_DOUBLE_TLV("AIF2 Boost Capture Volume", ADAU1373_VOL_GAIN2, 2, 3,
/root/machinex/sound/soc/codecs/adau1373.c:	SOC_DOUBLE_TLV("AIF2 Boost Playback Volume", ADAU1373_VOL_GAIN1, 2, 3,
/root/machinex/sound/soc/codecs/adau1373.c:	SOC_DOUBLE_TLV("AIF3 Boost Capture Volume", ADAU1373_VOL_GAIN2, 4, 5,
/root/machinex/sound/soc/codecs/adau1373.c:	SOC_DOUBLE_TLV("AIF3 Boost Playback Volume", ADAU1373_VOL_GAIN1, 4, 5,
/root/machinex/sound/soc/codecs/adau1373.c:	SOC_DOUBLE_TLV("DAC1 Boost Playback Volume", ADAU1373_VOL_GAIN3, 0, 1,
/root/machinex/sound/soc/codecs/adau1373.c:	SOC_DOUBLE_TLV("DAC2 Boost Playback Volume", ADAU1373_VOL_GAIN3, 2, 3,
/root/machinex/sound/soc/codecs/adau1373.c:	SOC_DOUBLE_TLV("DMIC Boost Capture Volume", ADAU1373_VOL_GAIN3, 6, 7,
/root/machinex/sound/soc/codecs/adau1373.c:	SOC_DOUBLE_TLV("Input 1 Boost Capture Volume", ADAU1373_ADC_GAIN, 0, 4,
/root/machinex/sound/soc/codecs/adau1373.c:	SOC_DOUBLE_TLV("Input 2 Boost Capture Volume", ADAU1373_ADC_GAIN, 1, 5,
/root/machinex/sound/soc/codecs/adau1373.c:	SOC_DOUBLE_TLV("Input 3 Boost Capture Volume", ADAU1373_ADC_GAIN, 2, 6,
/root/machinex/sound/soc/codecs/adau1373.c:	SOC_DOUBLE_TLV("Input 4 Boost Capture Volume", ADAU1373_ADC_GAIN, 3, 7,
/root/machinex/sound/soc/codecs/adau1373.c:static const DECLARE_TLV_DB_SCALE(adau1373_gain_boost_tlv, 0, 600, 0);
/root/machinex/sound/soc/codecs/ak4535.c:	SOC_ENUM_SINGLE(AK4535_SIG1, 7, 2, ak4535_mono_gain),
/root/machinex/sound/soc/codecs/ak4535.c:static const char *ak4535_mono_gain[] = {"+6dB", "-17dB"};
/root/machinex/sound/soc/codecs/ak4641.c:							mono_gain_tlv),
/root/machinex/sound/soc/codecs/ak4641.c:static const DECLARE_TLV_DB_SCALE(mono_gain_tlv, -1700, 2300, 0);
/root/machinex/sound/soc/codecs/ak4642.c:#define MGAIN0		(1 << 0) /* MIC amp gain*/
/root/machinex/sound/soc/codecs/ak4642.c:		snd_soc_update_bits(codec, SG_SL1, PMMP | MGAIN0, PMMP | MGAIN0);
/root/machinex/sound/soc/codecs/ak4642.c:		snd_soc_write(codec, L_IVC, 0x91); /* volume */
/root/machinex/sound/soc/codecs/ak4642.c:		snd_soc_write(codec, R_IVC, 0x91); /* volume */
/root/machinex/sound/soc/codecs/ak4671.c:	0x00,	/* AK4671_SIDETONE_VOLUME_CONTROL	(0x58)	*/
/root/machinex/sound/soc/codecs/ak4671.c:	0x18,	/* AK4671_DIGITAL_VOLUME_B_CONTROL	(0x56)	*/
/root/machinex/sound/soc/codecs/ak4671.c:	0x18,	/* AK4671_DIGITAL_VOLUME_C_CONTROL	(0x57)	*/
/root/machinex/sound/soc/codecs/ak4671.c:	0x18,	/* AK4671_LCH_OUTPUT_VOLUME_CONTROL	(0x1a)	*/
/root/machinex/sound/soc/codecs/ak4671.c:	0x18,	/* AK4671_RCH_OUTPUT_VOLUME_CONTROL	(0x1b)	*/
/root/machinex/sound/soc/codecs/ak4671.c:	0x55,	/* AK4671_MIC_AMP_GAIN			(0x05)	*/
/root/machinex/sound/soc/codecs/ak4671.c:	0x91,	/* AK4671_LCH_INPUT_VOLUME_CONTROL	(0x12)	*/
/root/machinex/sound/soc/codecs/ak4671.c:	0x91,	/* AK4671_RCH_INPUT_VOLUME_CONTROL	(0x13)	*/
/root/machinex/sound/soc/codecs/ak4671.c:	0xb5,	/* AK4671_OUTPUT_VOLUME_CONTROL		(0x08)	*/
/root/machinex/sound/soc/codecs/ak4671.c:			AK4671_MIC_AMP_GAIN, 0, 4, 0xf, 0, mic_amp_tlv),
/root/machinex/sound/soc/codecs/ak4671.c:			AK4671_OUTPUT_VOLUME_CONTROL, 0, 0x6, 0, out1_tlv),
/root/machinex/sound/soc/codecs/ak4671.c:			AK4671_OUTPUT_VOLUME_CONTROL, 4, 0xd, 0, out2_tlv),
/root/machinex/sound/soc/codecs/ak4671.c:	/* Common capture gain controls */
/root/machinex/sound/soc/codecs/ak4671.c:	/* Common playback gain controls */
/root/machinex/sound/soc/codecs/ak4671.c: * LOUT1/ROUT1 output volume control:
/root/machinex/sound/soc/codecs/ak4671.c: * LOUT2/ROUT2 output volume control:
/root/machinex/sound/soc/codecs/ak4671.c: * LOUT3/ROUT3 output volume control:
/root/machinex/sound/soc/codecs/ak4671.c: * Mic amp gain control:
/root/machinex/sound/soc/codecs/ak4671.h:#define AK4671_DIGITAL_VOLUME_B_CONTROL		0x56
/root/machinex/sound/soc/codecs/ak4671.h:#define AK4671_DIGITAL_VOLUME_C_CONTROL		0x57
/root/machinex/sound/soc/codecs/ak4671.h:#define AK4671_LCH_INPUT_VOLUME_CONTROL		0x12
/root/machinex/sound/soc/codecs/ak4671.h:#define AK4671_LCH_OUTPUT_VOLUME_CONTROL	0x1a
/root/machinex/sound/soc/codecs/ak4671.h:#define AK4671_MIC_AMP_GAIN			0x05
/root/machinex/sound/soc/codecs/ak4671.h:#define AK4671_OUTPUT_VOLUME_CONTROL		0x08
/root/machinex/sound/soc/codecs/ak4671.h:#define AK4671_RCH_INPUT_VOLUME_CONTROL		0x13
/root/machinex/sound/soc/codecs/ak4671.h:#define AK4671_RCH_OUTPUT_VOLUME_CONTROL	0x1b
/root/machinex/sound/soc/codecs/ak4671.h:#define AK4671_SIDETONE_VOLUME_CONTROL		0x58
/root/machinex/sound/soc/codecs/alc5623.c:			ALC5623_ADC_REC_GAIN, 7, 0, 31, 0, adc_rec_tlv),
/root/machinex/sound/soc/codecs/alc5623.c:SOC_DAPM_SINGLE("ADC2HP_L Playback Switch", ALC5623_ADC_REC_GAIN, 15, 1, 1),
/root/machinex/sound/soc/codecs/alc5623.c:SOC_DAPM_SINGLE("ADC2HP_R Playback Switch", ALC5623_ADC_REC_GAIN, 14, 1, 1),
/root/machinex/sound/soc/codecs/alc5623.c:SOC_DAPM_SINGLE("ADC2MONO_L Playback Switch", ALC5623_ADC_REC_GAIN, 13, 1, 1),
/root/machinex/sound/soc/codecs/alc5623.c:SOC_DAPM_SINGLE("ADC2MONO_R Playback Switch", ALC5623_ADC_REC_GAIN, 12, 1, 1),
/root/machinex/sound/soc/codecs/alc5623.h:#define ALC5623_ADC_REC_GAIN			0x12
/root/machinex/sound/soc/codecs/alc5623.h:#define ALC5623_PWR_ADD2_L_ADC_CLK_GAIN		(1 <<  7)
/root/machinex/sound/soc/codecs/alc5623.h:#define ALC5623_PWR_ADD2_R_ADC_CLK_GAIN		(1 <<  6)
/root/machinex/sound/soc/codecs/alc5632.c:			ALC5632_ADC_REC_GAIN, 8, 0, 31, 0, adc_rec_tlv),
/root/machinex/sound/soc/codecs/alc5632.c:SOC_DAPM_SINGLE("ADC2HP_L Playback Switch", ALC5632_ADC_REC_GAIN, 15, 1, 1),
/root/machinex/sound/soc/codecs/alc5632.c:SOC_DAPM_SINGLE("ADC2HP_R Playback Switch", ALC5632_ADC_REC_GAIN, 7, 1, 1),
/root/machinex/sound/soc/codecs/alc5632.c:SOC_DAPM_SINGLE("ADC2MONO_L Playback Switch", ALC5632_ADC_REC_GAIN, 14, 1, 1),
/root/machinex/sound/soc/codecs/alc5632.c:SOC_DAPM_SINGLE("ADC2MONO_R Playback Switch", ALC5632_ADC_REC_GAIN, 6, 1, 1),
/root/machinex/sound/soc/codecs/alc5632.h:#define ALC5632_ADC_REC_GAIN			0x12 /* rec gain */
/root/machinex/sound/soc/codecs/alc5632.h:#define ALC5632_ADC_REC_GAIN_BASE		(-16.5)
/root/machinex/sound/soc/codecs/alc5632.h:#define ALC5632_ADC_REC_GAIN_RANGE		0x1F1F
/root/machinex/sound/soc/codecs/alc5632.h:#define ALC5632_ADC_REC_GAIN_STEP		1.5
/root/machinex/sound/soc/codecs/alc5632.h:#define ALC5632_PWR_ADD2_L_ADC_CLK_GAIN		(1 <<  7)
/root/machinex/sound/soc/codecs/alc5632.h:#define ALC5632_PWR_ADD2_R_ADC_CLK_GAIN		(1 <<  6)
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_AEC_CNG_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_AEC_SPEAKER_VOLUME] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_AVALON_AV_DIGITAL_OUT_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_AVALON_EQ_GRAPHIC_BAND10_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_AVALON_EQ_GRAPHIC_BAND1_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_AVALON_EQ_GRAPHIC_BAND2_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_AVALON_EQ_GRAPHIC_BAND3_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_AVALON_EQ_GRAPHIC_BAND4_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_AVALON_EQ_GRAPHIC_BAND5_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_AVALON_EQ_GRAPHIC_BAND6_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_AVALON_EQ_GRAPHIC_BAND7_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_AVALON_EQ_GRAPHIC_BAND8_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_AVALON_EQ_GRAPHIC_BAND9_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_BWE_HIGH_BAND_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DEREVERB_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_AUDIN1] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_AUDIN2] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_AUDIN3] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_AUDIN4] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_AUDOUT1] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_AUDOUT2] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_AUDOUT3] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_AUDOUT4] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_CSOUT] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_FEIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_FEOUT1] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_FEOUT2] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_PRIMARY] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_QUAD] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_SECONDARY] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_TERTIARY] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_UITONE1] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIGITAL_GAIN_UITONE2] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIRAC_NARRATOR_AGC_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_DIRAC_SCENE_AGC_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_RX_AGC_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_RX_CNG_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_SIDETONE_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_TONE_PARAM_GEN_BEEP_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_TX_AGC_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325-access.h:	[ES325_VEQ_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es325.c:/* bwe high band gain */
/root/machinex/sound/soc/codecs/audience/es325.c:/* dereverb gain */
/root/machinex/sound/soc/codecs/audience/es325.c:		       ES325_BWE_HIGH_BAND_GAIN, 0, 100, 0,
/root/machinex/sound/soc/codecs/audience/es325.c:		       ES325_DEREVERB_GAIN, 0, 100, 0,
/root/machinex/sound/soc/codecs/audience/es325.c:		       es325_get_bwe_high_band_gain_value,
/root/machinex/sound/soc/codecs/audience/es325.c:		       es325_get_dereverb_gain_value, es325_put_dereverb_gain_value),
/root/machinex/sound/soc/codecs/audience/es325.c:		       es325_put_bwe_high_band_gain_value),
/root/machinex/sound/soc/codecs/audience/es325.c:/* generic gain translation */
/root/machinex/sound/soc/codecs/audience/es325.c:	return	(gain - min) / step;
/root/machinex/sound/soc/codecs/audience/es325.c:static int es325_gain_to_index(int min, int step, int gain)
/root/machinex/sound/soc/codecs/audience/es325.c:static int es325_get_bwe_high_band_gain_value(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/audience/es325.c:static int es325_get_dereverb_gain_value(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/audience/es325.c:static int es325_index_to_gain(int min, int step, int index)
/root/machinex/sound/soc/codecs/audience/es325.c:static int es325_put_bwe_high_band_gain_value(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/audience/es325.c:static int es325_put_dereverb_gain_value(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/audience/es325.c:	ucontrol->value.integer.value[0] = es325_gain_to_index(-10, 1, value);
/root/machinex/sound/soc/codecs/audience/es325.c:	ucontrol->value.integer.value[0] = es325_gain_to_index(-12, 1, value);
/root/machinex/sound/soc/codecs/audience/es325.c:	ucontrol->value.integer.value[0] = es325_gain_to_index(-20, 1, value);
/root/machinex/sound/soc/codecs/audience/es325.c:		value = es325_index_to_gain(-10, 1, ucontrol->value.integer.value[0]);
/root/machinex/sound/soc/codecs/audience/es325.c:		value = es325_index_to_gain(-12, 1, ucontrol->value.integer.value[0]);
/root/machinex/sound/soc/codecs/audience/es325.c:		value = es325_index_to_gain(-20, 1, ucontrol->value.integer.value[0]);
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_AEC_CNG_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_AEC_SPEAKER_VOLUME,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_AVALON_AV_DIGITAL_OUT_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_AVALON_EQ_GRAPHIC_BAND10_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_AVALON_EQ_GRAPHIC_BAND1_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_AVALON_EQ_GRAPHIC_BAND2_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_AVALON_EQ_GRAPHIC_BAND3_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_AVALON_EQ_GRAPHIC_BAND4_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_AVALON_EQ_GRAPHIC_BAND5_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_AVALON_EQ_GRAPHIC_BAND6_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_AVALON_EQ_GRAPHIC_BAND7_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_AVALON_EQ_GRAPHIC_BAND8_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_AVALON_EQ_GRAPHIC_BAND9_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_BWE_HIGH_BAND_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DEREVERB_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_AUDIN1,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_AUDIN2,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_AUDIN3,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_AUDIN4,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_AUDOUT1,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_AUDOUT2,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_AUDOUT3,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_AUDOUT4,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_CSOUT,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_FEIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_FEOUT1,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_FEOUT2,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_PRIMARY,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_QUAD,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_SECONDARY,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_TERTIARY,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_UITONE1,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIGITAL_GAIN_UITONE2,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIRAC_NARRATOR_AGC_MAX_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_DIRAC_SCENE_AGC_MAX_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_RX_AGC_MAX_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_RX_CNG_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_SIDETONE_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_TONE_PARAM_GEN_BEEP_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_TX_AGC_MAX_GAIN,
/root/machinex/sound/soc/codecs/audience/es325.h:	ES325_VEQ_MAX_GAIN,
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_AEC_CNG_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_AEC_SPEAKER_VOLUME] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_AVALON_AV_DIGITAL_OUT_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_AVALON_EQ_GRAPHIC_BAND10_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_AVALON_EQ_GRAPHIC_BAND1_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_AVALON_EQ_GRAPHIC_BAND2_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_AVALON_EQ_GRAPHIC_BAND3_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_AVALON_EQ_GRAPHIC_BAND4_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_AVALON_EQ_GRAPHIC_BAND5_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_AVALON_EQ_GRAPHIC_BAND6_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_AVALON_EQ_GRAPHIC_BAND7_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_AVALON_EQ_GRAPHIC_BAND8_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_AVALON_EQ_GRAPHIC_BAND9_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_BWE_HIGH_BAND_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DEREVERB_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_AUDIN1] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_AUDIN2] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_AUDIN3] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_AUDIN4] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_AUDOUT1] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_AUDOUT2] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_AUDOUT3] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_AUDOUT4] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_CSOUT] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_FEIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_FEOUT1] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_FEOUT2] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_PRIMARY] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_QUAD] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_SECONDARY] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_TERTIARY] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_UITONE1] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIGITAL_GAIN_UITONE2] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIRAC_NARRATOR_AGC_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_DIRAC_SCENE_AGC_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_RX_AGC_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_RX_CNG_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_SIDETONE_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_TONE_PARAM_GEN_BEEP_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_TX_AGC_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515-access.h:	[ES_VEQ_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es515.h:#define ES_GET_DIGITAL_GAIN		0x801d
/root/machinex/sound/soc/codecs/audience/es515.h:#define ES_SET_DIGITAL_GAIN		0x9015
/root/machinex/sound/soc/codecs/audience/es515.h:/*digital gain commands codes */
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_AEC_CNG_GAIN,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_AECREF1_GAIN,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_AEC_SPEAKER_VOLUME,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_BWE_HIGH_BAND_GAIN,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DEREVERB_GAIN,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_AUDIN1,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_AUDIN2,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_AUDIN3,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_AUDIN4,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_AUDOUT1,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_AUDOUT2,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_AUDOUT3,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_AUDOUT4,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_CSOUT,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_FEIN,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_FEOUT1,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_FEOUT2,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_PRIMARY,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_QUAD,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_SECONDARY,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_TERTIARY,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_UITONE1,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_DIGITAL_GAIN_UITONE2,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_RX_AGC_MAX_GAIN,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_RX_CNG_GAIN,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_SIDETONE_GAIN,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_TONE_PARAM_GEN_BEEP_GAIN,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_TX_AGC_MAX_GAIN,
/root/machinex/sound/soc/codecs/audience/es515.h:	ES_VEQ_MAX_GAIN,
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_AEC_CNG_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_AEC_SPEAKER_VOLUME] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_AVALON_AV_DIGITAL_OUT_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_AVALON_EQ_GRAPHIC_BAND10_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_AVALON_EQ_GRAPHIC_BAND1_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_AVALON_EQ_GRAPHIC_BAND2_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_AVALON_EQ_GRAPHIC_BAND3_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_AVALON_EQ_GRAPHIC_BAND4_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_AVALON_EQ_GRAPHIC_BAND5_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_AVALON_EQ_GRAPHIC_BAND6_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_AVALON_EQ_GRAPHIC_BAND7_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_AVALON_EQ_GRAPHIC_BAND8_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_AVALON_EQ_GRAPHIC_BAND9_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_BWE_HIGH_BAND_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DEREVERB_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_AUDIN1] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_AUDIN2] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_AUDIN3] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_AUDIN4] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_AUDOUT1] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_AUDOUT2] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_AUDOUT3] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_AUDOUT4] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_CSOUT] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_FEIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_FEOUT1] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_FEOUT2] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_PRIMARY] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_QUAD] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_SECONDARY] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_TERTIARY] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_UITONE1] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIGITAL_GAIN_UITONE2] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIRAC_NARRATOR_AGC_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_DIRAC_SCENE_AGC_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_RX_AGC_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_RX_CNG_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_SIDETONE_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_TONE_PARAM_GEN_BEEP_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_TX_AGC_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705-access.h:	[ES705_VEQ_MAX_GAIN] = {
/root/machinex/sound/soc/codecs/audience/es705.c:/* bwe high band gain */
/root/machinex/sound/soc/codecs/audience/es705.c:			cmd = veq_max_gains_extra[veq_use_case][volume];
/root/machinex/sound/soc/codecs/audience/es705.c:			cmd = veq_max_gains_extra_wb[veq_use_case][volume];
/root/machinex/sound/soc/codecs/audience/es705.c:			cmd = veq_max_gains_nb[veq_use_case][volume];
/root/machinex/sound/soc/codecs/audience/es705.c:			cmd = veq_max_gains_wb[veq_use_case][volume];
/root/machinex/sound/soc/codecs/audience/es705.c:			cmd = veq_noise_estimate_adjs_extra[veq_use_case][volume];
/root/machinex/sound/soc/codecs/audience/es705.c:			cmd = veq_noise_estimate_adjs_extra_wb[veq_use_case][volume];
/root/machinex/sound/soc/codecs/audience/es705.c:			cmd = veq_noise_estimate_adjs_nb[veq_use_case][volume];
/root/machinex/sound/soc/codecs/audience/es705.c:			cmd = veq_noise_estimate_adjs_wb[veq_use_case][volume];
/root/machinex/sound/soc/codecs/audience/es705.c:/* dereverb gain */
/root/machinex/sound/soc/codecs/audience/es705-cdev.c:	/* Mutex required against simultaneous read/writes on the RDB buffer */
/root/machinex/sound/soc/codecs/audience/es705.c:	dev_dbg(es705->dev, "%s(): write veq estimate adj 0x%08x to volume (%d)\n",
/root/machinex/sound/soc/codecs/audience/es705.c:	dev_dbg(es705->dev, "%s(): write veq max gain 0x%08x to volume (%d)\n",
/root/machinex/sound/soc/codecs/audience/es705.c:		dev_err(es705->dev, "%s(): write veq max gain 0x%08x failed\n",
/root/machinex/sound/soc/codecs/audience/es705.c:		dev_err(es705->dev, "%s(): write veq max gain cmd 0x%08x failed\n",
/root/machinex/sound/soc/codecs/audience/es705.c:	dev_info(es705->dev, "%s():extra volume = %ld pm_state = %d\n",
/root/machinex/sound/soc/codecs/audience/es705.c:		dev_info(es705->dev, "%s(): Invalid volume (%d)\n", __func__, volume);
/root/machinex/sound/soc/codecs/audience/es705.c:		dev_info(es705->dev, "%s(): veq off or avoid duplication value(%d)\n", __func__, volume);
/root/machinex/sound/soc/codecs/audience/es705.c:		       ES705_BWE_HIGH_BAND_GAIN, 0, 100, 0,
/root/machinex/sound/soc/codecs/audience/es705.c:		(es705->current_veq == volume)) {
/root/machinex/sound/soc/codecs/audience/es705.c:	es705->current_veq = volume;
/root/machinex/sound/soc/codecs/audience/es705.c:		       ES705_DEREVERB_GAIN, 0, 100, 0,
/root/machinex/sound/soc/codecs/audience/es705.c:		       es705_get_bwe_high_band_gain_value,
/root/machinex/sound/soc/codecs/audience/es705.c:		       es705_get_dereverb_gain_value, es705_put_dereverb_gain_value),
/root/machinex/sound/soc/codecs/audience/es705.c:				es705_get_extra_volume,
/root/machinex/sound/soc/codecs/audience/es705.c:		       es705_put_bwe_high_band_gain_value),
/root/machinex/sound/soc/codecs/audience/es705.c:				es705_put_extra_volume),
/root/machinex/sound/soc/codecs/audience/es705.c:	extra_volume = ucontrol->value.integer.value[0];
/root/machinex/sound/soc/codecs/audience/es705.c:		    __func__, cmd, volume);
/root/machinex/sound/soc/codecs/audience/es705.c:		    __func__, cmd, volume);	
/root/machinex/sound/soc/codecs/audience/es705.c:/* generic gain translation */
/root/machinex/sound/soc/codecs/audience/es705.c:		if (extra_volume || es705->current_bwe)
/root/machinex/sound/soc/codecs/audience/es705.c:		if (extra_volume || es705->current_bwe)
/root/machinex/sound/soc/codecs/audience/es705.c:		if (extra_volume || es705->current_bwe)
/root/machinex/sound/soc/codecs/audience/es705.c:		if (extra_volume || es705->current_bwe)
/root/machinex/sound/soc/codecs/audience/es705.c:	if ((volume >= MAX_VOLUME_INDEX) ||
/root/machinex/sound/soc/codecs/audience/es705.c:int es705_put_veq_block(int volume)
/root/machinex/sound/soc/codecs/audience/es705.c:	return	(gain - min) / step;
/root/machinex/sound/soc/codecs/audience/es705.c:static int es705_gain_to_index(int min, int step, int gain)
/root/machinex/sound/soc/codecs/audience/es705.c:static int es705_get_bwe_high_band_gain_value(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/audience/es705.c:static int es705_get_dereverb_gain_value(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/audience/es705.c:static int es705_get_extra_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/audience/es705.c:static int es705_index_to_gain(int min, int step, int index)
/root/machinex/sound/soc/codecs/audience/es705.c:static int es705_put_bwe_high_band_gain_value(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/audience/es705.c:static int es705_put_dereverb_gain_value(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/audience/es705.c:static int es705_put_extra_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/audience/es705.c:static int extra_volume = 0;
/root/machinex/sound/soc/codecs/audience/es705.c:	ucontrol->value.integer.value[0] = es705_gain_to_index(-10, 1, value);
/root/machinex/sound/soc/codecs/audience/es705.c:	ucontrol->value.integer.value[0] = es705_gain_to_index(-12, 1, value);
/root/machinex/sound/soc/codecs/audience/es705.c:	ucontrol->value.integer.value[0] = es705_gain_to_index(-20, 1, value);
/root/machinex/sound/soc/codecs/audience/es705.c:	ucontrol->value.integer.value[0] = extra_volume;
/root/machinex/sound/soc/codecs/audience/es705.c:		value = es705_index_to_gain(-10, 1, ucontrol->value.integer.value[0]);
/root/machinex/sound/soc/codecs/audience/es705.c:		value = es705_index_to_gain(-12, 1, ucontrol->value.integer.value[0]);
/root/machinex/sound/soc/codecs/audience/es705.c:		value = es705_index_to_gain(-20, 1, ucontrol->value.integer.value[0]);
/root/machinex/sound/soc/codecs/audience/es705.c:		(volume < 0)) {
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_AEC_CNG_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_AEC_SPEAKER_VOLUME,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_AVALON_AV_DIGITAL_OUT_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_AVALON_EQ_GRAPHIC_BAND10_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_AVALON_EQ_GRAPHIC_BAND1_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_AVALON_EQ_GRAPHIC_BAND2_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_AVALON_EQ_GRAPHIC_BAND3_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_AVALON_EQ_GRAPHIC_BAND4_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_AVALON_EQ_GRAPHIC_BAND5_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_AVALON_EQ_GRAPHIC_BAND6_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_AVALON_EQ_GRAPHIC_BAND7_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_AVALON_EQ_GRAPHIC_BAND8_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_AVALON_EQ_GRAPHIC_BAND9_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_BWE_HIGH_BAND_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DEREVERB_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_AUDIN1,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_AUDIN2,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_AUDIN3,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_AUDIN4,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_AUDOUT1,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_AUDOUT2,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_AUDOUT3,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_AUDOUT4,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_CSOUT,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_FEIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_FEOUT1,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_FEOUT2,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_PRIMARY,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_QUAD,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_SECONDARY,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_TERTIARY,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_UITONE1,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIGITAL_GAIN_UITONE2,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIRAC_NARRATOR_AGC_MAX_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_DIRAC_SCENE_AGC_MAX_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_RX_AGC_MAX_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_RX_CNG_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_SIDETONE_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_TONE_PARAM_GEN_BEEP_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_TX_AGC_MAX_GAIN,
/root/machinex/sound/soc/codecs/audience/es705.h:	ES705_VEQ_MAX_GAIN,
/root/machinex/sound/soc/codecs/audience/es705-routes.h:	0x9017e02b, /* Sensory input gain reg = 0xe02b */
/root/machinex/sound/soc/codecs/audience/es705-routes.h:	0x90181000, /* Sensory input gain value = 0x1000 */
/root/machinex/sound/soc/codecs/audience/es705-uart-common.c:#define EAGAIN_RETRY_DELAY	1000
/root/machinex/sound/soc/codecs/audience/es705-uart-common.c:#define MAX_EAGAIN_RETRY	20
/root/machinex/sound/soc/codecs/audience/es705-uart-common.c:		if (rc == -EAGAIN) {
/root/machinex/sound/soc/codecs/audience/es705-uart-common.c:	int retry = MAX_EAGAIN_RETRY;
/root/machinex/sound/soc/codecs/audience/es705-uart-common.c:			usleep_range(EAGAIN_RETRY_DELAY, EAGAIN_RETRY_DELAY);
/root/machinex/sound/soc/codecs/audience/es705-uart-common.c:	} while (rc == -EAGAIN && retry);
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:#define MAX_VOLUME_INDEX 6
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:#define MAX_VOLUME_INDEX 6
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:#define MAX_VOLUME_INDEX 8
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:/* index 0 means min. volume level */
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_max_gains_extra[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_max_gains_extra[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_max_gains_extra[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_max_gains_extra_wb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_max_gains_extra_wb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_max_gains_extra_wb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_max_gains_nb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_max_gains_nb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_max_gains_nb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_max_gains_wb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_max_gains_wb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_max_gains_wb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_noise_estimate_adjs_extra[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_noise_estimate_adjs_extra[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_noise_estimate_adjs_extra[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_noise_estimate_adjs_extra_wb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_noise_estimate_adjs_extra_wb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_noise_estimate_adjs_extra_wb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_noise_estimate_adjs_nb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_noise_estimate_adjs_nb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_noise_estimate_adjs_nb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_noise_estimate_adjs_wb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_noise_estimate_adjs_wb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/es705-veq-params.h:static u32 veq_noise_estimate_adjs_wb[MAX_VEQ_USE_CASE][MAX_VOLUME_INDEX] = {
/root/machinex/sound/soc/codecs/audience/escore-cdev.c:		if (rlen_last < 0 && rlen_last != -EAGAIN) {
/root/machinex/sound/soc/codecs/audience/escore-cdev.c:		if (rlen_last == -EAGAIN) {
/root/machinex/sound/soc/codecs/cs4270.c:	 * causes volume change commands to be delayed, sometimes until after
/root/machinex/sound/soc/codecs/cs4270.c:	/* Disable automatic volume control.  The hardware enables, and it
/root/machinex/sound/soc/codecs/cs4270.c: * theoretically possible sample rates to be enabled. Call it again with a
/root/machinex/sound/soc/codecs/cs42l51.h:#define CS42L51_DAC_OUT_CTL_HP_GAIN(x)	(((x)&7)<<5)
/root/machinex/sound/soc/codecs/cs42l51.h:#define CS42L51_MIX_VOLUME(x)		(((x)&0x7f)<<0)
/root/machinex/sound/soc/codecs/cs8427.c:			"failed to read cs8427 trying once again\n");
/root/machinex/sound/soc/codecs/cs8427.c:		/* Try again if read fails first time
/root/machinex/sound/soc/codecs/cs8427.c:	/* Try again if the write fails
/root/machinex/sound/soc/codecs/da7210.c:			 0, 0x77, 1, dac_gain_tlv),
/root/machinex/sound/soc/codecs/da7210.c:	0x0, 0x10, TLV_DB_SCALE_ITEM(TLV_DB_GAIN_MUTE, 0, 1),
/root/machinex/sound/soc/codecs/da7210.c:	0x0, 0x10, TLV_DB_SCALE_ITEM(TLV_DB_GAIN_MUTE, 0, 1),
/root/machinex/sound/soc/codecs/da7210.c:	0x0, 0x10, TLV_DB_SCALE_ITEM(TLV_DB_GAIN_MUTE, 0, 1),
/root/machinex/sound/soc/codecs/da7210.c:		       1, adc_eq_master_gain_tlv),
/root/machinex/sound/soc/codecs/da7210.c:#define DA7210_IN_GAIN			0x0C
/root/machinex/sound/soc/codecs/da7210.c:	/* Enable ramp mode for DAC gain update */
/root/machinex/sound/soc/codecs/da7210.c:		       eq_gain_tlv),
/root/machinex/sound/soc/codecs/da7210.c:		       eq_gain_tlv),
/root/machinex/sound/soc/codecs/da7210.c:		       eq_gain_tlv),
/root/machinex/sound/soc/codecs/da7210.c:		       eq_gain_tlv),
/root/machinex/sound/soc/codecs/da7210.c:		       eq_gain_tlv),
/root/machinex/sound/soc/codecs/da7210.c:		       eq_gain_tlv),
/root/machinex/sound/soc/codecs/da7210.c:		       eq_gain_tlv),
/root/machinex/sound/soc/codecs/da7210.c:		       eq_gain_tlv),
/root/machinex/sound/soc/codecs/da7210.c:		       eq_gain_tlv),
/root/machinex/sound/soc/codecs/da7210.c:		       eq_gain_tlv),
/root/machinex/sound/soc/codecs/da7210.c:/* IN_GAIN bit fields */
/root/machinex/sound/soc/codecs/da7210.c:		       inpga_gain_tlv),
/root/machinex/sound/soc/codecs/da7210.c:/* Minimum INPGA and AUX1 volume to enable noise suppression */
/root/machinex/sound/soc/codecs/da7210.c:	SOC_DOUBLE_TLV("In PGA Capture Volume", DA7210_IN_GAIN, 0, 4, 0xF, 0,
/root/machinex/sound/soc/codecs/da7210.c:static const DECLARE_TLV_DB_SCALE(adc_eq_master_gain_tlv, -1800, 600, 1);
/root/machinex/sound/soc/codecs/da7210.c:static const DECLARE_TLV_DB_SCALE(dac_gain_tlv, -7725, 75, 0);
/root/machinex/sound/soc/codecs/da7210.c:static const DECLARE_TLV_DB_SCALE(eq_gain_tlv, -1050, 150, 0);
/root/machinex/sound/soc/codecs/da7210.c:static const DECLARE_TLV_DB_SCALE(inpga_gain_tlv, -450, 150, 0);
/root/machinex/sound/soc/codecs/da7210.c:		val = snd_soc_read(codec, DA7210_IN_GAIN);
/root/machinex/sound/soc/codecs/es325-access.h:	0x0012, /* AEC_SPEAKER_VOLUME */
/root/machinex/sound/soc/codecs/es325-access.h:	0x0016, /* SIDETONE_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x002E, /* AEC_CNG_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x003D, /* VEQ_MAX_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x004E, /* RX_CNG_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x0050, /* BWE_HIGH_BAND_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x0054, /* DEREVERB_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x0054, /* DEREVERB_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x0100, /* TX_AGC_MAX_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x0102, /* RX_AGC_MAX_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x1007, /* AVALON_AV_DIGITAL_OUT_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x1013, /* AVALON_EQ_GRAPHIC_BAND1_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x1014, /* AVALON_EQ_GRAPHIC_BAND2_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x1015, /* AVALON_EQ_GRAPHIC_BAND3_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x1016, /* AVALON_EQ_GRAPHIC_BAND4_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x1017, /* AVALON_EQ_GRAPHIC_BAND5_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x1018, /* AVALON_EQ_GRAPHIC_BAND6_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x1019, /* AVALON_EQ_GRAPHIC_BAND7_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x101A, /* AVALON_EQ_GRAPHIC_BAND8_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x101B, /* AVALON_EQ_GRAPHIC_BAND9_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x101C, /* AVALON_EQ_GRAPHIC_BAND10_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x200E, /* DIRAC_NARRATOR_AGC_MAX_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x201A, /* DIRAC_SCENE_AGC_MAX_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	0x300A, /* TONE_PARAM_GEN_BEEP_GAIN */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_AUDIN1 */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_AUDIN2 */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_AUDIN3 */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_AUDIN4 */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_AUDOUT1 */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_AUDOUT2 */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_AUDOUT3 */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_AUDOUT4 */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_CSOUT */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_FEIN */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_FEOUT1 */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_FEOUT2 */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_PRIMARY */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_QUAD */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_SECONDARY */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_TERTIARY */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_UITONE1 */
/root/machinex/sound/soc/codecs/es325-access.h:	{ /* DIGITAL_GAIN_UITONE2 */
/root/machinex/sound/soc/codecs/es325.c:	/* 8 level Voice Rx volume for VZW and USC */
/root/machinex/sound/soc/codecs/es325.c:/* bwe high band gain */
/root/machinex/sound/soc/codecs/es325.c:	cmd_str[7] = VEQ_adj_gain[volume];
/root/machinex/sound/soc/codecs/es325.c:	cmd_str[7] = VEQ_max_gain[volume];
/root/machinex/sound/soc/codecs/es325.c:/* csout gain */
/root/machinex/sound/soc/codecs/es325.c:/* dereverb gain */
/root/machinex/sound/soc/codecs/es325.c:		   ES325_AEC_CNG_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_AEC_SPEAKER_VOLUME, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_AVALON_AV_DIGITAL_OUT_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_AVALON_EQ_GRAPHIC_BAND10_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_AVALON_EQ_GRAPHIC_BAND1_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_AVALON_EQ_GRAPHIC_BAND2_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_AVALON_EQ_GRAPHIC_BAND3_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_AVALON_EQ_GRAPHIC_BAND4_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_AVALON_EQ_GRAPHIC_BAND5_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_AVALON_EQ_GRAPHIC_BAND6_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_AVALON_EQ_GRAPHIC_BAND7_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_AVALON_EQ_GRAPHIC_BAND8_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_AVALON_EQ_GRAPHIC_BAND9_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		       ES325_BWE_HIGH_BAND_GAIN, 0, 100, 0,
/root/machinex/sound/soc/codecs/es325.c:		   ES325_BWE_HIGH_BAND_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		       ES325_DEREVERB_GAIN, 0, 100, 0,
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DEREVERB_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_AUDIN1, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_AUDIN2, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_AUDIN3, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_AUDIN4, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_AUDOUT1, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_AUDOUT2, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_AUDOUT3, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_AUDOUT4, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		       ES325_DIGITAL_GAIN_CSOUT, 0, 100, 0,
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_CSOUT, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_FEIN, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_FEOUT1, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_FEOUT2, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_PRIMARY, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_QUAD, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_SECONDARY, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_TERTIARY, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_UITONE1, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIGITAL_GAIN_UITONE2, 0, 255, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIRAC_NARRATOR_AGC_MAX_GAIN, 0, 45, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_DIRAC_SCENE_AGC_MAX_GAIN, 0, 45, 0),
/root/machinex/sound/soc/codecs/es325.c:		       es325_get_bwe_high_band_gain_value,
/root/machinex/sound/soc/codecs/es325.c:		       es325_get_csout_gain_value, es325_put_csout_gain_value),
/root/machinex/sound/soc/codecs/es325.c:		       es325_get_dereverb_gain_value, es325_put_dereverb_gain_value),
/root/machinex/sound/soc/codecs/es325.c:		       es325_put_bwe_high_band_gain_value),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_RX_AGC_MAX_GAIN, 0, 45, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_RX_CNG_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_SIDETONE_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_TONE_PARAM_GEN_BEEP_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_TX_AGC_MAX_GAIN, 0, 65535, 0),
/root/machinex/sound/soc/codecs/es325.c:		   ES325_VEQ_MAX_GAIN, 0, 15, 0),
/root/machinex/sound/soc/codecs/es325.c:EXPORT_SYMBOL_GPL(es325_set_VEQ_max_gain);
/root/machinex/sound/soc/codecs/es325.c:/* generic gain translation */
/root/machinex/sound/soc/codecs/es325.c:int es325_set_VEQ_max_gain(int volume)
/root/machinex/sound/soc/codecs/es325.c:	pr_info("=[ES325]=CS out gain set 0");
/root/machinex/sound/soc/codecs/es325.c:	pr_info("%s: volume=%d\n", __func__, volume);
/root/machinex/sound/soc/codecs/es325.c:	return	(gain - min) / step;
/root/machinex/sound/soc/codecs/es325.c:	SOC_SINGLE_EXT("CS out gain",
/root/machinex/sound/soc/codecs/es325.c://	static char cmd_str1[4] = {0xb0, 0x15, 0x11, 0xA6}; /* FEOUT1 gain */
/root/machinex/sound/soc/codecs/es325.c://	static char cmd_str2[4] = {0xb0, 0x15, 0x12, 0xA6}; /* FEOUT2 gain */
/root/machinex/sound/soc/codecs/es325.c:	static char cmd_str[4] = {0xa0, 0x15, 0x05, 0xA6}; /* FEIN  gain */
/root/machinex/sound/soc/codecs/es325.c://	static char cmd_str[4] = {0xb0, 0x15, 0x10, 0xA6}; /* CS out gain */
/root/machinex/sound/soc/codecs/es325.c:	static char VEQ_adj_gain[6] = {23, 0, 0, 0, 0, 0};
/root/machinex/sound/soc/codecs/es325.c:	static char VEQ_adj_gain[6] = {23, 23, 23, 23, 23, 23};
/root/machinex/sound/soc/codecs/es325.c:	static char VEQ_adj_gain[8] = {23, 2, 2, 2, 2, 2, 2, 2};
/root/machinex/sound/soc/codecs/es325.c:	static char VEQ_max_gain[6] = {3, 0, 0, 0, 0, 0}; /* index 0 means max volume */
/root/machinex/sound/soc/codecs/es325.c:	static char VEQ_max_gain[6] = {4, 6, 9, 12, 9, 6}; /* index 0 means max volume */
/root/machinex/sound/soc/codecs/es325.c:	static char VEQ_max_gain[8] = {3, 3, 3, 3, 3, 3, 3, 3}; /* index 0 means max volume */
/root/machinex/sound/soc/codecs/es325.c:static int es325_gain_to_index(int min, int step, int gain)
/root/machinex/sound/soc/codecs/es325.c:static int es325_get_bwe_high_band_gain_value(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/es325.c:static int es325_get_csout_gain_value(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/es325.c:static int es325_get_dereverb_gain_value(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/es325.c:static int es325_index_to_gain(int min, int step, int index)
/root/machinex/sound/soc/codecs/es325.c:static int es325_put_bwe_high_band_gain_value(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/es325.c:static int es325_put_csout_gain_value(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/es325.c:static int es325_put_dereverb_gain_value(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/es325.c:	ucontrol->value.integer.value[0] = es325_gain_to_index(-10, 1, value);
/root/machinex/sound/soc/codecs/es325.c:	ucontrol->value.integer.value[0] = es325_gain_to_index(-12, 1, value);
/root/machinex/sound/soc/codecs/es325.c:	ucontrol->value.integer.value[0] = es325_gain_to_index(-20, 1, value);
/root/machinex/sound/soc/codecs/es325.c:	ucontrol->value.integer.value[0] = es325_gain_to_index(-20, 1, value);
/root/machinex/sound/soc/codecs/es325.c:		value = es325_index_to_gain(-10, 1, ucontrol->value.integer.value[0]);
/root/machinex/sound/soc/codecs/es325.c:		value = es325_index_to_gain(-12, 1, ucontrol->value.integer.value[0]);
/root/machinex/sound/soc/codecs/es325.c:		value = es325_index_to_gain(-20, 1, ucontrol->value.integer.value[0]);
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AEC_CNG_GAIN		0x001D
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AEC_CNG_GAIN_STAGED	0x081D
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AEC_SPEAKER_VOLUME		0x000B
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AEC_SPEAKER_VOLUME_STAGED	0x080B
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_AV_DIGITAL_OUT_GAIN		0x0036
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_AV_DIGITAL_OUT_GAIN_STAGED	0x0836
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND10_GAIN		0x004B
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND10_GAIN_STAGED	0x084B
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND1_GAIN		0x0042
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND1_GAIN_STAGED	0x0842
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND2_GAIN		0x0043
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND2_GAIN_STAGED	0x0843
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND3_GAIN		0x0044
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND3_GAIN_STAGED	0x0844
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND4_GAIN		0x0045
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND4_GAIN_STAGED	0x0845
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND5_GAIN		0x0046
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND5_GAIN_STAGED	0x0846
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND6_GAIN		0x0047
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND6_GAIN_STAGED	0x0847
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND7_GAIN		0x0048
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND7_GAIN_STAGED	0x0848
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND8_GAIN		0x0049
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND8_GAIN_STAGED	0x0849
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND9_GAIN		0x004A
/root/machinex/sound/soc/codecs/es325.h:#define ES325_AVALON_EQ_GRAPHIC_BAND9_GAIN_STAGED	0x084A
/root/machinex/sound/soc/codecs/es325.h:#define ES325_BWE_HIGH_BAND_GAIN	0x007a
/root/machinex/sound/soc/codecs/es325.h:#define ES325_BWE_HIGH_BAND_GAIN_STAGED	0x087a
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DEREVERB_GAIN		0x0078
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DEREVERB_GAIN_STAGED	0x0878
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDIN1		0x2032
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDIN1_STAGED	0x2832
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDIN2		0x2033
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDIN2_STAGED	0x2833
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDIN3		0x2034
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDIN3_STAGED	0x2834
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDIN4		0x2035
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDIN4_STAGED	0x2835
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDOUT1		0x203B
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDOUT1_STAGED	0x283B
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDOUT2		0x203C
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDOUT2_STAGED	0x283C
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDOUT3		0x203D
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDOUT3_STAGED	0x283D
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDOUT4		0x203E
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_AUDOUT4_STAGED	0x283E
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_CSOUT		0x2038
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_CSOUT_STAGED	0x2838
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_FEIN		0x2031
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_FEIN_STAGED	0x2831
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_FEOUT1		0x2039
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_FEOUT1_STAGED	0x2839
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_FEOUT2		0x203A
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_FEOUT2_STAGED	0x283A
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_PRIMARY		0x202D
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_PRIMARY_STAGED	0x282D
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_QUAD		0x2030
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_QUAD_STAGED	0x2830
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_SECONDARY		0x202E
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_SECONDARY_STAGED	0x282E
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_TERTIARY		0x202F
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_TERTIARY_STAGED	0x282F
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_UITONE1		0x2036
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_UITONE1_STAGED	0x2836
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_UITONE2		0x2037
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIGITAL_GAIN_UITONE2_STAGED	0x2837
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIRAC_NARRATOR_AGC_MAX_GAIN		0x005C
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIRAC_NARRATOR_AGC_MAX_GAIN_STAGED	0x085C
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIRAC_SCENE_AGC_MAX_GAIN		0x0067
/root/machinex/sound/soc/codecs/es325.h:#define ES325_DIRAC_SCENE_AGC_MAX_GAIN_STAGED	0x0867
/root/machinex/sound/soc/codecs/es325.h:#define ES325_RX_AGC_MAX_GAIN		0x002F
/root/machinex/sound/soc/codecs/es325.h:#define ES325_RX_AGC_MAX_GAIN_STAGED	0x082F
/root/machinex/sound/soc/codecs/es325.h:#define ES325_RX_CNG_GAIN		0x002D
/root/machinex/sound/soc/codecs/es325.h:#define ES325_RX_CNG_GAIN_STAGED	0x082D
/root/machinex/sound/soc/codecs/es325.h:#define ES325_SIDETONE_GAIN		0x000D
/root/machinex/sound/soc/codecs/es325.h:#define ES325_SIDETONE_GAIN_STAGED	0x080D
/root/machinex/sound/soc/codecs/es325.h:#define ES325_TONE_PARAM_GEN_BEEP_GAIN		0x0076
/root/machinex/sound/soc/codecs/es325.h:#define ES325_TONE_PARAM_GEN_BEEP_GAIN_STAGED	0x0876
/root/machinex/sound/soc/codecs/es325.h:#define ES325_TX_AGC_MAX_GAIN		0x002E
/root/machinex/sound/soc/codecs/es325.h:#define ES325_TX_AGC_MAX_GAIN_STAGED	0x082E
/root/machinex/sound/soc/codecs/es325.h:#define ES325_VEQ_MAX_GAIN		0x0023
/root/machinex/sound/soc/codecs/es325.h:#define ES325_VEQ_MAX_GAIN_STAGED	0x0823
/root/machinex/sound/soc/codecs/jz4740.c:#define JZ4740_CODEC_2_HEADPHONE_VOLUME_MASK	0x000003
/root/machinex/sound/soc/codecs/jz4740.c:#define JZ4740_CODEC_2_HEADPHONE_VOLUME_OFFSET	 0
/root/machinex/sound/soc/codecs/jz4740.c:#define JZ4740_CODEC_2_INPUT_VOLUME_MASK		0x1f0000
/root/machinex/sound/soc/codecs/jz4740.c:#define JZ4740_CODEC_2_INPUT_VOLUME_OFFSET		16
/root/machinex/sound/soc/codecs/jz4740.c:#define JZ4740_CODEC_2_MIC_BOOST_GAIN_MASK		0x000030
/root/machinex/sound/soc/codecs/jz4740.c:#define JZ4740_CODEC_2_MIC_BOOST_GAIN_OFFSET	 4
/root/machinex/sound/soc/codecs/jz4740.c:			JZ4740_CODEC_2_HEADPHONE_VOLUME_OFFSET, 3, 0,
/root/machinex/sound/soc/codecs/jz4740.c:			JZ4740_CODEC_2_INPUT_VOLUME_OFFSET, 31, 0,
/root/machinex/sound/soc/codecs/jz4740.c:			JZ4740_CODEC_2_MIC_BOOST_GAIN_OFFSET, 3, 0,
/root/machinex/sound/soc/codecs/lm4857.c:#define LM4857_EPGAIN 4
/root/machinex/sound/soc/codecs/lm4857.c:		LM4857_EPGAIN, 1, 0),
/root/machinex/sound/soc/codecs/max9768.c:	.controls = max9768_volume,
/root/machinex/sound/soc/codecs/max9768.c:	.num_controls = ARRAY_SIZE(max9768_volume),
/root/machinex/sound/soc/codecs/max9768.c:	SOC_SINGLE_TLV("Playback Volume", MAX9768_VOL, 0, 63, 0, volume_tlv),
/root/machinex/sound/soc/codecs/max9768.c:static const struct snd_kcontrol_new max9768_volume[] = {
/root/machinex/sound/soc/codecs/max9768.c:static const unsigned int volume_tlv[] = {
/root/machinex/sound/soc/codecs/max98088.c:       0x00, /* 39 left HP volume */
/root/machinex/sound/soc/codecs/max98088.c:       0x00, /* 3A right HP volume */
/root/machinex/sound/soc/codecs/max98088.c:       0x00, /* 3B left REC volume */
/root/machinex/sound/soc/codecs/max98088.c:       0x00, /* 3C right REC volume */
/root/machinex/sound/soc/codecs/max98088.c:       0x00, /* 3D left SPK volume */
/root/machinex/sound/soc/codecs/max98088.c:       0x00, /* 3E right SPK volume */
/root/machinex/sound/soc/codecs/max98088.c:       { 0xFF, 0xFF, 0 }, /* 39 left HP volume */
/root/machinex/sound/soc/codecs/max98088.c:       { 0xFF, 0xFF, 0 }, /* 3A right HP volume */
/root/machinex/sound/soc/codecs/max98088.c:       { 0xFF, 0xFF, 0 }, /* 3B left REC volume */
/root/machinex/sound/soc/codecs/max98088.c:       { 0xFF, 0xFF, 0 }, /* 3C right REC volume */
/root/machinex/sound/soc/codecs/max98088.c:       { 0xFF, 0xFF, 0 }, /* 3D left SPK volume */
/root/machinex/sound/soc/codecs/max98088.c:       { 0xFF, 0xFF, 0 }, /* 3E right SPK volume */
/root/machinex/sound/soc/codecs/max98088.h:       #define M98088_DAI_VOICE_GAIN_MASK      (3<<4)
/root/machinex/sound/soc/codecs/max98088.h:       #define M98088_MIX_SPKL_GAIN_MASK       (3<<0)
/root/machinex/sound/soc/codecs/max98088.h:       #define M98088_MIX_SPKL_GAIN_SHIFT      0
/root/machinex/sound/soc/codecs/max98088.h:       #define M98088_MIX_SPKR_GAIN_MASK       (3<<2)
/root/machinex/sound/soc/codecs/max98088.h:       #define M98088_MIX_SPKR_GAIN_SHIFT      2
/root/machinex/sound/soc/codecs/max98095.h:#define M98095_06F_DAI1_ALC1_GAIN           0x6F
/root/machinex/sound/soc/codecs/max98095.h:#define M98095_073_DAI1_ALC2_GAIN           0x73
/root/machinex/sound/soc/codecs/max98095.h:#define M98095_077_DAI1_ALC3_GAIN           0x77
/root/machinex/sound/soc/codecs/max98095.h:#define M98095_07B_DAI2_ALC1_GAIN           0x7B
/root/machinex/sound/soc/codecs/max98095.h:#define M98095_07F_DAI2_ALC2_GAIN           0x7F
/root/machinex/sound/soc/codecs/max98095.h:#define M98095_083_DAI2_ALC3_GAIN           0x83
/root/machinex/sound/soc/codecs/max9850.c:	snd_soc_update_bits(codec, MAX9850_VOLUME, 0x40, 0x40);
/root/machinex/sound/soc/codecs/max9850.c:SOC_SINGLE("Headphone Switch", MAX9850_VOLUME, 7, 1, 1),
/root/machinex/sound/soc/codecs/max9850.c:SOC_SINGLE_TLV("Headphone Volume", MAX9850_VOLUME, 0, 0x3f, 1, max9850_tlv),
/root/machinex/sound/soc/codecs/max9850.h:#define MAX9850_VOLUME			0x02
/root/machinex/sound/soc/codecs/max9877.c:			max9877_get_reg, max9877_set_reg, max9877_pgain_tlv),
/root/machinex/sound/soc/codecs/max9877.c:			max9877_get_reg, max9877_set_reg, max9877_pgain_tlv),
/root/machinex/sound/soc/codecs/max9877.c:			MAX9877_HPL_VOLUME, MAX9877_HPR_VOLUME, 0, 31, 0,
/root/machinex/sound/soc/codecs/max9877.c:			MAX9877_SPK_VOLUME, 0, 31, 0,
/root/machinex/sound/soc/codecs/max9877.c:	SOC_SINGLE_EXT_TLV("MAX9877 PGAINA Playback Volume",
/root/machinex/sound/soc/codecs/max9877.c:	SOC_SINGLE_EXT_TLV("MAX9877 PGAINB Playback Volume",
/root/machinex/sound/soc/codecs/max9877.c:static const unsigned int max9877_pgain_tlv[] = {
/root/machinex/sound/soc/codecs/max9877.h:#define MAX9877_HPL_VOLUME		0x02
/root/machinex/sound/soc/codecs/max9877.h:#define MAX9877_HPR_VOLUME		0x03
/root/machinex/sound/soc/codecs/max9877.h:#define MAX9877_SPK_VOLUME		0x01
/root/machinex/sound/soc/codecs/rt5631.c:	/* keep soft volume and zero crossing setting */
/root/machinex/sound/soc/codecs/rt5631.c:	/* keep soft volume and zero crossing setting */
/root/machinex/sound/soc/codecs/rt5631.c:	/* keep soft volume and zero crossing setting */
/root/machinex/sound/soc/codecs/rt5631.c:	/* keep soft volume and zero crossing setting */
/root/machinex/sound/soc/codecs/rt5631.c:	/* recover soft volume and zero crossing setting */
/root/machinex/sound/soc/codecs/rt5631.c:	/* recover soft volume and zero crossing setting */
/root/machinex/sound/soc/codecs/rt5631.c:	/* recover soft volume and zero crossing setting */
/root/machinex/sound/soc/codecs/rt5631.c:	/* recover soft volume and zero crossing setting */
/root/machinex/sound/soc/codecs/rt5631.c:			RT5631_PWR_MIC1_BOOT_GAIN_BIT, 0, NULL, 0),
/root/machinex/sound/soc/codecs/rt5631.c:			RT5631_PWR_MIC2_BOOT_GAIN_BIT, 0, NULL, 0),
/root/machinex/sound/soc/codecs/rt5631.h:/* 3D gain parameter */
/root/machinex/sound/soc/codecs/rt5631.h:#define RT5631_EQ_GAIN_BP1			0x04
/root/machinex/sound/soc/codecs/rt5631.h:#define RT5631_EQ_GAIN_BP2			0x07
/root/machinex/sound/soc/codecs/rt5631.h:#define RT5631_EQ_GAIN_BP3			0x0a
/root/machinex/sound/soc/codecs/rt5631.h:#define RT5631_EQ_GAIN_HIP			0x0c
/root/machinex/sound/soc/codecs/rt5631.h:#define RT5631_EQ_GAIN_LOP			0x01
/root/machinex/sound/soc/codecs/rt5631.h:#define RT5631_EQ_HPF_GAIN			0x0f
/root/machinex/sound/soc/codecs/rt5631.h:#define RT5631_GAIN_3D_PARA_1_00		(0x0 << 6) /* 3D gain 1.0 */
/root/machinex/sound/soc/codecs/rt5631.h:#define RT5631_GAIN_3D_PARA_1_50		(0x1 << 6) /* 3D gain 1.5 */
/root/machinex/sound/soc/codecs/rt5631.h:#define RT5631_GAIN_3D_PARA_2_00		(0x2 << 6) /* 3D gain 2.0 */
/root/machinex/sound/soc/codecs/rt5631.h:#define RT5631_GAIN_3D_PARA_MASK		(0x3 << 6)
/root/machinex/sound/soc/codecs/rt5631.h:#define RT5631_PWR_MIC1_BOOT_GAIN			(0x1 << 5)
/root/machinex/sound/soc/codecs/rt5631.h:#define RT5631_PWR_MIC1_BOOT_GAIN_BIT		5
/root/machinex/sound/soc/codecs/rt5631.h:#define RT5631_PWR_MIC2_BOOT_GAIN			(0x1 << 4)
/root/machinex/sound/soc/codecs/rt5631.h:#define RT5631_PWR_MIC2_BOOT_GAIN_BIT		4
/root/machinex/sound/soc/codecs/rt5631.h:/* select Compensation gain for Noise gate function */
/root/machinex/sound/soc/codecs/sgtl5000.c:			0, 4, 0, mic_gain_tlv),
/root/machinex/sound/soc/codecs/sgtl5000.c:/* custom function to fetch info of PCM playback volume */
/root/machinex/sound/soc/codecs/sgtl5000.c: * custom function to get of PCM playback volume
/root/machinex/sound/soc/codecs/sgtl5000.c: * custom function to put of PCM playback volume
/root/machinex/sound/soc/codecs/sgtl5000.c: * dac volume register
/root/machinex/sound/soc/codecs/sgtl5000.c: * dac volume register
/root/machinex/sound/soc/codecs/sgtl5000.c:	/* enable dac volume ramp by default */
/root/machinex/sound/soc/codecs/sgtl5000.c:	/* get left channel volume */
/root/machinex/sound/soc/codecs/sgtl5000.c:	/* get right channel volume */
/root/machinex/sound/soc/codecs/sgtl5000.c:			headphone_volume),
/root/machinex/sound/soc/codecs/sgtl5000.c:	/* make sure userspace volume fall in (0, 0xfc-0x3c) */
/root/machinex/sound/soc/codecs/sgtl5000.c: * PCM volume with 0.5017 dB steps from 0 to -90 dB
/root/machinex/sound/soc/codecs/sgtl5000.c: * PCM volume with 0.5017 dB steps from 0 to -90 dB
/root/machinex/sound/soc/codecs/sgtl5000.c:static const DECLARE_TLV_DB_SCALE(headphone_volume, -5150, 50, 0);
/root/machinex/sound/soc/codecs/sgtl5000.c:static const unsigned int mic_gain_tlv[] = {
/root/machinex/sound/soc/codecs/sgtl5000.c:/* tlv for hp volume, -51.5db to 12.0db, step .5db */
/root/machinex/sound/soc/codecs/sgtl5000.c:/* tlv for mic gain, 0db 20db 30db 40db */
/root/machinex/sound/soc/codecs/sgtl5000.h:#define SGTL5000_MIC_GAIN_MASK			0x0003
/root/machinex/sound/soc/codecs/sgtl5000.h:#define SGTL5000_MIC_GAIN_SHIFT			0
/root/machinex/sound/soc/codecs/sgtl5000.h:#define SGTL5000_MIC_GAIN_WIDTH			2
/root/machinex/sound/soc/codecs/sn95031.c:	/* fix the initial volume at 1dB,
/root/machinex/sound/soc/codecs/sound_control.c:	__ATTR(gpl_cam_mic_gain,
/root/machinex/sound/soc/codecs/sound_control.c:	__ATTR(gpl_headphone_gain,
/root/machinex/sound/soc/codecs/sound_control.c:	__ATTR(gpl_mic_gain,
/root/machinex/sound/soc/codecs/sound_control.c:	__ATTR(gpl_speaker_gain,
/root/machinex/sound/soc/codecs/sound_control.c:	&cam_mic_gain_attribute.attr,
/root/machinex/sound/soc/codecs/sound_control.c:		cam_mic_gain_show,
/root/machinex/sound/soc/codecs/sound_control.c:		cam_mic_gain_store);
/root/machinex/sound/soc/codecs/sound_control.c:		case TABLA_A_CDC_TX6_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/sound_control.c:		case TABLA_A_CDC_TX6_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/sound_control.c:		case TABLA_A_CDC_TX7_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/sound_control.c:		case TABLA_A_CDC_TX7_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/sound_control.c:	&headphone_gain_attribute.attr,
/root/machinex/sound/soc/codecs/sound_control.c:		headphone_gain_show,
/root/machinex/sound/soc/codecs/sound_control.c:		headphone_gain_store);
/root/machinex/sound/soc/codecs/sound_control.c:		human_readable(TABLA_A_CDC_TX6_VOL_CTL_GAIN));
/root/machinex/sound/soc/codecs/sound_control.c:		human_readable(TABLA_A_CDC_TX7_VOL_CTL_GAIN));
/root/machinex/sound/soc/codecs/sound_control.c:	if (val == human_readable(TABLA_A_CDC_TX6_VOL_CTL_GAIN))
/root/machinex/sound/soc/codecs/sound_control.c:	if (val == human_readable(TABLA_A_CDC_TX7_VOL_CTL_GAIN))
/root/machinex/sound/soc/codecs/sound_control.c:	&mic_gain_attribute.attr,
/root/machinex/sound/soc/codecs/sound_control.c:		mic_gain_show,
/root/machinex/sound/soc/codecs/sound_control.c:		mic_gain_store);
/root/machinex/sound/soc/codecs/sound_control.c:	&speaker_gain_attribute.attr,
/root/machinex/sound/soc/codecs/sound_control.c:		speaker_gain_show,
/root/machinex/sound/soc/codecs/sound_control.c:		speaker_gain_store);
/root/machinex/sound/soc/codecs/sound_control.c:static ssize_t cam_mic_gain_show(struct kobject *kobj,
/root/machinex/sound/soc/codecs/sound_control.c:static ssize_t cam_mic_gain_store(struct kobject *kobj,
/root/machinex/sound/soc/codecs/sound_control.c:static ssize_t headphone_gain_show(struct kobject *kobj,
/root/machinex/sound/soc/codecs/sound_control.c:static ssize_t headphone_gain_store(struct kobject *kobj,
/root/machinex/sound/soc/codecs/sound_control.c:static ssize_t mic_gain_show(struct kobject *kobj,
/root/machinex/sound/soc/codecs/sound_control.c:static ssize_t mic_gain_store(struct kobject *kobj,
/root/machinex/sound/soc/codecs/sound_control.c:static ssize_t speaker_gain_show(struct kobject *kobj,
/root/machinex/sound/soc/codecs/sound_control.c:static ssize_t speaker_gain_store(struct kobject *kobj,
/root/machinex/sound/soc/codecs/sound_control.c:static struct kobj_attribute cam_mic_gain_attribute =
/root/machinex/sound/soc/codecs/sound_control.c:static struct kobj_attribute headphone_gain_attribute =
/root/machinex/sound/soc/codecs/sound_control.c:static struct kobj_attribute mic_gain_attribute =
/root/machinex/sound/soc/codecs/sound_control.c:static struct kobj_attribute speaker_gain_attribute =
/root/machinex/sound/soc/codecs/sound_control.c:			TABLA_A_AUX_L_GAIN, human_readable(TABLA_A_AUX_L_GAIN),
/root/machinex/sound/soc/codecs/sound_control.c:			TABLA_A_AUX_R_GAIN, human_readable(TABLA_A_AUX_R_GAIN),
/root/machinex/sound/soc/codecs/sound_control.c:			TABLA_A_CDC_TX6_VOL_CTL_GAIN, human_readable(TABLA_A_CDC_TX6_VOL_CTL_GAIN),
/root/machinex/sound/soc/codecs/sound_control.c:		TABLA_A_CDC_TX6_VOL_CTL_GAIN, val) < 0)
/root/machinex/sound/soc/codecs/sound_control.c:			TABLA_A_CDC_TX7_VOL_CTL_GAIN, human_readable(TABLA_A_CDC_TX7_VOL_CTL_GAIN),
/root/machinex/sound/soc/codecs/sound_control.c:		TABLA_A_CDC_TX7_VOL_CTL_GAIN, val) < 0)
/root/machinex/sound/soc/codecs/sound_control.c:			TABLA_A_RX_HPH_L_GAIN, human_readable(TABLA_A_RX_HPH_L_GAIN),
/root/machinex/sound/soc/codecs/sound_control.c:			TABLA_A_RX_HPH_R_GAIN, human_readable(TABLA_A_RX_HPH_R_GAIN),
/root/machinex/sound/soc/codecs/sound_control.c:			TABLA_A_RX_LINE_1_GAIN, human_readable(TABLA_A_RX_LINE_1_GAIN),
/root/machinex/sound/soc/codecs/sound_control.c:			TABLA_A_RX_LINE_2_GAIN, human_readable(TABLA_A_RX_LINE_2_GAIN),
/root/machinex/sound/soc/codecs/sound_control.c:			TABLA_A_RX_LINE_3_GAIN, human_readable(TABLA_A_RX_LINE_3_GAIN),
/root/machinex/sound/soc/codecs/sound_control.c:			TABLA_A_RX_LINE_4_GAIN, human_readable(TABLA_A_RX_LINE_4_GAIN),
/root/machinex/sound/soc/codecs/sound_control.c:			TABLA_A_RX_LINE_5_GAIN, human_readable(TABLA_A_RX_LINE_5_GAIN));
/root/machinex/sound/soc/codecs/ssm2602.c:	0, 47, TLV_DB_SCALE_ITEM(TLV_DB_GAIN_MUTE, 0, 0),
/root/machinex/sound/soc/codecs/ssm2602.h:#define     APANA_ENABLE_MIC_BOOST       0x001   /* Primary Microphone Amplifier gain booster control    */
/root/machinex/sound/soc/codecs/ssm2602.h:#define     APANA_ENABLE_MIC_BOOST2      0x100   /* Secondary Microphone Amplifier gain booster control  */
/root/machinex/sound/soc/codecs/ssm2602.h:#define     LOUT1V_LHP_VOL                0x07F   /* Left Channel Headphone volume control                */
/root/machinex/sound/soc/codecs/ssm2602.h:#define     LOUT1V_LRHP_BOTH              0x100   /* Left Channel Headphone volume update                 */
/root/machinex/sound/soc/codecs/ssm2602.h:#define     ROUT1V_RHP_VOL                0x07F   /* Right Channel Headphone volume control               */
/root/machinex/sound/soc/codecs/ssm2602.h:#define     ROUT1V_RLHP_BOTH              0x100   /* Right Channel Headphone volume update                */
/root/machinex/sound/soc/codecs/sta32x.c:	0, 0, TLV_DB_SCALE_ITEM(TLV_DB_GAIN_MUTE, 0, 0),
/root/machinex/sound/soc/codecs/sta32x.c:	0, 0, TLV_DB_SCALE_ITEM(TLV_DB_GAIN_MUTE, 0, 0),
/root/machinex/sound/soc/codecs/sta32x.c: * theoretically possible sample rates to be enabled. Call it again with a
/root/machinex/sound/soc/codecs/stac9766.c:	SOC_DOUBLE_TLV("Record Volume", AC97_REC_GAIN, 8, 0, 15, 0, record_tlv),
/root/machinex/sound/soc/codecs/stac9766.c:	SOC_SINGLE("Record Switch", AC97_REC_GAIN, 15, 1, 1),
/root/machinex/sound/soc/codecs/tlv320aic23.c:	/* Default output volume */
/root/machinex/sound/soc/codecs/tlv320aic23.c:static const DECLARE_TLV_DB_SCALE(input_gain_tlv, -1725, 75, 0);
/root/machinex/sound/soc/codecs/tlv320aic23.c:static const DECLARE_TLV_DB_SCALE(out_gain_tlv, -12100, 100, 0);
/root/machinex/sound/soc/codecs/tlv320aic23.c:			 TLV320AIC23_RCHNVOL, 0, 127, 0, out_gain_tlv),
/root/machinex/sound/soc/codecs/tlv320aic23.c:			 TLV320AIC23_RINVOL, 0, 31, 0, input_gain_tlv),
/root/machinex/sound/soc/codecs/tlv320aic23.h:#define TLV320AIC23_DEFAULT_IN_VOLUME	0x10
/root/machinex/sound/soc/codecs/tlv320aic23.h:/* Left (right) channel headphone volume control register */
/root/machinex/sound/soc/codecs/tlv320aic23.h:/* Left (right) line input volume control register */
/root/machinex/sound/soc/codecs/tlv320aic26.c:	aic26_reg_write(codec, AIC26_REG_DAC_GAIN, reg);
/root/machinex/sound/soc/codecs/tlv320aic26.c:	SOC_DOUBLE("PCM Playback Switch", AIC26_REG_DAC_GAIN, 15, 7, 1, 1),
/root/machinex/sound/soc/codecs/tlv320aic26.c:	SOC_DOUBLE("PCM Playback Volume", AIC26_REG_DAC_GAIN, 8, 0, 0x7f, 1),
/root/machinex/sound/soc/codecs/tlv320aic26.c:	SOC_SINGLE("PCM Capture Mute", AIC26_REG_ADC_GAIN, 15, 1, 1),
/root/machinex/sound/soc/codecs/tlv320aic26.c:	SOC_SINGLE("PCM Capture Volume", AIC26_REG_ADC_GAIN, 8, 0x7f, 0),
/root/machinex/sound/soc/codecs/tlv320aic26.c:	u16 reg = aic26_reg_read_cache(codec, AIC26_REG_DAC_GAIN);
/root/machinex/sound/soc/codecs/tlv320aic26.h:#define AIC26_REG_ADC_GAIN		AIC26_PAGE_ADDR(2, 0x01)
/root/machinex/sound/soc/codecs/tlv320aic26.h:#define AIC26_REG_DAC_GAIN		AIC26_PAGE_ADDR(2, 0x02)
/root/machinex/sound/soc/codecs/tlv320aic32x4.c:			AIC32X4_HPRGAIN, 0, 0x1D, 0, tlv_step_1),
/root/machinex/sound/soc/codecs/tlv320aic32x4.c:			AIC32X4_HPRGAIN, 6, 0x01, 1),
/root/machinex/sound/soc/codecs/tlv320aic32x4.c:			AIC32X4_LORGAIN, 0, 0x1D, 0, tlv_step_1),
/root/machinex/sound/soc/codecs/tlv320aic32x4.c:			AIC32X4_LORGAIN, 6, 0x01, 1),
/root/machinex/sound/soc/codecs/tlv320aic32x4.c:	SOC_DOUBLE_R("HP DAC Playback Switch", AIC32X4_HPLGAIN,
/root/machinex/sound/soc/codecs/tlv320aic32x4.c:	SOC_DOUBLE_R("LO DAC Playback Switch", AIC32X4_LOLGAIN,
/root/machinex/sound/soc/codecs/tlv320aic32x4.c:	SOC_DOUBLE_R_TLV("HP Driver Gain Volume", AIC32X4_HPLGAIN,
/root/machinex/sound/soc/codecs/tlv320aic32x4.c:	SOC_DOUBLE_R_TLV("LO Driver Gain Volume", AIC32X4_LOLGAIN,
/root/machinex/sound/soc/codecs/tlv320aic32x4.h:#define	AIC32X4_HPLGAIN		(AIC32X4_PAGE1 + 16)
/root/machinex/sound/soc/codecs/tlv320aic32x4.h:#define	AIC32X4_HPRGAIN		(AIC32X4_PAGE1 + 17)
/root/machinex/sound/soc/codecs/tlv320aic32x4.h:#define AIC32X4_LMICPGAVOL_NOGAIN	0x80
/root/machinex/sound/soc/codecs/tlv320aic32x4.h:#define	AIC32X4_LOLGAIN		(AIC32X4_PAGE1 + 18)
/root/machinex/sound/soc/codecs/tlv320aic32x4.h:#define	AIC32X4_LORGAIN		(AIC32X4_PAGE1 + 19)
/root/machinex/sound/soc/codecs/tlv320aic32x4.h:#define AIC32X4_RMICPGAVOL_NOGAIN	0x80
/root/machinex/sound/soc/codecs/tlv320aic3x.c:	/* ADC default volume and unmute */
/root/machinex/sound/soc/codecs/tlv320aic3x.c:/* ADC PGA gain volumes. From 0 to 59.5 dB in 0.5 dB steps */
/root/machinex/sound/soc/codecs/tlv320aic3x.c: * Class-D amplifier gain. From 0 to 18 dB in 6 dB steps
/root/machinex/sound/soc/codecs/tlv320aic3x.c:	/* DAC default volume and mute */
/root/machinex/sound/soc/codecs/tlv320aic3x.c: * DAC digital volumes. From -63.5 to 0 dB in 0.5 dB steps
/root/machinex/sound/soc/codecs/tlv320aic3x.c:	/* DAC to HP default volume and route to Output mixer */
/root/machinex/sound/soc/codecs/tlv320aic3x.c:	/* DAC to Line Out default volume and route to Output mixer */
/root/machinex/sound/soc/codecs/tlv320aic3x.c:	/* DAC to Mono Line Out default volume and route to Output mixer */
/root/machinex/sound/soc/codecs/tlv320aic3x.c:	/* Line2 Line Out default volume, disconnect from Output Mixer */
/root/machinex/sound/soc/codecs/tlv320aic3x.c:	/* Line2 to HP Bypass default volume, disconnect from Output Mixer */
/root/machinex/sound/soc/codecs/tlv320aic3x.c:	/* Line2 to Mono Out default volume, disconnect from Output Mixer */
/root/machinex/sound/soc/codecs/tlv320aic3x.c: * Output stage volumes. From -78.3 to 0 dB. Muted below -78.3 dB.
/root/machinex/sound/soc/codecs/tlv320aic3x.c:	/* PGA to HP Bypass default volume, disconnect from Output Mixer */
/root/machinex/sound/soc/codecs/tlv320aic3x.c:	/* PGA to Line Out default volume, disconnect from Output Mixer */
/root/machinex/sound/soc/codecs/tlv320aic3x.c:	/* PGA to Mono Line Out default volume, disconnect from Output Mixer */
/root/machinex/sound/soc/codecs/tlv320aic3x.c:		snd_soc_add_codec_controls(codec, &aic3x_classd_amp_gain_ctrl, 1);
/root/machinex/sound/soc/codecs/tlv320aic3x.c:	snd_soc_write(codec, LADC_VOL, DEFAULT_GAIN);
/root/machinex/sound/soc/codecs/tlv320aic3x.c:	snd_soc_write(codec, RADC_VOL, DEFAULT_GAIN);
/root/machinex/sound/soc/codecs/tlv320aic3x.c:static const struct snd_kcontrol_new aic3x_classd_amp_gain_ctrl =
/root/machinex/sound/soc/codecs/tlv320aic3x.h:/* Default input volume */
/root/machinex/sound/soc/codecs/tlv320aic3x.h:/* Default output volume (inverted) */
/root/machinex/sound/soc/codecs/tlv320aic3x.h:#define DEFAULT_GAIN    0x20
/root/machinex/sound/soc/codecs/tlv320dac33.c:	/* 73 : volume soft stepping control,
/root/machinex/sound/soc/codecs/tlv320dac33.c:			ARRAY_SIZE(lr_lineout_gain_texts),
/root/machinex/sound/soc/codecs/tlv320dac33.c:			ARRAY_SIZE(lr_lineout_gain_texts),
/root/machinex/sound/soc/codecs/tlv320dac33.c: * DACL/R digital volume control:
/root/machinex/sound/soc/codecs/tlv320dac33.c:	/* div=4 / gain=1 / div */
/root/machinex/sound/soc/codecs/tlv320dac33.c:			lr_lineout_gain_texts);
/root/machinex/sound/soc/codecs/tlv320dac33.c:			lr_lineout_gain_texts);
/root/machinex/sound/soc/codecs/tlv320dac33.c:	/* Restore only selected registers (gains mostly) */
/root/machinex/sound/soc/codecs/tlv320dac33.c:	SOC_ENUM("Left Line Output Gain", l_lineout_gain_enum),
/root/machinex/sound/soc/codecs/tlv320dac33.c:	SOC_ENUM("Right Line Output Gain", r_lineout_gain_enum),
/root/machinex/sound/soc/codecs/tlv320dac33.c:static const char *lr_lineout_gain_texts[] = {
/root/machinex/sound/soc/codecs/tlv320dac33.c:static const struct soc_enum l_lineout_gain_enum =
/root/machinex/sound/soc/codecs/tlv320dac33.c:static const struct soc_enum r_lineout_gain_enum =
/root/machinex/sound/soc/codecs/tlv320dac33.h:#define DAC33_LROUT_GAIN(x)		(x << 0)
/root/machinex/sound/soc/codecs/tpa2028d.c:	__ATTR(fixed_gain, S_IRUGO | S_IWUSR, tpa2028d_fixed_gain_show, tpa2028d_fixed_gain_store),
/root/machinex/sound/soc/codecs/tpa2028d.c:	char agc_fixed_gain = amp_data->pdata->agc_fixed_gain;
/root/machinex/sound/soc/codecs/tpa2028d.c:	D("[tpa2028d_fixed_gain_show] val : %x \n",val);
/root/machinex/sound/soc/codecs/tpa2028d.c:EXPORT_SYMBOL(set_amp_gain);
/root/machinex/sound/soc/codecs/tpa2028d.c:	fail |= WriteI2C(AGC_FIXED_GAIN_CONTROL, agc_fixed_gain); /*Tuen On*/
/root/machinex/sound/soc/codecs/tpa2028d.c:inline void set_amp_gain(int amp_state)
/root/machinex/sound/soc/codecs/tpa2028d.c:	pdata->agc_fixed_gain = val;
/root/machinex/sound/soc/codecs/tpa2028d.c:	ReadI2C(AGC_FIXED_GAIN_CONTROL, &val);
/root/machinex/sound/soc/codecs/tpa2028d.c:	return sprintf(buf, "fixed_gain : %x, pdata->agc_fixed_gain : %d\n", val, pdata->agc_fixed_gain);
/root/machinex/sound/soc/codecs/tpa2028d.c:	set_amp_gain(SPK_OFF);
/root/machinex/sound/soc/codecs/tpa2028d.c:tpa2028d_fixed_gain_show(struct device *dev, struct device_attribute *attr,   char *buf)
/root/machinex/sound/soc/codecs/tpa2028d.c:tpa2028d_fixed_gain_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
/root/machinex/sound/soc/codecs/tpa6130a2.c: * down in gain.
/root/machinex/sound/soc/codecs/tpa6130a2.c: * TPA6130 volume. From -59.5 to 4 dB with increasing step size when going
/root/machinex/sound/soc/codecs/tpa6130a2.h:#define TPA6130A2_VOLUME(x)		((x & 0x3f) << 0)
/root/machinex/sound/soc/codecs/twl4030.c:		0, 3, 5, 0, input_gain_tlv),
/root/machinex/sound/soc/codecs/twl4030.c:	0x00, /* REG_ANAMIC_GAIN	(0x48)	*/
/root/machinex/sound/soc/codecs/twl4030.c:	0x00, /* REG_HS_GAIN_SET	(0x23)	*/
/root/machinex/sound/soc/codecs/twl4030.c: * Analog playback gain
/root/machinex/sound/soc/codecs/twl4030.c:	/* anti-pop when changing analog gain */
/root/machinex/sound/soc/codecs/twl4030.c: * Capture gain after the ADCs
/root/machinex/sound/soc/codecs/twl4030.c:		case TWL4030_REG_HS_GAIN_SET:
/root/machinex/sound/soc/codecs/twl4030.c: * CGAIN volume control:
/root/machinex/sound/soc/codecs/twl4030.c:	/* Common capture gain controls */
/root/machinex/sound/soc/codecs/twl4030.c:	/* Common playback gain controls */
/root/machinex/sound/soc/codecs/twl4030.c:	/* Common voice downlink gain controls */
/root/machinex/sound/soc/codecs/twl4030.c: * Custom volsw and volsw_2r get/put functions to handle these gain bits.
/root/machinex/sound/soc/codecs/twl4030.c:/* Digital bypass gain, mute instead of -30dB */
/root/machinex/sound/soc/codecs/twl4030.c: * FGAIN volume control:
/root/machinex/sound/soc/codecs/twl4030.c:					hs_gain,
/root/machinex/sound/soc/codecs/twl4030.c:					hs_gain & (~0x0f),
/root/machinex/sound/soc/codecs/twl4030.c:	hs_gain = twl4030_read_reg_cache(codec, TWL4030_REG_HS_GAIN_SET);
/root/machinex/sound/soc/codecs/twl4030.c:	/* Separate output gain controls */
/root/machinex/sound/soc/codecs/twl4030.c:	SOC_DOUBLE_TLV("Analog Capture Volume", TWL4030_REG_ANAMIC_GAIN,
/root/machinex/sound/soc/codecs/twl4030.c: * Some of the gain controls in TWL (mostly those which are associated with
/root/machinex/sound/soc/codecs/twl4030.c:static DECLARE_TLV_DB_SCALE(input_gain_tlv, 0, 600, 0);
/root/machinex/sound/soc/codecs/twl4030.c:TWL4030_OUTPUT_PGA(carkitl, TWL4030_REG_PRECKL_CTL, TWL4030_PRECKL_GAIN);
/root/machinex/sound/soc/codecs/twl4030.c:TWL4030_OUTPUT_PGA(carkitr, TWL4030_REG_PRECKR_CTL, TWL4030_PRECKR_GAIN);
/root/machinex/sound/soc/codecs/twl4030.c:TWL4030_OUTPUT_PGA(earpiece, TWL4030_REG_EAR_CTL, TWL4030_EAR_GAIN);
/root/machinex/sound/soc/codecs/twl4030.c:TWL4030_OUTPUT_PGA(predrivel, TWL4030_REG_PREDL_CTL, TWL4030_PREDL_GAIN);
/root/machinex/sound/soc/codecs/twl4030.c:TWL4030_OUTPUT_PGA(predriver, TWL4030_REG_PREDR_CTL, TWL4030_PREDR_GAIN);
/root/machinex/sound/soc/codecs/twl4030.c:					TWL4030_REG_HS_GAIN_SET);
/root/machinex/sound/soc/codecs/twl4030.c:					TWL4030_REG_HS_GAIN_SET);
/root/machinex/sound/soc/codecs/twl4030.c:		TWL4030_REG_HS_GAIN_SET, 0, 2, 3, 0, snd_soc_get_volsw_twl4030,
/root/machinex/sound/soc/codecs/twl4030.c:	unsigned char hs_gain, hs_pop;
/root/machinex/sound/soc/codecs/twl4030.c: * Voice Downlink GAIN volume control:
/root/machinex/sound/soc/codecs/twl4030.c: * Voice Sidetone GAIN volume control:
/root/machinex/sound/soc/codecs/twl6040.c:	0x00, /* REG_HFLGAIN	0x15	*/
/root/machinex/sound/soc/codecs/twl6040.c:	0x00, /* REG_HFRGAIN	0x17	*/
/root/machinex/sound/soc/codecs/twl6040.c:	0x00, /* REG_HSGAIN	0x12	*/
/root/machinex/sound/soc/codecs/twl6040.c:	0x00, /* REG_MICGAIN	0x0E	*/
/root/machinex/sound/soc/codecs/twl6040.c:	0x1B, /* REG_LINEGAIN	0x0F	*/
/root/machinex/sound/soc/codecs/twl6040.c:	/* AFM gains */
/root/machinex/sound/soc/codecs/twl6040.c: * AFMGAIN volume control:
/root/machinex/sound/soc/codecs/twl6040.c:	/* Capture gains */
/root/machinex/sound/soc/codecs/twl6040.c:	case TWL6040_REG_HFLGAIN:
/root/machinex/sound/soc/codecs/twl6040.c:	case TWL6040_REG_HFLGAIN:
/root/machinex/sound/soc/codecs/twl6040.c:	case TWL6040_REG_HSGAIN:
/root/machinex/sound/soc/codecs/twl6040.c:	case TWL6040_REG_HSGAIN:
/root/machinex/sound/soc/codecs/twl6040.c:		/* don't use volume ramp for power-up */
/root/machinex/sound/soc/codecs/twl6040.c: * EPGAIN volume control:
/root/machinex/sound/soc/codecs/twl6040.c:EXPORT_SYMBOL_GPL(twl6040_get_dl1_gain);
/root/machinex/sound/soc/codecs/twl6040.c: * HFGAIN volume control:
/root/machinex/sound/soc/codecs/twl6040.c:	 * HF PGA gain range: 0x00 - 0x1d (0 - 29) */
/root/machinex/sound/soc/codecs/twl6040.c: * HSGAIN volume control:
/root/machinex/sound/soc/codecs/twl6040.c:	/* HS PGA gain range: 0x0 - 0xf (0 - 15) */
/root/machinex/sound/soc/codecs/twl6040.c:int twl6040_get_dl1_gain(struct snd_soc_codec *codec)
/root/machinex/sound/soc/codecs/twl6040.c: * MICATT volume control:
/root/machinex/sound/soc/codecs/twl6040.c: * MICGAIN volume control:
/root/machinex/sound/soc/codecs/twl6040.c:		out->step_delay = 5;	/* 5 ms between volume ramp steps */
/root/machinex/sound/soc/codecs/twl6040.c:		out->step_delay = 5;	/* 5 ms between volume ramp steps */
/root/machinex/sound/soc/codecs/twl6040.c:	/* Playback gains */
/root/machinex/sound/soc/codecs/twl6040.c: * Ramp HF PGA volume to minimise pops at stream startup and shutdown.
/root/machinex/sound/soc/codecs/twl6040.c: * Ramp HS PGA volume to minimise pops at stream startup and shutdown.
/root/machinex/sound/soc/codecs/twl6040.c:	reg = twl6040_read_reg_cache(codec, TWL6040_REG_HFLGAIN);
/root/machinex/sound/soc/codecs/twl6040.c:	reg = twl6040_read_reg_cache(codec, TWL6040_REG_HFRGAIN);
/root/machinex/sound/soc/codecs/twl6040.c:	reg = twl6040_read_reg_cache(codec, TWL6040_REG_HSGAIN);
/root/machinex/sound/soc/codecs/twl6040.c:	reg = twl6040_read_reg_cache(codec, TWL6040_REG_HSGAIN);
/root/machinex/sound/soc/codecs/twl6040.c:	TWL6040_REG_HFLGAIN,
/root/machinex/sound/soc/codecs/twl6040.c:		TWL6040_REG_HFLGAIN, TWL6040_REG_HFRGAIN, 0, 0x1D, 1,
/root/machinex/sound/soc/codecs/twl6040.c:	TWL6040_REG_HFRGAIN,
/root/machinex/sound/soc/codecs/twl6040.c:	TWL6040_REG_HSGAIN,
/root/machinex/sound/soc/codecs/twl6040.c:		TWL6040_REG_HSGAIN, 0, 4, 0xF, 1, twl6040_get_volsw,
/root/machinex/sound/soc/codecs/twl6040.c:	TWL6040_REG_LINEGAIN,
/root/machinex/sound/soc/codecs/twl6040.c:		TWL6040_REG_LINEGAIN, 0, 3, 7, 0, afm_amp_tlv),
/root/machinex/sound/soc/codecs/twl6040.c:	TWL6040_REG_MICGAIN,
/root/machinex/sound/soc/codecs/twl6040.c:		TWL6040_REG_MICGAIN, 0, 3, 4, 0, mic_amp_tlv),
/root/machinex/sound/soc/codecs/twl6040.c:		TWL6040_REG_MICGAIN, 6, 7, 1, 1, mic_preamp_tlv),
/root/machinex/sound/soc/codecs/twl6040.c:			twl6040_write(codec, TWL6040_REG_HFLGAIN,
/root/machinex/sound/soc/codecs/twl6040.c:			twl6040_write(codec, TWL6040_REG_HFLGAIN,
/root/machinex/sound/soc/codecs/twl6040.c:			twl6040_write(codec, TWL6040_REG_HFRGAIN,
/root/machinex/sound/soc/codecs/twl6040.c:			twl6040_write(codec, TWL6040_REG_HFRGAIN,
/root/machinex/sound/soc/codecs/twl6040.c:			twl6040_write(codec, TWL6040_REG_HSGAIN,
/root/machinex/sound/soc/codecs/twl6040.c:			twl6040_write(codec, TWL6040_REG_HSGAIN,
/root/machinex/sound/soc/codecs/twl6040.c:			twl6040_write(codec, TWL6040_REG_HSGAIN,
/root/machinex/sound/soc/codecs/twl6040.c:			twl6040_write(codec, TWL6040_REG_HSGAIN, reg |
/root/machinex/sound/soc/codecs/twl6040.c:	twl6040_write_reg_cache(codec, TWL6040_REG_HFLGAIN, 0x1d);
/root/machinex/sound/soc/codecs/twl6040.c:	twl6040_write_reg_cache(codec, TWL6040_REG_HFRGAIN, 0x1d);
/root/machinex/sound/soc/codecs/twl6040.c:	twl6040_write_reg_cache(codec, TWL6040_REG_HSGAIN, 0xff);
/root/machinex/sound/soc/codecs/twl6040.c:	twl6040_write_reg_cache(codec, TWL6040_REG_LINEGAIN, 0);
/root/machinex/sound/soc/codecs/twl6040.c:		/* use volume ramp for power-down */
/root/machinex/sound/soc/codecs/twl6040.c:	 * We need to lower the default gain values, so the ramp code
/root/machinex/sound/soc/codecs/twl6040.h:int twl6040_get_dl1_gain(struct snd_soc_codec *codec);
/root/machinex/sound/soc/codecs/uda1380.c:	SOC_DOUBLE_TLV("Line Capture Volume", UDA1380_PGA, 0, 8, 8, 0, pga_tlv), /* PGA_GAINCTRLL, PGA_GAINCTRLR */
/root/machinex/sound/soc/codecs/wcd9304.c:				    0x02, gain_offset.half_db_gain);
/root/machinex/sound/soc/codecs/wcd9304.c:				    0x02, gain_offset.half_db_gain);
/root/machinex/sound/soc/codecs/wcd9304.c:				    0x02, gain_offset.half_db_gain);
/root/machinex/sound/soc/codecs/wcd9304.c:				    0xFF, gain_offset.whole_db_gain);
/root/machinex/sound/soc/codecs/wcd9304.c:				    0xFF, gain_offset.whole_db_gain);
/root/machinex/sound/soc/codecs/wcd9304.c:				    0xFF, gain_offset.whole_db_gain);
/root/machinex/sound/soc/codecs/wcd9304.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:	case SITAR_BTN_DET_GAIN:
/root/machinex/sound/soc/codecs/wcd9304.c:		  comp_dgtl_gain[pa_gain & 0xF].half_db_gain);
/root/machinex/sound/soc/codecs/wcd9304.c:				comp_dgtl_gain[pa_gain & 0xF].half_db_gain;
/root/machinex/sound/soc/codecs/wcd9304.c:		current_gain = snd_soc_read(codec, gain_reg);
/root/machinex/sound/soc/codecs/wcd9304.c:		current_gain = snd_soc_read(codec, gain_reg);
/root/machinex/sound/soc/codecs/wcd9304.c:#define COMP_DIGITAL_DB_GAIN_APPLY(a, b) \
/root/machinex/sound/soc/codecs/wcd9304.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:		  (digital_vol - comp_dgtl_gain[pa_gain & 0xF].whole_db_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:	/*disabling the cp static overide gain*/
/root/machinex/sound/soc/codecs/wcd9304.c:		ear_pa_gain = 0x00;
/root/machinex/sound/soc/codecs/wcd9304.c:		ear_pa_gain = 0x80;
/root/machinex/sound/soc/codecs/wcd9304.c:		ear_pa_gain = 0xA0;
/root/machinex/sound/soc/codecs/wcd9304.c:		ear_pa_gain = 0xE0;
/root/machinex/sound/soc/codecs/wcd9304.c:	ear_pa_gain &= 0xE0;
/root/machinex/sound/soc/codecs/wcd9304.c:	ear_pa_gain = snd_soc_read(codec, SITAR_A_RX_EAR_GAIN);
/root/machinex/sound/soc/codecs/wcd9304.c:	} else if (ear_pa_gain == 0x80) {
/root/machinex/sound/soc/codecs/wcd9304.c:	} else if (ear_pa_gain == 0xA0) {
/root/machinex/sound/soc/codecs/wcd9304.c:	} else if (ear_pa_gain == 0xE0) {
/root/machinex/sound/soc/codecs/wcd9304.c:			 __func__, comp_dgtl_gain[pa_gain & 0xF].whole_db_gain,
/root/machinex/sound/soc/codecs/wcd9304.c:			 __func__, comp_dgtl_gain[pa_gain & 0xF].whole_db_gain,
/root/machinex/sound/soc/codecs/wcd9304.c:				__func__, ear_pa_gain);
/root/machinex/sound/soc/codecs/wcd9304.c:		 __func__, gain_offset->half_db_gain,
/root/machinex/sound/soc/codecs/wcd9304.c:		 __func__, pa_reg, pa_gain, vol_reg, digital_vol, event, index);
/root/machinex/sound/soc/codecs/wcd9304.c:		gain_offset->half_db_gain =
/root/machinex/sound/soc/codecs/wcd9304.c:		gain_offset->half_db_gain = 0;
/root/machinex/sound/soc/codecs/wcd9304.c:			 gain_offset->whole_db_gain);
/root/machinex/sound/soc/codecs/wcd9304.c:			 gain_offset->whole_db_gain);
/root/machinex/sound/soc/codecs/wcd9304.c:						 gain_offset->whole_db_gain ;
/root/machinex/sound/soc/codecs/wcd9304.c:		gain_offset->whole_db_gain = COMP_DIGITAL_DB_GAIN_APPLY(
/root/machinex/sound/soc/codecs/wcd9304.c:		gain_offset->whole_db_gain = digital_vol +
/root/machinex/sound/soc/codecs/wcd9304.c:		 gain_offset->whole_db_gain, index,
/root/machinex/sound/soc/codecs/wcd9304.c:		gain_reg = SITAR_A_CDC_RX1_VOL_CTL_B2_CTL + (8 * w->shift);
/root/machinex/sound/soc/codecs/wcd9304.c:		gain_reg = SITAR_A_CDC_TX1_VOL_CTL_GAIN + (8 * w->shift);
/root/machinex/sound/soc/codecs/wcd9304.c:			    gain[sitar_codec_mclk_index(sitar)] << 3);
/root/machinex/sound/soc/codecs/wcd9304.c:	gain = sitar_mbhc_cal_btn_det_mp(btn_det, SITAR_BTN_DET_GAIN);
/root/machinex/sound/soc/codecs/wcd9304.c:	if (ear_pa_gain == 0x00) {
/root/machinex/sound/soc/codecs/wcd9304.c:	if (((pa_gain & 0xF) + 1) > ARRAY_SIZE(comp_dgtl_gain) ||
/root/machinex/sound/soc/codecs/wcd9304.c:		if (reg == SITAR_A_CDC_TX1_VOL_CTL_GAIN + (8 * i))
/root/machinex/sound/soc/codecs/wcd9304.c:					 * if switch is toggled, check again,
/root/machinex/sound/soc/codecs/wcd9304.c:		(index >= ARRAY_SIZE(sitar->comp_gain_offset))) {
/root/machinex/sound/soc/codecs/wcd9304.c:	/* Initialize gain registers to use register gain */
/root/machinex/sound/soc/codecs/wcd9304.c:	int pa_mode = pa_gain & mask;
/root/machinex/sound/soc/codecs/wcd9304.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:		lineout_gain_reg = SITAR_A_RX_LINE_1_GAIN;
/root/machinex/sound/soc/codecs/wcd9304.c:		lineout_gain_reg = SITAR_A_RX_LINE_2_GAIN;
/root/machinex/sound/soc/codecs/wcd9304.c:				mask, event, &gain_offset, 0);
/root/machinex/sound/soc/codecs/wcd9304.c:				mask, event, &gain_offset, 1);
/root/machinex/sound/soc/codecs/wcd9304.c:				mask, event, &gain_offset, 2);
/root/machinex/sound/soc/codecs/wcd9304.c:	 * MBHC block cancel and sync this work so override is off again
/root/machinex/sound/soc/codecs/wcd9304.c:	pr_debug("%s: ear_pa_gain = 0x%x\n", __func__, ear_pa_gain);
/root/machinex/sound/soc/codecs/wcd9304.c:	pr_debug("%s: half_db_gain(%d)whole_db_gain(0x%x)comp_gain_offset[%d](%d)\n",
/root/machinex/sound/soc/codecs/wcd9304.c:		pr_debug("%s: listed whole_db_gain:0x%x, adjusted whole_db_gain:0x%x\n",
/root/machinex/sound/soc/codecs/wcd9304.c:		pr_debug("%s: listed whole_db_gain:0x%x, adjusted whole_db_gain:0x%x\n",
/root/machinex/sound/soc/codecs/wcd9304.c:	pr_debug("%s: pa_gain(0x%x=0x%x)digital_vol(0x%x=0x%x)event(0x%x) index(%d)\n",
/root/machinex/sound/soc/codecs/wcd9304.c:		/* Reprogram gain after power up interpolator */
/root/machinex/sound/soc/codecs/wcd9304.c:		/* Reprogram the digital gain after power up of Decimator */
/root/machinex/sound/soc/codecs/wcd9304.c:		/* Restore the gain */
/root/machinex/sound/soc/codecs/wcd9304.c:				SITAR_A_RX_HPH_L_GAIN,
/root/machinex/sound/soc/codecs/wcd9304.c:	{SITAR_A_RX_HPH_L_GAIN, 0x10, 0x10},
/root/machinex/sound/soc/codecs/wcd9304.c:				SITAR_A_RX_HPH_R_GAIN,
/root/machinex/sound/soc/codecs/wcd9304.c:	{SITAR_A_RX_HPH_R_GAIN, 0x10, 0x10},
/root/machinex/sound/soc/codecs/wcd9304.c:				SITAR_A_RX_LINE_1_GAIN,
/root/machinex/sound/soc/codecs/wcd9304.c:	{SITAR_A_RX_LINE_1_GAIN, 0x10, 0x10},
/root/machinex/sound/soc/codecs/wcd9304.c:	{SITAR_A_RX_LINE_2_GAIN, 0x10, 0x10},
/root/machinex/sound/soc/codecs/wcd9304.c:		sitar_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9304.c:		sitar_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9304.c:		sitar_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9304.c:		 sitar->comp_gain_offset[index]);
/root/machinex/sound/soc/codecs/wcd9304.c:					     sitar->comp_gain_offset[index];
/root/machinex/sound/soc/codecs/wcd9304.c:		sitar->comp_gain_offset[index] = digital_vol -
/root/machinex/sound/soc/codecs/wcd9304.c:		sitar_config_gain_compander(codec, w->shift,
/root/machinex/sound/soc/codecs/wcd9304.c:		sitar_config_gain_compander(codec, w->shift, 1, event);
/root/machinex/sound/soc/codecs/wcd9304.c:		sitar_pa_gain_get, sitar_pa_gain_put),
/root/machinex/sound/soc/codecs/wcd9304.c:	SITAR_REG_VAL(SITAR_A_RX_EAR_GAIN, 0x02),
/root/machinex/sound/soc/codecs/wcd9304.c:		snd_soc_update_bits(codec, lineout_gain_reg, 0x10, 0x00);
/root/machinex/sound/soc/codecs/wcd9304.c:		snd_soc_update_bits(codec, lineout_gain_reg, 0x10, 0x10);
/root/machinex/sound/soc/codecs/wcd9304.c:	snd_soc_update_bits(codec, SITAR_A_RX_EAR_GAIN, 0xE0, ear_pa_gain);
/root/machinex/sound/soc/codecs/wcd9304.c:		snd_soc_update_bits(codec, SITAR_A_RX_HPH_L_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9304.c:		snd_soc_update_bits(codec, SITAR_A_RX_HPH_R_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9304.c:		snd_soc_update_bits(codec, SITAR_A_RX_LINE_1_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9304.c:		snd_soc_update_bits(codec, SITAR_A_RX_LINE_2_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9304.c:		snd_soc_write(codec, gain_reg, current_gain);
/root/machinex/sound/soc/codecs/wcd9304.c:		snd_soc_write(codec, gain_reg, current_gain);
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_ENUM_EXT("EAR PA Gain", sitar_ear_pa_gain_enum[0],
/root/machinex/sound/soc/codecs/wcd9304.c:		SOC_ENUM_SINGLE_EXT(4, sitar_ear_pa_gain_text),
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_S8_TLV("DEC1 Volume", SITAR_A_CDC_TX1_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_S8_TLV("DEC2 Volume", SITAR_A_CDC_TX2_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_S8_TLV("DEC3 Volume", SITAR_A_CDC_TX3_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_S8_TLV("DEC4 Volume", SITAR_A_CDC_TX4_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_S8_TLV("IIR1 INP1 Volume", SITAR_A_CDC_IIR1_GAIN_B1_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_S8_TLV("IIR1 INP2 Volume", SITAR_A_CDC_IIR1_GAIN_B2_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_S8_TLV("IIR1 INP3 Volume", SITAR_A_CDC_IIR1_GAIN_B3_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_S8_TLV("IIR1 INP4 Volume", SITAR_A_CDC_IIR1_GAIN_B4_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_TLV("ADC1 Volume", SITAR_A_TX_1_2_EN, 5, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_TLV("ADC2 Volume", SITAR_A_TX_1_2_EN, 1, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_TLV("ADC3 Volume", SITAR_A_TX_3_EN, 5, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_TLV("HPHL Volume", SITAR_A_RX_HPH_L_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_TLV("HPHR Volume", SITAR_A_RX_HPH_R_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_TLV("LINEOUT1 Volume", SITAR_A_RX_LINE_1_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9304.c:	SOC_SINGLE_TLV("LINEOUT2 Volume", SITAR_A_RX_LINE_2_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9304.c:static const char * const sitar_ear_pa_gain_text[] = {"POS_6_DB",
/root/machinex/sound/soc/codecs/wcd9304.c:static const DECLARE_TLV_DB_SCALE(analog_gain, 0, 25, 1);
/root/machinex/sound/soc/codecs/wcd9304.c:static const DECLARE_TLV_DB_SCALE(digital_gain, 0, 1, 0);
/root/machinex/sound/soc/codecs/wcd9304.c:static const DECLARE_TLV_DB_SCALE(line_gain, 0, 7, 1);
/root/machinex/sound/soc/codecs/wcd9304.c:static const struct comp_dgtl_gain_offset comp_dgtl_gain[] = {
/root/machinex/sound/soc/codecs/wcd9304.c:static const struct soc_enum sitar_ear_pa_gain_enum[] = {
/root/machinex/sound/soc/codecs/wcd9304.c:static int sitar_compander_gain_offset(
/root/machinex/sound/soc/codecs/wcd9304.c:static int sitar_config_gain_compander(
/root/machinex/sound/soc/codecs/wcd9304.c:static int sitar_pa_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/wcd9304.c:static int sitar_pa_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/wcd9304.c:struct comp_dgtl_gain_offset {
/root/machinex/sound/soc/codecs/wcd9304.c:	struct comp_dgtl_gain_offset *gain_offset,
/root/machinex/sound/soc/codecs/wcd9304.c:	struct comp_dgtl_gain_offset gain_offset = {0, 0};
/root/machinex/sound/soc/codecs/wcd9304.c:	u16 dec_reset_reg, gain_reg, tx_vol_ctl_reg, tx_mux_ctl_reg;
/root/machinex/sound/soc/codecs/wcd9304.c:	u16 gain_reg;
/root/machinex/sound/soc/codecs/wcd9304.c:	u16 lineout_gain_reg;
/root/machinex/sound/soc/codecs/wcd9304.c:	u8  comp_gain_offset[NUM_INTERPOLATORS];
/root/machinex/sound/soc/codecs/wcd9304.c:	u8 current_gain;
/root/machinex/sound/soc/codecs/wcd9304.c:	u8 dec_hpf_cut_of_freq, current_gain;
/root/machinex/sound/soc/codecs/wcd9304.c:	u8 ear_pa_gain;
/root/machinex/sound/soc/codecs/wcd9304.c:	u8 ear_pa_gain;
/root/machinex/sound/soc/codecs/wcd9304.c:	u8 half_db_gain;
/root/machinex/sound/soc/codecs/wcd9304.c:	u8 *n_cic, *gain;
/root/machinex/sound/soc/codecs/wcd9304.c:	u8 whole_db_gain;
/root/machinex/sound/soc/codecs/wcd9304.c:	unsigned int pa_gain = snd_soc_read(codec, pa_reg);
/root/machinex/sound/soc/codecs/wcd9304.h:	SITAR_BTN_DET_GAIN
/root/machinex/sound/soc/codecs/wcd9304.h:	u8 _gain[SITAR_NUM_CLK_FREQS];
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_AUX_L_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_AUX_L_GAIN] = SITAR_A_AUX_L_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_AUX_R_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_AUX_R_GAIN] = SITAR_A_AUX_R_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_CLSG_GAIN_THRESH_CTL] =
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_CLSG_GAIN_THRESH_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:		SITAR_A_CDC_CLSG_GAIN_THRESH_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B1_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B1_CTL] = SITAR_A_CDC_IIR1_GAIN_B1_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B2_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B2_CTL] = SITAR_A_CDC_IIR1_GAIN_B2_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B3_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B3_CTL] = SITAR_A_CDC_IIR1_GAIN_B3_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B4_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B4_CTL] = SITAR_A_CDC_IIR1_GAIN_B4_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B5_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B5_CTL] = SITAR_A_CDC_IIR1_GAIN_B5_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B6_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B6_CTL] = SITAR_A_CDC_IIR1_GAIN_B6_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B7_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B7_CTL] = SITAR_A_CDC_IIR1_GAIN_B7_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B8_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_B8_CTL] = SITAR_A_CDC_IIR1_GAIN_B8_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_TIMER_CTL] =
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR1_GAIN_TIMER_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:		SITAR_A_CDC_IIR1_GAIN_TIMER_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B1_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B1_CTL] = SITAR_A_CDC_IIR2_GAIN_B1_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B2_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B2_CTL] = SITAR_A_CDC_IIR2_GAIN_B2_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B3_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B3_CTL] = SITAR_A_CDC_IIR2_GAIN_B3_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B4_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B4_CTL] = SITAR_A_CDC_IIR2_GAIN_B4_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B5_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B5_CTL] = SITAR_A_CDC_IIR2_GAIN_B5_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B6_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B6_CTL] = SITAR_A_CDC_IIR2_GAIN_B6_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B7_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B7_CTL] = SITAR_A_CDC_IIR2_GAIN_B7_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B8_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_B8_CTL] = SITAR_A_CDC_IIR2_GAIN_B8_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_TIMER_CTL] =
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_IIR2_GAIN_TIMER_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:		SITAR_A_CDC_IIR2_GAIN_TIMER_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_TOP_GAIN_UPDATE] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_TOP_GAIN_UPDATE] = SITAR_A_CDC_TOP_GAIN_UPDATE__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_TX1_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_TX1_VOL_CTL_GAIN] = SITAR_A_CDC_TX1_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_TX2_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_TX3_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_TX4_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_CDC_TX5_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_RX_EAR_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_RX_EAR_GAIN] = SITAR_A_RX_EAR_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_RX_HPH_L_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_RX_HPH_L_GAIN] = SITAR_A_RX_HPH_L_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_RX_HPH_R_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_RX_HPH_R_GAIN] = SITAR_A_RX_HPH_R_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_RX_LINE_1_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_RX_LINE_1_GAIN] = SITAR_A_RX_LINE_1_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_RX_LINE_2_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9304-tables.c:	[SITAR_A_RX_LINE_2_GAIN] = SITAR_A_RX_LINE_2_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9306.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		/* apply the digital gain after the decimator is enabled*/
/root/machinex/sound/soc/codecs/wcd9306.c:		/* apply the digital gain after the interpolator is enabled*/
/root/machinex/sound/soc/codecs/wcd9306.c:	case TAPAN_A_CDC_TX1_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9306.c:	case TAPAN_A_CDC_TX2_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9306.c:	case TAPAN_A_CDC_TX3_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9306.c:	case TAPAN_A_CDC_TX4_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9306.c:#define TAPAN_COMP_DIGITAL_GAIN_OFFSET 3
/root/machinex/sound/soc/codecs/wcd9306.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:	/* Digital gain register is not cacheable so we have to write
/root/machinex/sound/soc/codecs/wcd9306.c:	ear_pa_gain = ear_pa_gain >> 5;
/root/machinex/sound/soc/codecs/wcd9306.c:	ear_pa_gain = snd_soc_read(codec, TAPAN_A_RX_EAR_GAIN);
/root/machinex/sound/soc/codecs/wcd9306.c:	ear_pa_gain =  ucontrol->value.integer.value[0] << 5;
/root/machinex/sound/soc/codecs/wcd9306.c:	if (tapan_is_digital_gain_register(reg))
/root/machinex/sound/soc/codecs/wcd9306.c:		if ((w->shift) < ARRAY_SIZE(rx_digital_gain_reg))
/root/machinex/sound/soc/codecs/wcd9306.c:		if ((w->shift + offset) < ARRAY_SIZE(tx_digital_gain_reg))
/root/machinex/sound/soc/codecs/wcd9306.c:	/* Initialize gain registers to use register gain */
/root/machinex/sound/soc/codecs/wcd9306.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:		lineout_gain_reg = TAPAN_A_RX_LINE_1_GAIN;
/root/machinex/sound/soc/codecs/wcd9306.c:		lineout_gain_reg = TAPAN_A_RX_LINE_2_GAIN;
/root/machinex/sound/soc/codecs/wcd9306.c:	pr_debug("%s: ear_pa_gain = 0x%x\n", __func__, ear_pa_gain);
/root/machinex/sound/soc/codecs/wcd9306.c:	ret_1 = snd_soc_read(codec, TAPAN_A_CDC_TX1_VOL_CTL_GAIN);
/root/machinex/sound/soc/codecs/wcd9306.c:	ret_2 = snd_soc_read(codec, TAPAN_A_CDC_TX3_VOL_CTL_GAIN);
/root/machinex/sound/soc/codecs/wcd9306.c:				  rx_digital_gain_reg[w->shift],
/root/machinex/sound/soc/codecs/wcd9306.c:				  rx_digital_gain_reg[w->shift])
/root/machinex/sound/soc/codecs/wcd9306.c:		/* Set gain source to compander */
/root/machinex/sound/soc/codecs/wcd9306.c:		/* Set gain source to register */
/root/machinex/sound/soc/codecs/wcd9306.c:		snd_soc_update_bits(codec, lineout_gain_reg, 0x40, 0x00);
/root/machinex/sound/soc/codecs/wcd9306.c:		snd_soc_update_bits(codec, lineout_gain_reg, 0x40, 0x40);
/root/machinex/sound/soc/codecs/wcd9306.c:		snd_soc_update_bits(codec, TAPAN_A_CDC_TX1_VOL_CTL_GAIN, 0xff, 0);
/root/machinex/sound/soc/codecs/wcd9306.c:		snd_soc_update_bits(codec, TAPAN_A_CDC_TX1_VOL_CTL_GAIN, 0xff, -84);
/root/machinex/sound/soc/codecs/wcd9306.c:		snd_soc_update_bits(codec, TAPAN_A_CDC_TX3_VOL_CTL_GAIN, 0xff, 0);
/root/machinex/sound/soc/codecs/wcd9306.c:		snd_soc_update_bits(codec, TAPAN_A_CDC_TX3_VOL_CTL_GAIN, 0xff, -84);
/root/machinex/sound/soc/codecs/wcd9306.c:	snd_soc_update_bits(codec, TAPAN_A_RX_EAR_GAIN, 0xE0, ear_pa_gain);
/root/machinex/sound/soc/codecs/wcd9306.c:		snd_soc_update_bits(codec, TAPAN_A_RX_HPH_L_GAIN,
/root/machinex/sound/soc/codecs/wcd9306.c:		snd_soc_update_bits(codec, TAPAN_A_RX_HPH_R_GAIN,
/root/machinex/sound/soc/codecs/wcd9306.c:		snd_soc_update_bits(codec, TAPAN_A_RX_LINE_1_GAIN,
/root/machinex/sound/soc/codecs/wcd9306.c:		snd_soc_update_bits(codec, TAPAN_A_RX_LINE_2_GAIN,
/root/machinex/sound/soc/codecs/wcd9306.c:		snd_soc_update_bits(codec, TAPAN_A_SPKR_DRV_GAIN,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_ENUM_EXT("EAR PA Gain", tapan_ear_pa_gain_enum,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_ENUM_SINGLE_EXT(ARRAY_SIZE(tapan_ear_pa_gain_text),
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_S8_TLV("DEC1 Volume", TAPAN_A_CDC_TX1_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_S8_TLV("DEC2 Volume", TAPAN_A_CDC_TX2_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_S8_TLV("DEC3 Volume", TAPAN_A_CDC_TX3_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_S8_TLV("DEC4 Volume", TAPAN_A_CDC_TX4_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_S8_TLV("IIR1 INP1 Volume", TAPAN_A_CDC_IIR1_GAIN_B1_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_S8_TLV("IIR1 INP2 Volume", TAPAN_A_CDC_IIR1_GAIN_B2_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_S8_TLV("IIR1 INP3 Volume", TAPAN_A_CDC_IIR1_GAIN_B3_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_S8_TLV("IIR1 INP4 Volume", TAPAN_A_CDC_IIR1_GAIN_B4_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_S8_TLV("IIR2 INP1 Volume", TAPAN_A_CDC_IIR2_GAIN_B1_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_S8_TLV("IIR2 INP2 Volume", TAPAN_A_CDC_IIR2_GAIN_B2_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_S8_TLV("IIR2 INP3 Volume", TAPAN_A_CDC_IIR2_GAIN_B3_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_S8_TLV("IIR2 INP4 Volume", TAPAN_A_CDC_IIR2_GAIN_B4_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_TLV("ADC1 Volume", TAPAN_A_TX_1_EN, 2, 19, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_TLV("ADC2 Volume", TAPAN_A_TX_2_EN, 2, 19, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_TLV("ADC3 Volume", TAPAN_A_TX_3_EN, 2, 19, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_TLV("ADC4 Volume", TAPAN_A_TX_4_EN, 2, 19, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_TLV("ADC5 Volume", TAPAN_A_TX_5_EN, 2, 19, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_TLV("HPHL Volume", TAPAN_A_RX_HPH_L_GAIN, 0, 20, 1,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_TLV("HPHR Volume", TAPAN_A_RX_HPH_R_GAIN, 0, 20, 1,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_TLV("LINEOUT1 Volume", TAPAN_A_RX_LINE_1_GAIN, 0, 20, 1,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_TLV("LINEOUT2 Volume", TAPAN_A_RX_LINE_2_GAIN, 0, 20, 1,
/root/machinex/sound/soc/codecs/wcd9306.c:	SOC_SINGLE_TLV("SPK DRV Volume", TAPAN_A_SPKR_DRV_GAIN, 3, 8, 1,
/root/machinex/sound/soc/codecs/wcd9306.c:static bool tapan_is_digital_gain_register(unsigned int reg)
/root/machinex/sound/soc/codecs/wcd9306.c:static const char * const tapan_ear_pa_gain_text[] = {
/root/machinex/sound/soc/codecs/wcd9306.c:static const DECLARE_TLV_DB_SCALE(analog_gain, 0, 25, 1);
/root/machinex/sound/soc/codecs/wcd9306.c:static const DECLARE_TLV_DB_SCALE(aux_pga_gain, 0, 2, 0);
/root/machinex/sound/soc/codecs/wcd9306.c:static const DECLARE_TLV_DB_SCALE(digital_gain, 0, 1, 0);
/root/machinex/sound/soc/codecs/wcd9306.c:static const DECLARE_TLV_DB_SCALE(line_gain, 0, 7, 1);
/root/machinex/sound/soc/codecs/wcd9306.c:static const struct soc_enum tapan_ear_pa_gain_enum =
/root/machinex/sound/soc/codecs/wcd9306.c:static int tapan_config_gain_compander(struct snd_soc_codec *codec,
/root/machinex/sound/soc/codecs/wcd9306.c:static int tapan_pa_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/wcd9306.c:static int tapan_pa_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/wcd9306.c:static unsigned short rx_digital_gain_reg[] = {
/root/machinex/sound/soc/codecs/wcd9306.c:static unsigned short tx_digital_gain_reg[] = {
/root/machinex/sound/soc/codecs/wcd9306.c:	TAPAN_A_CDC_TX1_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9306.c:	TAPAN_A_CDC_TX2_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9306.c:	TAPAN_A_CDC_TX3_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9306.c:	TAPAN_A_CDC_TX4_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9306.c:	{TAPAN_A_RX_HPH_L_GAIN, 0x20, 0x20},
/root/machinex/sound/soc/codecs/wcd9306.c:	{TAPAN_A_RX_HPH_R_GAIN, 0x20, 0x20},
/root/machinex/sound/soc/codecs/wcd9306.c:	{TAPAN_A_RX_LINE_1_GAIN, 0x20, 0x20},
/root/machinex/sound/soc/codecs/wcd9306.c:	{TAPAN_A_RX_LINE_2_GAIN, 0x20, 0x20},
/root/machinex/sound/soc/codecs/wcd9306.c:	{TAPAN_A_SPKR_DRV_GAIN, 0x04, 0x04},
/root/machinex/sound/soc/codecs/wcd9306.c:	tapan->aux_l_gain = 0x1F;
/root/machinex/sound/soc/codecs/wcd9306.c:	tapan->aux_r_gain = 0x1F;
/root/machinex/sound/soc/codecs/wcd9306.c:		tapan_config_gain_compander(codec, comp, false);
/root/machinex/sound/soc/codecs/wcd9306.c:		tapan_config_gain_compander(codec, comp, true);
/root/machinex/sound/soc/codecs/wcd9306.c:			tapan_ear_pa_gain_text);
/root/machinex/sound/soc/codecs/wcd9306.c:		tapan_pa_gain_get, tapan_pa_gain_put),
/root/machinex/sound/soc/codecs/wcd9306.c:				  tx_digital_gain_reg[w->shift + offset],
/root/machinex/sound/soc/codecs/wcd9306.c:				  tx_digital_gain_reg[w->shift + offset])
/root/machinex/sound/soc/codecs/wcd9306.c:	u16 lineout_gain_reg;
/root/machinex/sound/soc/codecs/wcd9306.c:	u8 aux_l_gain;
/root/machinex/sound/soc/codecs/wcd9306.c:	u8 aux_r_gain;
/root/machinex/sound/soc/codecs/wcd9306.c:	u8 ear_pa_gain;
/root/machinex/sound/soc/codecs/wcd9306.c:	u8 ear_pa_gain;
/root/machinex/sound/soc/codecs/wcd9306.c:	ucontrol->value.integer.value[0] = ear_pa_gain;
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_ANC1_GAIN_CTL			(0x20C)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_ANC1_GAIN_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_ANC2_GAIN_CTL			(0x28C)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_ANC2_GAIN_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B1_CTL			(0x340)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B1_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B2_CTL			(0x341)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B2_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B3_CTL			(0x342)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B3_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B4_CTL			(0x343)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B4_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B5_CTL			(0x344)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B5_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B6_CTL			(0x345)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B6_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B7_CTL			(0x346)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B7_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B8_CTL			(0x347)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_B8_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_TIMER_CTL			(0x349)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR1_GAIN_TIMER_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B1_CTL			(0x350)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B1_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B2_CTL			(0x351)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B2_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B3_CTL			(0x352)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B3_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B4_CTL			(0x353)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B4_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B5_CTL			(0x354)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B5_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B6_CTL			(0x355)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B6_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B7_CTL			(0x356)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B7_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B8_CTL			(0x357)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_B8_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_TIMER_CTL			(0x359)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_IIR2_GAIN_TIMER_CTL__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_TOP_GAIN_UPDATE			(0x360)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_TOP_GAIN_UPDATE__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_TX1_VOL_CTL_GAIN			(0x221)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_TX1_VOL_CTL_GAIN__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_TX2_VOL_CTL_GAIN			(0x229)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_TX2_VOL_CTL_GAIN__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_TX3_VOL_CTL_GAIN			(0x231)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_TX3_VOL_CTL_GAIN__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_TX4_VOL_CTL_GAIN			(0x239)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_CDC_TX4_VOL_CTL_GAIN__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_RX_EAR_GAIN			(0x1BD)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_RX_EAR_GAIN__POR				(0x02)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_RX_HPH_L_GAIN			(0x1AE)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_RX_HPH_L_GAIN__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_RX_HPH_R_GAIN			(0x1B4)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_RX_HPH_R_GAIN__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_RX_LINE_1_GAIN			(0x1CD)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_RX_LINE_1_GAIN__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_RX_LINE_2_GAIN			(0x1D1)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_RX_LINE_2_GAIN__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_SPKR_DRV_GAIN			(0x1E0)
/root/machinex/sound/soc/codecs/wcd9306_registers.h:#define TAPAN_A_SPKR_DRV_GAIN__POR				(0x00)
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_ANC1_GAIN_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_ANC1_GAIN_CTL] = TAPAN_A_CDC_ANC1_GAIN_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_ANC2_GAIN_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_ANC2_GAIN_CTL] = TAPAN_A_CDC_ANC2_GAIN_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B1_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B1_CTL] = TAPAN_A_CDC_IIR1_GAIN_B1_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B2_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B2_CTL] = TAPAN_A_CDC_IIR1_GAIN_B2_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B3_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B3_CTL] = TAPAN_A_CDC_IIR1_GAIN_B3_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B4_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B4_CTL] = TAPAN_A_CDC_IIR1_GAIN_B4_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B5_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B5_CTL] = TAPAN_A_CDC_IIR1_GAIN_B5_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B6_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B6_CTL] = TAPAN_A_CDC_IIR1_GAIN_B6_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B7_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B7_CTL] = TAPAN_A_CDC_IIR1_GAIN_B7_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B8_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_B8_CTL] = TAPAN_A_CDC_IIR1_GAIN_B8_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_TIMER_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR1_GAIN_TIMER_CTL] = TAPAN_A_CDC_IIR1_GAIN_TIMER_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B1_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B1_CTL] = TAPAN_A_CDC_IIR2_GAIN_B1_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B2_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B2_CTL] = TAPAN_A_CDC_IIR2_GAIN_B2_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B3_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B3_CTL] = TAPAN_A_CDC_IIR2_GAIN_B3_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B4_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B4_CTL] = TAPAN_A_CDC_IIR2_GAIN_B4_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B5_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B5_CTL] = TAPAN_A_CDC_IIR2_GAIN_B5_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B6_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B6_CTL] = TAPAN_A_CDC_IIR2_GAIN_B6_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B7_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B7_CTL] = TAPAN_A_CDC_IIR2_GAIN_B7_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B8_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_B8_CTL] = TAPAN_A_CDC_IIR2_GAIN_B8_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_TIMER_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_IIR2_GAIN_TIMER_CTL] = TAPAN_A_CDC_IIR2_GAIN_TIMER_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_TOP_GAIN_UPDATE] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_TOP_GAIN_UPDATE] = TAPAN_A_CDC_TOP_GAIN_UPDATE__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_TX1_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_TX1_VOL_CTL_GAIN] = TAPAN_A_CDC_TX1_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_TX2_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_TX2_VOL_CTL_GAIN] = TAPAN_A_CDC_TX2_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_TX3_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_TX3_VOL_CTL_GAIN] = TAPAN_A_CDC_TX3_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_TX4_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_CDC_TX4_VOL_CTL_GAIN] = TAPAN_A_CDC_TX4_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_RX_EAR_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_RX_EAR_GAIN] = TAPAN_A_RX_EAR_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_RX_HPH_L_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_RX_HPH_L_GAIN] = TAPAN_A_RX_HPH_L_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_RX_HPH_R_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_RX_HPH_R_GAIN] = TAPAN_A_RX_HPH_R_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_RX_LINE_1_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_RX_LINE_1_GAIN] = TAPAN_A_RX_LINE_1_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_RX_LINE_2_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_RX_LINE_2_GAIN] = TAPAN_A_RX_LINE_2_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_SPKR_DRV_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9306-tables.c:	[TAPAN_A_SPKR_DRV_GAIN] = TAPAN_A_SPKR_DRV_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310.c:				    0x02, gain_offset.half_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:				    0x02, gain_offset.half_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:				    0x02, gain_offset.half_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:				    0x02, gain_offset.half_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:				    0x02, gain_offset.half_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:				    0x02, gain_offset.half_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:				    0xFF, gain_offset.whole_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:				    0xFF, gain_offset.whole_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:				    0xFF, gain_offset.whole_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:				    0xFF, gain_offset.whole_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:				    0xFF, gain_offset.whole_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:				    0xFF, gain_offset.whole_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		 * and set the initial AUX PGA gain to NEG_0P0_DB
/root/machinex/sound/soc/codecs/wcd9310.c:		/* apply the digital gain after the decimator is enabled*/
/root/machinex/sound/soc/codecs/wcd9310.c:		/* apply the digital gain after the interpolator is enabled*/
/root/machinex/sound/soc/codecs/wcd9310.c:		aux_pga_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		aux_pga_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:	case TABLA_A_CDC_TX10_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9310.c:	case TABLA_A_CDC_TX1_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9310.c:	case TABLA_A_CDC_TX2_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9310.c:	case TABLA_A_CDC_TX3_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9310.c:	case TABLA_A_CDC_TX4_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9310.c:	case TABLA_A_CDC_TX5_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9310.c:	case TABLA_A_CDC_TX6_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9310.c:	case TABLA_A_CDC_TX7_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9310.c:	case TABLA_A_CDC_TX8_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9310.c:	case TABLA_A_CDC_TX9_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9310.c:	case TABLA_BTN_DET_GAIN:
/root/machinex/sound/soc/codecs/wcd9310.c:			comp_dgtl_gain[MAX_PA_GAIN_OPTIONS] = {
/root/machinex/sound/soc/codecs/wcd9310.c:		  comp_dgtl_gain[pa_gain & 0xF].half_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:				comp_dgtl_gain[pa_gain & 0xF].half_db_gain;
/root/machinex/sound/soc/codecs/wcd9310.c:const static struct comp_dgtl_gain_offset
/root/machinex/sound/soc/codecs/wcd9310.c:#define COMP_DIGITAL_DB_GAIN_APPLY(a, b) \
/root/machinex/sound/soc/codecs/wcd9310.c:#define MAX_PA_GAIN_OPTIONS  13
/root/machinex/sound/soc/codecs/wcd9310.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:	/* Digital gain register is not cacheable so we have to write
/root/machinex/sound/soc/codecs/wcd9310.c:		  (digital_vol - comp_dgtl_gain[pa_gain & 0xF].whole_db_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		ear_pa_gain = 0x00;
/root/machinex/sound/soc/codecs/wcd9310.c:		ear_pa_gain = 0x80;
/root/machinex/sound/soc/codecs/wcd9310.c:	ear_pa_gain >>= 5;
/root/machinex/sound/soc/codecs/wcd9310.c:	ear_pa_gain = snd_soc_read(codec, TABLA_A_RX_EAR_GAIN);
/root/machinex/sound/soc/codecs/wcd9310.c:	} else if (ear_pa_gain == 0x04) {
/root/machinex/sound/soc/codecs/wcd9310.c:			 __func__, comp_dgtl_gain[pa_gain & 0xF].whole_db_gain, comp_dgtl_gain[pa_gain & 0xF].whole_db_gain,
/root/machinex/sound/soc/codecs/wcd9310.c:			 __func__, comp_dgtl_gain[pa_gain & 0xF].whole_db_gain, comp_dgtl_gain[pa_gain & 0xF].whole_db_gain,
/root/machinex/sound/soc/codecs/wcd9310.c:				__func__, ear_pa_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:		 __func__, gain_offset->half_db_gain,
/root/machinex/sound/soc/codecs/wcd9310.c:		 __func__, pa_mode, pa_reg, pa_gain, pa_reg, pa_gain, vol_reg, digital_vol, event, index);
/root/machinex/sound/soc/codecs/wcd9310.c:		gain_offset->half_db_gain =
/root/machinex/sound/soc/codecs/wcd9310.c:		gain_offset->half_db_gain = 0;
/root/machinex/sound/soc/codecs/wcd9310.c:			 gain_offset->whole_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:			 gain_offset->whole_db_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:						 gain_offset->whole_db_gain ;
/root/machinex/sound/soc/codecs/wcd9310.c:		gain_offset->whole_db_gain = COMP_DIGITAL_DB_GAIN_APPLY(
/root/machinex/sound/soc/codecs/wcd9310.c:		gain_offset->whole_db_gain = digital_vol +
/root/machinex/sound/soc/codecs/wcd9310.c:		 gain_offset->whole_db_gain, index,
/root/machinex/sound/soc/codecs/wcd9310.c:			    gain[tabla_codec_mclk_index(tabla)] << 3);
/root/machinex/sound/soc/codecs/wcd9310.c:	gain = tabla_mbhc_cal_btn_det_mp(btn_det, TABLA_BTN_DET_GAIN);
/root/machinex/sound/soc/codecs/wcd9310.c:	if (ear_pa_gain == 0x00) {
/root/machinex/sound/soc/codecs/wcd9310.c:	if (((pa_gain & 0xF) + 1) > ARRAY_SIZE(comp_dgtl_gain) ||
/root/machinex/sound/soc/codecs/wcd9310.c:					/* if switch is toggled, check again,
/root/machinex/sound/soc/codecs/wcd9310.c:	if (tabla_is_digital_gain_register(reg))
/root/machinex/sound/soc/codecs/wcd9310.c:		if ((w->shift) < ARRAY_SIZE(rx_digital_gain_reg))
/root/machinex/sound/soc/codecs/wcd9310.c:		if ((w->shift) < ARRAY_SIZE(rx_digital_gain_reg))
/root/machinex/sound/soc/codecs/wcd9310.c:		(index >= ARRAY_SIZE(tabla->comp_gain_offset))) {
/root/machinex/sound/soc/codecs/wcd9310.c:	/* Initialize gain registers to use register gain */
/root/machinex/sound/soc/codecs/wcd9310.c:	int pa_mode = pa_gain & mask;
/root/machinex/sound/soc/codecs/wcd9310.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:		lineout_gain_reg = TABLA_A_RX_LINE_1_GAIN;
/root/machinex/sound/soc/codecs/wcd9310.c:		lineout_gain_reg = TABLA_A_RX_LINE_2_GAIN;
/root/machinex/sound/soc/codecs/wcd9310.c:		lineout_gain_reg = TABLA_A_RX_LINE_3_GAIN;
/root/machinex/sound/soc/codecs/wcd9310.c:		lineout_gain_reg = TABLA_A_RX_LINE_4_GAIN;
/root/machinex/sound/soc/codecs/wcd9310.c:		lineout_gain_reg = TABLA_A_RX_LINE_5_GAIN;
/root/machinex/sound/soc/codecs/wcd9310.c:				mask, event, &gain_offset, 0);
/root/machinex/sound/soc/codecs/wcd9310.c:				mask, event, &gain_offset, 1);
/root/machinex/sound/soc/codecs/wcd9310.c:				mask, event, &gain_offset, 2);
/root/machinex/sound/soc/codecs/wcd9310.c:				mask, event, &gain_offset, 3);
/root/machinex/sound/soc/codecs/wcd9310.c:				mask, event, &gain_offset, 4);
/root/machinex/sound/soc/codecs/wcd9310.c:				mask, event, &gain_offset, 5);
/root/machinex/sound/soc/codecs/wcd9310.c:	 * MBHC block cancel and sync this work so override is off again
/root/machinex/sound/soc/codecs/wcd9310.c:	mxcodec_dbg("%s: ear_pa_gain = 0x%x\n", __func__, ear_pa_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:	mxcodec_dbg("%s: half_db_gain(%d)whole_db_gain(%d)comp_gain_offset[%d](%d)\n",
/root/machinex/sound/soc/codecs/wcd9310.c:		mxcodec_dbg("%s: listed whole_db_gain hex:0x%x dec:0x%d, adjusted whole_db_gain hex:0x%x dec:0x%d\n",
/root/machinex/sound/soc/codecs/wcd9310.c:		mxcodec_dbg("%s: listed whole_db_gain hex:0x%x dec:0x%d, adjusted whole_db_gainhex:0x%x dec:0x%d\n",
/root/machinex/sound/soc/codecs/wcd9310.c:	mxcodec_dbg("%s: pa_mode: %d pa_gain(hex:0x%x=0x%x dec:%u=%d)digital_vol(hex:0x%x=0x%x dec:0x%u=0x%d)event(0x%x) index(%d)\n",
/root/machinex/sound/soc/codecs/wcd9310.c:		/* Restore the gain */
/root/machinex/sound/soc/codecs/wcd9310.c:				  rx_digital_gain_reg[w->shift],
/root/machinex/sound/soc/codecs/wcd9310.c:				  rx_digital_gain_reg[w->shift])
/root/machinex/sound/soc/codecs/wcd9310.c:		snd_soc_update_bits(codec, lineout_gain_reg, 0x40, 0x00);
/root/machinex/sound/soc/codecs/wcd9310.c:		snd_soc_update_bits(codec, lineout_gain_reg, 0x40, 0x40);
/root/machinex/sound/soc/codecs/wcd9310.c:	snd_soc_update_bits(codec, TABLA_A_RX_EAR_GAIN, 0xE0, ear_pa_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:		snd_soc_update_bits(codec, TABLA_A_RX_HPH_L_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9310.c:		snd_soc_update_bits(codec, TABLA_A_RX_HPH_R_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9310.c:		snd_soc_update_bits(codec, TABLA_A_RX_LINE_1_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9310.c:		snd_soc_update_bits(codec, TABLA_A_RX_LINE_2_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9310.c:		snd_soc_update_bits(codec, TABLA_A_RX_LINE_3_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9310.c:		snd_soc_update_bits(codec, TABLA_A_RX_LINE_4_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9310.c:			snd_soc_write(codec, TABLA_A_AUX_L_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:			snd_soc_write(codec, TABLA_A_AUX_L_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:			snd_soc_write(codec, TABLA_A_AUX_L_GAIN, 0x1F);
/root/machinex/sound/soc/codecs/wcd9310.c:			snd_soc_write(codec, TABLA_A_AUX_L_GAIN, 0x1F);
/root/machinex/sound/soc/codecs/wcd9310.c:			snd_soc_write(codec, TABLA_A_AUX_R_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:			snd_soc_write(codec, TABLA_A_AUX_R_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:			snd_soc_write(codec, TABLA_A_AUX_R_GAIN, 0x1F);
/root/machinex/sound/soc/codecs/wcd9310.c:			snd_soc_write(codec, TABLA_A_AUX_R_GAIN, 0x1F);
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_ENUM_EXT("EAR PA Gain", tabla_ear_pa_gain_enum[0],
/root/machinex/sound/soc/codecs/wcd9310.c:		SOC_ENUM_SINGLE_EXT(2, tabla_ear_pa_gain_text),
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_S8_TLV("DEC10 Volume", TABLA_A_CDC_TX10_VOL_CTL_GAIN, -84,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_S8_TLV("DEC1 Volume", TABLA_A_CDC_TX1_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_S8_TLV("DEC2 Volume", TABLA_A_CDC_TX2_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_S8_TLV("DEC3 Volume", TABLA_A_CDC_TX3_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_S8_TLV("DEC4 Volume", TABLA_A_CDC_TX4_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_S8_TLV("DEC5 Volume", TABLA_A_CDC_TX5_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_S8_TLV("DEC6 Volume", TABLA_A_CDC_TX6_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_S8_TLV("DEC7 Volume", TABLA_A_CDC_TX7_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_S8_TLV("DEC8 Volume", TABLA_A_CDC_TX8_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_S8_TLV("DEC9 Volume", TABLA_A_CDC_TX9_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_S8_TLV("IIR1 INP1 Volume", TABLA_A_CDC_IIR1_GAIN_B1_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_S8_TLV("IIR1 INP2 Volume", TABLA_A_CDC_IIR1_GAIN_B2_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_S8_TLV("IIR1 INP3 Volume", TABLA_A_CDC_IIR1_GAIN_B3_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_S8_TLV("IIR1 INP4 Volume", TABLA_A_CDC_IIR1_GAIN_B4_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("ADC1 Volume", TABLA_A_TX_1_2_EN, 5, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("ADC2 Volume", TABLA_A_TX_1_2_EN, 1, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("ADC3 Volume", TABLA_A_TX_3_4_EN, 5, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("ADC4 Volume", TABLA_A_TX_3_4_EN, 1, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("ADC5 Volume", TABLA_A_TX_5_6_EN, 5, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("ADC6 Volume", TABLA_A_TX_5_6_EN, 1, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("AUX_PGA_LEFT Volume", TABLA_A_AUX_L_GAIN, 0, 39, 0,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("AUX_PGA_RIGHT Volume", TABLA_A_AUX_R_GAIN, 0, 39, 0,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("HPHL Volume", TABLA_A_RX_HPH_L_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("HPHR Volume", TABLA_A_RX_HPH_R_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("LINEOUT1 Volume", TABLA_A_RX_LINE_1_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("LINEOUT2 Volume", TABLA_A_RX_LINE_2_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("LINEOUT3 Volume", TABLA_A_RX_LINE_3_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("LINEOUT4 Volume", TABLA_A_RX_LINE_4_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9310.c:	SOC_SINGLE_TLV("LINEOUT5 Volume", TABLA_A_RX_LINE_5_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9310.c:static bool tabla_is_digital_gain_register(unsigned int reg)
/root/machinex/sound/soc/codecs/wcd9310.c:static const char *tabla_ear_pa_gain_text[] = {"POS_6_DB", "POS_2_DB"};
/root/machinex/sound/soc/codecs/wcd9310.c:static const DECLARE_TLV_DB_SCALE(analog_gain, 0, 25, 1);
/root/machinex/sound/soc/codecs/wcd9310.c:static const DECLARE_TLV_DB_SCALE(aux_pga_gain, 0, 2, 0);
/root/machinex/sound/soc/codecs/wcd9310.c:static const DECLARE_TLV_DB_SCALE(digital_gain, 0, 1, 0);
/root/machinex/sound/soc/codecs/wcd9310.c:static const DECLARE_TLV_DB_SCALE(line_gain, 0, 7, 1);
/root/machinex/sound/soc/codecs/wcd9310.c:static const struct soc_enum tabla_ear_pa_gain_enum[] = {
/root/machinex/sound/soc/codecs/wcd9310.c:static int tabla_compander_gain_offset(
/root/machinex/sound/soc/codecs/wcd9310.c:static int tabla_config_gain_compander(
/root/machinex/sound/soc/codecs/wcd9310.c:static int tabla_pa_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/wcd9310.c:static int tabla_pa_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/wcd9310.c:static unsigned short rx_digital_gain_reg[] = {
/root/machinex/sound/soc/codecs/wcd9310.c:static unsigned short tx_digital_gain_reg[] = {
/root/machinex/sound/soc/codecs/wcd9310.c:struct comp_dgtl_gain_offset {
/root/machinex/sound/soc/codecs/wcd9310.c:	struct comp_dgtl_gain_offset *gain_offset,
/root/machinex/sound/soc/codecs/wcd9310.c:	struct comp_dgtl_gain_offset gain_offset = {0, 0};
/root/machinex/sound/soc/codecs/wcd9310.c:	 * switch is off by time now and shouldn't be turn on again from here */
/root/machinex/sound/soc/codecs/wcd9310.c:							TABLA_A_AUX_L_GAIN);
/root/machinex/sound/soc/codecs/wcd9310.c:							TABLA_A_AUX_L_GAIN);
/root/machinex/sound/soc/codecs/wcd9310.c:							TABLA_A_AUX_R_GAIN);
/root/machinex/sound/soc/codecs/wcd9310.c:							TABLA_A_AUX_R_GAIN);
/root/machinex/sound/soc/codecs/wcd9310.c:	TABLA_A_CDC_TX10_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	TABLA_A_CDC_TX1_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	TABLA_A_CDC_TX2_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	TABLA_A_CDC_TX3_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	TABLA_A_CDC_TX4_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	TABLA_A_CDC_TX5_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	TABLA_A_CDC_TX6_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	TABLA_A_CDC_TX7_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	TABLA_A_CDC_TX8_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	TABLA_A_CDC_TX9_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:				TABLA_A_RX_HPH_L_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	{TABLA_A_RX_HPH_L_GAIN, 0x10, 0x10},
/root/machinex/sound/soc/codecs/wcd9310.c:				TABLA_A_RX_HPH_R_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	{TABLA_A_RX_HPH_R_GAIN, 0x10, 0x10},
/root/machinex/sound/soc/codecs/wcd9310.c:				TABLA_A_RX_LINE_1_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	{TABLA_A_RX_LINE_1_GAIN, 0x10, 0x10},
/root/machinex/sound/soc/codecs/wcd9310.c:				TABLA_A_RX_LINE_2_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	{TABLA_A_RX_LINE_2_GAIN, 0x10, 0x10},
/root/machinex/sound/soc/codecs/wcd9310.c:				TABLA_A_RX_LINE_3_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	{TABLA_A_RX_LINE_3_GAIN, 0x10, 0x10},
/root/machinex/sound/soc/codecs/wcd9310.c:				TABLA_A_RX_LINE_4_GAIN,
/root/machinex/sound/soc/codecs/wcd9310.c:	{TABLA_A_RX_LINE_4_GAIN, 0x10, 0x10},
/root/machinex/sound/soc/codecs/wcd9310.c:				tabla->aux_l_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:					tabla->aux_l_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:	tabla->aux_l_gain = 0x1F;
/root/machinex/sound/soc/codecs/wcd9310.c:			tabla->aux_l_gain = snd_soc_read(codec,
/root/machinex/sound/soc/codecs/wcd9310.c:			tabla->aux_l_gain = snd_soc_read(codec,
/root/machinex/sound/soc/codecs/wcd9310.c:				tabla->aux_r_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:					tabla->aux_r_gain);
/root/machinex/sound/soc/codecs/wcd9310.c:	tabla->aux_r_gain = 0x1F;
/root/machinex/sound/soc/codecs/wcd9310.c:			tabla->aux_r_gain = snd_soc_read(codec,
/root/machinex/sound/soc/codecs/wcd9310.c:			tabla->aux_r_gain = snd_soc_read(codec,
/root/machinex/sound/soc/codecs/wcd9310.c:		tabla_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9310.c:		tabla_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9310.c:		tabla_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9310.c:		tabla_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9310.c:		tabla_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9310.c:		tabla_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9310.c:		 tabla->comp_gain_offset[index]);
/root/machinex/sound/soc/codecs/wcd9310.c:					     tabla->comp_gain_offset[index];
/root/machinex/sound/soc/codecs/wcd9310.c:		tabla->comp_gain_offset[index] = digital_vol -
/root/machinex/sound/soc/codecs/wcd9310.c:		tabla_config_gain_compander(codec, w->shift,
/root/machinex/sound/soc/codecs/wcd9310.c:		tabla_config_gain_compander(codec, w->shift, 1, event);
/root/machinex/sound/soc/codecs/wcd9310.c:		tabla_pa_gain_get, tabla_pa_gain_put),
/root/machinex/sound/soc/codecs/wcd9310.c:	TABLA_REG_VAL(TABLA_A_CDC_CLSG_GAIN_THRESH_CTL, 0x0D)
/root/machinex/sound/soc/codecs/wcd9310.c:	TABLA_REG_VAL(TABLA_A_RX_EAR_GAIN, 0x02),
/root/machinex/sound/soc/codecs/wcd9310.c:	TABLA_REG_VAL(TABLA_A_RX_LINE_5_GAIN, 0x10),
/root/machinex/sound/soc/codecs/wcd9310.c:				  tx_digital_gain_reg[w->shift + offset],
/root/machinex/sound/soc/codecs/wcd9310.c:				  tx_digital_gain_reg[w->shift + offset])
/root/machinex/sound/soc/codecs/wcd9310.c:	u16 lineout_gain_reg;
/root/machinex/sound/soc/codecs/wcd9310.c:	u8 aux_l_gain;
/root/machinex/sound/soc/codecs/wcd9310.c:	u8 aux_r_gain;
/root/machinex/sound/soc/codecs/wcd9310.c:	u8  comp_gain_offset[TABLA_SB_PGD_MAX_NUMBER_OF_RX_SLAVE_DEV_PORTS - 1];
/root/machinex/sound/soc/codecs/wcd9310.c:	u8 ear_pa_gain;
/root/machinex/sound/soc/codecs/wcd9310.c:	u8 ear_pa_gain;
/root/machinex/sound/soc/codecs/wcd9310.c:	u8 half_db_gain;
/root/machinex/sound/soc/codecs/wcd9310.c:	u8 *n_cic, *gain;
/root/machinex/sound/soc/codecs/wcd9310.c:	u8 whole_db_gain;
/root/machinex/sound/soc/codecs/wcd9310.c:	unsigned int pa_gain = snd_soc_read(codec, pa_reg);
/root/machinex/sound/soc/codecs/wcd9310.h:	TABLA_BTN_DET_GAIN
/root/machinex/sound/soc/codecs/wcd9310.h:	u8 _gain[TABLA_NUM_CLK_FREQS];
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_AUX_L_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_AUX_L_GAIN] = TABLA_A_AUX_L_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_AUX_R_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_AUX_R_GAIN] = TABLA_A_AUX_R_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_CLSG_GAIN_THRESH_CTL] =
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_CLSG_GAIN_THRESH_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:		TABLA_A_CDC_CLSG_GAIN_THRESH_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B1_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B1_CTL] = TABLA_A_CDC_IIR1_GAIN_B1_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B2_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B2_CTL] = TABLA_A_CDC_IIR1_GAIN_B2_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B3_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B3_CTL] = TABLA_A_CDC_IIR1_GAIN_B3_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B4_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B4_CTL] = TABLA_A_CDC_IIR1_GAIN_B4_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B5_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B5_CTL] = TABLA_A_CDC_IIR1_GAIN_B5_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B6_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B6_CTL] = TABLA_A_CDC_IIR1_GAIN_B6_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B7_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B7_CTL] = TABLA_A_CDC_IIR1_GAIN_B7_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B8_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_B8_CTL] = TABLA_A_CDC_IIR1_GAIN_B8_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_TIMER_CTL] =
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR1_GAIN_TIMER_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:		TABLA_A_CDC_IIR1_GAIN_TIMER_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B1_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B1_CTL] = TABLA_A_CDC_IIR2_GAIN_B1_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B2_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B2_CTL] = TABLA_A_CDC_IIR2_GAIN_B2_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B3_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B3_CTL] = TABLA_A_CDC_IIR2_GAIN_B3_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B4_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B4_CTL] = TABLA_A_CDC_IIR2_GAIN_B4_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B5_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B5_CTL] = TABLA_A_CDC_IIR2_GAIN_B5_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B6_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B6_CTL] = TABLA_A_CDC_IIR2_GAIN_B6_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B7_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B7_CTL] = TABLA_A_CDC_IIR2_GAIN_B7_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B8_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_B8_CTL] = TABLA_A_CDC_IIR2_GAIN_B8_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_TIMER_CTL] =
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_IIR2_GAIN_TIMER_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:		TABLA_A_CDC_IIR2_GAIN_TIMER_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TOP_GAIN_UPDATE] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TOP_GAIN_UPDATE] = TABLA_A_CDC_TOP_GAIN_UPDATE__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX10_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX10_VOL_CTL_GAIN] = TABLA_A_CDC_TX10_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX1_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX1_VOL_CTL_GAIN] = TABLA_A_CDC_TX1_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX2_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX2_VOL_CTL_GAIN] = TABLA_A_CDC_TX2_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX3_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX3_VOL_CTL_GAIN] = TABLA_A_CDC_TX3_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX4_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX4_VOL_CTL_GAIN] = TABLA_A_CDC_TX4_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX5_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX5_VOL_CTL_GAIN] = TABLA_A_CDC_TX5_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX6_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX6_VOL_CTL_GAIN] = TABLA_A_CDC_TX6_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX7_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX7_VOL_CTL_GAIN] = TABLA_A_CDC_TX7_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX8_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX8_VOL_CTL_GAIN] = TABLA_A_CDC_TX8_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX9_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_CDC_TX9_VOL_CTL_GAIN] = TABLA_A_CDC_TX9_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_EAR_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_EAR_GAIN] = TABLA_A_RX_EAR_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_HPH_L_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_HPH_L_GAIN] = TABLA_A_RX_HPH_L_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_HPH_R_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_HPH_R_GAIN] = TABLA_A_RX_HPH_R_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_LINE_1_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_LINE_1_GAIN] = TABLA_A_RX_LINE_1_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_LINE_2_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_LINE_2_GAIN] = TABLA_A_RX_LINE_2_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_LINE_3_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_LINE_3_GAIN] = TABLA_A_RX_LINE_3_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_LINE_4_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_LINE_4_GAIN] = TABLA_A_RX_LINE_4_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_LINE_5_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9310-tables.c:	[TABLA_A_RX_LINE_5_GAIN] = TABLA_A_RX_LINE_5_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320.c:				0xFF, gain - gain_offset);
/root/machinex/sound/soc/codecs/wcd9320.c:				0xFF, gain - gain_offset);
/root/machinex/sound/soc/codecs/wcd9320.c:				0xFF, gain - gain_offset);
/root/machinex/sound/soc/codecs/wcd9320.c:				0xFF, gain - gain_offset);
/root/machinex/sound/soc/codecs/wcd9320.c:				0xFF, gain - gain_offset);
/root/machinex/sound/soc/codecs/wcd9320.c:				0xFF, gain - gain_offset);
/root/machinex/sound/soc/codecs/wcd9320.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		-84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		/* apply the digital gain after the decimator is enabled*/
/root/machinex/sound/soc/codecs/wcd9320.c:		/* apply the digital gain after the interpolator is enabled*/
/root/machinex/sound/soc/codecs/wcd9320.c:	case TAIKO_A_CDC_TX10_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9320.c:	case TAIKO_A_CDC_TX1_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9320.c:	case TAIKO_A_CDC_TX2_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9320.c:	case TAIKO_A_CDC_TX3_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9320.c:	case TAIKO_A_CDC_TX4_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9320.c:	case TAIKO_A_CDC_TX5_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9320.c:	case TAIKO_A_CDC_TX6_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9320.c:	case TAIKO_A_CDC_TX7_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9320.c:	case TAIKO_A_CDC_TX8_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9320.c:	case TAIKO_A_CDC_TX9_VOL_CTL_GAIN:
/root/machinex/sound/soc/codecs/wcd9320.c:	case TAIKO_BTN_DET_GAIN:
/root/machinex/sound/soc/codecs/wcd9320.c:#define TAIKO_COMP_DIGITAL_GAIN_OFFSET 3
/root/machinex/sound/soc/codecs/wcd9320.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		digital_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:	/* Digital gain register is not cacheable so we have to write
/root/machinex/sound/soc/codecs/wcd9320.c:		ear_pa_gain = 0x00;
/root/machinex/sound/soc/codecs/wcd9320.c:		ear_pa_gain = 0x80;
/root/machinex/sound/soc/codecs/wcd9320.c:	ear_pa_gain = ear_pa_gain >> 5;
/root/machinex/sound/soc/codecs/wcd9320.c:	ear_pa_gain = snd_soc_read(codec, TAIKO_A_RX_EAR_GAIN);
/root/machinex/sound/soc/codecs/wcd9320.c:	} else if (ear_pa_gain == 0x04) {
/root/machinex/sound/soc/codecs/wcd9320.c:				__func__, ear_pa_gain);
/root/machinex/sound/soc/codecs/wcd9320.c:		gain_offset = taiko_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9320.c:		gain_offset = taiko_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9320.c:		gain_offset = taiko_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9320.c:		gain_offset = taiko_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9320.c:		gain_offset = taiko_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9320.c:		gain_offset = taiko_compander_gain_offset(codec, enable,
/root/machinex/sound/soc/codecs/wcd9320.c:		gain_offset = -TAIKO_COMP_DIGITAL_GAIN_OFFSET;
/root/machinex/sound/soc/codecs/wcd9320.c:		gain_offset = TAIKO_COMP_DIGITAL_GAIN_OFFSET;
/root/machinex/sound/soc/codecs/wcd9320.c:		gain = snd_soc_read(codec, TAIKO_A_CDC_RX1_VOL_CTL_B2_CTL);
/root/machinex/sound/soc/codecs/wcd9320.c:		gain = snd_soc_read(codec, TAIKO_A_CDC_RX2_VOL_CTL_B2_CTL);
/root/machinex/sound/soc/codecs/wcd9320.c:		gain = snd_soc_read(codec, TAIKO_A_CDC_RX3_VOL_CTL_B2_CTL);
/root/machinex/sound/soc/codecs/wcd9320.c:		gain = snd_soc_read(codec, TAIKO_A_CDC_RX4_VOL_CTL_B2_CTL);
/root/machinex/sound/soc/codecs/wcd9320.c:		gain = snd_soc_read(codec, TAIKO_A_CDC_RX5_VOL_CTL_B2_CTL);
/root/machinex/sound/soc/codecs/wcd9320.c:		gain = snd_soc_read(codec, TAIKO_A_CDC_RX6_VOL_CTL_B2_CTL);
/root/machinex/sound/soc/codecs/wcd9320.c:			    gain[taiko_codec_mclk_index(taiko)] << 3);
/root/machinex/sound/soc/codecs/wcd9320.c:	gain = taiko_mbhc_cal_btn_det_mp(btn_det, TAIKO_BTN_DET_GAIN);
/root/machinex/sound/soc/codecs/wcd9320.c:	if (ear_pa_gain == 0x00) {
/root/machinex/sound/soc/codecs/wcd9320.c:					/* if switch is toggled, check again,
/root/machinex/sound/soc/codecs/wcd9320.c:	if (taiko_is_digital_gain_register(reg))
/root/machinex/sound/soc/codecs/wcd9320.c:		if ((w->shift) < ARRAY_SIZE(rx_digital_gain_reg))
/root/machinex/sound/soc/codecs/wcd9320.c:		if ((w->shift + offset) < ARRAY_SIZE(tx_digital_gain_reg))
/root/machinex/sound/soc/codecs/wcd9320.c:	/* Initialize gain registers to use register gain */
/root/machinex/sound/soc/codecs/wcd9320.c:	int gain = 0;
/root/machinex/sound/soc/codecs/wcd9320.c:	int gain_offset;
/root/machinex/sound/soc/codecs/wcd9320.c:	int gain_offset = 0;
/root/machinex/sound/soc/codecs/wcd9320.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:		lineout_gain_reg = TAIKO_A_RX_LINE_1_GAIN;
/root/machinex/sound/soc/codecs/wcd9320.c:		lineout_gain_reg = TAIKO_A_RX_LINE_2_GAIN;
/root/machinex/sound/soc/codecs/wcd9320.c:		lineout_gain_reg = TAIKO_A_RX_LINE_3_GAIN;
/root/machinex/sound/soc/codecs/wcd9320.c:		lineout_gain_reg = TAIKO_A_RX_LINE_4_GAIN;
/root/machinex/sound/soc/codecs/wcd9320.c:	 * MBHC block cancel and sync this work so override is off again
/root/machinex/sound/soc/codecs/wcd9320.c:	pr_debug("%s: ear_pa_gain = 0x%x\n", __func__, ear_pa_gain);
/root/machinex/sound/soc/codecs/wcd9320.c:		/* Restore the gain */
/root/machinex/sound/soc/codecs/wcd9320.c:	return gain_offset;
/root/machinex/sound/soc/codecs/wcd9320.c:				  rx_digital_gain_reg[w->shift],
/root/machinex/sound/soc/codecs/wcd9320.c:				  rx_digital_gain_reg[w->shift])
/root/machinex/sound/soc/codecs/wcd9320.c:	 * set HPHL and EAR PA ref gain to 0 DB.
/root/machinex/sound/soc/codecs/wcd9320.c:		snd_soc_update_bits(codec, lineout_gain_reg, 0x40, 0x00);
/root/machinex/sound/soc/codecs/wcd9320.c:		snd_soc_update_bits(codec, lineout_gain_reg, 0x40, 0x40);
/root/machinex/sound/soc/codecs/wcd9320.c:	snd_soc_update_bits(codec, TAIKO_A_RX_EAR_GAIN, 0xE0, ear_pa_gain);
/root/machinex/sound/soc/codecs/wcd9320.c:		snd_soc_update_bits(codec, TAIKO_A_RX_HPH_L_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9320.c:		snd_soc_update_bits(codec, TAIKO_A_RX_HPH_R_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9320.c:		snd_soc_update_bits(codec, TAIKO_A_RX_LINE_1_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9320.c:		snd_soc_update_bits(codec, TAIKO_A_RX_LINE_2_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9320.c:		snd_soc_update_bits(codec, TAIKO_A_RX_LINE_3_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9320.c:		snd_soc_update_bits(codec, TAIKO_A_RX_LINE_4_GAIN, mask, value);
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_ENUM_EXT("EAR PA Gain", taiko_ear_pa_gain_enum[0],
/root/machinex/sound/soc/codecs/wcd9320.c:		SOC_ENUM_SINGLE_EXT(2, taiko_ear_pa_gain_text),
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_S8_TLV("DEC10 Volume", TAIKO_A_CDC_TX10_VOL_CTL_GAIN, -84,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_S8_TLV("DEC1 Volume", TAIKO_A_CDC_TX1_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_S8_TLV("DEC2 Volume", TAIKO_A_CDC_TX2_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_S8_TLV("DEC3 Volume", TAIKO_A_CDC_TX3_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_S8_TLV("DEC4 Volume", TAIKO_A_CDC_TX4_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_S8_TLV("DEC5 Volume", TAIKO_A_CDC_TX5_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_S8_TLV("DEC6 Volume", TAIKO_A_CDC_TX6_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_S8_TLV("DEC7 Volume", TAIKO_A_CDC_TX7_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_S8_TLV("DEC8 Volume", TAIKO_A_CDC_TX8_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_S8_TLV("DEC9 Volume", TAIKO_A_CDC_TX9_VOL_CTL_GAIN, -84, 40,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_S8_TLV("IIR1 INP1 Volume", TAIKO_A_CDC_IIR1_GAIN_B1_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_S8_TLV("IIR1 INP2 Volume", TAIKO_A_CDC_IIR1_GAIN_B2_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_S8_TLV("IIR1 INP3 Volume", TAIKO_A_CDC_IIR1_GAIN_B3_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_S8_TLV("IIR1 INP4 Volume", TAIKO_A_CDC_IIR1_GAIN_B4_CTL, -84,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_TLV("ADC1 Volume", TAIKO_A_TX_1_2_EN, 5, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_TLV("ADC2 Volume", TAIKO_A_TX_1_2_EN, 1, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_TLV("ADC3 Volume", TAIKO_A_TX_3_4_EN, 5, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_TLV("ADC4 Volume", TAIKO_A_TX_3_4_EN, 1, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_TLV("ADC5 Volume", TAIKO_A_TX_5_6_EN, 5, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_TLV("ADC6 Volume", TAIKO_A_TX_5_6_EN, 1, 3, 0, analog_gain),
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_TLV("HPHL Volume", TAIKO_A_RX_HPH_L_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_TLV("HPHR Volume", TAIKO_A_RX_HPH_R_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_TLV("LINEOUT1 Volume", TAIKO_A_RX_LINE_1_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_TLV("LINEOUT2 Volume", TAIKO_A_RX_LINE_2_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_TLV("LINEOUT3 Volume", TAIKO_A_RX_LINE_3_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9320.c:	SOC_SINGLE_TLV("LINEOUT4 Volume", TAIKO_A_RX_LINE_4_GAIN, 0, 12, 1,
/root/machinex/sound/soc/codecs/wcd9320.c:static bool taiko_is_digital_gain_register(unsigned int reg)
/root/machinex/sound/soc/codecs/wcd9320.c:static const char * const taiko_ear_pa_gain_text[] = {"POS_6_DB", "POS_2_DB"};
/root/machinex/sound/soc/codecs/wcd9320.c:static const DECLARE_TLV_DB_SCALE(analog_gain, 0, 25, 1);
/root/machinex/sound/soc/codecs/wcd9320.c:static const DECLARE_TLV_DB_SCALE(aux_pga_gain, 0, 2, 0);
/root/machinex/sound/soc/codecs/wcd9320.c:static const DECLARE_TLV_DB_SCALE(digital_gain, 0, 1, 0);
/root/machinex/sound/soc/codecs/wcd9320.c:static const DECLARE_TLV_DB_SCALE(line_gain, 0, 7, 1);
/root/machinex/sound/soc/codecs/wcd9320.c:static const struct soc_enum taiko_ear_pa_gain_enum[] = {
/root/machinex/sound/soc/codecs/wcd9320.c:static int taiko_compander_gain_offset(
/root/machinex/sound/soc/codecs/wcd9320.c:static int taiko_config_gain_compander(
/root/machinex/sound/soc/codecs/wcd9320.c:static int taiko_pa_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/wcd9320.c:static int taiko_pa_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/wcd9320.c:static unsigned short rx_digital_gain_reg[] = {
/root/machinex/sound/soc/codecs/wcd9320.c:static unsigned short tx_digital_gain_reg[] = {
/root/machinex/sound/soc/codecs/wcd9320.c:	 * switch is off by time now and shouldn't be turn on again from here */
/root/machinex/sound/soc/codecs/wcd9320.c:	TAIKO_A_CDC_TX10_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9320.c:	TAIKO_A_CDC_TX1_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9320.c:	TAIKO_A_CDC_TX2_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9320.c:	TAIKO_A_CDC_TX3_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9320.c:	TAIKO_A_CDC_TX4_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9320.c:	TAIKO_A_CDC_TX5_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9320.c:	TAIKO_A_CDC_TX6_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9320.c:	TAIKO_A_CDC_TX7_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9320.c:	TAIKO_A_CDC_TX8_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9320.c:	TAIKO_A_CDC_TX9_VOL_CTL_GAIN,
/root/machinex/sound/soc/codecs/wcd9320.c:	{TAIKO_A_RX_HPH_L_GAIN, 0x20, 0x20},
/root/machinex/sound/soc/codecs/wcd9320.c:				TAIKO_A_RX_HPH_L_GAIN, mask, event);
/root/machinex/sound/soc/codecs/wcd9320.c:	{TAIKO_A_RX_HPH_R_GAIN, 0x20, 0x20},
/root/machinex/sound/soc/codecs/wcd9320.c:				TAIKO_A_RX_HPH_R_GAIN, mask, event);
/root/machinex/sound/soc/codecs/wcd9320.c:	{TAIKO_A_RX_LINE_1_GAIN, 0x20, 0x20},
/root/machinex/sound/soc/codecs/wcd9320.c:				TAIKO_A_RX_LINE_1_GAIN, mask, event);
/root/machinex/sound/soc/codecs/wcd9320.c:	{TAIKO_A_RX_LINE_2_GAIN, 0x20, 0x20},
/root/machinex/sound/soc/codecs/wcd9320.c:				TAIKO_A_RX_LINE_2_GAIN, mask, event);
/root/machinex/sound/soc/codecs/wcd9320.c:	{TAIKO_A_RX_LINE_3_GAIN, 0x20, 0x20},
/root/machinex/sound/soc/codecs/wcd9320.c:				TAIKO_A_RX_LINE_3_GAIN, mask, event);
/root/machinex/sound/soc/codecs/wcd9320.c:	{TAIKO_A_RX_LINE_4_GAIN, 0x20, 0x20},
/root/machinex/sound/soc/codecs/wcd9320.c:				TAIKO_A_RX_LINE_4_GAIN, mask, event);
/root/machinex/sound/soc/codecs/wcd9320.c:	taiko->aux_l_gain = 0x1F;
/root/machinex/sound/soc/codecs/wcd9320.c:	taiko->aux_r_gain = 0x1F;
/root/machinex/sound/soc/codecs/wcd9320.c:			taiko_config_gain_compander(codec, w->shift,
/root/machinex/sound/soc/codecs/wcd9320.c:			taiko_config_gain_compander(codec, w->shift, 1, event);
/root/machinex/sound/soc/codecs/wcd9320.c:		taiko_pa_gain_get, taiko_pa_gain_put),
/root/machinex/sound/soc/codecs/wcd9320.c:				  tx_digital_gain_reg[w->shift + offset],
/root/machinex/sound/soc/codecs/wcd9320.c:				  tx_digital_gain_reg[w->shift + offset])
/root/machinex/sound/soc/codecs/wcd9320.c:	u16 lineout_gain_reg;
/root/machinex/sound/soc/codecs/wcd9320.c:	u8 aux_l_gain;
/root/machinex/sound/soc/codecs/wcd9320.c:	u8 aux_r_gain;
/root/machinex/sound/soc/codecs/wcd9320.c:	u8 ear_pa_gain;
/root/machinex/sound/soc/codecs/wcd9320.c:	u8 ear_pa_gain;
/root/machinex/sound/soc/codecs/wcd9320.c:	u8 *n_cic, *gain;
/root/machinex/sound/soc/codecs/wcd9320.h:	TAIKO_BTN_DET_GAIN
/root/machinex/sound/soc/codecs/wcd9320.h:	u8 _gain[TAIKO_NUM_CLK_FREQS];
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_ANC1_GAIN_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_ANC1_GAIN_CTL] = TAIKO_A_CDC_ANC1_GAIN_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_ANC2_GAIN_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_ANC2_GAIN_CTL] = TAIKO_A_CDC_ANC2_GAIN_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B1_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B1_CTL] = TAIKO_A_CDC_IIR1_GAIN_B1_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B2_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B2_CTL] = TAIKO_A_CDC_IIR1_GAIN_B2_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B3_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B3_CTL] = TAIKO_A_CDC_IIR1_GAIN_B3_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B4_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B4_CTL] = TAIKO_A_CDC_IIR1_GAIN_B4_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B5_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B5_CTL] = TAIKO_A_CDC_IIR1_GAIN_B5_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B6_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B6_CTL] = TAIKO_A_CDC_IIR1_GAIN_B6_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B7_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B7_CTL] = TAIKO_A_CDC_IIR1_GAIN_B7_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B8_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_B8_CTL] = TAIKO_A_CDC_IIR1_GAIN_B8_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_TIMER_CTL] =
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR1_GAIN_TIMER_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	    TAIKO_A_CDC_IIR1_GAIN_TIMER_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B1_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B1_CTL] = TAIKO_A_CDC_IIR2_GAIN_B1_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B2_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B2_CTL] = TAIKO_A_CDC_IIR2_GAIN_B2_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B3_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B3_CTL] = TAIKO_A_CDC_IIR2_GAIN_B3_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B4_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B4_CTL] = TAIKO_A_CDC_IIR2_GAIN_B4_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B5_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B5_CTL] = TAIKO_A_CDC_IIR2_GAIN_B5_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B6_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B6_CTL] = TAIKO_A_CDC_IIR2_GAIN_B6_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B7_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B7_CTL] = TAIKO_A_CDC_IIR2_GAIN_B7_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B8_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_B8_CTL] = TAIKO_A_CDC_IIR2_GAIN_B8_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_TIMER_CTL] =
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_IIR2_GAIN_TIMER_CTL] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	    TAIKO_A_CDC_IIR2_GAIN_TIMER_CTL__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TOP_GAIN_UPDATE] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TOP_GAIN_UPDATE] = TAIKO_A_CDC_TOP_GAIN_UPDATE__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX10_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX10_VOL_CTL_GAIN] = TAIKO_A_CDC_TX10_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX1_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX1_VOL_CTL_GAIN] = TAIKO_A_CDC_TX1_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX2_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX2_VOL_CTL_GAIN] = TAIKO_A_CDC_TX2_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX3_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX3_VOL_CTL_GAIN] = TAIKO_A_CDC_TX3_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX4_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX4_VOL_CTL_GAIN] = TAIKO_A_CDC_TX4_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX5_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX5_VOL_CTL_GAIN] = TAIKO_A_CDC_TX5_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX6_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX6_VOL_CTL_GAIN] = TAIKO_A_CDC_TX6_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX7_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX7_VOL_CTL_GAIN] = TAIKO_A_CDC_TX7_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX8_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX8_VOL_CTL_GAIN] = TAIKO_A_CDC_TX8_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX9_VOL_CTL_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_TX9_VOL_CTL_GAIN] = TAIKO_A_CDC_TX9_VOL_CTL_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_VBAT_GAIN_UPD1] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_VBAT_GAIN_UPD1] = TAIKO_A_CDC_VBAT_GAIN_UPD1__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_VBAT_GAIN_UPD2] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_VBAT_GAIN_UPD2] = TAIKO_A_CDC_VBAT_GAIN_UPD2__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_VBAT_GAIN_UPD3] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_VBAT_GAIN_UPD3] = TAIKO_A_CDC_VBAT_GAIN_UPD3__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_VBAT_GAIN_UPD4] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_CDC_VBAT_GAIN_UPD4] = TAIKO_A_CDC_VBAT_GAIN_UPD4__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_RX_EAR_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_RX_EAR_GAIN] = TAIKO_A_RX_EAR_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_RX_HPH_L_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_RX_HPH_L_GAIN] = TAIKO_A_RX_HPH_L_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_RX_HPH_R_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_RX_HPH_R_GAIN] = TAIKO_A_RX_HPH_R_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_RX_LINE_1_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_RX_LINE_1_GAIN] = TAIKO_A_RX_LINE_1_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_RX_LINE_2_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_RX_LINE_2_GAIN] = TAIKO_A_RX_LINE_2_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_RX_LINE_3_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_RX_LINE_3_GAIN] = TAIKO_A_RX_LINE_3_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_RX_LINE_4_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_RX_LINE_4_GAIN] = TAIKO_A_RX_LINE_4_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_SPKR_DRV_GAIN] = 1,
/root/machinex/sound/soc/codecs/wcd9320-tables.c:	[TAIKO_A_SPKR_DRV_GAIN] = TAIKO_A_SPKR_DRV_GAIN__POR,
/root/machinex/sound/soc/codecs/wcd9335.c:		0, -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:		0, -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:		0, -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:		0, -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:		0, -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:		0, -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:		0, -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:		0, -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			  0, -84, 40, digital_gain), /* -84dB min - 40dB max */
/root/machinex/sound/soc/codecs/wcd9335.c:			  0, -84, 40, digital_gain), /* -84dB min - 40dB max */
/root/machinex/sound/soc/codecs/wcd9335.c:			  0, -84, 40, digital_gain), /* -84dB min - 40dB max */
/root/machinex/sound/soc/codecs/wcd9335.c:			  0, -84, 40, digital_gain), /* -84dB min - 40dB max */
/root/machinex/sound/soc/codecs/wcd9335.c:			  0, -84, 40, digital_gain), /* -84dB min - 40dB max */
/root/machinex/sound/soc/codecs/wcd9335.c:			  0, -84, 40, digital_gain), /* -84dB min - 40dB max */
/root/machinex/sound/soc/codecs/wcd9335.c:			  0, -84, 40, digital_gain), /* -84dB min - 40dB max */
/root/machinex/sound/soc/codecs/wcd9335.c:			  0, -84, 40, digital_gain), /* -84dB min - 40dB max */
/root/machinex/sound/soc/codecs/wcd9335.c:			  0, -84, 40, digital_gain), /* -84dB min - 40dB max */
/root/machinex/sound/soc/codecs/wcd9335.c:		0, -84, 40, digital_gain), /* -84dB min - 40dB max */
/root/machinex/sound/soc/codecs/wcd9335.c:			3, 16, 1, line_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			3, 16, 1, line_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			  40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			  40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			  40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			  40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			  40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			  40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			  40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			  40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			     4, 0, NULL, 0, tasha_codec_set_iir_gain,
/root/machinex/sound/soc/codecs/wcd9335.c:			     4, 0, NULL, 0, tasha_codec_set_iir_gain,
/root/machinex/sound/soc/codecs/wcd9335.c:					  -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:					  -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:					  -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:					  -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:					  -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:					  -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:					  -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:					  -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:					  -84, 40, digital_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:		AANC_FF_GAIN_ADAPTIVE, 0x4, WCD9335_REG_BITS, 0
/root/machinex/sound/soc/codecs/wcd9335.c:		AANC_FFGAIN_ADAPTIVE_EN, 0x8, WCD9335_REG_BITS, 0
/root/machinex/sound/soc/codecs/wcd9335.c:		AANC_GAIN_CONTROL, 0xFF, WCD9335_REG_BITS, 0
/root/machinex/sound/soc/codecs/wcd9335.c:			analog_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			analog_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			analog_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			analog_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			analog_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			analog_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:		/* apply gain after int clk is enabled */
/root/machinex/sound/soc/codecs/wcd9335.c:			ARRAY_SIZE(tasha_analog_gain_controls));
/root/machinex/sound/soc/codecs/wcd9335.c:	__ATTR(headphone_gain, 0664,
/root/machinex/sound/soc/codecs/wcd9335.c:	__ATTR(headphone_pa_gain, 0664,
/root/machinex/sound/soc/codecs/wcd9335.c:	__ATTR(mic_gain, 0664,
/root/machinex/sound/soc/codecs/wcd9335.c:	__ATTR(speaker_gain, 0664,
/root/machinex/sound/soc/codecs/wcd9335.c:	dev_dbg(codec->dev, "%s: ear_pa_gain = 0x%x\n", __func__,
/root/machinex/sound/soc/codecs/wcd9335.c:		dev_err(codec->dev, "%s: No gain register avail for %s\n",
/root/machinex/sound/soc/codecs/wcd9335.c:		ear_pa_gain);
/root/machinex/sound/soc/codecs/wcd9335.c:	ear_pa_gain = (ear_pa_gain & 0x70) >> 4;
/root/machinex/sound/soc/codecs/wcd9335.c:	ear_pa_gain = snd_soc_read(codec, WCD9335_ANA_EAR);
/root/machinex/sound/soc/codecs/wcd9335.c:	ear_pa_gain =  ucontrol->value.integer.value[0] << 4;
/root/machinex/sound/soc/codecs/wcd9335.c:EXPORT_SYMBOL(tasha_set_spkr_gain_offset);
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX0_RX_VOL_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX0_RX_VOL_MIX_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX1_RX_VOL_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX1_RX_VOL_MIX_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX2_RX_VOL_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX2_RX_VOL_MIX_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX3_RX_VOL_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX3_RX_VOL_MIX_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX4_RX_VOL_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX4_RX_VOL_MIX_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX5_RX_VOL_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX5_RX_VOL_MIX_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX6_RX_VOL_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX6_RX_VOL_MIX_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		    (gain_reg == WCD9335_CDC_RX7_RX_VOL_CTL ||
/root/machinex/sound/soc/codecs/wcd9335.c:		    (gain_reg == WCD9335_CDC_RX7_RX_VOL_CTL ||
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX7_RX_VOL_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		    (gain_reg == WCD9335_CDC_RX7_RX_VOL_MIX_CTL ||
/root/machinex/sound/soc/codecs/wcd9335.c:		    (gain_reg == WCD9335_CDC_RX7_RX_VOL_MIX_CTL ||
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX7_RX_VOL_MIX_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		     gain_reg == WCD9335_CDC_RX8_RX_VOL_CTL)) {
/root/machinex/sound/soc/codecs/wcd9335.c:		     gain_reg == WCD9335_CDC_RX8_RX_VOL_CTL)) {
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX8_RX_VOL_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c:		     gain_reg == WCD9335_CDC_RX8_RX_VOL_MIX_CTL)) {
/root/machinex/sound/soc/codecs/wcd9335.c:		     gain_reg == WCD9335_CDC_RX8_RX_VOL_MIX_CTL)) {
/root/machinex/sound/soc/codecs/wcd9335.c:		gain_reg = WCD9335_CDC_RX8_RX_VOL_MIX_CTL;
/root/machinex/sound/soc/codecs/wcd9335.c: * gain with the given offset value.
/root/machinex/sound/soc/codecs/wcd9335.c:		&headphone_gain_attribute.attr,
/root/machinex/sound/soc/codecs/wcd9335.c:		headphone_gain_show,
/root/machinex/sound/soc/codecs/wcd9335.c:		headphone_gain_store);
/root/machinex/sound/soc/codecs/wcd9335.c:		&headphone_pa_gain_attribute.attr,
/root/machinex/sound/soc/codecs/wcd9335.c:		headphone_pa_gain_show,
/root/machinex/sound/soc/codecs/wcd9335.c:		headphone_pa_gain_store);
/root/machinex/sound/soc/codecs/wcd9335.c:		hph_l_gain & 0x1F, hph_r_gain & 0x1F);
/root/machinex/sound/soc/codecs/wcd9335.c:		if ((tasha->spkr_gain_offset == RX_GAIN_OFFSET_M1P5_DB) &&
/root/machinex/sound/soc/codecs/wcd9335.c:		if ((tasha->spkr_gain_offset == RX_GAIN_OFFSET_M1P5_DB) &&
/root/machinex/sound/soc/codecs/wcd9335.c:		if ((tasha->spkr_gain_offset == RX_GAIN_OFFSET_M1P5_DB) &&
/root/machinex/sound/soc/codecs/wcd9335.c:		if ((tasha->spkr_gain_offset == RX_GAIN_OFFSET_M1P5_DB) &&
/root/machinex/sound/soc/codecs/wcd9335.c:	if (volume_value > 255)
/root/machinex/sound/soc/codecs/wcd9335.c:	int hph_l_gain;
/root/machinex/sound/soc/codecs/wcd9335.c:	int hph_r_gain;
/root/machinex/sound/soc/codecs/wcd9335.c:	int spkr_gain_offset;
/root/machinex/sound/soc/codecs/wcd9335.c:int tasha_set_spkr_gain_offset(struct snd_soc_codec *codec, int offset)
/root/machinex/sound/soc/codecs/wcd9335.c:	int volume_value;
/root/machinex/sound/soc/codecs/wcd9335.c:	int zdet_gain_mul_fact;
/root/machinex/sound/soc/codecs/wcd9335.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:		line_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			line_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:			line_gain),
/root/machinex/sound/soc/codecs/wcd9335.c:	l_val = (hph_l_en & 0xC0) | 0x20 | gain;
/root/machinex/sound/soc/codecs/wcd9335.c:		&mic_gain_attribute.attr,
/root/machinex/sound/soc/codecs/wcd9335.c:		mic_gain_show,
/root/machinex/sound/soc/codecs/wcd9335.c:		mic_gain_store);
/root/machinex/sound/soc/codecs/wcd9335.c: * @offset: Indicates speaker path gain offset value.
/root/machinex/sound/soc/codecs/wcd9335.c:	 * PA gains to be applied after PAs are enabled
/root/machinex/sound/soc/codecs/wcd9335.c:	priv->spkr_gain_offset = offset;
/root/machinex/sound/soc/codecs/wcd9335.c:	r_val = (hph_r_en & 0xC0) | 0x20 | gain;
/root/machinex/sound/soc/codecs/wcd9335.c:	 * Set HPH_L & HPH_R gain source selection to REGISTER
/root/machinex/sound/soc/codecs/wcd9335.c:	snd_soc_update_bits(codec, WCD9335_ANA_EAR, 0x70, ear_pa_gain);
/root/machinex/sound/soc/codecs/wcd9335.c:		snd_soc_update_bits(codec, WCD9335_SE_LO_LO3_GAIN, 0x20,
/root/machinex/sound/soc/codecs/wcd9335.c:		snd_soc_update_bits(codec, WCD9335_SE_LO_LO4_GAIN, 0x20,
/root/machinex/sound/soc/codecs/wcd9335.c:			snd_soc_write(codec, gain_reg, val);
/root/machinex/sound/soc/codecs/wcd9335.c:			snd_soc_write(codec, gain_reg, val);
/root/machinex/sound/soc/codecs/wcd9335.c:		snd_soc_write(codec, gain_reg, val);
/root/machinex/sound/soc/codecs/wcd9335.c:		snd_soc_write(codec, gain_reg, val);
/root/machinex/sound/soc/codecs/wcd9335.c:	SOC_ENUM_EXT("EAR PA Gain", tasha_ear_pa_gain_enum,
/root/machinex/sound/soc/codecs/wcd9335.c:	SOC_ENUM_SINGLE_EXT(ARRAY_SIZE(tasha_ear_pa_gain_text),
/root/machinex/sound/soc/codecs/wcd9335.c:	SOC_SINGLE_TLV("LINEOUT3 Volume", WCD9335_SE_LO_LO3_GAIN, 0, 20, 1,
/root/machinex/sound/soc/codecs/wcd9335.c:	SOC_SINGLE_TLV("LINEOUT4 Volume", WCD9335_SE_LO_LO4_GAIN, 0, 20, 1,
/root/machinex/sound/soc/codecs/wcd9335.c:		&speaker_gain_attribute.attr,
/root/machinex/sound/soc/codecs/wcd9335.c:		speaker_gain_show,
/root/machinex/sound/soc/codecs/wcd9335.c:		speaker_gain_store);
/root/machinex/sound/soc/codecs/wcd9335.c:static const char * const tasha_ear_pa_gain_text[] = {
/root/machinex/sound/soc/codecs/wcd9335.c:static const DECLARE_TLV_DB_SCALE(analog_gain, 0, 25, 1);
/root/machinex/sound/soc/codecs/wcd9335.c:static const DECLARE_TLV_DB_SCALE(digital_gain, 0, 1, 0);
/root/machinex/sound/soc/codecs/wcd9335.c:static const DECLARE_TLV_DB_SCALE(line_gain, 0, 7, 1);
/root/machinex/sound/soc/codecs/wcd9335.c:static const struct snd_kcontrol_new tasha_analog_gain_controls[] = {
/root/machinex/sound/soc/codecs/wcd9335.c:static const struct soc_enum tasha_ear_pa_gain_enum =
/root/machinex/sound/soc/codecs/wcd9335.c:static int tasha_codec_set_iir_gain(struct snd_soc_dapm_widget *w,
/root/machinex/sound/soc/codecs/wcd9335.c:static int tasha_ear_pa_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/wcd9335.c:static int tasha_ear_pa_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/wcd9335.c:static ssize_t headphone_gain_show(struct kobject *kobj,
/root/machinex/sound/soc/codecs/wcd9335.c:static ssize_t headphone_gain_store(struct kobject *kobj,
/root/machinex/sound/soc/codecs/wcd9335.c:static ssize_t headphone_pa_gain_show(struct kobject *kobj,
/root/machinex/sound/soc/codecs/wcd9335.c:static ssize_t headphone_pa_gain_store(struct kobject *kobj,
/root/machinex/sound/soc/codecs/wcd9335.c:static ssize_t mic_gain_show(struct kobject *kobj,
/root/machinex/sound/soc/codecs/wcd9335.c:static ssize_t mic_gain_store(struct kobject *kobj,
/root/machinex/sound/soc/codecs/wcd9335.c:static ssize_t speaker_gain_show(struct kobject *kobj,
/root/machinex/sound/soc/codecs/wcd9335.c:static ssize_t speaker_gain_store(struct kobject *kobj,
/root/machinex/sound/soc/codecs/wcd9335.c:static struct kobj_attribute headphone_gain_attribute =
/root/machinex/sound/soc/codecs/wcd9335.c:static struct kobj_attribute headphone_pa_gain_attribute =
/root/machinex/sound/soc/codecs/wcd9335.c:static struct kobj_attribute mic_gain_attribute =
/root/machinex/sound/soc/codecs/wcd9335.c:static struct kobj_attribute speaker_gain_attribute =
/root/machinex/sound/soc/codecs/wcd9335.c:static void tasha_codec_hph_mode_gain_opt(struct snd_soc_codec *codec,
/root/machinex/sound/soc/codecs/wcd9335.c:			tasha_analog_gain_controls,
/root/machinex/sound/soc/codecs/wcd9335.c:		tasha_codec_hph_mode_gain_opt(codec, 0x10);
/root/machinex/sound/soc/codecs/wcd9335.c:		tasha_codec_hph_mode_gain_opt(codec, 0x11);
/root/machinex/sound/soc/codecs/wcd9335.c:		tasha_codec_hph_mode_gain_opt(codec, 0x11);
/root/machinex/sound/soc/codecs/wcd9335.c:		tasha_ear_pa_gain_get, tasha_ear_pa_gain_put),
/root/machinex/sound/soc/codecs/wcd9335.c:			tasha_ear_pa_gain_text);
/root/machinex/sound/soc/codecs/wcd9335.c:				    tasha->hph_l_gain);
/root/machinex/sound/soc/codecs/wcd9335.c:		tasha->hph_l_gain = hph_l_en & 0x1F;
/root/machinex/sound/soc/codecs/wcd9335.c:	tasha->hph_l_gain = input_l;
/root/machinex/sound/soc/codecs/wcd9335.c:				    tasha->hph_r_gain);
/root/machinex/sound/soc/codecs/wcd9335.c:		tasha->hph_r_gain = hph_r_en & 0x1F;
/root/machinex/sound/soc/codecs/wcd9335.c:	tasha->hph_r_gain = input_r;
/root/machinex/sound/soc/codecs/wcd9335.c:		(TASHA_REGISTER_START_OFFSET + WCD9335_CDC_ANC0_FF_A_GAIN_CTL),
/root/machinex/sound/soc/codecs/wcd9335.c: * tasha_set_spkr_gain_offset - offset the speaker path
/root/machinex/sound/soc/codecs/wcd9335.c:	tasha->spkr_gain_offset = RX_GAIN_OFFSET_0_DB;
/root/machinex/sound/soc/codecs/wcd9335.c:	u16 gain_reg;
/root/machinex/sound/soc/codecs/wcd9335.c:	u16 gain_reg;
/root/machinex/sound/soc/codecs/wcd9335.c:	u8 aux_l_gain;
/root/machinex/sound/soc/codecs/wcd9335.c:	u8 aux_r_gain;
/root/machinex/sound/soc/codecs/wcd9335.c:	u8 ear_pa_gain;
/root/machinex/sound/soc/codecs/wcd9335.c:	u8 ear_pa_gain;
/root/machinex/sound/soc/codecs/wcd9335.c:					  u8 gain)
/root/machinex/sound/soc/codecs/wcd9335.c:	u8 hph_l_gain = snd_soc_read(sound_control_codec_ptr, WCD9335_HPH_L_EN);
/root/machinex/sound/soc/codecs/wcd9335.c:	u8 hph_r_gain = snd_soc_read(sound_control_codec_ptr, WCD9335_HPH_R_EN);
/root/machinex/sound/soc/codecs/wcd9335.c:	ucontrol->value.integer.value[0] = ear_pa_gain;
/root/machinex/sound/soc/codecs/wcd9335.c:			val = snd_soc_read(codec, gain_reg);
/root/machinex/sound/soc/codecs/wcd9335.c:			val = snd_soc_read(codec, gain_reg);
/root/machinex/sound/soc/codecs/wcd9335.c:		val = snd_soc_read(codec, gain_reg);
/root/machinex/sound/soc/codecs/wcd9335.c:		val = snd_soc_read(codec, gain_reg);
/root/machinex/sound/soc/codecs/wcd9335.c:	value = (value & 0x00FF) | (u16)(volume_value << 8);
/root/machinex/sound/soc/codecs/wcd9335.c:		volume_value = 255;
/root/machinex/sound/soc/codecs/wcd9335.c:	volume_value = 2 * input;
/root/machinex/sound/soc/codecs/wcd9335.c:				WCD9335_CDC_SIDETONE_IIR0_IIR_GAIN_B1_CTL,
/root/machinex/sound/soc/codecs/wcd9335.c:				WCD9335_CDC_SIDETONE_IIR0_IIR_GAIN_B1_CTL));
/root/machinex/sound/soc/codecs/wcd9335.c:			  WCD9335_CDC_SIDETONE_IIR0_IIR_GAIN_B1_CTL, 0, -84,
/root/machinex/sound/soc/codecs/wcd9335.c:				WCD9335_CDC_SIDETONE_IIR0_IIR_GAIN_B2_CTL,
/root/machinex/sound/soc/codecs/wcd9335.c:				WCD9335_CDC_SIDETONE_IIR0_IIR_GAIN_B2_CTL));
/root/machinex/sound/soc/codecs/wcd9335.c:			  WCD9335_CDC_SIDETONE_IIR0_IIR_GAIN_B2_CTL, 0, -84,
/root/machinex/sound/soc/codecs/wcd9335.c:				WCD9335_CDC_SIDETONE_IIR0_IIR_GAIN_B3_CTL,
/root/machinex/sound/soc/codecs/wcd9335.c:				WCD9335_CDC_SIDETONE_IIR0_IIR_GAIN_B3_CTL));
/root/machinex/sound/soc/codecs/wcd9335.c:			  WCD9335_CDC_SIDETONE_IIR0_IIR_GAIN_B3_CTL, 0, -84,
/root/machinex/sound/soc/codecs/wcd9335.c:				WCD9335_CDC_SIDETONE_IIR0_IIR_GAIN_B4_CTL,
/root/machinex/sound/soc/codecs/wcd9335.c:				WCD9335_CDC_SIDETONE_IIR0_IIR_GAIN_B4_CTL));
/root/machinex/sound/soc/codecs/wcd9335.c:			  WCD9335_CDC_SIDETONE_IIR0_IIR_GAIN_B4_CTL, 0, -84,
/root/machinex/sound/soc/codecs/wcd9335.c:				WCD9335_CDC_SIDETONE_IIR1_IIR_GAIN_B1_CTL,
/root/machinex/sound/soc/codecs/wcd9335.c:				WCD9335_CDC_SIDETONE_IIR1_IIR_GAIN_B1_CTL));
/root/machinex/sound/soc/codecs/wcd9335.c:			  WCD9335_CDC_SIDETONE_IIR1_IIR_GAIN_B1_CTL, 0, -84,
/root/machinex/sound/soc/codecs/wcd9335.c:				WCD9335_CDC_SIDETONE_IIR1_IIR_GAIN_B2_CTL,
/root/machinex/sound/soc/codecs/wcd9335.c:				WCD9335_CDC_SIDETONE_IIR1_IIR_GAIN_B2_CTL));
/root/machinex/sound/soc/codecs/wcd9335.c:			  WCD9335_CDC_SIDETONE_IIR1_IIR_GAIN_B2_CTL, 0, -84,
/root/machinex/sound/soc/codecs/wcd9335.c:				WCD9335_CDC_SIDETONE_IIR1_IIR_GAIN_B3_CTL,
/root/machinex/sound/soc/codecs/wcd9335.c:				WCD9335_CDC_SIDETONE_IIR1_IIR_GAIN_B3_CTL));
/root/machinex/sound/soc/codecs/wcd9335.c:			  WCD9335_CDC_SIDETONE_IIR1_IIR_GAIN_B3_CTL, 0, -84,
/root/machinex/sound/soc/codecs/wcd9335.c:			  WCD9335_CDC_SIDETONE_IIR1_IIR_GAIN_B4_CTL, 0, -84,
/root/machinex/sound/soc/codecs/wcd9xxx-mbhc.c:	case MBHC_BTN_DET_GAIN:
/root/machinex/sound/soc/codecs/wcd9xxx-mbhc.c:			    gain[idx] << 3);
/root/machinex/sound/soc/codecs/wcd9xxx-mbhc.c:	gain = wcd9xxx_mbhc_cal_btn_det_mp(btn_det, MBHC_BTN_DET_GAIN);
/root/machinex/sound/soc/codecs/wcd9xxx-mbhc.c:					 * if switch is toggled, check again,
/root/machinex/sound/soc/codecs/wcd9xxx-mbhc.c:	 * MBHC block cancel and sync this work so override is off again
/root/machinex/sound/soc/codecs/wcd9xxx-mbhc.c:	 * switch is off by time now and shouldn't be turn on again from here
/root/machinex/sound/soc/codecs/wcd9xxx-mbhc.c:	u8 *gain;
/root/machinex/sound/soc/codecs/wcd9xxx-mbhc.h:	MBHC_BTN_DET_GAIN
/root/machinex/sound/soc/codecs/wcd9xxx-mbhc.h:	u8 _gain[TAIKO_NUM_CLK_FREQS];
/root/machinex/sound/soc/codecs/wl1273.c:	r = wl1273->core->set_volume(wl1273->core,
/root/machinex/sound/soc/codecs/wl1273.c:		       snd_wl1273_fm_volume_get, snd_wl1273_fm_volume_put),
/root/machinex/sound/soc/codecs/wl1273.c:	SOC_SINGLE_EXT("Volume", 0, 0, WL1273_MAX_VOLUME, 0,
/root/machinex/sound/soc/codecs/wl1273.c:static int snd_wl1273_fm_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/wl1273.c:static int snd_wl1273_fm_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/codecs/wl1273.c:	ucontrol->value.integer.value[0] = wl1273->core->volume;
/root/machinex/sound/soc/codecs/wm2000.h:#define WM2000_MODE_CAT_GAIN_ENABLE 0x10
/root/machinex/sound/soc/codecs/wm2000.h:#define WM2000_REG_CAT_GAIN_0       0x8ffa
/root/machinex/sound/soc/codecs/wm2000.h:#define WM2000_STATUS_CAT_GAIN_COMPLETE         0x10
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_ADC_DIGITAL_VOLUME_1L:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_ADC_DIGITAL_VOLUME_1R:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_ADC_DIGITAL_VOLUME_2L:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_ADC_DIGITAL_VOLUME_2R:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_ADC_DIGITAL_VOLUME_3L:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_ADC_DIGITAL_VOLUME_3R:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX1MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX1MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX1MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX1MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX2MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX2MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX2MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX2MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX3MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX3MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX3MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX3MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX4MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX4MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX4MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX4MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX5MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX5MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX5MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX5MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX6MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX6MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX6MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_AIF1TX6MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DAC_DIGITAL_VOLUME_1L:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DAC_DIGITAL_VOLUME_1R:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DAC_DIGITAL_VOLUME_2L:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DAC_DIGITAL_VOLUME_2R:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DAC_VOLUME_LIMIT_1L:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DAC_VOLUME_LIMIT_1R:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DAC_VOLUME_LIMIT_2L:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DAC_VOLUME_LIMIT_2R:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP1LMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP1LMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP1LMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP1LMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP1RMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP1RMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP1RMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP1RMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP2LMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP2LMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP2LMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP2LMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP2RMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP2RMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP2RMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_DSP2RMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_EQLMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_EQLMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_EQLMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_EQLMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_EQRMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_EQRMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_EQRMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_EQRMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_INPUT_VOLUME_RAMP:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_LHPF1MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_LHPF1MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_LHPF1MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_LHPF1MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_LHPF2MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_LHPF2MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_LHPF2MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_LHPF2MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT1LMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT1LMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT1LMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT1LMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT1RMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT1RMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT1RMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT1RMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT2LMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT2LMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT2LMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT2LMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT2RMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT2RMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT2RMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUT2RMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm2200.c:	case WM2200_OUTPUT_VOLUME_RAMP:
/root/machinex/sound/soc/codecs/wm2200.c:SOC_DOUBLE_R("IN1 Digital Switch", WM2200_ADC_DIGITAL_VOLUME_1L,
/root/machinex/sound/soc/codecs/wm2200.c:SOC_DOUBLE_R("IN2 Digital Switch", WM2200_ADC_DIGITAL_VOLUME_2L,
/root/machinex/sound/soc/codecs/wm2200.c:SOC_DOUBLE_R("IN3 Digital Switch", WM2200_ADC_DIGITAL_VOLUME_3L,
/root/machinex/sound/soc/codecs/wm2200.c:SOC_DOUBLE_R("OUT1 Digital Switch", WM2200_DAC_DIGITAL_VOLUME_1L,
/root/machinex/sound/soc/codecs/wm2200.c:SOC_DOUBLE_R("OUT2 Digital Switch", WM2200_DAC_DIGITAL_VOLUME_2L,
/root/machinex/sound/soc/codecs/wm2200.c:SOC_DOUBLE_R_TLV("IN1 Digital Volume", WM2200_ADC_DIGITAL_VOLUME_1L,
/root/machinex/sound/soc/codecs/wm2200.c:SOC_DOUBLE_R_TLV("IN2 Digital Volume", WM2200_ADC_DIGITAL_VOLUME_2L,
/root/machinex/sound/soc/codecs/wm2200.c:SOC_DOUBLE_R_TLV("IN3 Digital Volume", WM2200_ADC_DIGITAL_VOLUME_3L,
/root/machinex/sound/soc/codecs/wm2200.c:SOC_DOUBLE_R_TLV("OUT1 Digital Volume", WM2200_DAC_DIGITAL_VOLUME_1L,
/root/machinex/sound/soc/codecs/wm2200.c:SOC_DOUBLE_R_TLV("OUT1 Volume", WM2200_DAC_VOLUME_LIMIT_1L,
/root/machinex/sound/soc/codecs/wm2200.c:SOC_DOUBLE_R_TLV("OUT2 Digital Volume", WM2200_DAC_DIGITAL_VOLUME_2L,
/root/machinex/sound/soc/codecs/wm2200.c:SOC_SINGLE("OUT1 High Performance Switch", WM2200_DAC_DIGITAL_VOLUME_1L,
/root/machinex/sound/soc/codecs/wm2200.c:SOC_SINGLE("OUT2 High Performance Switch", WM2200_DAC_DIGITAL_VOLUME_2L,
/root/machinex/sound/soc/codecs/wm2200.c:	WM2200_ADC_DIGITAL_VOLUME_1L,
/root/machinex/sound/soc/codecs/wm2200.c:	WM2200_ADC_DIGITAL_VOLUME_1R,
/root/machinex/sound/soc/codecs/wm2200.c:		 WM2200_ADC_DIGITAL_VOLUME_1R, WM2200_IN1L_DIG_VOL_SHIFT,
/root/machinex/sound/soc/codecs/wm2200.c:	     WM2200_ADC_DIGITAL_VOLUME_1R, WM2200_IN1L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm2200.c:	WM2200_ADC_DIGITAL_VOLUME_2L,
/root/machinex/sound/soc/codecs/wm2200.c:	WM2200_ADC_DIGITAL_VOLUME_2R,
/root/machinex/sound/soc/codecs/wm2200.c:		 WM2200_ADC_DIGITAL_VOLUME_2R, WM2200_IN2L_DIG_VOL_SHIFT,
/root/machinex/sound/soc/codecs/wm2200.c:	     WM2200_ADC_DIGITAL_VOLUME_2R, WM2200_IN2L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm2200.c:	WM2200_ADC_DIGITAL_VOLUME_3L,
/root/machinex/sound/soc/codecs/wm2200.c:	WM2200_ADC_DIGITAL_VOLUME_3R,
/root/machinex/sound/soc/codecs/wm2200.c:		 WM2200_ADC_DIGITAL_VOLUME_3R, WM2200_IN3L_DIG_VOL_SHIFT,
/root/machinex/sound/soc/codecs/wm2200.c:	     WM2200_ADC_DIGITAL_VOLUME_3R, WM2200_IN3L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm2200.c:	WM2200_DAC_DIGITAL_VOLUME_1L,
/root/machinex/sound/soc/codecs/wm2200.c:	WM2200_DAC_DIGITAL_VOLUME_1R,
/root/machinex/sound/soc/codecs/wm2200.c:	     WM2200_DAC_DIGITAL_VOLUME_1R, WM2200_OUT1L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm2200.c:		 WM2200_DAC_DIGITAL_VOLUME_1R, WM2200_OUT1L_VOL_SHIFT, 0x9f, 0,
/root/machinex/sound/soc/codecs/wm2200.c:	WM2200_DAC_DIGITAL_VOLUME_2L,
/root/machinex/sound/soc/codecs/wm2200.c:	WM2200_DAC_DIGITAL_VOLUME_2R,
/root/machinex/sound/soc/codecs/wm2200.c:	     WM2200_DAC_DIGITAL_VOLUME_2R, WM2200_OUT2L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm2200.c:		 WM2200_DAC_DIGITAL_VOLUME_2R, WM2200_OUT2L_VOL_SHIFT, 0x9f, 0,
/root/machinex/sound/soc/codecs/wm2200.c:		 WM2200_DAC_VOLUME_LIMIT_1R, WM2200_OUT1L_PGA_VOL_SHIFT,
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_ADC_DIGITAL_VOLUME_1L            0x30C
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_ADC_DIGITAL_VOLUME_1R            0x30D
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_ADC_DIGITAL_VOLUME_2L            0x30E
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_ADC_DIGITAL_VOLUME_2R            0x30F
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_ADC_DIGITAL_VOLUME_3L            0x310
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_ADC_DIGITAL_VOLUME_3R            0x311
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX1MIX_INPUT_1_VOLUME        0x621
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX1MIX_INPUT_2_VOLUME        0x623
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX1MIX_INPUT_3_VOLUME        0x625
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX1MIX_INPUT_4_VOLUME        0x627
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX2MIX_INPUT_1_VOLUME        0x629
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX2MIX_INPUT_2_VOLUME        0x62B
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX2MIX_INPUT_3_VOLUME        0x62D
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX2MIX_INPUT_4_VOLUME        0x62F
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX3MIX_INPUT_1_VOLUME        0x631
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX3MIX_INPUT_2_VOLUME        0x633
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX3MIX_INPUT_3_VOLUME        0x635
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX3MIX_INPUT_4_VOLUME        0x637
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX4MIX_INPUT_1_VOLUME        0x639
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX4MIX_INPUT_2_VOLUME        0x63B
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX4MIX_INPUT_3_VOLUME        0x63D
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX4MIX_INPUT_4_VOLUME        0x63F
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX5MIX_INPUT_1_VOLUME        0x641
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX5MIX_INPUT_2_VOLUME        0x643
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX5MIX_INPUT_3_VOLUME        0x645
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX5MIX_INPUT_4_VOLUME        0x647
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX6MIX_INPUT_1_VOLUME        0x649
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX6MIX_INPUT_2_VOLUME        0x64B
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX6MIX_INPUT_3_VOLUME        0x64D
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_AIF1TX6MIX_INPUT_4_VOLUME        0x64F
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DAC_DIGITAL_VOLUME_1L            0x40B
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DAC_DIGITAL_VOLUME_1R            0x40C
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DAC_DIGITAL_VOLUME_2L            0x40D
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DAC_DIGITAL_VOLUME_2R            0x40E
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DAC_VOLUME_LIMIT_1L              0x401
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DAC_VOLUME_LIMIT_1R              0x402
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DAC_VOLUME_LIMIT_2L              0x403
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DAC_VOLUME_LIMIT_2R              0x404
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP1LMIX_INPUT_1_VOLUME          0x671
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP1LMIX_INPUT_2_VOLUME          0x673
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP1LMIX_INPUT_3_VOLUME          0x675
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP1LMIX_INPUT_4_VOLUME          0x677
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP1RMIX_INPUT_1_VOLUME          0x679
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP1RMIX_INPUT_2_VOLUME          0x67B
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP1RMIX_INPUT_3_VOLUME          0x67D
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP1RMIX_INPUT_4_VOLUME          0x67F
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP2LMIX_INPUT_1_VOLUME          0x687
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP2LMIX_INPUT_2_VOLUME          0x689
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP2LMIX_INPUT_3_VOLUME          0x68B
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP2LMIX_INPUT_4_VOLUME          0x68D
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP2RMIX_INPUT_1_VOLUME          0x68F
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP2RMIX_INPUT_2_VOLUME          0x691
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP2RMIX_INPUT_3_VOLUME          0x693
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_DSP2RMIX_INPUT_4_VOLUME          0x695
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B1_GAIN_MASK                 0xF800  /* EQL_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B1_GAIN_SHIFT                    11  /* EQL_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B1_GAIN_WIDTH                     5  /* EQL_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B2_GAIN_MASK                 0x07C0  /* EQL_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B2_GAIN_SHIFT                     6  /* EQL_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B2_GAIN_WIDTH                     5  /* EQL_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B3_GAIN_MASK                 0x003E  /* EQL_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B3_GAIN_SHIFT                     1  /* EQL_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B3_GAIN_WIDTH                     5  /* EQL_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B4_GAIN_MASK                 0xF800  /* EQL_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B4_GAIN_SHIFT                    11  /* EQL_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B4_GAIN_WIDTH                     5  /* EQL_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B5_GAIN_MASK                 0x07C0  /* EQL_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B5_GAIN_SHIFT                     6  /* EQL_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQL_B5_GAIN_WIDTH                     5  /* EQL_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQLMIX_INPUT_1_VOLUME            0x651
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQLMIX_INPUT_2_VOLUME            0x653
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQLMIX_INPUT_3_VOLUME            0x655
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQLMIX_INPUT_4_VOLUME            0x657
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B1_GAIN_MASK                 0xF800  /* EQR_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B1_GAIN_SHIFT                    11  /* EQR_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B1_GAIN_WIDTH                     5  /* EQR_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B2_GAIN_MASK                 0x07C0  /* EQR_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B2_GAIN_SHIFT                     6  /* EQR_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B2_GAIN_WIDTH                     5  /* EQR_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B3_GAIN_MASK                 0x003E  /* EQR_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B3_GAIN_SHIFT                     1  /* EQR_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B3_GAIN_WIDTH                     5  /* EQR_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B4_GAIN_MASK                 0xF800  /* EQR_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B4_GAIN_SHIFT                    11  /* EQR_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B4_GAIN_WIDTH                     5  /* EQR_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B5_GAIN_MASK                 0x07C0  /* EQR_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B5_GAIN_SHIFT                     6  /* EQR_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQR_B5_GAIN_WIDTH                     5  /* EQR_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQRMIX_INPUT_1_VOLUME            0x659
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQRMIX_INPUT_2_VOLUME            0x65B
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQRMIX_INPUT_3_VOLUME            0x65D
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_EQRMIX_INPUT_4_VOLUME            0x65F
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_INPUT_VOLUME_RAMP                0x30B
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_LHPF1MIX_INPUT_1_VOLUME          0x661
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_LHPF1MIX_INPUT_2_VOLUME          0x663
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_LHPF1MIX_INPUT_3_VOLUME          0x665
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_LHPF1MIX_INPUT_4_VOLUME          0x667
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_LHPF2MIX_INPUT_1_VOLUME          0x669
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_LHPF2MIX_INPUT_2_VOLUME          0x66B
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_LHPF2MIX_INPUT_3_VOLUME          0x66D
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_LHPF2MIX_INPUT_4_VOLUME          0x66F
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT1LMIX_INPUT_1_VOLUME          0x601
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT1LMIX_INPUT_2_VOLUME          0x603
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT1LMIX_INPUT_3_VOLUME          0x605
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT1LMIX_INPUT_4_VOLUME          0x607
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT1RMIX_INPUT_1_VOLUME          0x609
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT1RMIX_INPUT_2_VOLUME          0x60B
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT1RMIX_INPUT_3_VOLUME          0x60D
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT1RMIX_INPUT_4_VOLUME          0x60F
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT2LMIX_INPUT_1_VOLUME          0x611
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT2LMIX_INPUT_2_VOLUME          0x613
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT2LMIX_INPUT_3_VOLUME          0x615
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT2LMIX_INPUT_4_VOLUME          0x617
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT2RMIX_INPUT_1_VOLUME          0x619
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT2RMIX_INPUT_2_VOLUME          0x61B
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT2RMIX_INPUT_3_VOLUME          0x61D
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUT2RMIX_INPUT_4_VOLUME          0x61F
/root/machinex/sound/soc/codecs/wm2200.h:#define WM2200_OUTPUT_VOLUME_RAMP               0x40A
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R("HPOUT1 Digital Switch", WM5100_DAC_DIGITAL_VOLUME_1L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R("HPOUT2 Digital Switch", WM5100_DAC_DIGITAL_VOLUME_2L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R("HPOUT3 Digital Switch", WM5100_DAC_DIGITAL_VOLUME_3L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R("IN1 Switch", WM5100_ADC_DIGITAL_VOLUME_1L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R("IN2 Switch", WM5100_ADC_DIGITAL_VOLUME_2L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R("IN3 Switch", WM5100_ADC_DIGITAL_VOLUME_3L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R("IN4 Switch", WM5100_ADC_DIGITAL_VOLUME_4L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R("SPKDAT1 Digital Switch", WM5100_DAC_DIGITAL_VOLUME_5L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R("SPKDAT2 Digital Switch", WM5100_DAC_DIGITAL_VOLUME_6L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R("SPKOUT Digital Switch", WM5100_DAC_DIGITAL_VOLUME_4L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R_TLV("HPOUT1 Digital Volume", WM5100_DAC_DIGITAL_VOLUME_1L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R_TLV("HPOUT1 Volume", WM5100_OUT_VOLUME_1L, WM5100_OUT_VOLUME_1R,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R_TLV("HPOUT2 Digital Volume", WM5100_DAC_DIGITAL_VOLUME_2L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R_TLV("HPOUT2 Volume", WM5100_OUT_VOLUME_2L, WM5100_OUT_VOLUME_2R,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R_TLV("HPOUT3 Digital Volume", WM5100_DAC_DIGITAL_VOLUME_3L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R_TLV("HPOUT3 Volume", WM5100_OUT_VOLUME_3L, WM5100_OUT_VOLUME_3R,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R_TLV("IN1 Digital Volume", WM5100_ADC_DIGITAL_VOLUME_1L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R_TLV("IN2 Digital Volume", WM5100_ADC_DIGITAL_VOLUME_2L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R_TLV("IN3 Digital Volume", WM5100_ADC_DIGITAL_VOLUME_3L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R_TLV("IN4 Digital Volume", WM5100_ADC_DIGITAL_VOLUME_4L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R_TLV("SPKDAT1 Digital Volume", WM5100_DAC_DIGITAL_VOLUME_5L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R_TLV("SPKDAT2 Digital Volume", WM5100_DAC_DIGITAL_VOLUME_6L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_DOUBLE_R_TLV("SPKOUT Digital Volume", WM5100_DAC_DIGITAL_VOLUME_4L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE("HPOUT1 High Performance Switch", WM5100_OUT_VOLUME_1L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE("HPOUT2 High Performance Switch", WM5100_OUT_VOLUME_2L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE("HPOUT3 High Performance Switch", WM5100_OUT_VOLUME_3L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE("SPKDAT1 High Performance Switch", WM5100_DAC_VOLUME_LIMIT_5L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE("SPKDAT2 High Performance Switch", WM5100_DAC_VOLUME_LIMIT_6L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE("SPKOUT High Performance Switch", WM5100_OUT_VOLUME_4L,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ1 Band 1 Volume", WM5100_EQ1_1, WM5100_EQ1_B1_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ1 Band 2 Volume", WM5100_EQ1_1, WM5100_EQ1_B2_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ1 Band 3 Volume", WM5100_EQ1_1, WM5100_EQ1_B3_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ1 Band 4 Volume", WM5100_EQ1_2, WM5100_EQ1_B4_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ1 Band 5 Volume", WM5100_EQ1_2, WM5100_EQ1_B5_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ2 Band 1 Volume", WM5100_EQ2_1, WM5100_EQ2_B1_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ2 Band 2 Volume", WM5100_EQ2_1, WM5100_EQ2_B2_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ2 Band 3 Volume", WM5100_EQ2_1, WM5100_EQ2_B3_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ2 Band 4 Volume", WM5100_EQ2_2, WM5100_EQ2_B4_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ2 Band 5 Volume", WM5100_EQ2_2, WM5100_EQ2_B5_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ3 Band 1 Volume", WM5100_EQ1_1, WM5100_EQ3_B1_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ3 Band 2 Volume", WM5100_EQ3_1, WM5100_EQ3_B2_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ3 Band 3 Volume", WM5100_EQ3_1, WM5100_EQ3_B3_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ3 Band 4 Volume", WM5100_EQ3_2, WM5100_EQ3_B4_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ3 Band 5 Volume", WM5100_EQ3_2, WM5100_EQ3_B5_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ4 Band 1 Volume", WM5100_EQ4_1, WM5100_EQ4_B1_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ4 Band 2 Volume", WM5100_EQ4_1, WM5100_EQ4_B2_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ4 Band 3 Volume", WM5100_EQ4_1, WM5100_EQ4_B3_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ4 Band 4 Volume", WM5100_EQ4_2, WM5100_EQ4_B4_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:SOC_SINGLE_TLV("EQ4 Band 5 Volume", WM5100_EQ4_2, WM5100_EQ4_B5_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_ADC_DIGITAL_VOLUME_1L,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_ADC_DIGITAL_VOLUME_1R,
/root/machinex/sound/soc/codecs/wm5100.c:	     WM5100_ADC_DIGITAL_VOLUME_1R, WM5100_IN1L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm5100.c:		 WM5100_ADC_DIGITAL_VOLUME_1R, WM5100_IN1L_VOL_SHIFT, 191,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_ADC_DIGITAL_VOLUME_2L,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_ADC_DIGITAL_VOLUME_2R,
/root/machinex/sound/soc/codecs/wm5100.c:	     WM5100_ADC_DIGITAL_VOLUME_2R, WM5100_IN2L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm5100.c:		 WM5100_ADC_DIGITAL_VOLUME_2R, WM5100_IN2L_VOL_SHIFT, 191,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_ADC_DIGITAL_VOLUME_3L,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_ADC_DIGITAL_VOLUME_3R,
/root/machinex/sound/soc/codecs/wm5100.c:	     WM5100_ADC_DIGITAL_VOLUME_3R, WM5100_IN3L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm5100.c:		 WM5100_ADC_DIGITAL_VOLUME_3R, WM5100_IN3L_VOL_SHIFT, 191,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_ADC_DIGITAL_VOLUME_4L,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_ADC_DIGITAL_VOLUME_4R,
/root/machinex/sound/soc/codecs/wm5100.c:	     WM5100_ADC_DIGITAL_VOLUME_4R, WM5100_IN4L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm5100.c:		 WM5100_ADC_DIGITAL_VOLUME_4R, WM5100_IN4L_VOL_SHIFT, 191,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_DAC_DIGITAL_VOLUME_1L,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_DAC_DIGITAL_VOLUME_1R,
/root/machinex/sound/soc/codecs/wm5100.c:	     WM5100_DAC_DIGITAL_VOLUME_1R, WM5100_OUT1L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm5100.c:		 WM5100_DAC_DIGITAL_VOLUME_1R, WM5100_OUT1L_VOL_SHIFT, 159, 0,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_DAC_DIGITAL_VOLUME_2L,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_DAC_DIGITAL_VOLUME_2R,
/root/machinex/sound/soc/codecs/wm5100.c:	     WM5100_DAC_DIGITAL_VOLUME_2R, WM5100_OUT2L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm5100.c:		 WM5100_DAC_DIGITAL_VOLUME_2R, WM5100_OUT2L_VOL_SHIFT, 159, 0,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_DAC_DIGITAL_VOLUME_3L,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_DAC_DIGITAL_VOLUME_3R,
/root/machinex/sound/soc/codecs/wm5100.c:	     WM5100_DAC_DIGITAL_VOLUME_3R, WM5100_OUT3L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm5100.c:		 WM5100_DAC_DIGITAL_VOLUME_3R, WM5100_OUT3L_VOL_SHIFT, 159, 0,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_DAC_DIGITAL_VOLUME_4L,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_DAC_DIGITAL_VOLUME_4R,
/root/machinex/sound/soc/codecs/wm5100.c:	     WM5100_DAC_DIGITAL_VOLUME_4R, WM5100_OUT4L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm5100.c:		 WM5100_DAC_DIGITAL_VOLUME_4R, WM5100_OUT4L_VOL_SHIFT, 159, 0,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_DAC_DIGITAL_VOLUME_5L,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_DAC_DIGITAL_VOLUME_5R,
/root/machinex/sound/soc/codecs/wm5100.c:	     WM5100_DAC_DIGITAL_VOLUME_5R, WM5100_OUT5L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm5100.c:		 WM5100_DAC_DIGITAL_VOLUME_5R, WM5100_OUT5L_VOL_SHIFT, 159, 0,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_DAC_DIGITAL_VOLUME_6L,
/root/machinex/sound/soc/codecs/wm5100.c:	WM5100_DAC_DIGITAL_VOLUME_6R,
/root/machinex/sound/soc/codecs/wm5100.c:	     WM5100_DAC_DIGITAL_VOLUME_6R, WM5100_OUT6L_MUTE_SHIFT, 1, 1),
/root/machinex/sound/soc/codecs/wm5100.c:		 WM5100_DAC_DIGITAL_VOLUME_6R, WM5100_OUT6L_VOL_SHIFT, 159, 0,
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_ADC_DIGITAL_VOLUME_1L            0x320
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_ADC_DIGITAL_VOLUME_1R            0x321
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_ADC_DIGITAL_VOLUME_2L            0x322
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_ADC_DIGITAL_VOLUME_2R            0x323
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_ADC_DIGITAL_VOLUME_3L            0x324
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_ADC_DIGITAL_VOLUME_3R            0x325
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_ADC_DIGITAL_VOLUME_4L            0x326
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_ADC_DIGITAL_VOLUME_4R            0x327
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX1MIX_INPUT_1_VOLUME        0x701
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX1MIX_INPUT_2_VOLUME        0x703
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX1MIX_INPUT_3_VOLUME        0x705
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX1MIX_INPUT_4_VOLUME        0x707
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX2MIX_INPUT_1_VOLUME        0x709
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX2MIX_INPUT_2_VOLUME        0x70B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX2MIX_INPUT_3_VOLUME        0x70D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX2MIX_INPUT_4_VOLUME        0x70F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX3MIX_INPUT_1_VOLUME        0x711
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX3MIX_INPUT_2_VOLUME        0x713
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX3MIX_INPUT_3_VOLUME        0x715
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX3MIX_INPUT_4_VOLUME        0x717
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX4MIX_INPUT_1_VOLUME        0x719
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX4MIX_INPUT_2_VOLUME        0x71B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX4MIX_INPUT_3_VOLUME        0x71D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX4MIX_INPUT_4_VOLUME        0x71F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX5MIX_INPUT_1_VOLUME        0x721
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX5MIX_INPUT_2_VOLUME        0x723
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX5MIX_INPUT_3_VOLUME        0x725
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX5MIX_INPUT_4_VOLUME        0x727
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX6MIX_INPUT_1_VOLUME        0x729
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX6MIX_INPUT_2_VOLUME        0x72B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX6MIX_INPUT_3_VOLUME        0x72D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX6MIX_INPUT_4_VOLUME        0x72F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX7MIX_INPUT_1_VOLUME        0x731
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX7MIX_INPUT_2_VOLUME        0x733
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX7MIX_INPUT_3_VOLUME        0x735
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX7MIX_INPUT_4_VOLUME        0x737
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX8MIX_INPUT_1_VOLUME        0x739
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX8MIX_INPUT_2_VOLUME        0x73B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX8MIX_INPUT_3_VOLUME        0x73D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF1TX8MIX_INPUT_4_VOLUME        0x73F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF2TX1MIX_INPUT_1_VOLUME        0x741
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF2TX1MIX_INPUT_2_VOLUME        0x743
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF2TX1MIX_INPUT_3_VOLUME        0x745
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF2TX1MIX_INPUT_4_VOLUME        0x747
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF2TX2MIX_INPUT_1_VOLUME        0x749
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF2TX2MIX_INPUT_2_VOLUME        0x74B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF2TX2MIX_INPUT_3_VOLUME        0x74D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF2TX2MIX_INPUT_4_VOLUME        0x74F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF3TX1MIX_INPUT_1_VOLUME        0x781
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF3TX1MIX_INPUT_2_VOLUME        0x783
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF3TX1MIX_INPUT_3_VOLUME        0x785
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF3TX1MIX_INPUT_4_VOLUME        0x787
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF3TX2MIX_INPUT_1_VOLUME        0x789
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF3TX2MIX_INPUT_2_VOLUME        0x78B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF3TX2MIX_INPUT_3_VOLUME        0x78D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_AIF3TX2MIX_INPUT_4_VOLUME        0x78F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_DIGITAL_VOLUME_1L            0x480
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_DIGITAL_VOLUME_1R            0x481
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_DIGITAL_VOLUME_2L            0x482
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_DIGITAL_VOLUME_2R            0x483
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_DIGITAL_VOLUME_3L            0x484
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_DIGITAL_VOLUME_3R            0x485
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_DIGITAL_VOLUME_4L            0x486
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_DIGITAL_VOLUME_4R            0x487
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_DIGITAL_VOLUME_5L            0x488
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_DIGITAL_VOLUME_5R            0x489
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_DIGITAL_VOLUME_6L            0x48A
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_DIGITAL_VOLUME_6R            0x48B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_VOLUME_LIMIT_1L              0x412
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_VOLUME_LIMIT_1R              0x413
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_VOLUME_LIMIT_2L              0x416
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_VOLUME_LIMIT_2R              0x417
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_VOLUME_LIMIT_3L              0x41A
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_VOLUME_LIMIT_3R              0x41B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_VOLUME_LIMIT_5L              0x41E
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_VOLUME_LIMIT_5R              0x41F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_VOLUME_LIMIT_6L              0x420
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DAC_VOLUME_LIMIT_6R              0x421
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC1LMIX_INPUT_1_VOLUME          0x8C1
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC1LMIX_INPUT_2_VOLUME          0x8C3
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC1LMIX_INPUT_3_VOLUME          0x8C5
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC1LMIX_INPUT_4_VOLUME          0x8C7
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC1RMIX_INPUT_1_VOLUME          0x8C9
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC1RMIX_INPUT_2_VOLUME          0x8CB
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC1RMIX_INPUT_3_VOLUME          0x8CD
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC1RMIX_INPUT_4_VOLUME          0x8CF
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC_MAXGAIN_MASK                 0x0003  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC_MAXGAIN_SHIFT                     0  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC_MAXGAIN_WIDTH                     2  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC_MINGAIN_MASK                 0x001C  /* DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC_MINGAIN_SHIFT                     2  /* DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC_MINGAIN_WIDTH                     3  /* DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC_NG_MINGAIN_MASK              0xF000  /* DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC_NG_MINGAIN_SHIFT                 12  /* DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DRC_NG_MINGAIN_WIDTH                  4  /* DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP1LMIX_INPUT_1_VOLUME          0x941
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP1LMIX_INPUT_2_VOLUME          0x943
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP1LMIX_INPUT_3_VOLUME          0x945
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP1LMIX_INPUT_4_VOLUME          0x947
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP1RMIX_INPUT_1_VOLUME          0x949
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP1RMIX_INPUT_2_VOLUME          0x94B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP1RMIX_INPUT_3_VOLUME          0x94D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP1RMIX_INPUT_4_VOLUME          0x94F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP2LMIX_INPUT_1_VOLUME          0x981
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP2LMIX_INPUT_2_VOLUME          0x983
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP2LMIX_INPUT_3_VOLUME          0x985
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP2LMIX_INPUT_4_VOLUME          0x987
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP2RMIX_INPUT_1_VOLUME          0x989
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP2RMIX_INPUT_2_VOLUME          0x98B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP2RMIX_INPUT_3_VOLUME          0x98D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP2RMIX_INPUT_4_VOLUME          0x98F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP3LMIX_INPUT_1_VOLUME          0x9C1
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP3LMIX_INPUT_2_VOLUME          0x9C3
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP3LMIX_INPUT_3_VOLUME          0x9C5
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP3LMIX_INPUT_4_VOLUME          0x9C7
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP3RMIX_INPUT_1_VOLUME          0x9C9
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP3RMIX_INPUT_2_VOLUME          0x9CB
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP3RMIX_INPUT_3_VOLUME          0x9CD
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_DSP3RMIX_INPUT_4_VOLUME          0x9CF
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B1_GAIN_MASK                 0xF800  /* EQ1_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B1_GAIN_SHIFT                    11  /* EQ1_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B1_GAIN_WIDTH                     5  /* EQ1_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B2_GAIN_MASK                 0x07C0  /* EQ1_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B2_GAIN_SHIFT                     6  /* EQ1_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B2_GAIN_WIDTH                     5  /* EQ1_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B3_GAIN_MASK                 0x003E  /* EQ1_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B3_GAIN_SHIFT                     1  /* EQ1_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B3_GAIN_WIDTH                     5  /* EQ1_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B4_GAIN_MASK                 0xF800  /* EQ1_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B4_GAIN_SHIFT                    11  /* EQ1_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B4_GAIN_WIDTH                     5  /* EQ1_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B5_GAIN_MASK                 0x07C0  /* EQ1_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B5_GAIN_SHIFT                     6  /* EQ1_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1_B5_GAIN_WIDTH                     5  /* EQ1_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1MIX_INPUT_1_VOLUME            0x881
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1MIX_INPUT_2_VOLUME            0x883
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1MIX_INPUT_3_VOLUME            0x885
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ1MIX_INPUT_4_VOLUME            0x887
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B1_GAIN_MASK                 0xF800  /* EQ2_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B1_GAIN_SHIFT                    11  /* EQ2_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B1_GAIN_WIDTH                     5  /* EQ2_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B2_GAIN_MASK                 0x07C0  /* EQ2_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B2_GAIN_SHIFT                     6  /* EQ2_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B2_GAIN_WIDTH                     5  /* EQ2_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B3_GAIN_MASK                 0x003E  /* EQ2_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B3_GAIN_SHIFT                     1  /* EQ2_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B3_GAIN_WIDTH                     5  /* EQ2_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B4_GAIN_MASK                 0xF800  /* EQ2_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B4_GAIN_SHIFT                    11  /* EQ2_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B4_GAIN_WIDTH                     5  /* EQ2_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B5_GAIN_MASK                 0x07C0  /* EQ2_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B5_GAIN_SHIFT                     6  /* EQ2_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2_B5_GAIN_WIDTH                     5  /* EQ2_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2MIX_INPUT_1_VOLUME            0x889
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2MIX_INPUT_2_VOLUME            0x88B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2MIX_INPUT_3_VOLUME            0x88D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ2MIX_INPUT_4_VOLUME            0x88F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B1_GAIN_MASK                 0xF800  /* EQ3_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B1_GAIN_SHIFT                    11  /* EQ3_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B1_GAIN_WIDTH                     5  /* EQ3_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B2_GAIN_MASK                 0x07C0  /* EQ3_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B2_GAIN_SHIFT                     6  /* EQ3_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B2_GAIN_WIDTH                     5  /* EQ3_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B3_GAIN_MASK                 0x003E  /* EQ3_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B3_GAIN_SHIFT                     1  /* EQ3_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B3_GAIN_WIDTH                     5  /* EQ3_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B4_GAIN_MASK                 0xF800  /* EQ3_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B4_GAIN_SHIFT                    11  /* EQ3_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B4_GAIN_WIDTH                     5  /* EQ3_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B5_GAIN_MASK                 0x07C0  /* EQ3_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B5_GAIN_SHIFT                     6  /* EQ3_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3_B5_GAIN_WIDTH                     5  /* EQ3_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3MIX_INPUT_1_VOLUME            0x891
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3MIX_INPUT_2_VOLUME            0x893
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3MIX_INPUT_3_VOLUME            0x895
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ3MIX_INPUT_4_VOLUME            0x897
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B1_GAIN_MASK                 0xF800  /* EQ4_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B1_GAIN_SHIFT                    11  /* EQ4_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B1_GAIN_WIDTH                     5  /* EQ4_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B2_GAIN_MASK                 0x07C0  /* EQ4_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B2_GAIN_SHIFT                     6  /* EQ4_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B2_GAIN_WIDTH                     5  /* EQ4_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B3_GAIN_MASK                 0x003E  /* EQ4_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B3_GAIN_SHIFT                     1  /* EQ4_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B3_GAIN_WIDTH                     5  /* EQ4_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B4_GAIN_MASK                 0xF800  /* EQ4_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B4_GAIN_SHIFT                    11  /* EQ4_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B4_GAIN_WIDTH                     5  /* EQ4_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B5_GAIN_MASK                 0x07C0  /* EQ4_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B5_GAIN_SHIFT                     6  /* EQ4_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4_B5_GAIN_WIDTH                     5  /* EQ4_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4MIX_INPUT_1_VOLUME            0x899
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4MIX_INPUT_2_VOLUME            0x89B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4MIX_INPUT_3_VOLUME            0x89D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_EQ4MIX_INPUT_4_VOLUME            0x89F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP1MIX_INPUT_1_VOLUME          0x901
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP1MIX_INPUT_2_VOLUME          0x903
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP1MIX_INPUT_3_VOLUME          0x905
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP1MIX_INPUT_4_VOLUME          0x907
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP2MIX_INPUT_1_VOLUME          0x909
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP2MIX_INPUT_2_VOLUME          0x90B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP2MIX_INPUT_3_VOLUME          0x90D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP2MIX_INPUT_4_VOLUME          0x90F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP3MIX_INPUT_1_VOLUME          0x911
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP3MIX_INPUT_2_VOLUME          0x913
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP3MIX_INPUT_3_VOLUME          0x915
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP3MIX_INPUT_4_VOLUME          0x917
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP4MIX_INPUT_1_VOLUME          0x919
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP4MIX_INPUT_2_VOLUME          0x91B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP4MIX_INPUT_3_VOLUME          0x91D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_HPLP4MIX_INPUT_4_VOLUME          0x91F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_INPUT_VOLUME_RAMP                0x319
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT1LMIX_INPUT_1_VOLUME          0x681
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT1LMIX_INPUT_2_VOLUME          0x683
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT1LMIX_INPUT_3_VOLUME          0x685
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT1LMIX_INPUT_4_VOLUME          0x687
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT1RMIX_INPUT_1_VOLUME          0x689
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT1RMIX_INPUT_2_VOLUME          0x68B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT1RMIX_INPUT_3_VOLUME          0x68D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT1RMIX_INPUT_4_VOLUME          0x68F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT2LMIX_INPUT_1_VOLUME          0x691
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT2LMIX_INPUT_2_VOLUME          0x693
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT2LMIX_INPUT_3_VOLUME          0x695
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT2LMIX_INPUT_4_VOLUME          0x697
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT2RMIX_INPUT_1_VOLUME          0x699
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT2RMIX_INPUT_2_VOLUME          0x69B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT2RMIX_INPUT_3_VOLUME          0x69D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT2RMIX_INPUT_4_VOLUME          0x69F
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT3LMIX_INPUT_1_VOLUME          0x6A1
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT3LMIX_INPUT_2_VOLUME          0x6A3
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT3LMIX_INPUT_3_VOLUME          0x6A5
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT3LMIX_INPUT_4_VOLUME          0x6A7
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT3RMIX_INPUT_1_VOLUME          0x6A9
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT3RMIX_INPUT_2_VOLUME          0x6AB
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT3RMIX_INPUT_3_VOLUME          0x6AD
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT3RMIX_INPUT_4_VOLUME          0x6AF
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT4LMIX_INPUT_1_VOLUME          0x6B1
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT4LMIX_INPUT_2_VOLUME          0x6B3
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT4LMIX_INPUT_3_VOLUME          0x6B5
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT4LMIX_INPUT_4_VOLUME          0x6B7
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT4RMIX_INPUT_1_VOLUME          0x6B9
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT4RMIX_INPUT_2_VOLUME          0x6BB
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT4RMIX_INPUT_3_VOLUME          0x6BD
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT4RMIX_INPUT_4_VOLUME          0x6BF
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT5LMIX_INPUT_1_VOLUME          0x6C1
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT5LMIX_INPUT_2_VOLUME          0x6C3
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT5LMIX_INPUT_3_VOLUME          0x6C5
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT5LMIX_INPUT_4_VOLUME          0x6C7
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT5RMIX_INPUT_1_VOLUME          0x6C9
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT5RMIX_INPUT_2_VOLUME          0x6CB
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT5RMIX_INPUT_3_VOLUME          0x6CD
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT5RMIX_INPUT_4_VOLUME          0x6CF
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT6LMIX_INPUT_1_VOLUME          0x6D1
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT6LMIX_INPUT_2_VOLUME          0x6D3
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT6LMIX_INPUT_3_VOLUME          0x6D5
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT6LMIX_INPUT_4_VOLUME          0x6D7
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT6RMIX_INPUT_1_VOLUME          0x6D9
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT6RMIX_INPUT_2_VOLUME          0x6DB
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT6RMIX_INPUT_3_VOLUME          0x6DD
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT6RMIX_INPUT_4_VOLUME          0x6DF
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUTPUT_VOLUME_RAMP               0x441
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT_VOLUME_1L                    0x410
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT_VOLUME_1R                    0x411
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT_VOLUME_2L                    0x414
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT_VOLUME_2R                    0x415
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT_VOLUME_3L                    0x418
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT_VOLUME_3R                    0x419
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT_VOLUME_4L                    0x41C
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_OUT_VOLUME_4R                    0x41D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_PWM1MIX_INPUT_1_VOLUME           0x641
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_PWM1MIX_INPUT_2_VOLUME           0x643
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_PWM1MIX_INPUT_3_VOLUME           0x645
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_PWM1MIX_INPUT_4_VOLUME           0x647
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_PWM2MIX_INPUT_1_VOLUME           0x649
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_PWM2MIX_INPUT_2_VOLUME           0x64B
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_PWM2MIX_INPUT_3_VOLUME           0x64D
/root/machinex/sound/soc/codecs/wm5100.h:#define WM5100_PWM2MIX_INPUT_4_VOLUME           0x64F
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_ADC_DIGITAL_VOLUME_1L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_ADC_DIGITAL_VOLUME_1R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_ADC_DIGITAL_VOLUME_2L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_ADC_DIGITAL_VOLUME_2R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_ADC_DIGITAL_VOLUME_3L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_ADC_DIGITAL_VOLUME_3R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_ADC_DIGITAL_VOLUME_4L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_ADC_DIGITAL_VOLUME_4R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX1MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX1MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX1MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX1MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX2MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX2MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX2MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX2MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX3MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX3MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX3MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX3MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX4MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX4MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX4MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX4MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX5MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX5MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX5MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX5MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX6MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX6MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX6MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX6MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX7MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX7MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX7MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX7MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX8MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX8MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX8MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF1TX8MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF2TX1MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF2TX1MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF2TX1MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF2TX1MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF2TX2MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF2TX2MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF2TX2MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF2TX2MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF3TX1MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF3TX1MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF3TX1MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF3TX1MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF3TX2MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF3TX2MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF3TX2MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_AIF3TX2MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_DIGITAL_VOLUME_1L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_DIGITAL_VOLUME_1R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_DIGITAL_VOLUME_2L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_DIGITAL_VOLUME_2R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_DIGITAL_VOLUME_3L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_DIGITAL_VOLUME_3R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_DIGITAL_VOLUME_4L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_DIGITAL_VOLUME_4R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_DIGITAL_VOLUME_5L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_DIGITAL_VOLUME_5R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_DIGITAL_VOLUME_6L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_DIGITAL_VOLUME_6R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_VOLUME_LIMIT_1L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_VOLUME_LIMIT_1R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_VOLUME_LIMIT_2L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_VOLUME_LIMIT_2R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_VOLUME_LIMIT_3L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_VOLUME_LIMIT_3R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_VOLUME_LIMIT_5L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_VOLUME_LIMIT_5R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_VOLUME_LIMIT_6L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DAC_VOLUME_LIMIT_6R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DRC1LMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DRC1LMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DRC1LMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DRC1LMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DRC1RMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DRC1RMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DRC1RMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DRC1RMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP1LMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP1LMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP1LMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP1LMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP1RMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP1RMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP1RMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP1RMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP2LMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP2LMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP2LMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP2LMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP2RMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP2RMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP2RMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP2RMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP3LMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP3LMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP3LMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP3LMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP3RMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP3RMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP3RMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_DSP3RMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ1MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ1MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ1MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ1MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ2MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ2MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ2MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ2MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ3MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ3MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ3MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ3MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ4MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ4MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ4MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_EQ4MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP1MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP1MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP1MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP1MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP2MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP2MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP2MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP2MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP3MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP3MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP3MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP3MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP4MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP4MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP4MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_HPLP4MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_INPUT_VOLUME_RAMP:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT1LMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT1LMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT1LMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT1LMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT1RMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT1RMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT1RMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT1RMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT2LMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT2LMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT2LMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT2LMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT2RMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT2RMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT2RMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT2RMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT3LMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT3LMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT3LMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT3LMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT3RMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT3RMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT3RMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT3RMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT4LMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT4LMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT4LMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT4LMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT4RMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT4RMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT4RMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT4RMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT5LMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT5LMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT5LMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT5LMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT5RMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT5RMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT5RMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT5RMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT6LMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT6LMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT6LMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT6LMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT6RMIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT6RMIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT6RMIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT6RMIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUTPUT_VOLUME_RAMP:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT_VOLUME_1L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT_VOLUME_1R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT_VOLUME_2L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT_VOLUME_2R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT_VOLUME_3L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT_VOLUME_3R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT_VOLUME_4L:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_OUT_VOLUME_4R:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_PWM1MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_PWM1MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_PWM1MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_PWM1MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_PWM2MIX_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_PWM2MIX_INPUT_2_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_PWM2MIX_INPUT_3_VOLUME:
/root/machinex/sound/soc/codecs/wm5100-tables.c:	case WM5100_PWM2MIX_INPUT_4_VOLUME:
/root/machinex/sound/soc/codecs/wm8350.c:	case WM8350_LOUT1_VOLUME:
/root/machinex/sound/soc/codecs/wm8350.c:	case WM8350_LOUT1_VOLUME:
/root/machinex/sound/soc/codecs/wm8350.c:	case WM8350_LOUT2_VOLUME:
/root/machinex/sound/soc/codecs/wm8350.c:	case WM8350_LOUT2_VOLUME:
/root/machinex/sound/soc/codecs/wm8350.c:	/* now hit the volume update bits (always bit 8) */
/root/machinex/sound/soc/codecs/wm8350.c:	/* only hit the update bit if either volume has changed this step */
/root/machinex/sound/soc/codecs/wm8350.c:	/* only hit the update bit if either volume has changed this step */
/root/machinex/sound/soc/codecs/wm8350.c:	out1->left_vol = (wm8350_reg_read(wm8350, WM8350_LOUT1_VOLUME) &
/root/machinex/sound/soc/codecs/wm8350.c:	out1->right_vol = (wm8350_reg_read(wm8350, WM8350_ROUT1_VOLUME) &
/root/machinex/sound/soc/codecs/wm8350.c:	out2->left_vol = (wm8350_reg_read(wm8350, WM8350_LOUT2_VOLUME) &
/root/machinex/sound/soc/codecs/wm8350.c:	out2->right_vol = (wm8350_reg_read(wm8350, WM8350_ROUT2_VOLUME) &
/root/machinex/sound/soc/codecs/wm8350.c:	/* PGA volumes have 6 bits of resolution to ramp */
/root/machinex/sound/soc/codecs/wm8350.c: * Ramp OUT1 PGA volume to minimise pops at stream startup and shutdown.
/root/machinex/sound/soc/codecs/wm8350.c: * Ramp OUT2 PGA volume to minimise pops at stream startup and shutdown.
/root/machinex/sound/soc/codecs/wm8350.c:	/* read OUT1 & OUT2 volumes */
/root/machinex/sound/soc/codecs/wm8350.c:	reg = wm8350_reg_read(wm8350, WM8350_LOUT1_VOLUME);
/root/machinex/sound/soc/codecs/wm8350.c:	reg = wm8350_reg_read(wm8350, WM8350_LOUT2_VOLUME);
/root/machinex/sound/soc/codecs/wm8350.c:	reg = wm8350_reg_read(wm8350, WM8350_ROUT1_VOLUME);
/root/machinex/sound/soc/codecs/wm8350.c:	reg = wm8350_reg_read(wm8350, WM8350_ROUT2_VOLUME);
/root/machinex/sound/soc/codecs/wm8350.c:SOC_DAPM_SINGLE("Switch", WM8350_BEEP_VOLUME, 15, 1, 1);
/root/machinex/sound/soc/codecs/wm8350.c:	SOC_DOUBLE_R("Out2 Playback ZC Switch", WM8350_LOUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:	SOC_ENUM_SINGLE(WM8350_DAC_MUTE_VOLUME, 13, 2, wm8350_dacmutes),
/root/machinex/sound/soc/codecs/wm8350.c:	SOC_ENUM_SINGLE(WM8350_DAC_MUTE_VOLUME, 14, 2, wm8350_dacmutem),
/root/machinex/sound/soc/codecs/wm8350.c:	SOC_ENUM_SINGLE(WM8350_INPUT_MIXER_VOLUME, 15, 2, wm8350_lr),
/root/machinex/sound/soc/codecs/wm8350.c:	SOC_SINGLE("Out2 Right Invert Switch", WM8350_ROUT2_VOLUME, 10, 1, 0),
/root/machinex/sound/soc/codecs/wm8350.c:	SOC_SINGLE_TLV("Out2 Beep Volume", WM8350_BEEP_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:				WM8350_ADC_DIGITAL_VOLUME_L,
/root/machinex/sound/soc/codecs/wm8350.c:				WM8350_ADC_DIGITAL_VOLUME_R,
/root/machinex/sound/soc/codecs/wm8350.c:			wm8350_clear_bits(wm8350, WM8350_DAC_MUTE_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		wm8350_clear_bits(wm8350, WM8350_LOUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		wm8350_clear_bits(wm8350, WM8350_LOUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		wm8350_clear_bits(wm8350, WM8350_ROUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		wm8350_clear_bits(wm8350, WM8350_ROUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:				WM8350_DAC_DIGITAL_VOLUME_L,
/root/machinex/sound/soc/codecs/wm8350.c:				WM8350_DAC_DIGITAL_VOLUME_R,
/root/machinex/sound/soc/codecs/wm8350.c:		       WM8350_INPUT_MIXER_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		   WM8350_INPUT_MIXER_VOLUME_L, 0, 1, 0),
/root/machinex/sound/soc/codecs/wm8350.c:			    WM8350_INPUT_MIXER_VOLUME_L, 1, 7, 0, out_mix_tlv),
/root/machinex/sound/soc/codecs/wm8350.c:			    WM8350_INPUT_MIXER_VOLUME_L, 9, 7, 0, out_mix_tlv),
/root/machinex/sound/soc/codecs/wm8350.c:		   WM8350_INPUT_MIXER_VOLUME_R, 0, 1, 0),
/root/machinex/sound/soc/codecs/wm8350.c:			    WM8350_INPUT_MIXER_VOLUME_R, 13, 7, 0, out_mix_tlv),
/root/machinex/sound/soc/codecs/wm8350.c:			    WM8350_INPUT_MIXER_VOLUME_R, 5, 7, 0, out_mix_tlv),
/root/machinex/sound/soc/codecs/wm8350.c:		     WM8350_LEFT_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:				WM8350_LEFT_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:			WM8350_LEFT_INPUT_VOLUME, 14, 1, 1),
/root/machinex/sound/soc/codecs/wm8350.c:		     WM8350_LOUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		     WM8350_LOUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:				WM8350_LOUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		     WM8350_LOUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:				WM8350_LOUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		       WM8350_OUTPUT_LEFT_MIXER_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		       WM8350_OUTPUT_LEFT_MIXER_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		       WM8350_OUTPUT_LEFT_MIXER_VOLUME, 1, 7, 0, out_mix_tlv),
/root/machinex/sound/soc/codecs/wm8350.c:		       WM8350_OUTPUT_RIGHT_MIXER_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		       WM8350_OUTPUT_RIGHT_MIXER_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		       WM8350_OUTPUT_RIGHT_MIXER_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:			wm8350_reg_write(wm8350, WM8350_LOUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:			wm8350_reg_write(wm8350, WM8350_LOUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:	wm8350_reg_write(wm8350, WM8350_LOUT1_VOLUME, 0);
/root/machinex/sound/soc/codecs/wm8350.c:			wm8350_reg_write(wm8350, WM8350_LOUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:			wm8350_reg_write(wm8350, WM8350_LOUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:	wm8350_reg_write(wm8350, WM8350_LOUT2_VOLUME, 0);
/root/machinex/sound/soc/codecs/wm8350.c:			wm8350_reg_write(wm8350, WM8350_ROUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:			wm8350_reg_write(wm8350, WM8350_ROUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:	wm8350_reg_write(wm8350, WM8350_ROUT1_VOLUME, 0);
/root/machinex/sound/soc/codecs/wm8350.c:			wm8350_reg_write(wm8350, WM8350_ROUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:			wm8350_reg_write(wm8350, WM8350_ROUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:	wm8350_reg_write(wm8350, WM8350_ROUT2_VOLUME, 0);
/root/machinex/sound/soc/codecs/wm8350.c:				WM8350_RIGHT_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		     WM8350_RIGHT_INPUT_VOLUME, 13, 1, 0),
/root/machinex/sound/soc/codecs/wm8350.c:			WM8350_RIGHT_INPUT_VOLUME, 14, 1, 1),
/root/machinex/sound/soc/codecs/wm8350.c:		     WM8350_ROUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:				WM8350_ROUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		     WM8350_ROUT1_VOLUME, 13, 1, 0),
/root/machinex/sound/soc/codecs/wm8350.c:		     WM8350_ROUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:				WM8350_ROUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		     WM8350_ROUT2_VOLUME, 13, 1, 0),
/root/machinex/sound/soc/codecs/wm8350.c:			wm8350_set_bits(wm8350, WM8350_DAC_MUTE_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:	wm8350_set_bits(wm8350, WM8350_LOUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		wm8350_set_bits(wm8350, WM8350_LOUT1_VOLUME, WM8350_OUT1_VU);
/root/machinex/sound/soc/codecs/wm8350.c:	wm8350_set_bits(wm8350, WM8350_LOUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:		wm8350_set_bits(wm8350, WM8350_LOUT2_VOLUME, WM8350_OUT2_VU);
/root/machinex/sound/soc/codecs/wm8350.c:	wm8350_set_bits(wm8350, WM8350_ROUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8350.c:	wm8350_set_bits(wm8350, WM8350_ROUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:	/* Latch volume update bits */
/root/machinex/sound/soc/codecs/wm8400.c:        /* now hit the volume update bits (always bit 8) */
/root/machinex/sound/soc/codecs/wm8400.c:	reg = wm8400_read(codec, WM8400_LEFT_LINE_INPUT_1_2_VOLUME);
/root/machinex/sound/soc/codecs/wm8400.c:	reg = wm8400_read(codec, WM8400_RIGHT_LINE_INPUT_1_2_VOLUME);
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("LIN12 Mute Switch", WM8400_LEFT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("LIN12 ZC Switch", WM8400_LEFT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("LIN34 Mute Switch", WM8400_LEFT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("LIN34 ZC Switch", WM8400_LEFT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("LON Mute Switch", WM8400_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("LOP Attenuation Switch", WM8400_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("LOPGA ZC Switch", WM8400_LEFT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("LOP Mute Switch", WM8400_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("LOUT ZC", WM8400_LEFT_OUTPUT_VOLUME, WM8400_LOZC_SHIFT, 1, 0),
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("OUT3 Attenuation Switch", WM8400_OUT3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("OUT3 Mute Switch", WM8400_OUT3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("OUT4 Attenuation Switch", WM8400_OUT3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("OUT4 Mute Switch", WM8400_OUT3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("RIN12 Mute Switch", WM8400_RIGHT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("RIN12 ZC Switch", WM8400_RIGHT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("RIN34 Mute Switch", WM8400_RIGHT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("RIN34 ZC Switch", WM8400_RIGHT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("RON Mute Switch", WM8400_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("ROP Attenuation Switch", WM8400_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("ROPGA ZC Switch", WM8400_RIGHT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("ROP Mute Switch", WM8400_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("ROUT ZC", WM8400_RIGHT_OUTPUT_VOLUME, WM8400_ROZC_SHIFT, 1, 0),
/root/machinex/sound/soc/codecs/wm8400.c:SOC_SINGLE("Speaker Output Attenuation Volume", WM8400_SPEAKER_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:	WM8400_ACGAIN_SHIFT, 6, 0),
/root/machinex/sound/soc/codecs/wm8400.c:	WM8400_DCGAIN_SHIFT, 6, 0),
/root/machinex/sound/soc/codecs/wm8400.c:	WM8400_LEFT_ADC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:	WM8400_LEFT_DAC_DIGITAL_VOLUME, WM8400_DACL_VOL_SHIFT,
/root/machinex/sound/soc/codecs/wm8400.c:	WM8400_LEFT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:	WM8400_LEFT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:WM8400_OUTPGA_SINGLE_R_TLV("LOPGA Volume", WM8400_LEFT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:WM8400_OUTPGA_SINGLE_R_TLV("LOUT Volume", WM8400_LEFT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:WM8400_OUTPGA_SINGLE_R_TLV("ROPGA Volume", WM8400_RIGHT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:WM8400_OUTPGA_SINGLE_R_TLV("ROUT Volume", WM8400_RIGHT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:	WM8400_RIGHT_ADC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:	WM8400_RIGHT_DAC_DIGITAL_VOLUME, WM8400_DACR_VOL_SHIFT,
/root/machinex/sound/soc/codecs/wm8400.c:	WM8400_RIGHT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:	WM8400_RIGHT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:	wm8400_write(codec, WM8400_LEFT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:	wm8400_write(codec, WM8400_LEFT_OUTPUT_VOLUME, 0x50 | (1<<8));
/root/machinex/sound/soc/codecs/wm8400.c:	wm8400_write(codec, WM8400_RIGHT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8400.c:	wm8400_write(codec, WM8400_RIGHT_OUTPUT_VOLUME, 0x50 | (1<<8));
/root/machinex/sound/soc/codecs/wm8523.c:	0x0190,     /* R6 - DAC_GAINL */
/root/machinex/sound/soc/codecs/wm8523.c:	0x0190,     /* R7 - DAC_GAINR */
/root/machinex/sound/soc/codecs/wm8523.c:	snd_soc_update_bits(codec, WM8523_DAC_GAINR,
/root/machinex/sound/soc/codecs/wm8523.c:SOC_DOUBLE_R_TLV("Playback Volume", WM8523_DAC_GAINL, WM8523_DAC_GAINR,
/root/machinex/sound/soc/codecs/wm8523.h:#define WM8523_DAC_GAINL                        0x06
/root/machinex/sound/soc/codecs/wm8523.h:#define WM8523_DAC_GAINR                        0x07
/root/machinex/sound/soc/codecs/wm8523.h: * R6 (0x06) - DAC_GAINL
/root/machinex/sound/soc/codecs/wm8523.h: * R7 (0x07) - DAC_GAINR
/root/machinex/sound/soc/codecs/wm8580.c:	/* Now write again with the volume update bit set */
/root/machinex/sound/soc/codecs/wm8728.c: * the volume update bits, mute the output and enable infinite zero
/root/machinex/sound/soc/codecs/wm8737.c:	0x00C3,     /* R0  - Left PGA volume */
/root/machinex/sound/soc/codecs/wm8737.c:	0x00C3,     /* R1  - Right PGA volume */
/root/machinex/sound/soc/codecs/wm8737.c:	snd_soc_update_bits(codec, WM8737_LEFT_PGA_VOLUME, WM8737_LVU,
/root/machinex/sound/soc/codecs/wm8737.c:	snd_soc_update_bits(codec, WM8737_RIGHT_PGA_VOLUME, WM8737_RVU,
/root/machinex/sound/soc/codecs/wm8737.c:SOC_DOUBLE_R_TLV("Capture Volume", WM8737_LEFT_PGA_VOLUME,
/root/machinex/sound/soc/codecs/wm8737.c:		 WM8737_RIGHT_PGA_VOLUME, 0, 255, 0, pga_tlv),
/root/machinex/sound/soc/codecs/wm8737.h:#define WM8737_LEFT_PGA_VOLUME                  0x00
/root/machinex/sound/soc/codecs/wm8737.h:#define WM8737_MAX_GAIN_MASK                    0x0070  /* MAX GAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8737.h:#define WM8737_MAX_GAIN_SHIFT                        4  /* MAX GAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8737.h:#define WM8737_MAX_GAIN_WIDTH                        3  /* MAX GAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8737.h:#define WM8737_RIGHT_PGA_VOLUME                 0x01
/root/machinex/sound/soc/codecs/wm8737.h: * R0 (0x00) - Left PGA volume
/root/machinex/sound/soc/codecs/wm8737.h: * R1 (0x01) - Right PGA volume
/root/machinex/sound/soc/codecs/wm8741.h:#define WM8741_DSD_GAIN                         0x0040  /* DSD_GAIN */
/root/machinex/sound/soc/codecs/wm8741.h:#define WM8741_DSD_GAIN_MASK                    0x0040  /* DSD_GAIN */
/root/machinex/sound/soc/codecs/wm8741.h:#define WM8741_DSD_GAIN_SHIFT                        6  /* DSD_GAIN */
/root/machinex/sound/soc/codecs/wm8741.h:#define WM8741_DSD_GAIN_WIDTH                        1  /* DSD_GAIN */
/root/machinex/sound/soc/codecs/wm8741.h:#define WM8741_VOLUME_CONTROL                   0x04
/root/machinex/sound/soc/codecs/wm8741.h: * R4 (0x04) - VOLUME_CONTROL
/root/machinex/sound/soc/codecs/wm8770.c:	/* latch the volume update bits */
/root/machinex/sound/soc/codecs/wm8900.c:	/* Latch the volume update bits */
/root/machinex/sound/soc/codecs/wm8903.c:	case WM8903_ADC_DIGITAL_VOLUME_LEFT:
/root/machinex/sound/soc/codecs/wm8903.c:	case WM8903_ADC_DIGITAL_VOLUME_RIGHT:
/root/machinex/sound/soc/codecs/wm8903.c:	case WM8903_DAC_DIGITAL_VOLUME_LEFT:
/root/machinex/sound/soc/codecs/wm8903.c:	case WM8903_DAC_DIGITAL_VOLUME_RIGHT:
/root/machinex/sound/soc/codecs/wm8903.c:	/* Latch volume update bits */
/root/machinex/sound/soc/codecs/wm8903.c:	snd_soc_write(codec, WM8903_ADC_DIGITAL_VOLUME_LEFT, val);
/root/machinex/sound/soc/codecs/wm8903.c:	snd_soc_write(codec, WM8903_ADC_DIGITAL_VOLUME_RIGHT, val);
/root/machinex/sound/soc/codecs/wm8903.c:	snd_soc_write(codec, WM8903_DAC_DIGITAL_VOLUME_LEFT, val);
/root/machinex/sound/soc/codecs/wm8903.c:	snd_soc_write(codec, WM8903_DAC_DIGITAL_VOLUME_RIGHT, val);
/root/machinex/sound/soc/codecs/wm8903.c:SOC_DOUBLE_R_TLV("Digital Capture Volume", WM8903_ADC_DIGITAL_VOLUME_LEFT,
/root/machinex/sound/soc/codecs/wm8903.c:SOC_DOUBLE_R_TLV("Digital Playback Volume", WM8903_DAC_DIGITAL_VOLUME_LEFT,
/root/machinex/sound/soc/codecs/wm8903.c:	val = snd_soc_read(codec, WM8903_ADC_DIGITAL_VOLUME_LEFT);
/root/machinex/sound/soc/codecs/wm8903.c:	val = snd_soc_read(codec, WM8903_DAC_DIGITAL_VOLUME_LEFT);
/root/machinex/sound/soc/codecs/wm8903.c:		 WM8903_ADC_DIGITAL_VOLUME_RIGHT, 1, 120, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8903.c:		 WM8903_DAC_DIGITAL_VOLUME_RIGHT, 1, 120, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8903.h:#define WM8903_ADC_DIGITAL_VOLUME_LEFT          0x24
/root/machinex/sound/soc/codecs/wm8903.h:#define WM8903_ADC_DIGITAL_VOLUME_RIGHT         0x25
/root/machinex/sound/soc/codecs/wm8903.h:#define WM8903_DAC_DIGITAL_VOLUME_LEFT          0x1E
/root/machinex/sound/soc/codecs/wm8903.h:#define WM8903_DAC_DIGITAL_VOLUME_RIGHT         0x1F
/root/machinex/sound/soc/codecs/wm8903.h:#define WM8903_DRC_MAXGAIN_MASK                 0x0003  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8903.h:#define WM8903_DRC_MAXGAIN_SHIFT                     0  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8903.h:#define WM8903_DRC_MAXGAIN_WIDTH                     2  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8903.h:#define WM8903_DRC_MINGAIN_MASK                 0x000C  /* DRC_MINGAIN - [3:2] */
/root/machinex/sound/soc/codecs/wm8903.h:#define WM8903_DRC_MINGAIN_SHIFT                     2  /* DRC_MINGAIN - [3:2] */
/root/machinex/sound/soc/codecs/wm8903.h:#define WM8903_DRC_MINGAIN_WIDTH                     2  /* DRC_MINGAIN - [3:2] */
/root/machinex/sound/soc/codecs/wm8903.h:#define WM8903_DRC_STARTUP_GAIN_MASK            0x07C0  /* DRC_STARTUP_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8903.h:#define WM8903_DRC_STARTUP_GAIN_SHIFT                6  /* DRC_STARTUP_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8903.h:#define WM8903_DRC_STARTUP_GAIN_WIDTH                5  /* DRC_STARTUP_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8904.c:	case WM8904_ADC_DIGITAL_VOLUME_LEFT:
/root/machinex/sound/soc/codecs/wm8904.c:	case WM8904_ADC_DIGITAL_VOLUME_RIGHT:
/root/machinex/sound/soc/codecs/wm8904.c:	case WM8904_DAC_DIGITAL_VOLUME_LEFT:
/root/machinex/sound/soc/codecs/wm8904.c:	case WM8904_DAC_DIGITAL_VOLUME_RIGHT:
/root/machinex/sound/soc/codecs/wm8904.c:	snd_soc_update_bits(codec, WM8904_ADC_DIGITAL_VOLUME_LEFT,
/root/machinex/sound/soc/codecs/wm8904.c:	snd_soc_update_bits(codec, WM8904_ADC_DIGITAL_VOLUME_RIGHT,
/root/machinex/sound/soc/codecs/wm8904.c:	snd_soc_update_bits(codec, WM8904_DAC_DIGITAL_VOLUME_LEFT,
/root/machinex/sound/soc/codecs/wm8904.c:	snd_soc_update_bits(codec, WM8904_DAC_DIGITAL_VOLUME_RIGHT,
/root/machinex/sound/soc/codecs/wm8904.c:SOC_DOUBLE_R_TLV("Digital Capture Volume", WM8904_ADC_DIGITAL_VOLUME_LEFT,
/root/machinex/sound/soc/codecs/wm8904.c:SOC_DOUBLE_R_TLV("Digital Playback Volume", WM8904_DAC_DIGITAL_VOLUME_LEFT,
/root/machinex/sound/soc/codecs/wm8904.c:		 WM8904_ADC_DIGITAL_VOLUME_RIGHT, 1, 119, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8904.c:		 WM8904_DAC_DIGITAL_VOLUME_RIGHT, 1, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_ADC_DIGITAL_VOLUME_LEFT          0x24
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_ADC_DIGITAL_VOLUME_RIGHT         0x25
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_DAC_DIGITAL_VOLUME_LEFT          0x1E
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_DAC_DIGITAL_VOLUME_RIGHT         0x1F
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_DRC_MAXGAIN_MASK                 0x0003  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_DRC_MAXGAIN_SHIFT                     0  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_DRC_MAXGAIN_WIDTH                     2  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_DRC_MINGAIN_MASK                 0x000C  /* DRC_MINGAIN - [3:2] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_DRC_MINGAIN_SHIFT                     2  /* DRC_MINGAIN - [3:2] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_DRC_MINGAIN_WIDTH                     2  /* DRC_MINGAIN - [3:2] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_DRC_STARTUP_GAIN_MASK            0x07C0  /* DRC_STARTUP_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_DRC_STARTUP_GAIN_SHIFT                6  /* DRC_STARTUP_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_DRC_STARTUP_GAIN_WIDTH                5  /* DRC_STARTUP_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B1_GAIN_MASK                  0x001F  /* EQ_B1_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B1_GAIN_SHIFT                      0  /* EQ_B1_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B1_GAIN_WIDTH                      5  /* EQ_B1_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B2_GAIN_MASK                  0x001F  /* EQ_B2_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B2_GAIN_SHIFT                      0  /* EQ_B2_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B2_GAIN_WIDTH                      5  /* EQ_B2_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B3_GAIN_MASK                  0x001F  /* EQ_B3_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B3_GAIN_SHIFT                      0  /* EQ_B3_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B3_GAIN_WIDTH                      5  /* EQ_B3_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B4_GAIN_MASK                  0x001F  /* EQ_B4_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B4_GAIN_SHIFT                      0  /* EQ_B4_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B4_GAIN_WIDTH                      5  /* EQ_B4_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B5_GAIN_MASK                  0x001F  /* EQ_B5_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B5_GAIN_SHIFT                      0  /* EQ_B5_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_EQ_B5_GAIN_WIDTH                      5  /* EQ_B5_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_FLL_GAIN_MASK                    0x000F  /* FLL_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_FLL_GAIN_SHIFT                        0  /* FLL_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8904.h:#define WM8904_FLL_GAIN_WIDTH                        4  /* FLL_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8940.c: * No means to obtain current gain if alc enabled.
/root/machinex/sound/soc/codecs/wm8940.c:	SOC_DAPM_SINGLE("Mic PGA Switch", WM8940_PGAGAIN, 6, 1, 1),
/root/machinex/sound/soc/codecs/wm8940.c:	SOC_SINGLE("Capture PGA ZC Switch", WM8940_PGAGAIN, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm8940.c:	SOC_SINGLE_TLV("Capture PGA Volume", WM8940_PGAGAIN,
/root/machinex/sound/soc/codecs/wm8940.h:#define WM8940_PGAGAIN		0x2D
/root/machinex/sound/soc/codecs/wm8955.c:	{ 10, 0x00FF },     /* R10 - Left DAC volume */
/root/machinex/sound/soc/codecs/wm8955.c:	{ 11, 0x00FF },     /* R11 - Right DAC volume */
/root/machinex/sound/soc/codecs/wm8955.c:	{ 2,  0x0079 },     /* R2  - LOUT1 volume */
/root/machinex/sound/soc/codecs/wm8955.c:	{ 3,  0x0079 },     /* R3  - ROUT1 volume */
/root/machinex/sound/soc/codecs/wm8955.c:	{ 40, 0x0079 },     /* R40 - LOUT2 volume */
/root/machinex/sound/soc/codecs/wm8955.c:	{ 41, 0x0079 },     /* R41 - ROUT2 volume */
/root/machinex/sound/soc/codecs/wm8955.c:	{ 42, 0x0079 },     /* R42 - MONOOUT volume */
/root/machinex/sound/soc/codecs/wm8955.c:	case WM8955_LEFT_DAC_VOLUME:
/root/machinex/sound/soc/codecs/wm8955.c:	case WM8955_LOUT1_VOLUME:
/root/machinex/sound/soc/codecs/wm8955.c:	case WM8955_LOUT2_VOLUME:
/root/machinex/sound/soc/codecs/wm8955.c:	case WM8955_MONOOUT_VOLUME:
/root/machinex/sound/soc/codecs/wm8955.c:	case WM8955_RIGHT_DAC_VOLUME:
/root/machinex/sound/soc/codecs/wm8955.c:	case WM8955_ROUT1_VOLUME:
/root/machinex/sound/soc/codecs/wm8955.c:	case WM8955_ROUT2_VOLUME:
/root/machinex/sound/soc/codecs/wm8955.c:	snd_soc_update_bits(codec, WM8955_LEFT_DAC_VOLUME,
/root/machinex/sound/soc/codecs/wm8955.c:	snd_soc_update_bits(codec, WM8955_LOUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8955.c:	snd_soc_update_bits(codec, WM8955_LOUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8955.c:	snd_soc_update_bits(codec, WM8955_MONOOUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8955.c:	snd_soc_update_bits(codec, WM8955_RIGHT_DAC_VOLUME,
/root/machinex/sound/soc/codecs/wm8955.c:	snd_soc_update_bits(codec, WM8955_ROUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8955.c:	snd_soc_update_bits(codec, WM8955_ROUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8955.c:SOC_DOUBLE_R("Headphone ZC Switch", WM8955_LOUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8955.c:SOC_DOUBLE_R("Speaker ZC Switch", WM8955_LOUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8955.c:SOC_DOUBLE_R_TLV("Digital Playback Volume", WM8955_LEFT_DAC_VOLUME,
/root/machinex/sound/soc/codecs/wm8955.c:SOC_DOUBLE_R_TLV("Headphone Volume", WM8955_LOUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8955.c:SOC_DOUBLE_R_TLV("Speaker Volume", WM8955_LOUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8955.c:SOC_SINGLE("Mono ZC Switch", WM8955_MONOOUT_VOLUME, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm8955.c:SOC_SINGLE_TLV("Mono Volume", WM8955_MONOOUT_VOLUME, 0, 127, 0, out_tlv),
/root/machinex/sound/soc/codecs/wm8955.c:		 WM8955_RIGHT_DAC_VOLUME, 0, 255, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8955.c:		 WM8955_ROUT1_VOLUME, 0, 127, 0, out_tlv),
/root/machinex/sound/soc/codecs/wm8955.c:	     WM8955_ROUT1_VOLUME, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm8955.c:		 WM8955_ROUT2_VOLUME, 0, 127, 0, out_tlv),
/root/machinex/sound/soc/codecs/wm8955.c:	     WM8955_ROUT2_VOLUME, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm8955.h:#define WM8955_LEFT_DAC_VOLUME                  0x0A
/root/machinex/sound/soc/codecs/wm8955.h:#define WM8955_LOUT1_VOLUME                     0x02
/root/machinex/sound/soc/codecs/wm8955.h:#define WM8955_LOUT2_VOLUME                     0x28
/root/machinex/sound/soc/codecs/wm8955.h:#define WM8955_MONOOUT_VOLUME                   0x2A
/root/machinex/sound/soc/codecs/wm8955.h:#define WM8955_RIGHT_DAC_VOLUME                 0x0B
/root/machinex/sound/soc/codecs/wm8955.h:#define WM8955_ROUT1_VOLUME                     0x03
/root/machinex/sound/soc/codecs/wm8955.h:#define WM8955_ROUT2_VOLUME                     0x29
/root/machinex/sound/soc/codecs/wm8955.h: * R10 (0x0A) - Left DAC volume
/root/machinex/sound/soc/codecs/wm8955.h: * R11 (0x0B) - Right DAC volume
/root/machinex/sound/soc/codecs/wm8955.h: * R2 (0x02) - LOUT1 volume
/root/machinex/sound/soc/codecs/wm8955.h: * R3 (0x03) - ROUT1 volume
/root/machinex/sound/soc/codecs/wm8955.h: * R40 (0x28) - LOUT2 volume
/root/machinex/sound/soc/codecs/wm8955.h: * R41 (0x29) - ROUT2 volume
/root/machinex/sound/soc/codecs/wm8955.h: * R42 (0x2A) - MONOOUT volume
/root/machinex/sound/soc/codecs/wm8961.c:	0x0000,     /* R2   - LOUT1 volume */
/root/machinex/sound/soc/codecs/wm8961.c:	0x0000,     /* R3   - ROUT1 volume */
/root/machinex/sound/soc/codecs/wm8961.c:	0x0000,     /* R40  - LOUT2 volume */
/root/machinex/sound/soc/codecs/wm8961.c:	0x0000,     /* R41  - ROUT2 volume */
/root/machinex/sound/soc/codecs/wm8961.c:	0x009F,     /* R0   - Left Input volume */
/root/machinex/sound/soc/codecs/wm8961.c:	0x009F,     /* R1   - Right Input volume */
/root/machinex/sound/soc/codecs/wm8961.c:	0x00C0,     /* R21  - Left ADC volume */
/root/machinex/sound/soc/codecs/wm8961.c:	0x00C0,     /* R22  - Right ADC volume */
/root/machinex/sound/soc/codecs/wm8961.c:	0x00FF,     /* R10  - Left DAC volume */
/root/machinex/sound/soc/codecs/wm8961.c:	0x00FF,     /* R11  - Right DAC volume */
/root/machinex/sound/soc/codecs/wm8961.c:	/* Latch volume update bits (right channel only, we always
/root/machinex/sound/soc/codecs/wm8961.c:	reg = snd_soc_read(codec, WM8961_RIGHT_ADC_VOLUME);
/root/machinex/sound/soc/codecs/wm8961.c:	reg = snd_soc_read(codec, WM8961_RIGHT_INPUT_VOLUME);
/root/machinex/sound/soc/codecs/wm8961.c:	reg = snd_soc_read(codec, WM8961_RIGHT_INPUT_VOLUME);
/root/machinex/sound/soc/codecs/wm8961.c:	reg = snd_soc_read(codec, WM8961_ROUT1_VOLUME);
/root/machinex/sound/soc/codecs/wm8961.c:	reg = snd_soc_read(codec, WM8961_ROUT2_VOLUME);
/root/machinex/sound/soc/codecs/wm8961.c:	snd_soc_write(codec, WM8961_LOUT1_VOLUME, reg | WM8961_LO1ZC);
/root/machinex/sound/soc/codecs/wm8961.c:	snd_soc_write(codec, WM8961_LOUT2_VOLUME, reg | WM8961_SPKLZC);
/root/machinex/sound/soc/codecs/wm8961.c:	snd_soc_write(codec, WM8961_RIGHT_ADC_VOLUME, reg | WM8961_ADCVU);
/root/machinex/sound/soc/codecs/wm8961.c:	snd_soc_write(codec, WM8961_RIGHT_INPUT_VOLUME, reg | WM8961_IPVU);
/root/machinex/sound/soc/codecs/wm8961.c:	snd_soc_write(codec, WM8961_ROUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8961.c:	snd_soc_write(codec, WM8961_ROUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8961.c:SOC_DOUBLE_R("Headphone ZC Switch", WM8961_LOUT1_VOLUME, WM8961_ROUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8961.c:SOC_DOUBLE_R("Speaker ZC Switch", WM8961_LOUT2_VOLUME, WM8961_ROUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8961.c:SOC_DOUBLE_R_TLV("Headphone Volume", WM8961_LOUT1_VOLUME, WM8961_ROUT1_VOLUME,
/root/machinex/sound/soc/codecs/wm8961.c:SOC_DOUBLE_R_TLV("Speaker Volume", WM8961_LOUT2_VOLUME, WM8961_ROUT2_VOLUME,
/root/machinex/sound/soc/codecs/wm8961.c:		 WM8961_LEFT_ADC_VOLUME, WM8961_RIGHT_ADC_VOLUME,
/root/machinex/sound/soc/codecs/wm8961.c:	     WM8961_LEFT_INPUT_VOLUME, WM8961_RIGHT_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8961.c:	     WM8961_LEFT_INPUT_VOLUME, WM8961_RIGHT_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8961.c:		 WM8961_LEFT_INPUT_VOLUME, WM8961_RIGHT_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_CLASSD_ACGAIN_MASK               0x0007  /* CLASSD_ACGAIN - [2:0] */
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_CLASSD_ACGAIN_SHIFT                   0  /* CLASSD_ACGAIN - [2:0] */
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_CLASSD_ACGAIN_WIDTH                   3  /* CLASSD_ACGAIN - [2:0] */
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_LEFT_ADC_VOLUME                  0x15
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_LEFT_DAC_VOLUME                  0x0A
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_LEFT_INPUT_VOLUME                0x00
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_LOUT1_VOLUME                     0x02
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_LOUT2_VOLUME                     0x28
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_MAXGAIN_MASK                     0x0070  /* MAXGAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_MAXGAIN_SHIFT                         4  /* MAXGAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_MAXGAIN_WIDTH                         3  /* MAXGAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_MINGAIN_MASK                     0x0070  /* MINGAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_MINGAIN_SHIFT                         4  /* MINGAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_MINGAIN_WIDTH                         3  /* MINGAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_RIGHT_ADC_VOLUME                 0x16
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_RIGHT_DAC_VOLUME                 0x0B
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_RIGHT_INPUT_VOLUME               0x01
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_ROUT1_VOLUME                     0x03
/root/machinex/sound/soc/codecs/wm8961.h:#define WM8961_ROUT2_VOLUME                     0x29
/root/machinex/sound/soc/codecs/wm8961.h: * R0 (0x00) - Left Input volume
/root/machinex/sound/soc/codecs/wm8961.h: * R10 (0x0A) - Left DAC volume
/root/machinex/sound/soc/codecs/wm8961.h: * R1 (0x01) - Right Input volume
/root/machinex/sound/soc/codecs/wm8961.h: * R11 (0x0B) - Right DAC volume
/root/machinex/sound/soc/codecs/wm8961.h: * R2 (0x02) - LOUT1 volume
/root/machinex/sound/soc/codecs/wm8961.h: * R21 (0x15) - Left ADC volume
/root/machinex/sound/soc/codecs/wm8961.h: * R22 (0x16) - Right ADC volume
/root/machinex/sound/soc/codecs/wm8961.h: * R3 (0x03) - ROUT1 volume
/root/machinex/sound/soc/codecs/wm8961.h: * R40 (0x28) - LOUT2 volume
/root/machinex/sound/soc/codecs/wm8961.h: * R41 (0x29) - ROUT2 volume
/root/machinex/sound/soc/codecs/wm8962.c:	{ 0, 0x009F },   /* R0     - Left Input volume */
/root/machinex/sound/soc/codecs/wm8962.c:	{ 10, 0x00C0 },  /* R10    - Left DAC volume */
/root/machinex/sound/soc/codecs/wm8962.c:	{ 1, 0x049F },   /* R1     - Right Input volume */
/root/machinex/sound/soc/codecs/wm8962.c:	{ 11, 0x00C0 },  /* R11    - Right DAC volume */
/root/machinex/sound/soc/codecs/wm8962.c:	{ 2, 0x0000 },   /* R2     - HPOUTL volume */
/root/machinex/sound/soc/codecs/wm8962.c:	{ 21, 0x00C0 },   /* R21    - Left ADC volume */
/root/machinex/sound/soc/codecs/wm8962.c:	{ 22, 0x00C0 },   /* R22    - Right ADC volume */
/root/machinex/sound/soc/codecs/wm8962.c:	{ 3, 0x0000 },   /* R3     - HPOUTR volume */
/root/machinex/sound/soc/codecs/wm8962.c:	{ 32, 0x0145 },   /* R32    - Left input mixer volume */
/root/machinex/sound/soc/codecs/wm8962.c:	{ 33, 0x0145 },   /* R33    - Right input mixer volume */
/root/machinex/sound/soc/codecs/wm8962.c:	{ 40, 0x0000 },   /* R40    - SPKOUTL volume */
/root/machinex/sound/soc/codecs/wm8962.c:	{ 41, 0x0000 },   /* R41    - SPKOUTR volume */
/root/machinex/sound/soc/codecs/wm8962.c:	case WM8962_HPOUTL_VOLUME:
/root/machinex/sound/soc/codecs/wm8962.c:	case WM8962_HPOUTR_VOLUME:
/root/machinex/sound/soc/codecs/wm8962.c:	case WM8962_LEFT_ADC_VOLUME:
/root/machinex/sound/soc/codecs/wm8962.c:	case WM8962_LEFT_DAC_VOLUME:
/root/machinex/sound/soc/codecs/wm8962.c:	case WM8962_LEFT_INPUT_MIXER_VOLUME:
/root/machinex/sound/soc/codecs/wm8962.c:	case WM8962_LEFT_INPUT_VOLUME:
/root/machinex/sound/soc/codecs/wm8962.c:	case WM8962_RIGHT_ADC_VOLUME:
/root/machinex/sound/soc/codecs/wm8962.c:	case WM8962_RIGHT_DAC_VOLUME:
/root/machinex/sound/soc/codecs/wm8962.c:	case WM8962_RIGHT_INPUT_MIXER_VOLUME:
/root/machinex/sound/soc/codecs/wm8962.c:	case WM8962_RIGHT_INPUT_VOLUME:
/root/machinex/sound/soc/codecs/wm8962.c:	case WM8962_SPKOUTL_VOLUME:
/root/machinex/sound/soc/codecs/wm8962.c:	case WM8962_SPKOUTR_VOLUME:
/root/machinex/sound/soc/codecs/wm8962.c:	/* Latch volume update bits */
/root/machinex/sound/soc/codecs/wm8962.c:		reg = WM8962_HPOUTL_VOLUME;
/root/machinex/sound/soc/codecs/wm8962.c:		reg = WM8962_HPOUTR_VOLUME;
/root/machinex/sound/soc/codecs/wm8962.c:		reg = WM8962_SPKOUTL_VOLUME;
/root/machinex/sound/soc/codecs/wm8962.c:		reg = WM8962_SPKOUTR_VOLUME;
/root/machinex/sound/soc/codecs/wm8962.c:	ret = regmap_read(wm8962->regmap, WM8962_RIGHT_INPUT_VOLUME, &reg);
/root/machinex/sound/soc/codecs/wm8962.c:	 * sharing a register with the right input volume; explicitly
/root/machinex/sound/soc/codecs/wm8962.c:			      snd_soc_read(codec, WM8962_HPOUTL_VOLUME));
/root/machinex/sound/soc/codecs/wm8962.c:			      snd_soc_read(codec, WM8962_HPOUTR_VOLUME));
/root/machinex/sound/soc/codecs/wm8962.c:			      snd_soc_read(codec, WM8962_SPKOUTL_VOLUME));
/root/machinex/sound/soc/codecs/wm8962.c:			      snd_soc_read(codec, WM8962_SPKOUTR_VOLUME));
/root/machinex/sound/soc/codecs/wm8962.c:	snd_soc_update_bits(codec, WM8962_HPOUTL_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:	snd_soc_update_bits(codec, WM8962_HPOUTR_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:	snd_soc_update_bits(codec, WM8962_LEFT_ADC_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:	snd_soc_update_bits(codec, WM8962_LEFT_DAC_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:	snd_soc_update_bits(codec, WM8962_LEFT_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:	snd_soc_update_bits(codec, WM8962_RIGHT_ADC_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:	snd_soc_update_bits(codec, WM8962_RIGHT_DAC_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:	snd_soc_update_bits(codec, WM8962_RIGHT_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:	snd_soc_update_bits(codec, WM8962_SPKOUTL_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:	snd_soc_update_bits(codec, WM8962_SPKOUTR_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:		snd_soc_write(codec, WM8962_HPOUTL_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:		snd_soc_write(codec, WM8962_HPOUTR_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:	snd_soc_write(codec, WM8962_LEFT_ADC_VOLUME, 0);
/root/machinex/sound/soc/codecs/wm8962.c:	snd_soc_write(codec, WM8962_LEFT_ADC_VOLUME, adcl);
/root/machinex/sound/soc/codecs/wm8962.c:	snd_soc_write(codec, WM8962_RIGHT_ADC_VOLUME, adcr);
/root/machinex/sound/soc/codecs/wm8962.c:	snd_soc_write(codec, WM8962_RIGHT_ADC_VOLUME, WM8962_ADC_VU);
/root/machinex/sound/soc/codecs/wm8962.c:		snd_soc_write(codec, WM8962_SPKOUTL_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:		snd_soc_write(codec, WM8962_SPKOUTR_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_DOUBLE_R("Capture Switch", WM8962_LEFT_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_DOUBLE_R("Capture ZC Switch", WM8962_LEFT_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_DOUBLE_R("Headphone ZC Switch", WM8962_HPOUTL_VOLUME, WM8962_HPOUTR_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_DOUBLE_R("Speaker ZC Switch", WM8962_SPKOUTL_VOLUME, WM8962_SPKOUTR_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_DOUBLE_R_TLV("Capture Volume", WM8962_LEFT_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_DOUBLE_R_TLV("Digital Capture Volume", WM8962_LEFT_ADC_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_DOUBLE_R_TLV("Digital Playback Volume", WM8962_LEFT_DAC_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_DOUBLE_R_TLV("Headphone Volume", WM8962_HPOUTL_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_DOUBLE_R_TLV("Speaker Volume", WM8962_SPKOUTL_VOLUME,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_SINGLE("Speaker ZC Switch", WM8962_SPKOUTL_VOLUME, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm8962.c:SOC_SINGLE_TLV("MIXINL IN2L Volume", WM8962_LEFT_INPUT_MIXER_VOLUME, 6, 7, 0,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_SINGLE_TLV("MIXINL IN3L Volume", WM8962_LEFT_INPUT_MIXER_VOLUME, 0, 7, 0,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_SINGLE_TLV("MIXINL PGA Volume", WM8962_LEFT_INPUT_MIXER_VOLUME, 3, 7, 0,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_SINGLE_TLV("MIXINR IN2R Volume", WM8962_RIGHT_INPUT_MIXER_VOLUME, 6, 7, 0,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_SINGLE_TLV("MIXINR IN3R Volume", WM8962_RIGHT_INPUT_MIXER_VOLUME, 0, 7, 0,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_SINGLE_TLV("MIXINR PGA Volume", WM8962_RIGHT_INPUT_MIXER_VOLUME, 3, 7, 0,
/root/machinex/sound/soc/codecs/wm8962.c:SOC_SINGLE_TLV("Speaker Volume", WM8962_SPKOUTL_VOLUME, 0, 127, 0, out_tlv),
/root/machinex/sound/soc/codecs/wm8962.c:	u16 adcl = snd_soc_read(codec, WM8962_LEFT_ADC_VOLUME);
/root/machinex/sound/soc/codecs/wm8962.c:	u16 adcr = snd_soc_read(codec, WM8962_RIGHT_ADC_VOLUME);
/root/machinex/sound/soc/codecs/wm8962.c:		 WM8962_EQL_B1_GAIN_SHIFT, 31, 0, eq_tlv),
/root/machinex/sound/soc/codecs/wm8962.c:		 WM8962_EQL_B2_GAIN_SHIFT, 31, 0, eq_tlv),
/root/machinex/sound/soc/codecs/wm8962.c:		 WM8962_EQL_B3_GAIN_SHIFT, 31, 0, eq_tlv),
/root/machinex/sound/soc/codecs/wm8962.c:		 WM8962_EQL_B4_GAIN_SHIFT, 31, 0, eq_tlv),
/root/machinex/sound/soc/codecs/wm8962.c:		 WM8962_EQL_B5_GAIN_SHIFT, 31, 0, eq_tlv),
/root/machinex/sound/soc/codecs/wm8962.c:		 WM8962_HPOUTR_VOLUME, 0, 127, 0, out_tlv),
/root/machinex/sound/soc/codecs/wm8962.c:		 WM8962_RIGHT_ADC_VOLUME, 1, 127, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8962.c:		 WM8962_RIGHT_DAC_VOLUME, 1, 127, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8962.c:		 WM8962_RIGHT_INPUT_VOLUME, 0, 63, 0, inpga_tlv),
/root/machinex/sound/soc/codecs/wm8962.c:	     WM8962_RIGHT_INPUT_VOLUME, 6, 1, 1),
/root/machinex/sound/soc/codecs/wm8962.c:	     WM8962_RIGHT_INPUT_VOLUME, 7, 1, 1),
/root/machinex/sound/soc/codecs/wm8962.c:		 WM8962_SPKOUTR_VOLUME, 0, 127, 0, out_tlv),
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_ALC_MAXGAIN_MASK                 0x0070  /* ALC_MAXGAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_ALC_MAXGAIN_SHIFT                     4  /* ALC_MAXGAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_ALC_MAXGAIN_WIDTH                     3  /* ALC_MAXGAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_ALC_MINGAIN_MASK                 0x0070  /* ALC_MINGAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_ALC_MINGAIN_SHIFT                     4  /* ALC_MINGAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_ALC_MINGAIN_WIDTH                     3  /* ALC_MINGAIN - [6:4] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_ALC_NGATE_GAIN_MASK              0x1C00  /* ALC_NGATE_GAIN - [12:10] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_ALC_NGATE_GAIN_SHIFT                 10  /* ALC_NGATE_GAIN - [12:10] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_ALC_NGATE_GAIN_WIDTH                  3  /* ALC_NGATE_GAIN - [12:10] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_BEEP_GAIN_MASK                   0x00F0  /* BEEP_GAIN - [7:4] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_BEEP_GAIN_SHIFT                       4  /* BEEP_GAIN - [7:4] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_BEEP_GAIN_WIDTH                       4  /* BEEP_GAIN - [7:4] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_DRC_MAXGAIN_MASK                 0x0003  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_DRC_MAXGAIN_SHIFT                     0  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_DRC_MAXGAIN_WIDTH                     2  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_DRC_MINGAIN_MASK                 0x001C  /* DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_DRC_MINGAIN_SHIFT                     2  /* DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_DRC_MINGAIN_WIDTH                     3  /* DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_DRC_NG_MINGAIN_MASK              0xF000  /* DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_DRC_NG_MINGAIN_SHIFT                 12  /* DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_DRC_NG_MINGAIN_WIDTH                  4  /* DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B1_GAIN_MASK                 0xF800  /* EQL_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B1_GAIN_SHIFT                    11  /* EQL_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B1_GAIN_WIDTH                     5  /* EQL_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B2_GAIN_MASK                 0x07C0  /* EQL_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B2_GAIN_SHIFT                     6  /* EQL_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B2_GAIN_WIDTH                     5  /* EQL_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B3_GAIN_MASK                 0x003E  /* EQL_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B3_GAIN_SHIFT                     1  /* EQL_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B3_GAIN_WIDTH                     5  /* EQL_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B4_GAIN_MASK                 0xF800  /* EQL_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B4_GAIN_SHIFT                    11  /* EQL_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B4_GAIN_WIDTH                     5  /* EQL_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B5_GAIN_MASK                 0x07C0  /* EQL_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B5_GAIN_SHIFT                     6  /* EQL_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQL_B5_GAIN_WIDTH                     5  /* EQL_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B1_GAIN_MASK                 0xF800  /* EQR_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B1_GAIN_SHIFT                    11  /* EQR_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B1_GAIN_WIDTH                     5  /* EQR_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B2_GAIN_MASK                 0x07C0  /* EQR_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B2_GAIN_SHIFT                     6  /* EQR_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B2_GAIN_WIDTH                     5  /* EQR_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B3_GAIN_MASK                 0x003E  /* EQR_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B3_GAIN_SHIFT                     1  /* EQR_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B3_GAIN_WIDTH                     5  /* EQR_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B4_GAIN_MASK                 0xF800  /* EQR_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B4_GAIN_SHIFT                    11  /* EQR_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B4_GAIN_WIDTH                     5  /* EQR_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B5_GAIN_MASK                 0x07C0  /* EQR_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B5_GAIN_SHIFT                     6  /* EQR_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_EQR_B5_GAIN_WIDTH                     5  /* EQR_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_HPOUTL_VOLUME                    0x02
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_HPOUTR_VOLUME                    0x03
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_LEFT_ADC_VOLUME                  0x15
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_LEFT_DAC_VOLUME                  0x0A
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_LEFT_INPUT_MIXER_VOLUME          0x20
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_LEFT_INPUT_VOLUME                0x00
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_RIGHT_ADC_VOLUME                 0x16
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_RIGHT_DAC_VOLUME                 0x0B
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_RIGHT_INPUT_MIXER_VOLUME         0x21
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_RIGHT_INPUT_VOLUME               0x01
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_SPKOUTL_VOLUME                   0x28
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_SPKOUTR_VOLUME                   0x29
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_THREED_CGAINL_MASK               0x07C0  /* THREED_CGAINL - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_THREED_CGAINL_SHIFT                   6  /* THREED_CGAINL - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_THREED_CGAINL_WIDTH                   5  /* THREED_CGAINL - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_THREED_CGAINR_MASK               0x07C0  /* THREED_CGAINR - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_THREED_CGAINR_SHIFT                   6  /* THREED_CGAINR - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_THREED_CGAINR_WIDTH                   5  /* THREED_CGAINR - [10:6] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_THREED_FGAINL_MASK               0xF800  /* THREED_FGAINL - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_THREED_FGAINL_SHIFT                  11  /* THREED_FGAINL - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_THREED_FGAINL_WIDTH                   5  /* THREED_FGAINL - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_THREED_FGAINR_MASK               0xF800  /* THREED_FGAINR - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_THREED_FGAINR_SHIFT                  11  /* THREED_FGAINR - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h:#define WM8962_THREED_FGAINR_WIDTH                   5  /* THREED_FGAINR - [15:11] */
/root/machinex/sound/soc/codecs/wm8962.h: * R0 (0x00) - Left Input volume
/root/machinex/sound/soc/codecs/wm8962.h: * R10 (0x0A) - Left DAC volume
/root/machinex/sound/soc/codecs/wm8962.h: * R1 (0x01) - Right Input volume
/root/machinex/sound/soc/codecs/wm8962.h: * R11 (0x0B) - Right DAC volume
/root/machinex/sound/soc/codecs/wm8962.h: * R2 (0x02) - HPOUTL volume
/root/machinex/sound/soc/codecs/wm8962.h: * R21 (0x15) - Left ADC volume
/root/machinex/sound/soc/codecs/wm8962.h: * R22 (0x16) - Right ADC volume
/root/machinex/sound/soc/codecs/wm8962.h: * R3 (0x03) - HPOUTR volume
/root/machinex/sound/soc/codecs/wm8962.h: * R32 (0x20) - Left input mixer volume
/root/machinex/sound/soc/codecs/wm8962.h: * R33 (0x21) - Right input mixer volume
/root/machinex/sound/soc/codecs/wm8962.h: * R40 (0x28) - SPKOUTL volume
/root/machinex/sound/soc/codecs/wm8962.h: * R41 (0x29) - SPKOUTR volume
/root/machinex/sound/soc/codecs/wm8978.c:	/* ...and on again */
/root/machinex/sound/soc/codecs/wm8978.c:	/* Input PGA volume */
/root/machinex/sound/soc/codecs/wm8978.c: * that one can write new DAC digital volume for both channels, but only when
/root/machinex/sound/soc/codecs/wm8978.c: * the update bit is set, will also the volume be updated - simultaneously for
/root/machinex/sound/soc/codecs/wm8978.c:	WM8978_LEFT_ADC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8978.c:		WM8978_LEFT_ADC_DIGITAL_VOLUME, WM8978_RIGHT_ADC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8978.c:	WM8978_LEFT_DAC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8978.c:		WM8978_LEFT_DAC_DIGITAL_VOLUME, WM8978_RIGHT_DAC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8978.c:	WM8978_RIGHT_ADC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8978.c:	WM8978_RIGHT_DAC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8978.h:#define WM8978_LEFT_ADC_DIGITAL_VOLUME		0x0F
/root/machinex/sound/soc/codecs/wm8978.h:#define WM8978_LEFT_DAC_DIGITAL_VOLUME		0x0B
/root/machinex/sound/soc/codecs/wm8978.h:#define WM8978_RIGHT_ADC_DIGITAL_VOLUME		0x10
/root/machinex/sound/soc/codecs/wm8978.h:#define WM8978_RIGHT_DAC_DIGITAL_VOLUME		0x0C
/root/machinex/sound/soc/codecs/wm8983.c:	[0x2D] = { 0x0000, 0x01FF }, /* R45 - Left INP PGA gain ctrl */
/root/machinex/sound/soc/codecs/wm8983.c:	[0x2D] = 0x0010,     /* R45 - Left INP PGA gain ctrl */
/root/machinex/sound/soc/codecs/wm8983.c:	[0x2E] = { 0x0000, 0x01FF }, /* R46 - Right INP PGA gain ctrl */
/root/machinex/sound/soc/codecs/wm8983.c:	[0x2E] = 0x0010,     /* R46 - Right INP PGA gain ctrl */
/root/machinex/sound/soc/codecs/wm8983.c:	[0x34] = { 0x0000, 0x01FF }, /* R52 - LOUT1 (HP) volume ctrl */
/root/machinex/sound/soc/codecs/wm8983.c:	[0x34] = 0x0039,     /* R52 - LOUT1 (HP) volume ctrl */
/root/machinex/sound/soc/codecs/wm8983.c:	[0x35] = { 0x0000, 0x01FF }, /* R53 - ROUT1 (HP) volume ctrl */
/root/machinex/sound/soc/codecs/wm8983.c:	[0x35] = 0x0039,     /* R53 - ROUT1 (HP) volume ctrl */
/root/machinex/sound/soc/codecs/wm8983.c:	[0x36] = { 0x0000, 0x01FF }, /* R54 - LOUT2 (SPK) volume ctrl */
/root/machinex/sound/soc/codecs/wm8983.c:	[0x36] = 0x0039,     /* R54 - LOUT2 (SPK) volume ctrl */
/root/machinex/sound/soc/codecs/wm8983.c:	[0x37] = { 0x0000, 0x01FF }, /* R55 - ROUT2 (SPK) volume ctrl */
/root/machinex/sound/soc/codecs/wm8983.c:	[0x37] = 0x0039,     /* R55 - ROUT2 (SPK) volume ctrl */
/root/machinex/sound/soc/codecs/wm8983.c:	for (i = WM8983_LOUT1_HP_VOLUME_CTRL;
/root/machinex/sound/soc/codecs/wm8983.c:	/* mute all outputs and set PGAs to minimum gain */
/root/machinex/sound/soc/codecs/wm8983.c:	/* set the vol/gain update bits */
/root/machinex/sound/soc/codecs/wm8983.c:	SND_SOC_DAPM_PGA("Left Capture PGA", WM8983_LEFT_INP_PGA_GAIN_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:	SND_SOC_DAPM_PGA("Right Capture PGA", WM8983_RIGHT_INP_PGA_GAIN_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:	SOC_DOUBLE_R("Capture PGA ZC Switch", WM8983_LEFT_INP_PGA_GAIN_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:	SOC_DOUBLE_R("Headphone Playback ZC Switch", WM8983_LOUT1_HP_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:	SOC_DOUBLE_R("Headphone Switch", WM8983_LOUT1_HP_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:	SOC_DOUBLE_R("Speaker Playback ZC Switch", WM8983_LOUT2_SPK_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:	SOC_DOUBLE_R("Speaker Switch", WM8983_LOUT2_SPK_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:	SOC_DOUBLE_R_TLV("Capture PGA Volume", WM8983_LEFT_INP_PGA_GAIN_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:	SOC_DOUBLE_R_TLV("Headphone Playback Volume", WM8983_LOUT1_HP_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:	SOC_DOUBLE_R_TLV("Speaker Playback Volume", WM8983_LOUT2_SPK_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:/* vol/gain update regs */
/root/machinex/sound/soc/codecs/wm8983.c:	WM8983_LEFT_INP_PGA_GAIN_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:	WM8983_LOUT1_HP_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:	WM8983_LOUT2_SPK_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:	WM8983_RIGHT_INP_PGA_GAIN_CTRL
/root/machinex/sound/soc/codecs/wm8983.c:			 WM8983_RIGHT_INP_PGA_GAIN_CTRL, 0, 63, 0, pga_vol_tlv),
/root/machinex/sound/soc/codecs/wm8983.c:		     WM8983_RIGHT_INP_PGA_GAIN_CTRL, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm8983.c:	WM8983_ROUT1_HP_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:			 WM8983_ROUT1_HP_VOLUME_CTRL, 0, 63, 0, out_tlv),
/root/machinex/sound/soc/codecs/wm8983.c:		     WM8983_ROUT1_HP_VOLUME_CTRL, 6, 1, 1),
/root/machinex/sound/soc/codecs/wm8983.c:		     WM8983_ROUT1_HP_VOLUME_CTRL, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm8983.c:	WM8983_ROUT2_SPK_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8983.c:			 WM8983_ROUT2_SPK_VOLUME_CTRL, 0, 63, 0, out_tlv),
/root/machinex/sound/soc/codecs/wm8983.c:		     WM8983_ROUT2_SPK_VOLUME_CTRL, 6, 1, 1),
/root/machinex/sound/soc/codecs/wm8983.c:		     WM8983_ROUT2_SPK_VOLUME_CTRL, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm8983.h:#define WM8983_LEFT_INP_PGA_GAIN_CTRL           0x2D
/root/machinex/sound/soc/codecs/wm8983.h:#define WM8983_LOUT1_HP_VOLUME_CTRL             0x34
/root/machinex/sound/soc/codecs/wm8983.h:#define WM8983_LOUT2_SPK_VOLUME_CTRL            0x36
/root/machinex/sound/soc/codecs/wm8983.h:#define WM8983_RIGHT_INP_PGA_GAIN_CTRL          0x2E
/root/machinex/sound/soc/codecs/wm8983.h:#define WM8983_ROUT1_HP_VOLUME_CTRL             0x35
/root/machinex/sound/soc/codecs/wm8983.h:#define WM8983_ROUT2_SPK_VOLUME_CTRL            0x37
/root/machinex/sound/soc/codecs/wm8983.h: * R45 (0x2D) - Left INP PGA gain ctrl
/root/machinex/sound/soc/codecs/wm8983.h: * R46 (0x2E) - Right INP PGA gain ctrl
/root/machinex/sound/soc/codecs/wm8983.h: * R52 (0x34) - LOUT1 (HP) volume ctrl
/root/machinex/sound/soc/codecs/wm8983.h: * R53 (0x35) - ROUT1 (HP) volume ctrl
/root/machinex/sound/soc/codecs/wm8983.h: * R54 (0x36) - LOUT2 (SPK) volume ctrl
/root/machinex/sound/soc/codecs/wm8983.h: * R55 (0x37) - ROUT2 (SPK) volume ctrl
/root/machinex/sound/soc/codecs/wm8985.c:	{ 45, 0x0010 },     /* R45 - Left INP PGA gain ctrl */
/root/machinex/sound/soc/codecs/wm8985.c:	{ 46, 0x0010 },     /* R46 - Right INP PGA gain ctrl */
/root/machinex/sound/soc/codecs/wm8985.c:	{ 52, 0x0039 },     /* R52 - LOUT1 (HP) volume ctrl */
/root/machinex/sound/soc/codecs/wm8985.c:	{ 53, 0x0039 },     /* R53 - ROUT1 (HP) volume ctrl */
/root/machinex/sound/soc/codecs/wm8985.c:	{ 54, 0x0039 },     /* R54 - LOUT2 (SPK) volume ctrl */
/root/machinex/sound/soc/codecs/wm8985.c:	{ 55, 0x0039 },     /* R55 - ROUT2 (SPK) volume ctrl */
/root/machinex/sound/soc/codecs/wm8985.c:	case WM8985_LEFT_INP_PGA_GAIN_CTRL:
/root/machinex/sound/soc/codecs/wm8985.c:	case WM8985_LOUT1_HP_VOLUME_CTRL:
/root/machinex/sound/soc/codecs/wm8985.c:	case WM8985_LOUT2_SPK_VOLUME_CTRL:
/root/machinex/sound/soc/codecs/wm8985.c:	case WM8985_RIGHT_INP_PGA_GAIN_CTRL:
/root/machinex/sound/soc/codecs/wm8985.c:	case WM8985_ROUT1_HP_VOLUME_CTRL:
/root/machinex/sound/soc/codecs/wm8985.c:	case WM8985_ROUT2_SPK_VOLUME_CTRL:
/root/machinex/sound/soc/codecs/wm8985.c:	for (i = 0; i < ARRAY_SIZE(volume_update_regs); ++i)
/root/machinex/sound/soc/codecs/wm8985.c:	/* latch volume update bits */
/root/machinex/sound/soc/codecs/wm8985.c:	SND_SOC_DAPM_PGA("Left Capture PGA", WM8985_LEFT_INP_PGA_GAIN_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:	SND_SOC_DAPM_PGA("Right Capture PGA", WM8985_RIGHT_INP_PGA_GAIN_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:		snd_soc_update_bits(codec, volume_update_regs[i],
/root/machinex/sound/soc/codecs/wm8985.c:	SOC_DOUBLE_R("Capture PGA ZC Switch", WM8985_LEFT_INP_PGA_GAIN_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:	SOC_DOUBLE_R("Headphone Playback ZC Switch", WM8985_LOUT1_HP_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:	SOC_DOUBLE_R("Headphone Switch", WM8985_LOUT1_HP_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:	SOC_DOUBLE_R("Speaker Playback ZC Switch", WM8985_LOUT2_SPK_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:	SOC_DOUBLE_R("Speaker Switch", WM8985_LOUT2_SPK_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:	SOC_DOUBLE_R_TLV("Capture PGA Volume", WM8985_LEFT_INP_PGA_GAIN_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:	SOC_DOUBLE_R_TLV("Headphone Playback Volume", WM8985_LOUT1_HP_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:	SOC_DOUBLE_R_TLV("Speaker Playback Volume", WM8985_LOUT2_SPK_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:static const int volume_update_regs[] = {
/root/machinex/sound/soc/codecs/wm8985.c: * volume updates
/root/machinex/sound/soc/codecs/wm8985.c:	WM8985_LEFT_INP_PGA_GAIN_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:	WM8985_LOUT1_HP_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:	WM8985_LOUT2_SPK_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:	WM8985_RIGHT_INP_PGA_GAIN_CTRL
/root/machinex/sound/soc/codecs/wm8985.c:		WM8985_RIGHT_INP_PGA_GAIN_CTRL, 0, 63, 0, pga_vol_tlv),
/root/machinex/sound/soc/codecs/wm8985.c:		WM8985_RIGHT_INP_PGA_GAIN_CTRL, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm8985.c:	WM8985_ROUT1_HP_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:		WM8985_ROUT1_HP_VOLUME_CTRL, 0, 63, 0, out_tlv),
/root/machinex/sound/soc/codecs/wm8985.c:		WM8985_ROUT1_HP_VOLUME_CTRL, 6, 1, 1),
/root/machinex/sound/soc/codecs/wm8985.c:		WM8985_ROUT1_HP_VOLUME_CTRL, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm8985.c:	WM8985_ROUT2_SPK_VOLUME_CTRL,
/root/machinex/sound/soc/codecs/wm8985.c:		WM8985_ROUT2_SPK_VOLUME_CTRL, 0, 63, 0, out_tlv),
/root/machinex/sound/soc/codecs/wm8985.c:		WM8985_ROUT2_SPK_VOLUME_CTRL, 6, 1, 1),
/root/machinex/sound/soc/codecs/wm8985.c:		WM8985_ROUT2_SPK_VOLUME_CTRL, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm8985.h:#define WM8985_LEFT_INP_PGA_GAIN_CTRL           0x2D
/root/machinex/sound/soc/codecs/wm8985.h:#define WM8985_LOUT1_HP_VOLUME_CTRL             0x34
/root/machinex/sound/soc/codecs/wm8985.h:#define WM8985_LOUT2_SPK_VOLUME_CTRL            0x36
/root/machinex/sound/soc/codecs/wm8985.h:#define WM8985_RIGHT_INP_PGA_GAIN_CTRL          0x2E
/root/machinex/sound/soc/codecs/wm8985.h:#define WM8985_ROUT1_HP_VOLUME_CTRL             0x35
/root/machinex/sound/soc/codecs/wm8985.h:#define WM8985_ROUT2_SPK_VOLUME_CTRL            0x37
/root/machinex/sound/soc/codecs/wm8985.h: * R45 (0x2D) - Left INP PGA gain ctrl
/root/machinex/sound/soc/codecs/wm8985.h: * R46 (0x2E) - Right INP PGA gain ctrl
/root/machinex/sound/soc/codecs/wm8985.h: * R52 (0x34) - LOUT1 (HP) volume ctrl
/root/machinex/sound/soc/codecs/wm8985.h: * R53 (0x35) - ROUT1 (HP) volume ctrl
/root/machinex/sound/soc/codecs/wm8985.h: * R54 (0x36) - LOUT2 (SPK) volume ctrl
/root/machinex/sound/soc/codecs/wm8985.h: * R55 (0x37) - ROUT2 (SPK) volume ctrl
/root/machinex/sound/soc/codecs/wm8990.c:	/* now hit the volume update bits (always bit 8) */
/root/machinex/sound/soc/codecs/wm8990.c:	snd_soc_write(codec, WM8990_LEFT_OUTPUT_VOLUME, 0x50 | (1<<8));
/root/machinex/sound/soc/codecs/wm8990.c:	snd_soc_write(codec, WM8990_RIGHT_OUTPUT_VOLUME, 0x50 | (1<<8));
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("LIN12 Mute Switch", WM8990_LEFT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("LIN12 ZC Switch", WM8990_LEFT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("LIN34 Mute Switch", WM8990_LEFT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("LIN34 ZC Switch", WM8990_LEFT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("LON Mute Switch", WM8990_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("LOP Attenuation Switch", WM8990_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("LOPGA ZC Switch", WM8990_LEFT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("LOP Mute Switch", WM8990_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("LOUT ZC", WM8990_LEFT_OUTPUT_VOLUME, WM8990_LOZC_BIT, 1, 0),
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("OUT3 Attenuation Switch", WM8990_OUT3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("OUT3 Mute Switch", WM8990_OUT3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("OUT4 Attenuation Switch", WM8990_OUT3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("OUT4 Mute Switch", WM8990_OUT3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("RIN12 Mute Switch", WM8990_RIGHT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("RIN12 ZC Switch", WM8990_RIGHT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("RIN34 Mute Switch", WM8990_RIGHT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("RIN34 ZC Switch", WM8990_RIGHT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("RON Mute Switch", WM8990_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("ROP Attenuation Switch", WM8990_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("ROPGA ZC Switch", WM8990_RIGHT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("ROP Mute Switch", WM8990_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("ROUT ZC", WM8990_RIGHT_OUTPUT_VOLUME, WM8990_ROZC_BIT, 1, 0),
/root/machinex/sound/soc/codecs/wm8990.c:SOC_SINGLE("Speaker Output Attenuation Volume", WM8990_SPEAKER_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_WM899X_OUTPGA_SINGLE_R_TLV("LOPGA Volume", WM8990_LEFT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_WM899X_OUTPGA_SINGLE_R_TLV("LOUT Volume", WM8990_LEFT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_WM899X_OUTPGA_SINGLE_R_TLV("ROPGA Volume", WM8990_RIGHT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:SOC_WM899X_OUTPGA_SINGLE_R_TLV("ROUT Volume", WM8990_RIGHT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:	WM8990_ACGAIN_SHIFT, WM8990_ACGAIN_MASK, 0),
/root/machinex/sound/soc/codecs/wm8990.c:	WM8990_DCGAIN_SHIFT, WM8990_DCGAIN_MASK, 0),
/root/machinex/sound/soc/codecs/wm8990.c:	WM8990_LEFT_ADC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:	WM8990_LEFT_DAC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:	WM8990_LEFT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:	WM8990_LEFT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:	WM8990_RIGHT_ADC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:	WM8990_RIGHT_DAC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:	WM8990_RIGHT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.c:	WM8990_RIGHT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_ACGAIN_MASK                      0x0007  /* ACGAIN - [2:0] */
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_ACGAIN_SHIFT			0
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_DCGAIN_MASK                      0x0007  /* DCGAIN - [5:3] */
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_DCGAIN_SHIFT			3
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_LEFT_ADC_DIGITAL_VOLUME          0x0F
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_LEFT_DAC_DIGITAL_VOLUME          0x0B
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_LEFT_LINE_INPUT_1_2_VOLUME       0x18
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_LEFT_LINE_INPUT_3_4_VOLUME       0x19
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_LEFT_OPGA_VOLUME                 0x20
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_LEFT_OUTPUT_VOLUME               0x1C
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_LINE_OUTPUTS_VOLUME              0x1E
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_OUT3_4_VOLUME                    0x1F
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_RIGHT_ADC_DIGITAL_VOLUME         0x10
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_RIGHT_DAC_DIGITAL_VOLUME         0x0C
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_RIGHT_LINE_INPUT_1_2_VOLUME      0x1A
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_RIGHT_LINE_INPUT_3_4_VOLUME      0x1B
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_RIGHT_OPGA_VOLUME                0x21
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_RIGHT_OUTPUT_VOLUME              0x1D
/root/machinex/sound/soc/codecs/wm8990.h:#define WM8990_SPEAKER_VOLUME                   0x22
/root/machinex/sound/soc/codecs/wm8991.c:	/* now hit the volume update bits (always bit 8) */
/root/machinex/sound/soc/codecs/wm8991.c:	snd_soc_write(codec, WM8991_LEFT_OUTPUT_VOLUME, 0x50 | (1<<8));
/root/machinex/sound/soc/codecs/wm8991.c:	snd_soc_write(codec, WM8991_RIGHT_OUTPUT_VOLUME, 0x50 | (1<<8));
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("LIN12 Mute Switch", WM8991_LEFT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("LIN12 ZC Switch", WM8991_LEFT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("LIN34 Mute Switch", WM8991_LEFT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("LIN34 ZC Switch", WM8991_LEFT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("LON Mute Switch", WM8991_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("LOP Attenuation Switch", WM8991_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("LOPGA ZC Switch", WM8991_LEFT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("LOP Mute Switch", WM8991_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("LOUT ZC", WM8991_LEFT_OUTPUT_VOLUME, WM8991_LOZC_BIT, 1, 0),
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("OUT3 Attenuation Switch", WM8991_OUT3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("OUT3 Mute Switch", WM8991_OUT3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("OUT4 Attenuation Switch", WM8991_OUT3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("OUT4 Mute Switch", WM8991_OUT3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("RIN12 Mute Switch", WM8991_RIGHT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("RIN12 ZC Switch", WM8991_RIGHT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("RIN34 Mute Switch", WM8991_RIGHT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("RIN34 ZC Switch", WM8991_RIGHT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("RON Mute Switch", WM8991_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("ROP Attenuation Switch", WM8991_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("ROPGA ZC Switch", WM8991_RIGHT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("ROP Mute Switch", WM8991_LINE_OUTPUTS_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("ROUT ZC", WM8991_RIGHT_OUTPUT_VOLUME, WM8991_ROZC_BIT, 1, 0),
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_SINGLE("Speaker Output Attenuation Volume", WM8991_SPEAKER_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_WM899X_OUTPGA_SINGLE_R_TLV("LOPGA Volume", WM8991_LEFT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_WM899X_OUTPGA_SINGLE_R_TLV("LOUT Volume", WM8991_LEFT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_WM899X_OUTPGA_SINGLE_R_TLV("ROPGA Volume", WM8991_RIGHT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:	SOC_WM899X_OUTPGA_SINGLE_R_TLV("ROUT Volume", WM8991_RIGHT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:		WM8991_ACGAIN_SHIFT, WM8991_ACGAIN_MASK, 0),
/root/machinex/sound/soc/codecs/wm8991.c:		WM8991_DCGAIN_SHIFT, WM8991_DCGAIN_MASK, 0),
/root/machinex/sound/soc/codecs/wm8991.c:		WM8991_LEFT_ADC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:		WM8991_LEFT_DAC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:		WM8991_LEFT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:		WM8991_LEFT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:		WM8991_RIGHT_ADC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:		WM8991_RIGHT_DAC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:		WM8991_RIGHT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.c:		WM8991_RIGHT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_ACGAIN_MASK                      0x0007  /* ACGAIN - [2:0] */
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_ACGAIN_SHIFT			0
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_DCGAIN_MASK                      0x0007  /* DCGAIN - [5:3] */
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_DCGAIN_SHIFT			3
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_LEFT_ADC_DIGITAL_VOLUME          0x0F
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_LEFT_DAC_DIGITAL_VOLUME          0x0B
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_LEFT_LINE_INPUT_1_2_VOLUME       0x18
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_LEFT_LINE_INPUT_3_4_VOLUME       0x19
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_LEFT_OPGA_VOLUME                 0x20
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_LEFT_OUTPUT_VOLUME               0x1C
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_LINE_OUTPUTS_VOLUME              0x1E
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_OUT3_4_VOLUME                    0x1F
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_RIGHT_ADC_DIGITAL_VOLUME         0x10
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_RIGHT_DAC_DIGITAL_VOLUME         0x0C
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_RIGHT_LINE_INPUT_1_2_VOLUME      0x1A
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_RIGHT_LINE_INPUT_3_4_VOLUME      0x1B
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_RIGHT_OPGA_VOLUME                0x21
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_RIGHT_OUTPUT_VOLUME              0x1D
/root/machinex/sound/soc/codecs/wm8991.h:#define WM8991_SPEAKER_VOLUME                   0x22
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_HPOUT2_VOLUME:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_LEFT_ADC_DIGITAL_VOLUME:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_LEFT_DAC_DIGITAL_VOLUME:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_LEFT_LINE_INPUT_1_2_VOLUME:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_LEFT_LINE_INPUT_3_4_VOLUME:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_LEFT_OPGA_VOLUME:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_LEFT_OUTPUT_VOLUME:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_LINE_OUTPUTS_VOLUME:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_RIGHT_ADC_DIGITAL_VOLUME:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_RIGHT_DAC_DIGITAL_VOLUME:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_RIGHT_LINE_INPUT_1_2_VOLUME:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_RIGHT_LINE_INPUT_3_4_VOLUME:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_RIGHT_OPGA_VOLUME:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_RIGHT_OUTPUT_VOLUME:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_SPEAKER_VOLUME_LEFT:
/root/machinex/sound/soc/codecs/wm8993.c:	case WM8993_SPEAKER_VOLUME_RIGHT:
/root/machinex/sound/soc/codecs/wm8993.c:	/* Latch volume update bits and default ZC on */
/root/machinex/sound/soc/codecs/wm8993.c:	snd_soc_update_bits(codec, WM8993_RIGHT_ADC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8993.c:	snd_soc_update_bits(codec, WM8993_RIGHT_DAC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8993.c:SOC_DOUBLE_R_TLV("Capture Volume", WM8993_LEFT_ADC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8993.c:SOC_DOUBLE_R_TLV("Playback Volume", WM8993_LEFT_DAC_DIGITAL_VOLUME,
/root/machinex/sound/soc/codecs/wm8993.c:		 WM8993_RIGHT_ADC_DIGITAL_VOLUME, 1, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8993.c:		 WM8993_RIGHT_DAC_DIGITAL_VOLUME, 1, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_DRC_MAXGAIN_MASK                 0x0003  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_DRC_MAXGAIN_SHIFT                     0  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_DRC_MAXGAIN_WIDTH                     2  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_DRC_MINGAIN_MASK                 0x000C  /* DRC_MINGAIN - [3:2] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_DRC_MINGAIN_SHIFT                     2  /* DRC_MINGAIN - [3:2] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_DRC_MINGAIN_WIDTH                     2  /* DRC_MINGAIN - [3:2] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_DRC_STARTUP_GAIN_MASK            0x1F00  /* DRC_STARTUP_GAIN - [12:8] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_DRC_STARTUP_GAIN_SHIFT                8  /* DRC_STARTUP_GAIN - [12:8] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_DRC_STARTUP_GAIN_WIDTH                5  /* DRC_STARTUP_GAIN - [12:8] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B1_GAIN_MASK                  0x001F  /* EQ_B1_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B1_GAIN_SHIFT                      0  /* EQ_B1_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B1_GAIN_WIDTH                      5  /* EQ_B1_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B2_GAIN_MASK                  0x001F  /* EQ_B2_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B2_GAIN_SHIFT                      0  /* EQ_B2_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B2_GAIN_WIDTH                      5  /* EQ_B2_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B3_GAIN_MASK                  0x001F  /* EQ_B3_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B3_GAIN_SHIFT                      0  /* EQ_B3_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B3_GAIN_WIDTH                      5  /* EQ_B3_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B4_GAIN_MASK                  0x001F  /* EQ_B4_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B4_GAIN_SHIFT                      0  /* EQ_B4_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B4_GAIN_WIDTH                      5  /* EQ_B4_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B5_GAIN_MASK                  0x001F  /* EQ_B5_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B5_GAIN_SHIFT                      0  /* EQ_B5_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_EQ_B5_GAIN_WIDTH                      5  /* EQ_B5_GAIN - [4:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_FLL_GAIN_MASK                    0x000F  /* FLL_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_FLL_GAIN_SHIFT                        0  /* FLL_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_FLL_GAIN_WIDTH                        4  /* FLL_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_HPOUT2_VOLUME                    0x1F
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_LEFT_ADC_DIGITAL_VOLUME          0x0F
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_LEFT_DAC_DIGITAL_VOLUME          0x0B
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_LEFT_LINE_INPUT_1_2_VOLUME       0x18
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_LEFT_LINE_INPUT_3_4_VOLUME       0x19
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_LEFT_OPGA_VOLUME                 0x20
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_LEFT_OUTPUT_VOLUME               0x1C
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_LINE_OUTPUTS_VOLUME              0x1E
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_RIGHT_ADC_DIGITAL_VOLUME         0x10
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_RIGHT_DAC_DIGITAL_VOLUME         0x0C
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_RIGHT_LINE_INPUT_1_2_VOLUME      0x1A
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_RIGHT_LINE_INPUT_3_4_VOLUME      0x1B
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_RIGHT_OPGA_VOLUME                0x21
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_RIGHT_OUTPUT_VOLUME              0x1D
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_SPEAKER_VOLUME_LEFT              0x26
/root/machinex/sound/soc/codecs/wm8993.h:#define WM8993_SPEAKER_VOLUME_RIGHT             0x27
/root/machinex/sound/soc/codecs/wm8994.c:			    1 << WM8994_AIF1DAC1_3D_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm8994.c:			    1 << WM8994_AIF1DAC1_3D_GAIN_SHIFT);
/root/machinex/sound/soc/codecs/wm8994.c:			    1 << WM8994_AIF1DAC2_3D_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm8994.c:			    1 << WM8994_AIF1DAC2_3D_GAIN_SHIFT);
/root/machinex/sound/soc/codecs/wm8994.c:			    1 << WM8994_AIF2DAC_3D_GAIN_SHIFT,
/root/machinex/sound/soc/codecs/wm8994.c:			    1 << WM8994_AIF2DAC_3D_GAIN_SHIFT);
/root/machinex/sound/soc/codecs/wm8994.c:	/* Latch volume update bits */
/root/machinex/sound/soc/codecs/wm8994.c:	 * range being provided - if that happens loop again.
/root/machinex/sound/soc/codecs/wm8994.c:SOC_DOUBLE_R("DAC1 Switch", WM8994_DAC1_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_DOUBLE_R("DAC2 Switch", WM8994_DAC2_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_DOUBLE_R_TLV("AIF1ADC1 Volume", WM8994_AIF1_ADC1_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_DOUBLE_R_TLV("AIF1ADC2 Volume", WM8994_AIF1_ADC2_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_DOUBLE_R_TLV("AIF1DAC1 Volume", WM8994_AIF1_DAC1_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_DOUBLE_R_TLV("AIF1DAC2 Volume", WM8994_AIF1_DAC2_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_DOUBLE_R_TLV("AIF2ADC Volume", WM8994_AIF2_ADC_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_DOUBLE_R_TLV("AIF2DAC Volume", WM8994_AIF2_DAC_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_DOUBLE_R_TLV("DAC1 Volume", WM8994_DAC1_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_DOUBLE_R_TLV("DAC2 Volume", WM8994_DAC2_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE("AIF1DAC1 EQ Switch", WM8994_AIF1_DAC1_EQ_GAINS_1, 0, 1, 0),
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE("AIF1DAC2 EQ Switch", WM8994_AIF1_DAC2_EQ_GAINS_1, 0, 1, 0),
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE("AIF2 EQ Switch", WM8994_AIF2_EQ_GAINS_1, 0, 1, 0),
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF1DAC1 EQ1 Volume", WM8994_AIF1_DAC1_EQ_GAINS_1, 11, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF1DAC1 EQ2 Volume", WM8994_AIF1_DAC1_EQ_GAINS_1, 6, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF1DAC1 EQ3 Volume", WM8994_AIF1_DAC1_EQ_GAINS_1, 1, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF1DAC1 EQ4 Volume", WM8994_AIF1_DAC1_EQ_GAINS_2, 11, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF1DAC1 EQ5 Volume", WM8994_AIF1_DAC1_EQ_GAINS_2, 6, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF1DAC2 EQ1 Volume", WM8994_AIF1_DAC2_EQ_GAINS_1, 11, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF1DAC2 EQ2 Volume", WM8994_AIF1_DAC2_EQ_GAINS_1, 6, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF1DAC2 EQ3 Volume", WM8994_AIF1_DAC2_EQ_GAINS_1, 1, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF1DAC2 EQ4 Volume", WM8994_AIF1_DAC2_EQ_GAINS_2, 11, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF1DAC2 EQ5 Volume", WM8994_AIF1_DAC2_EQ_GAINS_2, 6, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF2 EQ1 Volume", WM8994_AIF2_EQ_GAINS_1, 11, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF2 EQ2 Volume", WM8994_AIF2_EQ_GAINS_1, 6, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF2 EQ3 Volume", WM8994_AIF2_EQ_GAINS_1, 1, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF2 EQ4 Volume", WM8994_AIF2_EQ_GAINS_2, 11, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("AIF2 EQ5 Volume", WM8994_AIF2_EQ_GAINS_2, 6, 31, 0,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("DAC1 Left Sidetone Volume", WM8994_DAC1_MIXER_VOLUMES,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("DAC1 Right Sidetone Volume", WM8994_DAC1_MIXER_VOLUMES,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("DAC2 Left Sidetone Volume", WM8994_DAC2_MIXER_VOLUMES,
/root/machinex/sound/soc/codecs/wm8994.c:SOC_SINGLE_TLV("DAC2 Right Sidetone Volume", WM8994_DAC2_MIXER_VOLUMES,
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_AIF1_ADC1_LEFT_VOLUME, WM8994_AIF1ADC1_VU },
/root/machinex/sound/soc/codecs/wm8994.c:		 WM8994_AIF1_ADC1_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_AIF1_ADC1_RIGHT_VOLUME, WM8994_AIF1ADC1_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_AIF1_ADC2_LEFT_VOLUME, WM8994_AIF1ADC2_VU },
/root/machinex/sound/soc/codecs/wm8994.c:		 WM8994_AIF1_ADC2_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_AIF1_ADC2_RIGHT_VOLUME, WM8994_AIF1ADC2_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	WM8994_AIF1_DAC1_EQ_GAINS_1,
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_AIF1_DAC1_LEFT_VOLUME, WM8994_AIF1DAC1_VU },
/root/machinex/sound/soc/codecs/wm8994.c:		 WM8994_AIF1_DAC1_RIGHT_VOLUME, 1, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_AIF1_DAC1_RIGHT_VOLUME, WM8994_AIF1DAC1_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	WM8994_AIF1_DAC2_EQ_GAINS_1,
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_AIF1_DAC2_LEFT_VOLUME, WM8994_AIF1DAC2_VU },
/root/machinex/sound/soc/codecs/wm8994.c:		 WM8994_AIF1_DAC2_RIGHT_VOLUME, 1, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_AIF1_DAC2_RIGHT_VOLUME, WM8994_AIF1DAC2_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_AIF2_ADC_LEFT_VOLUME, WM8994_AIF2ADC_VU },
/root/machinex/sound/soc/codecs/wm8994.c:		 WM8994_AIF2_ADC_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_AIF2_ADC_RIGHT_VOLUME, WM8994_AIF1ADC2_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_AIF2_DAC_LEFT_VOLUME, WM8994_AIF2DAC_VU },
/root/machinex/sound/soc/codecs/wm8994.c:		 WM8994_AIF2_DAC_RIGHT_VOLUME, 1, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_AIF2_DAC_RIGHT_VOLUME, WM8994_AIF2DAC_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	WM8994_AIF2_EQ_GAINS_1,
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_DAC1_LEFT_VOLUME, WM8994_DAC1_VU },
/root/machinex/sound/soc/codecs/wm8994.c:		 WM8994_DAC1_RIGHT_VOLUME, 1, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8994.c:	     WM8994_DAC1_RIGHT_VOLUME, 9, 1, 1),
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_DAC1_RIGHT_VOLUME, WM8994_DAC1_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_DAC2_LEFT_VOLUME, WM8994_DAC2_VU },
/root/machinex/sound/soc/codecs/wm8994.c:		 WM8994_DAC2_RIGHT_VOLUME, 1, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8994.c:	     WM8994_DAC2_RIGHT_VOLUME, 9, 1, 1),
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_DAC2_RIGHT_VOLUME, WM8994_DAC2_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_LEFT_LINE_INPUT_1_2_VOLUME, WM8994_IN1_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_LEFT_LINE_INPUT_3_4_VOLUME, WM8994_IN2_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_LEFT_OPGA_VOLUME, WM8994_MIXOUT_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_LEFT_OUTPUT_VOLUME, WM8994_HPOUT1_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_RIGHT_LINE_INPUT_1_2_VOLUME, WM8994_IN1_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_RIGHT_LINE_INPUT_3_4_VOLUME, WM8994_IN2_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_RIGHT_OPGA_VOLUME, WM8994_MIXOUT_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_RIGHT_OUTPUT_VOLUME, WM8994_HPOUT1_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_SPEAKER_VOLUME_LEFT, WM8994_SPKOUT_VU },
/root/machinex/sound/soc/codecs/wm8994.c:	{ WM8994_SPEAKER_VOLUME_RIGHT, WM8994_SPKOUT_VU },
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF1_ADC1_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF1_ADC1_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF1_ADC2_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF1_ADC2_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF1_DAC1_EQ_GAINS_1:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF1_DAC1_EQ_GAINS_2:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF1_DAC1_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF1_DAC1_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF1_DAC2_EQ_GAINS_1:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF1_DAC2_EQ_GAINS_2:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF1_DAC2_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF1_DAC2_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF2_ADC_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF2_ADC_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF2_DAC_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF2_DAC_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF2_EQ_GAINS_1:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_AIF2_EQ_GAINS_2:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_DAC1_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_DAC1_MIXER_VOLUMES:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_DAC1_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_DAC2_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_DAC2_MIXER_VOLUMES:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_DAC2_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_LEFT_LINE_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_OUTPUT_VOLUME_ZC_1:
/root/machinex/sound/soc/codecs/wm8995.c:	case WM8995_RIGHT_LINE_INPUT_1_VOLUME:
/root/machinex/sound/soc/codecs/wm8995.c:	/* Latch volume updates (right only; we always do left then right). */
/root/machinex/sound/soc/codecs/wm8995.c:	snd_soc_update_bits(codec, WM8995_AIF1_ADC1_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	snd_soc_update_bits(codec, WM8995_AIF1_ADC2_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	snd_soc_update_bits(codec, WM8995_AIF1_DAC1_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	snd_soc_update_bits(codec, WM8995_AIF1_DAC2_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	snd_soc_update_bits(codec, WM8995_AIF2_ADC_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	snd_soc_update_bits(codec, WM8995_AIF2_DAC_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	snd_soc_update_bits(codec, WM8995_DAC1_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	snd_soc_update_bits(codec, WM8995_DAC2_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	snd_soc_update_bits(codec, WM8995_RIGHT_LINE_INPUT_1_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	SOC_DOUBLE_R("DAC1 Switch", WM8995_DAC1_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	SOC_DOUBLE_R("DAC2 Switch", WM8995_DAC2_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	SOC_DOUBLE_R_TLV("AIF1ADC1 Volume", WM8995_AIF1_ADC1_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	SOC_DOUBLE_R_TLV("AIF1ADC2 Volume", WM8995_AIF1_ADC2_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	SOC_DOUBLE_R_TLV("AIF1DAC1 Volume", WM8995_AIF1_DAC1_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	SOC_DOUBLE_R_TLV("AIF1DAC2 Volume", WM8995_AIF1_DAC2_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	SOC_DOUBLE_R_TLV("AIF2ADC Volume", WM8995_AIF2_ADC_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	SOC_DOUBLE_R_TLV("AIF2DAC Volume", WM8995_AIF2_DAC_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	SOC_DOUBLE_R_TLV("DAC1 Volume", WM8995_DAC1_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	SOC_DOUBLE_R_TLV("DAC2 Volume", WM8995_DAC2_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	SOC_DOUBLE_R_TLV("IN1LR Volume", WM8995_LEFT_LINE_INPUT_1_VOLUME,
/root/machinex/sound/soc/codecs/wm8995.c:	SOC_DOUBLE_TLV("DAC1 Sidetone Volume", WM8995_DAC1_MIXER_VOLUMES, 0, 5,
/root/machinex/sound/soc/codecs/wm8995.c:	SOC_DOUBLE_TLV("DAC2 Sidetone Volume", WM8995_DAC2_MIXER_VOLUMES, 0, 5,
/root/machinex/sound/soc/codecs/wm8995.c:		WM8995_AIF1_ADC1_RIGHT_VOLUME, 0, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8995.c:		WM8995_AIF1_ADC2_RIGHT_VOLUME, 0, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8995.c:		WM8995_AIF1_DAC1_RIGHT_VOLUME, 0, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8995.c:		WM8995_AIF1_DAC2_RIGHT_VOLUME, 0, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8995.c:		WM8995_AIF2_ADC_RIGHT_VOLUME, 0, 96, 0, digital_tlv)
/root/machinex/sound/soc/codecs/wm8995.c:		WM8995_AIF2_DAC_RIGHT_VOLUME, 0, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8995.c:		WM8995_DAC1_RIGHT_VOLUME, 0, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8995.c:		WM8995_DAC1_RIGHT_VOLUME, 9, 1, 1),
/root/machinex/sound/soc/codecs/wm8995.c:		WM8995_DAC2_RIGHT_VOLUME, 0, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8995.c:		WM8995_DAC2_RIGHT_VOLUME, 9, 1, 1),
/root/machinex/sound/soc/codecs/wm8995.c:		WM8995_RIGHT_LINE_INPUT_1_VOLUME, 0, 31, 0, in1lr_pga_tlv),
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1_ADC1_LEFT_VOLUME            0x400
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1_ADC1_RIGHT_VOLUME           0x401
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1_ADC2_LEFT_VOLUME            0x404
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1_ADC2_RIGHT_VOLUME           0x405
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_3D_GAIN_MASK            0x3E00	/* AIF1DAC1_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_3D_GAIN_SHIFT                9	/* AIF1DAC1_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_3D_GAIN_WIDTH                5	/* AIF1DAC1_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B1_GAIN_MASK         0xF800	/* AIF1DAC1_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B1_GAIN_SHIFT            11	/* AIF1DAC1_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B1_GAIN_WIDTH             5	/* AIF1DAC1_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B2_GAIN_MASK         0x07C0	/* AIF1DAC1_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B2_GAIN_SHIFT             6	/* AIF1DAC1_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B2_GAIN_WIDTH             5	/* AIF1DAC1_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B3_GAIN_MASK         0x003E	/* AIF1DAC1_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B3_GAIN_SHIFT             1	/* AIF1DAC1_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B3_GAIN_WIDTH             5	/* AIF1DAC1_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B4_GAIN_MASK         0xF800	/* AIF1DAC1_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B4_GAIN_SHIFT            11	/* AIF1DAC1_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B4_GAIN_WIDTH             5	/* AIF1DAC1_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B5_GAIN_MASK         0x07C0	/* AIF1DAC1_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B5_GAIN_SHIFT             6	/* AIF1DAC1_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC1_EQ_B5_GAIN_WIDTH             5	/* AIF1DAC1_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1_DAC1_EQ_GAINS_1             0x480
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1_DAC1_EQ_GAINS_2             0x481
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1_DAC1_LEFT_VOLUME            0x402
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1_DAC1_RIGHT_VOLUME           0x403
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_3D_GAIN_MASK            0x3E00	/* AIF1DAC2_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_3D_GAIN_SHIFT                9	/* AIF1DAC2_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_3D_GAIN_WIDTH                5	/* AIF1DAC2_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B1_GAIN_MASK         0xF800	/* AIF1DAC2_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B1_GAIN_SHIFT            11	/* AIF1DAC2_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B1_GAIN_WIDTH             5	/* AIF1DAC2_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B2_GAIN_MASK         0x07C0	/* AIF1DAC2_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B2_GAIN_SHIFT             6	/* AIF1DAC2_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B2_GAIN_WIDTH             5	/* AIF1DAC2_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B3_GAIN_MASK         0x003E	/* AIF1DAC2_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B3_GAIN_SHIFT             1	/* AIF1DAC2_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B3_GAIN_WIDTH             5	/* AIF1DAC2_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B4_GAIN_MASK         0xF800	/* AIF1DAC2_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B4_GAIN_SHIFT            11	/* AIF1DAC2_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B4_GAIN_WIDTH             5	/* AIF1DAC2_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B5_GAIN_MASK         0x07C0	/* AIF1DAC2_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B5_GAIN_SHIFT             6	/* AIF1DAC2_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DAC2_EQ_B5_GAIN_WIDTH             5	/* AIF1DAC2_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1_DAC2_EQ_GAINS_1             0x4A0
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1_DAC2_EQ_GAINS_2             0x4A1
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1_DAC2_LEFT_VOLUME            0x406
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1_DAC2_RIGHT_VOLUME           0x407
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC1_MAXGAIN_MASK            0x0003	/* AIF1DRC1_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC1_MAXGAIN_SHIFT                0	/* AIF1DRC1_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC1_MAXGAIN_WIDTH                2	/* AIF1DRC1_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC1_MINGAIN_MASK            0x001C	/* AIF1DRC1_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC1_MINGAIN_SHIFT                2	/* AIF1DRC1_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC1_MINGAIN_WIDTH                3	/* AIF1DRC1_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC1_NG_MINGAIN_MASK         0xF000	/* AIF1DRC1_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC1_NG_MINGAIN_SHIFT            12	/* AIF1DRC1_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC1_NG_MINGAIN_WIDTH             4	/* AIF1DRC1_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC2_MAXGAIN_MASK            0x0003	/* AIF1DRC2_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC2_MAXGAIN_SHIFT                0	/* AIF1DRC2_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC2_MAXGAIN_WIDTH                2	/* AIF1DRC2_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC2_MINGAIN_MASK            0x001C	/* AIF1DRC2_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC2_MINGAIN_SHIFT                2	/* AIF1DRC2_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC2_MINGAIN_WIDTH                3	/* AIF1DRC2_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC2_NG_MINGAIN_MASK         0xF000	/* AIF1DRC2_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC2_NG_MINGAIN_SHIFT            12	/* AIF1DRC2_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF1DRC2_NG_MINGAIN_WIDTH             4	/* AIF1DRC2_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2_ADC_LEFT_VOLUME             0x500
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2_ADC_RIGHT_VOLUME            0x501
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_3D_GAIN_MASK             0x3E00	/* AIF2DAC_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_3D_GAIN_SHIFT                 9	/* AIF2DAC_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_3D_GAIN_WIDTH                 5	/* AIF2DAC_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B1_GAIN_MASK          0xF800	/* AIF2DAC_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B1_GAIN_SHIFT             11	/* AIF2DAC_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B1_GAIN_WIDTH              5	/* AIF2DAC_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B2_GAIN_MASK          0x07C0	/* AIF2DAC_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B2_GAIN_SHIFT              6	/* AIF2DAC_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B2_GAIN_WIDTH              5	/* AIF2DAC_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B3_GAIN_MASK          0x003E	/* AIF2DAC_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B3_GAIN_SHIFT              1	/* AIF2DAC_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B3_GAIN_WIDTH              5	/* AIF2DAC_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B4_GAIN_MASK          0xF800	/* AIF2DAC_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B4_GAIN_SHIFT             11	/* AIF2DAC_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B4_GAIN_WIDTH              5	/* AIF2DAC_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B5_GAIN_MASK          0x07C0	/* AIF2DAC_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B5_GAIN_SHIFT              6	/* AIF2DAC_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DAC_EQ_B5_GAIN_WIDTH              5	/* AIF2DAC_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2_DAC_LEFT_VOLUME             0x502
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2_DAC_RIGHT_VOLUME            0x503
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DRC_MAXGAIN_MASK             0x0003	/* AIF2DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DRC_MAXGAIN_SHIFT                 0	/* AIF2DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DRC_MAXGAIN_WIDTH                 2	/* AIF2DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DRC_MINGAIN_MASK             0x001C	/* AIF2DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DRC_MINGAIN_SHIFT                 2	/* AIF2DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DRC_MINGAIN_WIDTH                 3	/* AIF2DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DRC_NG_MINGAIN_MASK          0xF000	/* AIF2DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DRC_NG_MINGAIN_SHIFT             12	/* AIF2DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2DRC_NG_MINGAIN_WIDTH              4	/* AIF2DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2_EQ_GAINS_1                  0x580
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_AIF2_EQ_GAINS_2                  0x581
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_DAC1_LEFT_VOLUME                 0x18
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_DAC1_MIXER_VOLUMES               0x600
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_DAC1_RIGHT_VOLUME                0x19
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_DAC2_LEFT_VOLUME                 0x1A
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_DAC2_MIXER_VOLUMES               0x603
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_DAC2_RIGHT_VOLUME                0x1B
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_FLL1_LOOP_GAIN_MASK              0x000F	/* FLL1_LOOP_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_FLL1_LOOP_GAIN_SHIFT                  0	/* FLL1_LOOP_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_FLL1_LOOP_GAIN_WIDTH                  4	/* FLL1_LOOP_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_FLL2_LOOP_GAIN_MASK              0x000F	/* FLL2_LOOP_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_FLL2_LOOP_GAIN_SHIFT                  0	/* FLL2_LOOP_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_FLL2_LOOP_GAIN_WIDTH                  4	/* FLL2_LOOP_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_LEFT_LINE_INPUT_1_VOLUME         0x10
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_OUTPUT_VOLUME_ZC_1               0x1C
/root/machinex/sound/soc/codecs/wm8995.h:#define WM8995_RIGHT_LINE_INPUT_1_VOLUME        0x11
/root/machinex/sound/soc/codecs/wm8996.c:		base = WM8996_DSP1_RX_EQ_GAINS_1;
/root/machinex/sound/soc/codecs/wm8996.c:		base = WM8996_DSP1_RX_EQ_GAINS_2;
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DAC1_HPOUT1_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DAC1_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DAC1_MIXER_VOLUMES:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DAC1_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DAC2_HPOUT2_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DAC2_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DAC2_MIXER_VOLUMES:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DAC2_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DSP1_RX_EQ_GAINS_1:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DSP1_RX_EQ_GAINS_2:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DSP1_RX_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DSP1_RX_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DSP1_TX_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DSP1_TX_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DSP2_RX_EQ_GAINS_1:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DSP2_RX_EQ_GAINS_2:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DSP2_RX_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DSP2_RX_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DSP2_TX_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_DSP2_TX_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_LEFT_LINE_INPUT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_OUTPUT1_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_OUTPUT1_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_OUTPUT2_LEFT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_OUTPUT2_RIGHT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_PDM_SPEAKER_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:	case WM8996_RIGHT_LINE_INPUT_VOLUME:
/root/machinex/sound/soc/codecs/wm8996.c:			    fll_div.fll_loop_gain);
/root/machinex/sound/soc/codecs/wm8996.c:		fll_div->fll_loop_gain = 0;
/root/machinex/sound/soc/codecs/wm8996.c:		fll_div->fll_loop_gain = 5;
/root/machinex/sound/soc/codecs/wm8996.c:	/* Latch volume update bits */
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_DAC1_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_DAC1_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_DAC2_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_DAC2_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_DSP1_RX_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_DSP1_RX_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_DSP1_TX_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_DSP1_TX_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_DSP2_RX_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_DSP2_RX_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_DSP2_TX_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_DSP2_TX_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_LEFT_LINE_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_OUTPUT1_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_OUTPUT1_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_OUTPUT2_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_OUTPUT2_RIGHT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:	snd_soc_update_bits(codec, WM8996_RIGHT_LINE_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_R("Capture ZC Switch", WM8996_LEFT_LINE_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_R("DAC1 Switch", WM8996_DAC1_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_R("DAC2 Switch", WM8996_DAC2_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_R("Output 1 ZC Switch",  WM8996_OUTPUT1_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_R("Output 2 ZC Switch",  WM8996_OUTPUT2_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_R_TLV("Capture Volume", WM8996_LEFT_LINE_INPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_R_TLV("DAC1 Volume", WM8996_DAC1_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_R_TLV("DAC2 Volume", WM8996_DAC2_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_R_TLV("DSP1 Capture Volume", WM8996_DSP1_TX_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_R_TLV("DSP1 Playback Volume", WM8996_DSP1_RX_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_R_TLV("DSP2 Capture Volume", WM8996_DSP2_TX_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_R_TLV("DSP2 Playback Volume", WM8996_DSP2_RX_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_R_TLV("Output 1 Volume", WM8996_OUTPUT1_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_R_TLV("Output 2 Volume", WM8996_OUTPUT2_LEFT_VOLUME,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_TLV("DAC1 Sidetone Volume", WM8996_DAC1_MIXER_VOLUMES,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_TLV("DAC2 Sidetone Volume", WM8996_DAC2_MIXER_VOLUMES,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_TLV("Digital Output 1 Volume", WM8996_DAC1_HPOUT1_VOLUME, 0, 4,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_TLV("Digital Output 2 Volume", WM8996_DAC2_HPOUT2_VOLUME, 0, 4,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_DOUBLE_TLV("Speaker Volume", WM8996_PDM_SPEAKER_VOLUME, 0, 4, 8, 0,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_SINGLE("DSP1 EQ Switch", WM8996_DSP1_RX_EQ_GAINS_1, 0, 1, 0),
/root/machinex/sound/soc/codecs/wm8996.c:SOC_SINGLE("DSP2 EQ Switch", WM8996_DSP2_RX_EQ_GAINS_1, 0, 1, 0),
/root/machinex/sound/soc/codecs/wm8996.c:SOC_SINGLE_TLV("DSP1 EQ B1 Volume", WM8996_DSP1_RX_EQ_GAINS_1, 11, 31, 0,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_SINGLE_TLV("DSP1 EQ B2 Volume", WM8996_DSP1_RX_EQ_GAINS_1, 6, 31, 0,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_SINGLE_TLV("DSP1 EQ B3 Volume", WM8996_DSP1_RX_EQ_GAINS_1, 1, 31, 0,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_SINGLE_TLV("DSP1 EQ B4 Volume", WM8996_DSP1_RX_EQ_GAINS_2, 11, 31, 0,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_SINGLE_TLV("DSP1 EQ B5 Volume", WM8996_DSP1_RX_EQ_GAINS_2, 6, 31, 0,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_SINGLE_TLV("DSP2 EQ B1 Volume", WM8996_DSP2_RX_EQ_GAINS_1, 11, 31, 0,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_SINGLE_TLV("DSP2 EQ B2 Volume", WM8996_DSP2_RX_EQ_GAINS_1, 6, 31, 0,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_SINGLE_TLV("DSP2 EQ B3 Volume", WM8996_DSP2_RX_EQ_GAINS_1, 1, 31, 0,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_SINGLE_TLV("DSP2 EQ B4 Volume", WM8996_DSP2_RX_EQ_GAINS_2, 11, 31, 0,
/root/machinex/sound/soc/codecs/wm8996.c:SOC_SINGLE_TLV("DSP2 EQ B5 Volume", WM8996_DSP2_RX_EQ_GAINS_2, 6, 31, 0,
/root/machinex/sound/soc/codecs/wm8996.c:	u16 fll_loop_gain;
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DAC1_HPOUT1_VOLUME, 0x88 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DAC1_LEFT_VOLUME, 0x2c0 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DAC1_MIXER_VOLUMES, 0x0 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DAC1_RIGHT_VOLUME, 0x2c0 },
/root/machinex/sound/soc/codecs/wm8996.c:		 WM8996_DAC1_RIGHT_VOLUME, 1, 112, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8996.c:	     WM8996_DAC1_RIGHT_VOLUME, 9, 1, 1),
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DAC2_HPOUT2_VOLUME, 0x88 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DAC2_LEFT_VOLUME, 0x2c0 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DAC2_MIXER_VOLUMES, 0x0 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DAC2_RIGHT_VOLUME, 0x2c0 },
/root/machinex/sound/soc/codecs/wm8996.c:		 WM8996_DAC2_RIGHT_VOLUME, 1, 112, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8996.c:	     WM8996_DAC2_RIGHT_VOLUME, 9, 1, 1),
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DSP1_RX_EQ_GAINS_1, 0x6318 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DSP1_RX_EQ_GAINS_2, 0x6300 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DSP1_RX_LEFT_VOLUME, 0xc0 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DSP1_RX_RIGHT_VOLUME, 0xc0 },
/root/machinex/sound/soc/codecs/wm8996.c:		 WM8996_DSP1_RX_RIGHT_VOLUME, 1, 112, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DSP1_TX_LEFT_VOLUME, 0xc0 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DSP1_TX_RIGHT_VOLUME, 0xc0 },
/root/machinex/sound/soc/codecs/wm8996.c:		 WM8996_DSP1_TX_RIGHT_VOLUME, 1, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DSP2_RX_EQ_GAINS_1, 0x6318 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DSP2_RX_EQ_GAINS_2, 0x6300 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DSP2_RX_LEFT_VOLUME, 0xc0 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DSP2_RX_RIGHT_VOLUME, 0xc0 },
/root/machinex/sound/soc/codecs/wm8996.c:		 WM8996_DSP2_RX_RIGHT_VOLUME, 1, 112, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DSP2_TX_LEFT_VOLUME, 0xc0 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_DSP2_TX_RIGHT_VOLUME, 0xc0 },
/root/machinex/sound/soc/codecs/wm8996.c:		 WM8996_DSP2_TX_RIGHT_VOLUME, 1, 96, 0, digital_tlv),
/root/machinex/sound/soc/codecs/wm8996.c:			    WM8996_FLL_N_MASK | WM8996_FLL_LOOP_GAIN_MASK,
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_LEFT_LINE_INPUT_VOLUME, 0x0 },
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_OUTPUT1_LEFT_VOLUME, 0x80 },
/root/machinex/sound/soc/codecs/wm8996.c:		 WM8996_OUTPUT1_RIGHT_VOLUME, 0, 12, 0, out_tlv),
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_OUTPUT1_RIGHT_VOLUME, 0x80 },
/root/machinex/sound/soc/codecs/wm8996.c:	     WM8996_OUTPUT1_RIGHT_VOLUME, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_OUTPUT2_LEFT_VOLUME, 0x80 },
/root/machinex/sound/soc/codecs/wm8996.c:		 WM8996_OUTPUT2_RIGHT_VOLUME, 0, 12, 0, out_tlv),
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_OUTPUT2_RIGHT_VOLUME, 0x80 },
/root/machinex/sound/soc/codecs/wm8996.c:	     WM8996_OUTPUT2_RIGHT_VOLUME, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_PDM_SPEAKER_VOLUME, 0x66 },
/root/machinex/sound/soc/codecs/wm8996.c:		 WM8996_RIGHT_LINE_INPUT_VOLUME, 0, 31, 0, inpga_tlv),
/root/machinex/sound/soc/codecs/wm8996.c:	{ WM8996_RIGHT_LINE_INPUT_VOLUME, 0x0 },
/root/machinex/sound/soc/codecs/wm8996.c:	     WM8996_RIGHT_LINE_INPUT_VOLUME, 5, 1, 0),
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DAC1_HPOUT1_VOLUME               0x15
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DAC1_LEFT_VOLUME                 0x18
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DAC1_MIXER_VOLUMES               0x600
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DAC1_RIGHT_VOLUME                0x19
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DAC2_HPOUT2_VOLUME               0x16
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DAC2_LEFT_VOLUME                 0x1A
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DAC2_MIXER_VOLUMES               0x603
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DAC2_RIGHT_VOLUME                0x1B
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1DRC_MAXGAIN_MASK             0x0003  /* DSP1DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1DRC_MAXGAIN_SHIFT                 0  /* DSP1DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1DRC_MAXGAIN_WIDTH                 2  /* DSP1DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1DRC_MINGAIN_MASK             0x001C  /* DSP1DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1DRC_MINGAIN_SHIFT                 2  /* DSP1DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1DRC_MINGAIN_WIDTH                 3  /* DSP1DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1DRC_NG_MINGAIN_MASK          0xF000  /* DSP1DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1DRC_NG_MINGAIN_SHIFT             12  /* DSP1DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1DRC_NG_MINGAIN_WIDTH              4  /* DSP1DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_3D_GAIN_MASK              0x3E00  /* DSP1RX_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_3D_GAIN_SHIFT                  9  /* DSP1RX_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_3D_GAIN_WIDTH                  5  /* DSP1RX_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B1_GAIN_MASK           0xF800  /* DSP1RX_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B1_GAIN_SHIFT              11  /* DSP1RX_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B1_GAIN_WIDTH               5  /* DSP1RX_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B2_GAIN_MASK           0x07C0  /* DSP1RX_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B2_GAIN_SHIFT               6  /* DSP1RX_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B2_GAIN_WIDTH               5  /* DSP1RX_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B3_GAIN_MASK           0x003E  /* DSP1RX_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B3_GAIN_SHIFT               1  /* DSP1RX_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B3_GAIN_WIDTH               5  /* DSP1RX_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B4_GAIN_MASK           0xF800  /* DSP1RX_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B4_GAIN_SHIFT              11  /* DSP1RX_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B4_GAIN_WIDTH               5  /* DSP1RX_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B5_GAIN_MASK           0x07C0  /* DSP1RX_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B5_GAIN_SHIFT               6  /* DSP1RX_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1RX_EQ_B5_GAIN_WIDTH               5  /* DSP1RX_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1_RX_EQ_GAINS_1               0x480
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1_RX_EQ_GAINS_2               0x481
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1_RX_LEFT_VOLUME              0x402
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1_RX_RIGHT_VOLUME             0x403
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1_TX_LEFT_VOLUME              0x400
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP1_TX_RIGHT_VOLUME             0x401
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2DRC_MAXGAIN_MASK             0x0003  /* DSP2DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2DRC_MAXGAIN_SHIFT                 0  /* DSP2DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2DRC_MAXGAIN_WIDTH                 2  /* DSP2DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2DRC_MINGAIN_MASK             0x001C  /* DSP2DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2DRC_MINGAIN_SHIFT                 2  /* DSP2DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2DRC_MINGAIN_WIDTH                 3  /* DSP2DRC_MINGAIN - [4:2] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2DRC_NG_MINGAIN_MASK          0xF000  /* DSP2DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2DRC_NG_MINGAIN_SHIFT             12  /* DSP2DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2DRC_NG_MINGAIN_WIDTH              4  /* DSP2DRC_NG_MINGAIN - [15:12] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_3D_GAIN_MASK              0x3E00  /* DSP2RX_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_3D_GAIN_SHIFT                  9  /* DSP2RX_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_3D_GAIN_WIDTH                  5  /* DSP2RX_3D_GAIN - [13:9] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B1_GAIN_MASK           0xF800  /* DSP2RX_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B1_GAIN_SHIFT              11  /* DSP2RX_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B1_GAIN_WIDTH               5  /* DSP2RX_EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B2_GAIN_MASK           0x07C0  /* DSP2RX_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B2_GAIN_SHIFT               6  /* DSP2RX_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B2_GAIN_WIDTH               5  /* DSP2RX_EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B3_GAIN_MASK           0x003E  /* DSP2RX_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B3_GAIN_SHIFT               1  /* DSP2RX_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B3_GAIN_WIDTH               5  /* DSP2RX_EQ_B3_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B4_GAIN_MASK           0xF800  /* DSP2RX_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B4_GAIN_SHIFT              11  /* DSP2RX_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B4_GAIN_WIDTH               5  /* DSP2RX_EQ_B4_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B5_GAIN_MASK           0x07C0  /* DSP2RX_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B5_GAIN_SHIFT               6  /* DSP2RX_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2RX_EQ_B5_GAIN_WIDTH               5  /* DSP2RX_EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2_RX_EQ_GAINS_1               0x580
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2_RX_EQ_GAINS_2               0x581
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2_RX_LEFT_VOLUME              0x502
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2_RX_RIGHT_VOLUME             0x503
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2_TX_LEFT_VOLUME              0x500
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_DSP2_TX_RIGHT_VOLUME             0x501
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_FLL_LOOP_GAIN_MASK               0x000F  /* FLL_LOOP_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_FLL_LOOP_GAIN_SHIFT                   0  /* FLL_LOOP_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_FLL_LOOP_GAIN_WIDTH                   4  /* FLL_LOOP_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_LEFT_LINE_INPUT_VOLUME           0x10
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_OUTPUT1_LEFT_VOLUME              0x1C
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_OUTPUT1_RIGHT_VOLUME             0x1D
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_OUTPUT2_LEFT_VOLUME              0x1E
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_OUTPUT2_RIGHT_VOLUME             0x1F
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_PDM_SPEAKER_VOLUME               0x803
/root/machinex/sound/soc/codecs/wm8996.h:#define WM8996_RIGHT_LINE_INPUT_VOLUME          0x11
/root/machinex/sound/soc/codecs/wm9081.c:	/* Set gain to the recommended value */
/root/machinex/sound/soc/codecs/wm9081.c:	/* Then bring CLK_SYS up again if it was disabled */
/root/machinex/sound/soc/codecs/wm9081.c:			    WM9081_FLL_GAIN_MASK, 0);
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_DRC_MAXGAIN_MASK                 0x0003  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_DRC_MAXGAIN_SHIFT                     0  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_DRC_MAXGAIN_WIDTH                     2  /* DRC_MAXGAIN - [1:0] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_DRC_MINGAIN_MASK                 0x000C  /* DRC_MINGAIN - [3:2] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_DRC_MINGAIN_SHIFT                     2  /* DRC_MINGAIN - [3:2] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_DRC_MINGAIN_WIDTH                     2  /* DRC_MINGAIN - [3:2] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_DRC_STARTUP_GAIN_MASK            0x07C0  /* DRC_STARTUP_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_DRC_STARTUP_GAIN_SHIFT                6  /* DRC_STARTUP_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_DRC_STARTUP_GAIN_WIDTH                5  /* DRC_STARTUP_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B1_GAIN_MASK                  0xF800  /* EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B1_GAIN_SHIFT                     11  /* EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B1_GAIN_WIDTH                      5  /* EQ_B1_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B2_GAIN_MASK                  0x07C0  /* EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B2_GAIN_SHIFT                      6  /* EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B2_GAIN_WIDTH                      5  /* EQ_B2_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B3_GAIN_MASK                  0xF800  /* EQ_B3_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B3_GAIN_SHIFT                     11  /* EQ_B3_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B3_GAIN_WIDTH                      5  /* EQ_B3_GAIN - [15:11] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B4_GAIN_MASK                  0x003E  /* EQ_B4_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B4_GAIN_SHIFT                      1  /* EQ_B4_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B4_GAIN_WIDTH                      5  /* EQ_B4_GAIN - [5:1] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B5_GAIN_MASK                  0x07C0  /* EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B5_GAIN_SHIFT                      6  /* EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_EQ_B5_GAIN_WIDTH                      5  /* EQ_B5_GAIN - [10:6] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_FLL_GAIN_MASK                    0x000F  /* FLL_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_FLL_GAIN_SHIFT                        0  /* FLL_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_FLL_GAIN_WIDTH                        4  /* FLL_GAIN - [3:0] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_SPK_ACGAIN_MASK                  0x0007  /* SPK_ACGAIN - [2:0] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_SPK_ACGAIN_SHIFT                      0  /* SPK_ACGAIN - [2:0] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_SPK_ACGAIN_WIDTH                      3  /* SPK_ACGAIN - [2:0] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_SPK_DCGAIN_MASK                  0x0038  /* SPK_DCGAIN - [5:3] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_SPK_DCGAIN_SHIFT                      3  /* SPK_DCGAIN - [5:3] */
/root/machinex/sound/soc/codecs/wm9081.h:#define WM9081_SPK_DCGAIN_WIDTH                      3  /* SPK_DCGAIN - [5:3] */
/root/machinex/sound/soc/codecs/wm9090.c:	case WM9090_IN1_LINE_INPUT_A_VOLUME:
/root/machinex/sound/soc/codecs/wm9090.c:	case WM9090_IN1_LINE_INPUT_B_VOLUME:
/root/machinex/sound/soc/codecs/wm9090.c:	case WM9090_IN2_LINE_INPUT_A_VOLUME:
/root/machinex/sound/soc/codecs/wm9090.c:	case WM9090_IN2_LINE_INPUT_B_VOLUME:
/root/machinex/sound/soc/codecs/wm9090.c:	case WM9090_LEFT_OUTPUT_VOLUME:
/root/machinex/sound/soc/codecs/wm9090.c:	case WM9090_RIGHT_OUTPUT_VOLUME:
/root/machinex/sound/soc/codecs/wm9090.c:	case WM9090_SPEAKER_VOLUME_LEFT:
/root/machinex/sound/soc/codecs/wm9090.c:	snd_soc_update_bits(codec, WM9090_IN1_LINE_INPUT_A_VOLUME,
/root/machinex/sound/soc/codecs/wm9090.c:	snd_soc_update_bits(codec, WM9090_IN1_LINE_INPUT_B_VOLUME,
/root/machinex/sound/soc/codecs/wm9090.c:	snd_soc_update_bits(codec, WM9090_IN2_LINE_INPUT_A_VOLUME,
/root/machinex/sound/soc/codecs/wm9090.c:	snd_soc_update_bits(codec, WM9090_IN2_LINE_INPUT_B_VOLUME,
/root/machinex/sound/soc/codecs/wm9090.c:	snd_soc_update_bits(codec, WM9090_LEFT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm9090.c:	snd_soc_update_bits(codec, WM9090_RIGHT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm9090.c:	snd_soc_update_bits(codec, WM9090_SPEAKER_VOLUME_LEFT,
/root/machinex/sound/soc/codecs/wm9090.c:SOC_DOUBLE_R("Headphone Switch", WM9090_LEFT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm9090.c:SOC_DOUBLE_R("Headphone ZC Switch", WM9090_LEFT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm9090.c:SOC_DOUBLE_R_TLV("Headphone Volume", WM9090_LEFT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE("IN1A Switch", WM9090_IN1_LINE_INPUT_A_VOLUME, 7, 1, 1),
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE("IN1A ZC Switch", WM9090_IN1_LINE_INPUT_A_VOLUME, 6, 1, 0),
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE("IN1B Switch", WM9090_IN1_LINE_INPUT_B_VOLUME, 7, 1, 1),
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE("IN1B ZC Switch", WM9090_IN1_LINE_INPUT_B_VOLUME, 6, 1, 0),
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE("IN2A Switch", WM9090_IN2_LINE_INPUT_A_VOLUME, 7, 1, 1),
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE("IN2A ZC Switch", WM9090_IN2_LINE_INPUT_A_VOLUME, 6, 1, 0),
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE("IN2B Switch", WM9090_IN2_LINE_INPUT_B_VOLUME, 7, 1, 1),
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE("IN2B ZC Switch", WM9090_IN2_LINE_INPUT_B_VOLUME, 6, 1, 0),
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE("Speaker Switch", WM9090_SPEAKER_VOLUME_LEFT, 6, 1, 1),
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE("Speaker ZC Switch", WM9090_SPEAKER_VOLUME_LEFT, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE_TLV("IN1A Volume", WM9090_IN1_LINE_INPUT_A_VOLUME, 0, 6, 0,
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE_TLV("IN1B Volume", WM9090_IN1_LINE_INPUT_B_VOLUME, 0, 6, 0,
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE_TLV("IN2A Volume", WM9090_IN2_LINE_INPUT_A_VOLUME, 0, 6, 0,
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE_TLV("IN2B Volume", WM9090_IN2_LINE_INPUT_B_VOLUME, 0, 6, 0,
/root/machinex/sound/soc/codecs/wm9090.c:SOC_SINGLE_TLV("Speaker Volume", WM9090_SPEAKER_VOLUME_LEFT, 0, 63, 0,
/root/machinex/sound/soc/codecs/wm9090.c:		 WM9090_RIGHT_OUTPUT_VOLUME, 0, 63, 0, out_tlv),
/root/machinex/sound/soc/codecs/wm9090.c:	     WM9090_RIGHT_OUTPUT_VOLUME, 6, 1, 1),
/root/machinex/sound/soc/codecs/wm9090.c:	     WM9090_RIGHT_OUTPUT_VOLUME, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm9090.h:#define WM9090_AGC_MINGAIN_MASK                 0x003F  /* AGC_MINGAIN - [5:0] */
/root/machinex/sound/soc/codecs/wm9090.h:#define WM9090_AGC_MINGAIN_SHIFT                     0  /* AGC_MINGAIN - [5:0] */
/root/machinex/sound/soc/codecs/wm9090.h:#define WM9090_AGC_MINGAIN_WIDTH                     6  /* AGC_MINGAIN - [5:0] */
/root/machinex/sound/soc/codecs/wm9090.h:#define WM9090_IN1_LINE_INPUT_A_VOLUME          0x18
/root/machinex/sound/soc/codecs/wm9090.h:#define WM9090_IN1_LINE_INPUT_B_VOLUME          0x19
/root/machinex/sound/soc/codecs/wm9090.h:#define WM9090_IN2_LINE_INPUT_A_VOLUME          0x1A
/root/machinex/sound/soc/codecs/wm9090.h:#define WM9090_IN2_LINE_INPUT_B_VOLUME          0x1B
/root/machinex/sound/soc/codecs/wm9090.h:#define WM9090_LEFT_OUTPUT_VOLUME               0x1C
/root/machinex/sound/soc/codecs/wm9090.h:#define WM9090_RIGHT_OUTPUT_VOLUME              0x1D
/root/machinex/sound/soc/codecs/wm9090.h:#define WM9090_SPEAKER_VOLUME_LEFT              0x26
/root/machinex/sound/soc/codecs/wm9705.c:	SOC_DOUBLE("Capture Volume", AC97_REC_GAIN, 8, 0, 15, 0),
/root/machinex/sound/soc/codecs/wm9705.c:	SOC_SINGLE("Capture Switch", AC97_REC_GAIN, 15, 1, 1),
/root/machinex/sound/soc/codecs/wm9712.c:		reg == AC97_REC_GAIN)
/root/machinex/sound/soc/codecs/wm9712.c:SOC_DOUBLE("Capture Volume", AC97_REC_GAIN, 8, 0, 63, 1),
/root/machinex/sound/soc/codecs/wm9712.c:SOC_ENUM_DOUBLE(AC97_REC_GAIN, 14, 6, 2, wm9712_rec_gain),
/root/machinex/sound/soc/codecs/wm9712.c:SOC_SINGLE("Capture Switch", AC97_REC_GAIN, 15, 1, 1),
/root/machinex/sound/soc/codecs/wm9712.c:SOC_SINGLE("Capture ZC Switch", AC97_REC_GAIN, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm9712.c:static const char *wm9712_rec_gain[] = {"+1.5dB Steps", "+0.75dB Steps"};
/root/machinex/sound/soc/codecs/wm9713.c:SOC_ENUM_DOUBLE(AC97_CD, 14, 6, 2, wm9713_rec_gain), /* record step size 5 */
/root/machinex/sound/soc/codecs/wm9713.c:SOC_ENUM_SINGLE(AC97_REC_GAIN, 0, 4, wm9713_out4_pga), /* out 4 source 13 */
/root/machinex/sound/soc/codecs/wm9713.c:SOC_ENUM_SINGLE(AC97_REC_GAIN, 11, 8, wm9713_spk_pga), /* speaker left input select 8 */
/root/machinex/sound/soc/codecs/wm9713.c:SOC_ENUM_SINGLE(AC97_REC_GAIN, 14, 4, wm9713_mono_pga), /* mono input select 7 */
/root/machinex/sound/soc/codecs/wm9713.c:SOC_ENUM_SINGLE(AC97_REC_GAIN, 2, 4, wm9713_out3_pga), /* out 3 source 12 */
/root/machinex/sound/soc/codecs/wm9713.c:SOC_ENUM_SINGLE(AC97_REC_GAIN, 4, 3, wm9713_hp_pga), /* headphone right input 11 */
/root/machinex/sound/soc/codecs/wm9713.c:SOC_ENUM_SINGLE(AC97_REC_GAIN, 6, 3, wm9713_hp_pga), /* headphone left input 10 */
/root/machinex/sound/soc/codecs/wm9713.c:SOC_ENUM_SINGLE(AC97_REC_GAIN, 8, 8, wm9713_spk_pga), /* speaker right input select 9 */
/root/machinex/sound/soc/codecs/wm9713.c:SOC_ENUM_SINGLE(AC97_REC_GAIN_MIC, 10, 8, wm9713_dac_inv), /* dac invert 2 15 */
/root/machinex/sound/soc/codecs/wm9713.c:SOC_ENUM_SINGLE(AC97_REC_GAIN_MIC, 13, 8, wm9713_dac_inv), /* dac invert 1 14 */
/root/machinex/sound/soc/codecs/wm9713.c:SOC_SINGLE("3D Depth", AC97_REC_GAIN_MIC, 0, 15, 1),
/root/machinex/sound/soc/codecs/wm9713.c:SOC_SINGLE("3D Lower Cut-off Switch", AC97_REC_GAIN_MIC, 4, 1, 0),
/root/machinex/sound/soc/codecs/wm9713.c:SOC_SINGLE("3D Upper Cut-off Switch", AC97_REC_GAIN_MIC, 5, 1, 0),
/root/machinex/sound/soc/codecs/wm9713.c:static const char *wm9713_rec_gain[] = {"+1.5dB Steps", "+0.75dB Steps"};
/root/machinex/sound/soc/codecs/wm_hubs.c:	/* Latch volume update bits & default ZC on */
/root/machinex/sound/soc/codecs/wm_hubs.c:	snd_soc_update_bits(codec, WM8993_LEFT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm_hubs.c:	snd_soc_update_bits(codec, WM8993_LEFT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm_hubs.c:	snd_soc_update_bits(codec, WM8993_LEFT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm_hubs.c:	snd_soc_update_bits(codec, WM8993_LEFT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm_hubs.c:	snd_soc_update_bits(codec, WM8993_RIGHT_LINE_INPUT_1_2_VOLUME,
/root/machinex/sound/soc/codecs/wm_hubs.c:	snd_soc_update_bits(codec, WM8993_RIGHT_LINE_INPUT_3_4_VOLUME,
/root/machinex/sound/soc/codecs/wm_hubs.c:	snd_soc_update_bits(codec, WM8993_RIGHT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm_hubs.c:	snd_soc_update_bits(codec, WM8993_RIGHT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm_hubs.c:	snd_soc_update_bits(codec, WM8993_SPEAKER_VOLUME_LEFT,
/root/machinex/sound/soc/codecs/wm_hubs.c:	snd_soc_update_bits(codec, WM8993_SPEAKER_VOLUME_RIGHT,
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_DOUBLE_R("Headphone Switch", WM8993_LEFT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_DOUBLE_R("Headphone ZC Switch", WM8993_LEFT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_DOUBLE_R("Output Switch", WM8993_LEFT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_DOUBLE_R("Output ZC Switch", WM8993_LEFT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_DOUBLE_R_TLV("Output Volume", WM8993_LEFT_OPGA_VOLUME,
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE("Earpiece Switch", WM8993_HPOUT2_VOLUME, 5, 1, 1),
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE("IN1L Switch", WM8993_LEFT_LINE_INPUT_1_2_VOLUME, 7, 1, 1),
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE("IN1L ZC Switch", WM8993_LEFT_LINE_INPUT_1_2_VOLUME, 6, 1, 0),
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE("IN1R Switch", WM8993_RIGHT_LINE_INPUT_1_2_VOLUME, 7, 1, 1),
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE("IN1R ZC Switch", WM8993_RIGHT_LINE_INPUT_1_2_VOLUME, 6, 1, 0),
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE("IN2L Switch", WM8993_LEFT_LINE_INPUT_3_4_VOLUME, 7, 1, 1),
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE("IN2L ZC Switch", WM8993_LEFT_LINE_INPUT_3_4_VOLUME, 6, 1, 0),
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE("IN2R Switch", WM8993_RIGHT_LINE_INPUT_3_4_VOLUME, 7, 1, 1),
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE("IN2R ZC Switch", WM8993_RIGHT_LINE_INPUT_3_4_VOLUME, 6, 1, 0),
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE("LINEOUT1N Switch", WM8993_LINE_OUTPUTS_VOLUME, 6, 1, 1),
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE("LINEOUT1P Switch", WM8993_LINE_OUTPUTS_VOLUME, 5, 1, 1),
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE("LINEOUT2N Switch", WM8993_LINE_OUTPUTS_VOLUME, 2, 1, 1),
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE("LINEOUT2P Switch", WM8993_LINE_OUTPUTS_VOLUME, 1, 1, 1),
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE_TLV("Earpiece Volume", WM8993_HPOUT2_VOLUME, 4, 1, 1, earpiece_tlv),
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE_TLV("IN1L Volume", WM8993_LEFT_LINE_INPUT_1_2_VOLUME, 0, 31, 0,
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE_TLV("IN1R Volume", WM8993_RIGHT_LINE_INPUT_1_2_VOLUME, 0, 31, 0,
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE_TLV("IN2L Volume", WM8993_LEFT_LINE_INPUT_3_4_VOLUME, 0, 31, 0,
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE_TLV("IN2R Volume", WM8993_RIGHT_LINE_INPUT_3_4_VOLUME, 0, 31, 0,
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE_TLV("LINEOUT1 Volume", WM8993_LINE_OUTPUTS_VOLUME, 4, 1, 1,
/root/machinex/sound/soc/codecs/wm_hubs.c:SOC_SINGLE_TLV("LINEOUT2 Volume", WM8993_LINE_OUTPUTS_VOLUME, 0, 1, 1,
/root/machinex/sound/soc/codecs/wm_hubs.c: * Update the DC servo calibration on gain changes
/root/machinex/sound/soc/codecs/wm_hubs.c:	/* Updating the analogue gains invalidates the DC servo cache */
/root/machinex/sound/soc/codecs/wm_hubs.c:		     WM8993_LEFT_OUTPUT_VOLUME, WM8993_RIGHT_OUTPUT_VOLUME,
/root/machinex/sound/soc/codecs/wm_hubs.c:		 WM8993_RIGHT_OPGA_VOLUME, 0, 63, 0, outpga_tlv),
/root/machinex/sound/soc/codecs/wm_hubs.c:	     WM8993_RIGHT_OPGA_VOLUME, 6, 1, 0),
/root/machinex/sound/soc/codecs/wm_hubs.c:	     WM8993_RIGHT_OPGA_VOLUME, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm_hubs.c:	     WM8993_RIGHT_OUTPUT_VOLUME, 6, 1, 0),
/root/machinex/sound/soc/codecs/wm_hubs.c:	     WM8993_RIGHT_OUTPUT_VOLUME, 7, 1, 0),
/root/machinex/sound/soc/codecs/wm_hubs.c:	     WM8993_SPEAKER_VOLUME_LEFT, WM8993_SPEAKER_VOLUME_RIGHT,
/root/machinex/sound/soc/codecs/wm_hubs.c:	     WM8993_SPEAKER_VOLUME_LEFT, WM8993_SPEAKER_VOLUME_RIGHT,
/root/machinex/sound/soc/codecs/wm_hubs.c:		 WM8993_SPEAKER_VOLUME_LEFT, WM8993_SPEAKER_VOLUME_RIGHT,
/root/machinex/sound/soc/ep93xx/ep93xx-ac97.c:	 * WINT and CODECREADY bits, and finally enable the interface again.
/root/machinex/sound/soc/fsl/fsl_ssi.c:				return -EAGAIN;
/root/machinex/sound/soc/fsl/mpc5200_dma.c:	/* Save what we've done so it can be found again later */
/root/machinex/sound/soc/imx/mx27vis-aic32x4.c:	case MX27VIS_AMP_GAIN:
/root/machinex/sound/soc/imx/mx27vis-aic32x4.c:	case MX27VIS_AMP_GAIN:
/root/machinex/sound/soc/imx/mx27vis-aic32x4.c:#define MX27VIS_AMP_GAIN	0
/root/machinex/sound/soc/imx/mx27vis-aic32x4.c:		mx27vis_amp_gain = value;
/root/machinex/sound/soc/imx/mx27vis-aic32x4.c:	SOC_SINGLE_EXT_TLV("LO Ext Boost", MX27VIS_AMP_GAIN, 0, 3, 0,
/root/machinex/sound/soc/imx/mx27vis-aic32x4.c:static int mx27vis_amp_gain;
/root/machinex/sound/soc/imx/mx27vis-aic32x4.c:		ucontrol->value.integer.value[0] = mx27vis_amp_gain;
/root/machinex/sound/soc/msm/apq8064.c:	gain[0] = 11;
/root/machinex/sound/soc/msm/apq8064.c:	gain[1] = 9;
/root/machinex/sound/soc/msm/apq8064.c:	gain = tabla_mbhc_cal_btn_det_mp(btn_cfg, TABLA_BTN_DET_GAIN);
/root/machinex/sound/soc/msm/apq8064.c:		set_amp_gain(SPK_OFF);
/root/machinex/sound/soc/msm/apq8064.c:			set_amp_gain(SPK_ON);
/root/machinex/sound/soc/msm/apq8064.c:	u8 *n_ready, *n_cic, *gain;
/root/machinex/sound/soc/msm/apq8064-i2s.c:	gain[0] = 11;
/root/machinex/sound/soc/msm/apq8064-i2s.c:	gain[1] = 9;
/root/machinex/sound/soc/msm/apq8064-i2s.c:	gain = tabla_mbhc_cal_btn_det_mp(btn_cfg, TABLA_BTN_DET_GAIN);
/root/machinex/sound/soc/msm/apq8064-i2s.c:	u8 *n_ready, *n_cic, *gain;
/root/machinex/sound/soc/msm/Kconfig:config SEC_DEVIDE_RINGTONE_GAIN
/root/machinex/sound/soc/msm/Kconfig:	 To add support for Ringback tone gain devide
/root/machinex/sound/soc/msm/Kconfig:	 to do device switch/routing and volume control support for all
/root/machinex/sound/soc/msm/Kconfig:	tristate "Samsung ringback tone gain devide"
/root/machinex/sound/soc/msm/mdm9615.c:	gain[0] = 11;
/root/machinex/sound/soc/msm/mdm9615.c:	gain[1] = 9;
/root/machinex/sound/soc/msm/mdm9615.c:	gain = tabla_mbhc_cal_btn_det_mp(btn_cfg, TABLA_BTN_DET_GAIN);
/root/machinex/sound/soc/msm/mdm9615.c:	u8 *n_ready, *n_cic, *gain;
/root/machinex/sound/soc/msm/mpq8064.c:	gain[0] = 11;
/root/machinex/sound/soc/msm/mpq8064.c:	gain[1] = 9;
/root/machinex/sound/soc/msm/mpq8064.c:	gain = tabla_mbhc_cal_btn_det_mp(btn_cfg, TABLA_BTN_DET_GAIN);
/root/machinex/sound/soc/msm/mpq8064.c:	u8 *n_ready, *n_cic, *gain;
/root/machinex/sound/soc/msm/msm7201.c:	change = (msm_vol_ctl.volume != volume);
/root/machinex/sound/soc/msm/msm7201.c:	int volume;
/root/machinex/sound/soc/msm/msm7201.c:		msm_audio_volume_update(PCMPLAYBACK_DECODERID,
/root/machinex/sound/soc/msm/msm7201.c:	MSM_EXT_TLV("PCM Playback Volume", 0, snd_msm_volume_info, \
/root/machinex/sound/soc/msm/msm7201.c:	msm_vol_ctl.volume = MSM_PLAYBACK_DEFAULT_VOLUME;
/root/machinex/sound/soc/msm/msm7201.c:				msm_vol_ctl.volume, msm_vol_ctl.pan);
/root/machinex/sound/soc/msm/msm7201.c:		msm_vol_ctl.volume = volume;
/root/machinex/sound/soc/msm/msm7201.c:		pr_err("Device volume should be in range of 1 to 6\n");
/root/machinex/sound/soc/msm/msm7201.c:		printk(KERN_ERR "%s: device [%d] volume set to [%d]\n",
/root/machinex/sound/soc/msm/msm7201.c:	req.volume = cpu_to_be32((int)ucontrol->value.integer.value[1]);
/root/machinex/sound/soc/msm/msm7201.c:		return -EAGAIN;
/root/machinex/sound/soc/msm/msm7201.c:		return -EAGAIN;
/root/machinex/sound/soc/msm/msm7201.c:		return -EAGAIN;
/root/machinex/sound/soc/msm/msm7201.c:	snd_msm_volume_get, snd_msm_volume_put, 0, db_scale_linear),
/root/machinex/sound/soc/msm/msm7201.c:static int snd_msm_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm7201.c:static int snd_msm_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm7201.c:static int snd_msm_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm7201.c:				 trying again with another API\n",
/root/machinex/sound/soc/msm/msm7201.c:	ucontrol->value.integer.value[0] = msm_vol_ctl.volume;
/root/machinex/sound/soc/msm/msm7201.c:		uint32_t volume;
/root/machinex/sound/soc/msm/msm7201.c:	volume = ucontrol->value.integer.value[0];
/root/machinex/sound/soc/msm/msm7k-pcm.c:			msm_vol_ctl.volume, msm_vol_ctl.pan);
/root/machinex/sound/soc/msm/msm7k-pcm.c:		ret = msm_audio_volume_update(PCMPLAYBACK_DECODERID,
/root/machinex/sound/soc/msm/msm7k-pcm.c:struct msm_volume msm_vol_ctl;
/root/machinex/sound/soc/msm/msm7kv2-pcm.c:			audpp_set_volume_and_pan(prtd->session_id,
/root/machinex/sound/soc/msm/msm7kv2-pcm.c:				prtd->vol_pan.volume);
/root/machinex/sound/soc/msm/msm7kv2-pcm.c:					prtd->vol_pan.volume,
/root/machinex/sound/soc/msm/msm7kv2-pcm.c:	prtd->vol_pan.volume = 0x2000;
/root/machinex/sound/soc/msm/msm7kv2-pcm.c:		prtd->vol_pan.volume = evt_payload->session_vol;
/root/machinex/sound/soc/msm/msm7kv2-pcm.h:#define MSM_PLAYBACK_DEFAULT_VOLUME 0 /* 0dB */
/root/machinex/sound/soc/msm/msm7kv2-pcm.h:	struct audpp_cmd_cfg_object_params_volume vol_pan;
/root/machinex/sound/soc/msm/msm7x30.c:	afe_device_volume_ctrl(afe_dev_id, volume);
/root/machinex/sound/soc/msm/msm7x30.c:#define MSM_MAX_VOLUME 0x2000
/root/machinex/sound/soc/msm/msm7x30.c:#define MSM_VOLUME_STEP ((MSM_MAX_VOLUME+17)/100) /* 17 added to avoid
/root/machinex/sound/soc/msm/msm7x30.c:				dev_info->name, dev_id, volume);
/root/machinex/sound/soc/msm/msm7x30.c:	if (dev_info->dev_ops.set_device_volume)
/root/machinex/sound/soc/msm/msm7x30.c:	if ((volume < 0) || (volume/factor > 100))
/root/machinex/sound/soc/msm/msm7x30.c:	if (volume > MSM_MAX_VOLUME)
/root/machinex/sound/soc/msm/msm7x30.c:	int volume = 0x4000;
/root/machinex/sound/soc/msm/msm7x30.c:	int volume = ucontrol->value.integer.value[1];
/root/machinex/sound/soc/msm/msm7x30.c:	int volume = ucontrol->value.integer.value[1];
/root/machinex/sound/soc/msm/msm7x30.c:	int volume = ucontrol->value.integer.value[1];
/root/machinex/sound/soc/msm/msm7x30.c:	MM_DBG("dev_id = %d, volume = %d\n", dev_id, volume);
/root/machinex/sound/soc/msm/msm7x30.c:	MM_DBG("dev_name = %s dev_id = %d, volume = %d\n",
/root/machinex/sound/soc/msm/msm7x30.c:	MM_DBG("session_id %d, volume %d", session_id, volume);
/root/machinex/sound/soc/msm/msm7x30.c:		MM_INFO("device %s does not support device volume "
/root/machinex/sound/soc/msm/msm7x30.c:			msm_device_volume_get, msm_device_volume_put, 0),
/root/machinex/sound/soc/msm/msm7x30.c:	MSM_EXT("Device_Volume", msm_device_volume_info,
/root/machinex/sound/soc/msm/msm7x30.c:	MSM_EXT("VoiceVolume", msm_v_volume_info, msm_v_volume_get, \
/root/machinex/sound/soc/msm/msm7x30.c:	MSM_EXT("Volume", msm_volume_info, msm_volume_get, \
/root/machinex/sound/soc/msm/msm7x30.c:	msm_vol_ctl.volume = volume;
/root/machinex/sound/soc/msm/msm7x30.c:						 msm_volume_put, 0),
/root/machinex/sound/soc/msm/msm7x30.c:						 msm_v_volume_put, 0),
/root/machinex/sound/soc/msm/msm7x30.c:	/* Only Decoder volume control supported */
/root/machinex/sound/soc/msm/msm7x30.c:		rc = dev_info->dev_ops.set_device_volume(dev_info, volume);
/root/machinex/sound/soc/msm/msm7x30.c:	return msm_set_voice_vol(dir, volume);
/root/machinex/sound/soc/msm/msm7x30.c:static int msm_device_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm7x30.c:static int msm_device_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm7x30.c:static int msm_device_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm7x30.c:static int msm_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm7x30.c:static int msm_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm7x30.c:static int msm_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm7x30.c:static int msm_v_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm7x30.c:static int msm_v_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm7x30.c:static int msm_v_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm7x30.c:struct msm_volume msm_vol_ctl;
/root/machinex/sound/soc/msm/msm7x30.c:	ucontrol->value.integer.value[0] = dev_info->dev_volume;
/root/machinex/sound/soc/msm/msm7x30.c:		volume = 0;
/root/machinex/sound/soc/msm/msm7x30.c:		volume = MSM_MAX_VOLUME;
/root/machinex/sound/soc/msm/msm7x30.c:	volume = (MSM_VOLUME_STEP * volume);
/root/machinex/sound/soc/msm/msm7x30.c:	volume = volume/factor;
/root/machinex/sound/soc/msm/msm8230.c:#define DEFAULT_PMIC_SPK_GAIN 0x0D
/root/machinex/sound/soc/msm/msm8230.c:		/* Initialize default PMIC speaker gain */
/root/machinex/sound/soc/msm/msm8230.c:		/* Initialize default PMIC speaker gain */
/root/machinex/sound/soc/msm/msm8230.c:		msm8930_pmic_gain_get, msm8930_pmic_gain_put),
/root/machinex/sound/soc/msm/msm8230.c:		msm8930_pmic_gain_get, msm8930_pmic_gain_put),
/root/machinex/sound/soc/msm/msm8230.c:			 msm8930_pmic_spk_gain,
/root/machinex/sound/soc/msm/msm8230.c:			 msm8930_pmic_spk_gain);
/root/machinex/sound/soc/msm/msm8230.c:	msm8930_pmic_spk_gain = ucontrol->value.integer.value[0];
/root/machinex/sound/soc/msm/msm8230.c:		pm8xxx_spk_gain(DEFAULT_PMIC_SPK_GAIN);
/root/machinex/sound/soc/msm/msm8230.c:		pm8xxx_spk_gain(DEFAULT_PMIC_SPK_GAIN);
/root/machinex/sound/soc/msm/msm8230.c:						pmic_spk_gain_text),
/root/machinex/sound/soc/msm/msm8230.c:	pr_debug("%s: msm8930_pmic_spk_gain = %d"
/root/machinex/sound/soc/msm/msm8230.c:	pr_debug("%s: msm8930_pmic_spk_gain = %d\n", __func__,
/root/machinex/sound/soc/msm/msm8230.c:		ret = pm8xxx_spk_gain(msm8930_pmic_spk_gain);
/root/machinex/sound/soc/msm/msm8230.c:	SOC_ENUM_EXT("PMIC SPK Gain", msm8930_pmic_spk_gain_enum[0],
/root/machinex/sound/soc/msm/msm8230.c:	SOC_ENUM_EXT("PMIC SPK Gain", msm8930_pmic_spk_gain_enum[0],
/root/machinex/sound/soc/msm/msm8230.c:	SOC_ENUM_SINGLE_EXT(ARRAY_SIZE(pmic_spk_gain_text),
/root/machinex/sound/soc/msm/msm8230.c:static const char *pmic_spk_gain_text[] = {
/root/machinex/sound/soc/msm/msm8230.c:static const struct soc_enum msm8930_pmic_spk_gain_enum[] = {
/root/machinex/sound/soc/msm/msm8230.c:static int msm8930_pmic_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm8230.c:static int msm8930_pmic_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm8230.c:static int msm8930_pmic_spk_gain = DEFAULT_PMIC_SPK_GAIN;
/root/machinex/sound/soc/msm/msm8230.c:	ucontrol->value.integer.value[0] = msm8930_pmic_spk_gain;
/root/machinex/sound/soc/msm/msm8930.c:#define DEFAULT_PMIC_SPK_GAIN 0x0D
/root/machinex/sound/soc/msm/msm8930.c:	gain[0] = 11;
/root/machinex/sound/soc/msm/msm8930.c:	gain[1] = 9;
/root/machinex/sound/soc/msm/msm8930.c:	gain = sitar_mbhc_cal_btn_det_mp(btn_cfg, SITAR_BTN_DET_GAIN);
/root/machinex/sound/soc/msm/msm8930.c:		/* Initialize default PMIC speaker gain */
/root/machinex/sound/soc/msm/msm8930.c:		/* Initialize default PMIC speaker gain */
/root/machinex/sound/soc/msm/msm8930.c:		msm8930_pmic_gain_get, msm8930_pmic_gain_put),
/root/machinex/sound/soc/msm/msm8930.c:			 msm8930_pmic_spk_gain,
/root/machinex/sound/soc/msm/msm8930.c:			 msm8930_pmic_spk_gain);
/root/machinex/sound/soc/msm/msm8930.c:	msm8930_pmic_spk_gain = ucontrol->value.integer.value[0];
/root/machinex/sound/soc/msm/msm8930.c:		pm8xxx_spk_gain(DEFAULT_PMIC_SPK_GAIN);
/root/machinex/sound/soc/msm/msm8930.c:		pm8xxx_spk_gain(DEFAULT_PMIC_SPK_GAIN);
/root/machinex/sound/soc/msm/msm8930.c:						pmic_spk_gain_text),
/root/machinex/sound/soc/msm/msm8930.c:	pr_debug("%s: msm8930_pmic_spk_gain = %d"
/root/machinex/sound/soc/msm/msm8930.c:	pr_debug("%s: msm8930_pmic_spk_gain = %d\n", __func__,
/root/machinex/sound/soc/msm/msm8930.c:		ret = pm8xxx_spk_gain(msm8930_pmic_spk_gain);
/root/machinex/sound/soc/msm/msm8930.c:	SOC_ENUM_EXT("PMIC SPK Gain", msm8960_pmic_spk_gain_enum[0],
/root/machinex/sound/soc/msm/msm8930.c:	SOC_ENUM_SINGLE_EXT(ARRAY_SIZE(pmic_spk_gain_text),
/root/machinex/sound/soc/msm/msm8930.c:static const char *pmic_spk_gain_text[] = {
/root/machinex/sound/soc/msm/msm8930.c:static const struct soc_enum msm8960_pmic_spk_gain_enum[] = {
/root/machinex/sound/soc/msm/msm8930.c:static int msm8930_pmic_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm8930.c:static int msm8930_pmic_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm8930.c:static int msm8930_pmic_spk_gain = DEFAULT_PMIC_SPK_GAIN;
/root/machinex/sound/soc/msm/msm8930.c:	u8 *n_ready, *n_cic, *gain;
/root/machinex/sound/soc/msm/msm8930.c:	ucontrol->value.integer.value[0] = msm8930_pmic_spk_gain;
/root/machinex/sound/soc/msm/msm8960.c:	gain[0] = 11;
/root/machinex/sound/soc/msm/msm8960.c:	gain[1] = 9;
/root/machinex/sound/soc/msm/msm8960.c:	gain = tabla_mbhc_cal_btn_det_mp(btn_cfg, TABLA_BTN_DET_GAIN);
/root/machinex/sound/soc/msm/msm8960.c:	u8 *n_ready, *n_cic, *gain;
/root/machinex/sound/soc/msm/msm8960-d2.c:	/* BTN_1 button is mapped to VOLUME Up key type*/
/root/machinex/sound/soc/msm/msm8960-d2.c:	/* BTN_1 button is mapped to VOLUME Up key type*/
/root/machinex/sound/soc/msm/msm8960-d2.c:	/* BTN_2 button is mapped to VOLUME Down key type*/
/root/machinex/sound/soc/msm/msm8960-d2.c:	/* BTN_2 button is mapped to VOLUME Down key type*/
/root/machinex/sound/soc/msm/msm8960-d2.c:	gain[0] = 11;
/root/machinex/sound/soc/msm/msm8960-d2.c:	gain[1] = 9;
/root/machinex/sound/soc/msm/msm8960-d2.c:	gain = tabla_mbhc_cal_btn_det_mp(btn_cfg, TABLA_BTN_DET_GAIN);
/root/machinex/sound/soc/msm/msm8960-d2.c:			SND_JACK_BTN_1, KEY_VOLUMEUP);
/root/machinex/sound/soc/msm/msm8960-d2.c:			SND_JACK_BTN_1, KEY_VOLUMEUP);
/root/machinex/sound/soc/msm/msm8960-d2.c:			SND_JACK_BTN_1, &volumeup_jack);
/root/machinex/sound/soc/msm/msm8960-d2.c:			SND_JACK_BTN_1, &volumeup_jack);
/root/machinex/sound/soc/msm/msm8960-d2.c:			SND_JACK_BTN_2, KEY_VOLUMEDOWN);
/root/machinex/sound/soc/msm/msm8960-d2.c:			SND_JACK_BTN_2, KEY_VOLUMEDOWN);
/root/machinex/sound/soc/msm/msm8960-d2.c:			SND_JACK_BTN_2, &volumedown_jack);
/root/machinex/sound/soc/msm/msm8960-d2.c:			SND_JACK_BTN_2, &volumedown_jack);
/root/machinex/sound/soc/msm/msm8960-d2.c:	snd_jack_set_key(volumedown_jack.jack,
/root/machinex/sound/soc/msm/msm8960-d2.c:	snd_jack_set_key(volumedown_jack.jack,
/root/machinex/sound/soc/msm/msm8960-d2.c:	snd_jack_set_key(volumeup_jack.jack,
/root/machinex/sound/soc/msm/msm8960-d2.c:	snd_jack_set_key(volumeup_jack.jack,
/root/machinex/sound/soc/msm/msm8960-d2.c:static struct snd_soc_jack volumedown_jack;
/root/machinex/sound/soc/msm/msm8960-d2.c:static struct snd_soc_jack volumeup_jack;
/root/machinex/sound/soc/msm/msm8960-d2.c:	u8 *n_ready, *n_cic, *gain;
/root/machinex/sound/soc/msm/msm8960-jaguar.c:	/* BTN_1 button is mapped to VOLUME Up key type*/
/root/machinex/sound/soc/msm/msm8960-jaguar.c:	/* BTN_1 button is mapped to VOLUME Up key type*/
/root/machinex/sound/soc/msm/msm8960-jaguar.c:	/* BTN_2 button is mapped to VOLUME Down key type*/
/root/machinex/sound/soc/msm/msm8960-jaguar.c:	/* BTN_2 button is mapped to VOLUME Down key type*/
/root/machinex/sound/soc/msm/msm8960-jaguar.c:	gain[0] = 11;
/root/machinex/sound/soc/msm/msm8960-jaguar.c:	gain[1] = 9;
/root/machinex/sound/soc/msm/msm8960-jaguar.c:	gain = tabla_mbhc_cal_btn_det_mp(btn_cfg, TABLA_BTN_DET_GAIN);
/root/machinex/sound/soc/msm/msm8960-jaguar.c:			SND_JACK_BTN_0, &volumedown_jack);
/root/machinex/sound/soc/msm/msm8960-jaguar.c:			SND_JACK_BTN_0, &volumedown_jack);
/root/machinex/sound/soc/msm/msm8960-jaguar.c:			SND_JACK_BTN_0, &volumeup_jack);
/root/machinex/sound/soc/msm/msm8960-jaguar.c:			SND_JACK_BTN_0, &volumeup_jack);
/root/machinex/sound/soc/msm/msm8960-jaguar.c:			SND_JACK_BTN_1, KEY_VOLUMEUP);
/root/machinex/sound/soc/msm/msm8960-jaguar.c:			SND_JACK_BTN_1, KEY_VOLUMEUP);
/root/machinex/sound/soc/msm/msm8960-jaguar.c:			SND_JACK_BTN_2, KEY_VOLUMEDOWN);
/root/machinex/sound/soc/msm/msm8960-jaguar.c:			SND_JACK_BTN_2, KEY_VOLUMEDOWN);
/root/machinex/sound/soc/msm/msm8960-jaguar.c:	snd_jack_set_key(volumedown_jack.jack,
/root/machinex/sound/soc/msm/msm8960-jaguar.c:	snd_jack_set_key(volumedown_jack.jack,
/root/machinex/sound/soc/msm/msm8960-jaguar.c:	snd_jack_set_key(volumeup_jack.jack,
/root/machinex/sound/soc/msm/msm8960-jaguar.c:	snd_jack_set_key(volumeup_jack.jack,
/root/machinex/sound/soc/msm/msm8960-jaguar.c:static struct snd_soc_jack volumedown_jack;
/root/machinex/sound/soc/msm/msm8960-jaguar.c:static struct snd_soc_jack volumeup_jack;
/root/machinex/sound/soc/msm/msm8960-jaguar.c:	u8 *n_ready, *n_cic, *gain;
/root/machinex/sound/soc/msm/msm8x60.c:#define MSM_MAX_VOLUME 0x2000
/root/machinex/sound/soc/msm/msm8x60.c:#define MSM_VOLUME_STEP ((MSM_MAX_VOLUME+17)/100) /* 17 added to avoid
/root/machinex/sound/soc/msm/msm8x60.c:			__func__, dev_info->name, dev_id, gain);
/root/machinex/sound/soc/msm/msm8x60.c:			__func__, dev_info->name, dev_id, volume);
/root/machinex/sound/soc/msm/msm8x60.c:		gain = 0;
/root/machinex/sound/soc/msm/msm8x60.c:	if (dev_info->dev_ops.set_device_volume)
/root/machinex/sound/soc/msm/msm8x60.c:	if ((volume < 0) || (volume/factor > 100))
/root/machinex/sound/soc/msm/msm8x60.c:	if (volume > MSM_MAX_VOLUME)
/root/machinex/sound/soc/msm/msm8x60.c:	int volume = ucontrol->value.integer.value[1];
/root/machinex/sound/soc/msm/msm8x60.c:	int volume = ucontrol->value.integer.value[1];
/root/machinex/sound/soc/msm/msm8x60.c:	int volume = ucontrol->value.integer.value[1];
/root/machinex/sound/soc/msm/msm8x60.c:			msm_device_volume_get, msm_device_volume_put, 0),
/root/machinex/sound/soc/msm/msm8x60.c:	MSM_EXT("Device_Volume", msm_device_volume_info,
/root/machinex/sound/soc/msm/msm8x60.c:	MSM_EXT("VoiceVolume", msm_v_volume_info, msm_v_volume_get, \
/root/machinex/sound/soc/msm/msm8x60.c:	MSM_EXT("Volume", msm_volume_info, msm_volume_get, \
/root/machinex/sound/soc/msm/msm8x60.c:	msm_vol_ctl.volume = volume;
/root/machinex/sound/soc/msm/msm8x60.c:						 msm_volume_put, 0),
/root/machinex/sound/soc/msm/msm8x60.c:		      msm_v_volume_info, msm_v_volume_get, msm_v_volume_put, 0),
/root/machinex/sound/soc/msm/msm8x60.c:						 msm_v_volume_put, 0),
/root/machinex/sound/soc/msm/msm8x60.c:	/* Only Decoder volume control supported */
/root/machinex/sound/soc/msm/msm8x60.c:	pr_debug("%s:dev_id = %d, volume = %d\n", __func__, dev_id, volume);
/root/machinex/sound/soc/msm/msm8x60.c:	pr_debug("%s:dev_name = %s dev_id = %d, gain = %hX\n",
/root/machinex/sound/soc/msm/msm8x60.c:	pr_debug("%s:dev_name = %s dev_id = %d, volume = %d\n",
/root/machinex/sound/soc/msm/msm8x60.c:	pr_debug("%s:session_id %d, volume %d", __func__, session_id, volume);
/root/machinex/sound/soc/msm/msm8x60.c:		pr_err("%s : device %s not able to set device gain "
/root/machinex/sound/soc/msm/msm8x60.c:		pr_info("%s : device %s does not support device volume "
/root/machinex/sound/soc/msm/msm8x60.c:	rc = afe_apply_gain(dev_info->copp_id, gain);
/root/machinex/sound/soc/msm/msm8x60.c:		rc = dev_info->dev_ops.set_device_volume(dev_info, volume);
/root/machinex/sound/soc/msm/msm8x60.c:	return msm_set_voice_vol(dir, volume, session_id);
/root/machinex/sound/soc/msm/msm8x60.c:static int msm_device_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm8x60.c:static int msm_device_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm8x60.c:static int msm_device_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm8x60.c:static int msm_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm8x60.c:static int msm_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm8x60.c:static int msm_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm8x60.c:static int msm_v_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm8x60.c:static int msm_v_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm8x60.c:static int msm_v_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm8x60.c:struct msm_volume msm_vol_ctl;
/root/machinex/sound/soc/msm/msm8x60.c:	u16 gain = 0x2000;
/root/machinex/sound/soc/msm/msm8x60.c:	ucontrol->value.integer.value[0] = dev_info->dev_volume;
/root/machinex/sound/soc/msm/msm8x60.c:	uinfo->count = 3; /* dir, volume, session_id */
/root/machinex/sound/soc/msm/msm8x60.c:		volume = MSM_MAX_VOLUME;
/root/machinex/sound/soc/msm/msm8x60.c:	volume = (MSM_VOLUME_STEP * volume);
/root/machinex/sound/soc/msm/msm8x60.c:	volume = volume/factor;
/root/machinex/sound/soc/msm/msm_audio_mvs.h:	uint32_t frame_mode_again;
/root/machinex/sound/soc/msm/msm-compr-q6.c:	compressed_audio.volume = volume;
/root/machinex/sound/soc/msm/msm-compr-q6.c:int compressed_set_volume(unsigned volume)
/root/machinex/sound/soc/msm/msm-compr-q6.c:		.period = SOFT_VOLUME_PERIOD,
/root/machinex/sound/soc/msm/msm-compr-q6.c:		.rampingcurve = SOFT_VOLUME_CURVE_LINEAR,
/root/machinex/sound/soc/msm/msm-compr-q6.c:		rc = q6asm_set_lrgain(compressed_audio.prtd->audio_client,
/root/machinex/sound/soc/msm/msm-compr-q6.c:			ret = compressed_set_volume(0);
/root/machinex/sound/soc/msm/msm-compr-q6.c:			ret = q6asm_set_softvolume(prtd->audio_client,
/root/machinex/sound/soc/msm/msm-compr-q6.c:		.step = SOFT_VOLUME_STEP,
/root/machinex/sound/soc/msm/msm-compr-q6.c:	struct asm_softvolume_params softvol = {
/root/machinex/sound/soc/msm/msm-compr-q6.c:	unsigned volume;
/root/machinex/sound/soc/msm/msm-compr-q6.c:						volume & 0xFFFF);
/root/machinex/sound/soc/msm/msm-compr-q6.c:						(volume >> 16) & 0xFFFF,
/root/machinex/sound/soc/msm/msm-lowlatency-pcm-q6.c:struct snd_msm_volume {
/root/machinex/sound/soc/msm/msm-lowlatency-pcm-q6.c:	unsigned volume;
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:int multi_ch_pcm_set_volume(unsigned volume)
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:	multi_ch_pcm_audio.volume = volume;
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:		.period = SOFT_VOLUME_PERIOD,
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:	pr_err("multi_ch_pcm_set_volume\n");
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:		pr_err("%s q6asm_set_volume\n", __func__);
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:		.rampingcurve = SOFT_VOLUME_CURVE_LINEAR,
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:		rc = q6asm_set_volume(multi_ch_pcm_audio.prtd->audio_client,
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:	ret = multi_ch_pcm_set_volume(multi_ch_pcm_audio.volume);
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:	ret = q6asm_set_softvolume(multi_ch_pcm_audio.prtd->audio_client,
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:static struct snd_msm_volume multi_ch_pcm_audio = {NULL, 0x2000};
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:		.step = SOFT_VOLUME_STEP,
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:	struct asm_softvolume_params softvol = {
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:struct snd_msm_volume {
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:	unsigned volume;
/root/machinex/sound/soc/msm/msm-multi-ch-pcm-q6.c:								volume);
/root/machinex/sound/soc/msm/msm-mvs.c:			dl_reply.frame_mode_again =
/root/machinex/sound/soc/msm/msm-pcm.c:EXPORT_SYMBOL(msm_audio_volume_update);
/root/machinex/sound/soc/msm/msm-pcm.c:int msm_audio_volume_update(unsigned id,
/root/machinex/sound/soc/msm/msm-pcm.c:				int volume, int pan)
/root/machinex/sound/soc/msm/msm-pcm.c:	printk(KERN_INFO "volume: %8x vol_raw: %8x \n", volume, vol_raw);
/root/machinex/sound/soc/msm/msm-pcm.c:	return audpp_set_volume_and_pan(id, vol_raw, pan);
/root/machinex/sound/soc/msm/msm-pcm.c:	vol_raw = compute_db_raw(volume);
/root/machinex/sound/soc/msm/msm-pcm.h:#define MSM_PLAYBACK_DEFAULT_VOLUME 0 /* 0dB */
/root/machinex/sound/soc/msm/msm-pcm.h:extern struct msm_volume msm_vol_ctl;
/root/machinex/sound/soc/msm/msm-pcm.h:int msm_audio_volume_update(unsigned id,
/root/machinex/sound/soc/msm/msm-pcm.h:				int volume, int pan);
/root/machinex/sound/soc/msm/msm-pcm.h:	int volume; /* Volume parameter, in dB Scale */
/root/machinex/sound/soc/msm/msm-pcm.h:struct msm_volume {
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:					"Error %d setting volume", ret);
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:	int volume;
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:	int volume = ucontrol->value.integer.value[0];
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:	kctl->put = msm_pcm_volume_ctl_put;
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:	kctl->tlv.p = loopback_rx_vol_gain;
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:	kctl = volume_info->kctl;
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:	pcm->volume = 0x2000;
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:	pr_debug("%s Setting volume 0x%x\n", __func__, volume);
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:		prtd->volume = volume;
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:	rc = pcm_loopback_set_volume(prtd, volume);
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:		rc = q6asm_set_volume(prtd->audio_client, volume);
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:			ret = pcm_loopback_set_volume(pcm, pcm->volume);
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:	ret = snd_pcm_add_volume_ctls(pcm, SNDRV_PCM_STREAM_PLAYBACK,
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:static const DECLARE_TLV_DB_LINEAR(loopback_rx_vol_gain, 0,
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:static int msm_pcm_volume_ctl_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:static int pcm_loopback_set_volume(struct msm_pcm_loopback *prtd, int volume)
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:	struct snd_pcm_volume *vol = kcontrol->private_data;
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:	struct snd_pcm_volume *volume_info;
/root/machinex/sound/soc/msm/msm-pcm-loopback.c:					&volume_info);
/root/machinex/sound/soc/msm/msm-pcm-lpa-8930_kor.c:int lpa_set_volume(unsigned volume)
/root/machinex/sound/soc/msm/msm-pcm-lpa-8930_kor.c:	lpa_audio.volume = volume;
/root/machinex/sound/soc/msm/msm-pcm-lpa-8930_kor.c:	lpa_set_volume(lpa_audio.volume);
/root/machinex/sound/soc/msm/msm-pcm-lpa-8930_kor.c:		.period = SOFT_VOLUME_PERIOD,
/root/machinex/sound/soc/msm/msm-pcm-lpa-8930_kor.c:		.rampingcurve = SOFT_VOLUME_CURVE_LINEAR,
/root/machinex/sound/soc/msm/msm-pcm-lpa-8930_kor.c:		rc = q6asm_set_volume(lpa_audio.prtd->audio_client, volume);
/root/machinex/sound/soc/msm/msm-pcm-lpa-8930_kor.c:	ret = q6asm_set_softvolume(lpa_audio.prtd->audio_client, &softvol);
/root/machinex/sound/soc/msm/msm-pcm-lpa-8930_kor.c:		.step = SOFT_VOLUME_STEP,
/root/machinex/sound/soc/msm/msm-pcm-lpa-8930_kor.c:	struct asm_softvolume_params softvol = {
/root/machinex/sound/soc/msm/msm-pcm-lpa-8930_kor.c:	unsigned volume;
/root/machinex/sound/soc/msm/msm-pcm-lpa-89x0.c:int lpa_set_volume(unsigned volume)
/root/machinex/sound/soc/msm/msm-pcm-lpa-89x0.c:	lpa_audio.volume = volume;
/root/machinex/sound/soc/msm/msm-pcm-lpa-89x0.c:	lpa_set_volume(lpa_audio.volume);
/root/machinex/sound/soc/msm/msm-pcm-lpa-89x0.c:		.period = SOFT_VOLUME_PERIOD,
/root/machinex/sound/soc/msm/msm-pcm-lpa-89x0.c:		.rampingcurve = SOFT_VOLUME_CURVE_LINEAR,
/root/machinex/sound/soc/msm/msm-pcm-lpa-89x0.c:		rc = q6asm_set_volume(lpa_audio.prtd->audio_client, volume);
/root/machinex/sound/soc/msm/msm-pcm-lpa-89x0.c:	ret = q6asm_set_softvolume(lpa_audio.prtd->audio_client, &softvol);
/root/machinex/sound/soc/msm/msm-pcm-lpa-89x0.c:		.step = SOFT_VOLUME_STEP,
/root/machinex/sound/soc/msm/msm-pcm-lpa-89x0.c:	struct asm_softvolume_params softvol = {
/root/machinex/sound/soc/msm/msm-pcm-lpa-89x0.c:	unsigned volume;
/root/machinex/sound/soc/msm/msm-pcm-lpa.c:int lpa_set_volume(unsigned volume)
/root/machinex/sound/soc/msm/msm-pcm-lpa.c:	lpa_audio.volume = volume;
/root/machinex/sound/soc/msm/msm-pcm-lpa.c:	lpa_set_volume(0);
/root/machinex/sound/soc/msm/msm-pcm-lpa.c:		.period = SOFT_VOLUME_PERIOD,
/root/machinex/sound/soc/msm/msm-pcm-lpa.c:		.rampingcurve = SOFT_VOLUME_CURVE_LINEAR,
/root/machinex/sound/soc/msm/msm-pcm-lpa.c:		rc = q6asm_set_lrgain(lpa_audio.prtd->audio_client,
/root/machinex/sound/soc/msm/msm-pcm-lpa.c:	ret = q6asm_set_softvolume(lpa_audio.prtd->audio_client, &softvol);
/root/machinex/sound/soc/msm/msm-pcm-lpa.c:		.step = SOFT_VOLUME_STEP,
/root/machinex/sound/soc/msm/msm-pcm-lpa.c:	struct asm_softvolume_params softvol = {
/root/machinex/sound/soc/msm/msm-pcm-lpa.c:	unsigned volume;
/root/machinex/sound/soc/msm/msm-pcm-lpa.c:					volume & 0xFFFF);
/root/machinex/sound/soc/msm/msm-pcm-lpa.c:					(volume >> 16) & 0xFFFF,
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	afe_loopback_gain(INT_FM_TX, ucontrol->value.integer.value[0]);
/root/machinex/sound/soc/msm/msm-pcm-routing.c:#define INT_RX_VOL_GAIN 0x2000
/root/machinex/sound/soc/msm/msm-pcm-routing.c:			eq_data[eq_idx].eq_bands[band_idx].filter_gain;
/root/machinex/sound/soc/msm/msm-pcm-routing.c:			eq_data[eq_idx].eq_bands[band_idx].filter_gain);
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	eq_data[eq_idx].eq_bands[band_idx].filter_gain =
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	if (!compressed_set_volume(ucontrol->value.integer.value[0]))
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	if (!lpa_set_volume(ucontrol->value.integer.value[0]))
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	if (!multi_ch_pcm_set_volume(ucontrol->value.integer.value[0]))
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	if (!multi_ch_pcm_set_volume(ucontrol->value.integer.value[0]))
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	INT_RX_VOL_GAIN, 0, msm_routing_get_compressed_vol_mixer,
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	INT_RX_VOL_GAIN, 0, msm_routing_get_fm_vol_mixer,
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	INT_RX_VOL_GAIN, 0, msm_routing_get_lpa_vol_mixer,
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	INT_RX_VOL_GAIN, 0, msm_routing_get_multimedia2_vol_mixer,
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	INT_RX_VOL_GAIN, 0, msm_routing_get_multimedia5_vol_mixer,
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	msm_routing_set_compressed_vol_mixer, compressed_rx_vol_gain),
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	msm_routing_set_fm_vol_mixer, fm_rx_vol_gain),
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	msm_routing_set_lpa_vol_mixer, lpa_rx_vol_gain),
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	msm_routing_set_multimedia2_vol_mixer, multimedia2_rx_vol_gain),
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	msm_routing_set_multimedia5_vol_mixer, multimedia5_rx_vol_gain),
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	pr_debug("%s: filter_gain = %d\n", __func__,
/root/machinex/sound/soc/msm/msm-pcm-routing.c:static const DECLARE_TLV_DB_LINEAR(compressed_rx_vol_gain, 0,
/root/machinex/sound/soc/msm/msm-pcm-routing.c:static const DECLARE_TLV_DB_LINEAR(fm_rx_vol_gain, 0,
/root/machinex/sound/soc/msm/msm-pcm-routing.c:static const DECLARE_TLV_DB_LINEAR(lpa_rx_vol_gain, 0,
/root/machinex/sound/soc/msm/msm-pcm-routing.c:static const DECLARE_TLV_DB_LINEAR(multimedia2_rx_vol_gain, 0,
/root/machinex/sound/soc/msm/msm-pcm-routing.c:static const DECLARE_TLV_DB_LINEAR(multimedia5_rx_vol_gain, 0,
/root/machinex/sound/soc/msm/msm-pcm-routing.c:	uint32_t     filter_gain; /* Filter band initial gain (dB) */
/root/machinex/sound/soc/msm/msm-pcm-routing.h:int compressed_set_volume(unsigned volume);
/root/machinex/sound/soc/msm/msm-pcm-routing.h:int lpa_set_volume(unsigned volume);
/root/machinex/sound/soc/msm/msm-pcm-routing.h:int multi_ch_pcm_set_volume(unsigned volume);
/root/machinex/sound/soc/msm/msm-pcm-voice.c:	/* 8 level Voice Rx volume for VZW and USC */
/root/machinex/sound/soc/msm/msm-pcm-voice.c:	es325_set_VEQ_max_gain(volume);
/root/machinex/sound/soc/msm/msm-pcm-voice.c:#if defined(CONFIG_SEC_DEVIDE_RINGTONE_GAIN)
/root/machinex/sound/soc/msm/msm-pcm-voice.c:#if defined(CONFIG_SEC_DEVIDE_RINGTONE_GAIN)
/root/machinex/sound/soc/msm/msm-pcm-voice.c:#if defined(CONFIG_SEC_DEVIDE_RINGTONE_GAIN)
/root/machinex/sound/soc/msm/msm-pcm-voice.c:#if defined(CONFIG_SEC_DEVIDE_RINGTONE_GAIN)
/root/machinex/sound/soc/msm/msm-pcm-voice.c:#if defined(CONFIG_SEC_DEVIDE_RINGTONE_GAIN)
/root/machinex/sound/soc/msm/msm-pcm-voice.c:int es325_set_VEQ_max_gain(int volume);
/root/machinex/sound/soc/msm/msm-pcm-voice.c:	int volume = ucontrol->value.integer.value[0];
/root/machinex/sound/soc/msm/msm-pcm-voice.c:	int volume = ucontrol->value.integer.value[0];
/root/machinex/sound/soc/msm/msm-pcm-voice.c:	int volume = ucontrol->value.integer.value[0];
/root/machinex/sound/soc/msm/msm-pcm-voice.c:		       msm_voice2_volume_get, msm_voice2_volume_put),
/root/machinex/sound/soc/msm/msm-pcm-voice.c:				msm_voice_volume_get, msm_voice_volume_put),
/root/machinex/sound/soc/msm/msm-pcm-voice.c:				msm_voice_volume_get, msm_voice_volume_put),
/root/machinex/sound/soc/msm/msm-pcm-voice.c:				msm_volte_volume_get, msm_volte_volume_put),
/root/machinex/sound/soc/msm/msm-pcm-voice.c:	pr_debug("%s: volume: %d\n", __func__, volume);
/root/machinex/sound/soc/msm/msm-pcm-voice.c:	pr_debug("%s: volume: %d\n", __func__, volume);
/root/machinex/sound/soc/msm/msm-pcm-voice.c:	pr_debug("%s: volume: %d\n", __func__, volume);
/root/machinex/sound/soc/msm/msm-pcm-voice.c:			     RX_PATH, volume);
/root/machinex/sound/soc/msm/msm-pcm-voice.c:						RX_PATH, volume);
/root/machinex/sound/soc/msm/msm-pcm-voice.c:						RX_PATH, volume);
/root/machinex/sound/soc/msm/msm-pcm-voice.c:static int msm_voice2_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm-pcm-voice.c:static int msm_voice2_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm-pcm-voice.c:static int msm_voice_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm-pcm-voice.c:static int msm_voice_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm-pcm-voice.c:static int msm_volte_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm-pcm-voice.c:static int msm_volte_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm-pcm-voice.c:    	volume +=100;
/root/machinex/sound/soc/msm/msm-pcm-voice.c:    	volume +=100;
/root/machinex/sound/soc/msm/.msm-pcm-voice.o.cmd:    $(wildcard include/config/sec/devide/ringtone/gain.h) \
/root/machinex/sound/soc/msm/msm-pcm-voip.c:	int volume = ucontrol->value.integer.value[0];
/root/machinex/sound/soc/msm/msm-pcm-voip.c:				msm_voip_volume_get, msm_voip_volume_put),
/root/machinex/sound/soc/msm/msm-pcm-voip.c:				msm_voip_volume_get, msm_voip_volume_put),
/root/machinex/sound/soc/msm/msm-pcm-voip.c:	pr_debug("%s: volume: %d\n", __func__, volume);
/root/machinex/sound/soc/msm/msm-pcm-voip.c:static int msm_voip_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm-pcm-voip.c:static int msm_voip_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/msm-pcm-voip.c:	/* USC and VZW have 8 step volumes */
/root/machinex/sound/soc/msm/msm-pcm-voip.c:			     volume);
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	0220, NULL, (void *) "afe_loopback_gain",
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:			case AFE_PORT_CMD_APPLY_GAIN:
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	cmd_sidetone.gain = gain;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	debugfs_afelb_gain = debugfs_create_file("afe_loopback_gain",
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:		debugfs_remove(debugfs_afelb_gain);
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:#define Q6AFE_MAX_VOLUME 0x3FFF
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	} else if (!strcmp(lb_str, "afe_loopback_gain")) {
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	if (debugfs_afelb_gain)
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:int afe_apply_gain(u16 port_id, u16 gain)
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:int afe_loopback_gain(u16 port_id, u16 volume)
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:int afe_sidetone(u16 tx_port_id, u16 rx_port_id, u16 enable, uint16_t gain)
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:			param[1] = (Q6AFE_MAX_VOLUME * param[1]) / 100;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	pr_debug("%s: %d %hX\n", __func__, port_id, volume);
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:				pr_debug("%s: Error, volume shoud be 0 to 100"
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	pr_info("%s: tx_port_id:%d rx_port_id:%d enable:%d gain:%d\n", __func__,
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:				rc = afe_loopback_gain(param[0], param[1]);
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	ret = apr_send_pkt(this_afe.apr, (uint32_t *) &set_gain);
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	set_gain.gain	= gain;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	set_gain.hdr.dest_port = 0;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	set_gain.hdr.hdr_field = APR_HDR_FIELD(APR_MSG_TYPE_SEQ_CMD,
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	set_gain.hdr.opcode = AFE_PORT_CMD_APPLY_GAIN;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	set_gain.hdr.pkt_size = sizeof(set_gain);
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	set_gain.hdr.src_port = 0;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	set_gain.hdr.token = 0;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	set_gain.port_id		= port_id;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	set_param.payload.base.param_id	= AFE_PARAM_ID_LOOPBACK_GAIN;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	set_param.payload.param.loopback_gain.gain		= volume;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	set_param.payload.param.loopback_gain.reserved	= 0;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:				  sizeof(struct afe_param_loopback_gain);
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:		sizeof(struct afe_param_loopback_gain);
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	start.gain = 0x2000;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	start.gain = 0x2000;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:static struct dentry *debugfs_afelb_gain;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:	struct afe_port_gain_command set_gain;
/root/machinex/sound/soc/msm/qdsp6/q6afe.c:					tx_port_id, rx_port_id, enable, gain);
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	cmd->params.module_id = VOLUME_CONTROL_MODULE_ID;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	cmd->params.module_id = VOLUME_CONTROL_MODULE_ID;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	cmd->params.module_id = VOLUME_CONTROL_MODULE_ID;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	cmd->params.module_id = VOLUME_CONTROL_MODULE_ID;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	cmd->params.module_id = VOLUME_CONTROL_MODULE_ID;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	cmd->params.param_id = L_R_CHANNEL_GAIN_PARAM_ID;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	cmd->params.param_id = MASTER_GAIN_PARAM_ID;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	cmd->params.param_id = SOFT_VOLUME_PARAM_ID;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	cmd->params.param_size = sizeof(struct asm_lrchannel_gain_params);
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	cmd->params.param_size = sizeof(struct asm_master_gain_params);
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	cmd->params.param_size = sizeof(struct asm_softvolume_params);
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:		dha_param->gain[i/6][i%6] = param[i+1];
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:					eq_params->eq_bands[i].filter_gain;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:				eq_params->eq_bands[i].filter_gain, i);
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:		equalizer->eq_bands[i].filter_gain =
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:int q6asm_set_lrgain(struct audio_client *ac, int left_gain, int right_gain)
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:int q6asm_set_softvolume(struct audio_client *ac,
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:int q6asm_set_volume(struct audio_client *ac, int volume)
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	lrgain->left_gain = left_gain;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	lrgain->right_gain = right_gain;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	lrgain = (struct asm_lrchannel_gain_params *)payload;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	mgain->master_gain = volume;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	mgain->padding = 0x00;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	mgain = (struct asm_master_gain_params *)payload;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	params = (struct asm_softvolume_params *)payload;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:		pr_debug("%s: filter_gain:%d bandnum:%d\n", __func__,
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:		pr_err("%s: timeout in sending volume command(soft_pause) to apr\n",
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:		pr_err("%s: timeout in sending volume command(soft_volume) to apr\n",
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:		pr_err("%s: timeout in sending volume command to apr\n",
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:		pr_err("%s: timeout in sending volume command to apr\n",
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:		pr_err("%s: Volume Command(soft_volume) failed\n", __func__);
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	sa_param->volume = param[14];
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:		+ sizeof(struct asm_lrchannel_gain_params);
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:				sizeof(struct asm_lrchannel_gain_params);
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:		+ sizeof(struct asm_master_gain_params);
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:				sizeof(struct asm_master_gain_params);
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:		+ sizeof(struct asm_softvolume_params);
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:				sizeof(struct asm_softvolume_params);
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	struct asm_lrchannel_gain_params *lrgain = NULL;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	struct asm_master_gain_params *mgain = NULL;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:	struct asm_softvolume_params *params = NULL;
/root/machinex/sound/soc/msm/qdsp6/q6asm.c:			struct asm_softvolume_params *softvol_param)
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:			case VSS_IVOCPROC_CMD_DEREGISTER_VOLUME_CAL_TABLE:
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:			case VSS_IVOCPROC_CMD_REGISTER_VOLUME_CAL_TABLE:
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:			case VSS_IVOCPROC_CMD_SET_RX_VOLUME_INDEX:
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:		common.voice[i].dev_rx.volume = common.default_vol_val;
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:		common.voice[i].sidetone_gain = 0x512;
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:	cvp_vol_cmd.cvp_set_vol_idx.vol_index = v->dev_rx.volume;
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:	cvp_vol_cmd.hdr.opcode = VSS_IVOCPROC_CMD_SET_RX_VOLUME_INDEX;
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:			pr_err("voice volume failed\n");
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:	/* send volume index to cvp */
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:					sidetone_cal_data.gain);
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:					sidetone_cal_data.gain);
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:	struct cvp_set_rx_volume_index_cmd cvp_vol_cmd;
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:	v->dev_rx.volume = vol_idx;
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:				VSS_IVOCPROC_CMD_DEREGISTER_VOLUME_CAL_TABLE;
/root/machinex/sound/soc/msm/qdsp6/q6voice.c:				VSS_IVOCPROC_CMD_REGISTER_VOLUME_CAL_TABLE;
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:#define VSS_IVOCPROC_CMD_DEREGISTER_VOLUME_CAL_TABLE    0x00011278
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:#define VSS_IVOCPROC_CMD_REGISTER_VOLUME_CAL_TABLE      0x00011277
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:#define VSS_IVOCPROC_CMD_SET_RX_VOLUME_INDEX		0x000110EE
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:	/* Phsical address to be registered with the vocproc. The volume
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:	* provided in VSS_IVOCPROC_CMD_CACHE_VOLUME_CALIBRATION_TABLE and set
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:	/* Size of the volume calibration table in bytes. */
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:struct cvp_set_rx_volume_index_cmd {
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:struct vss_ivocproc_cmd_register_volume_cal_table_t {
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:	struct vss_ivocproc_cmd_register_volume_cal_table_t cvp_vol_cal_tbl;
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:struct vss_ivocproc_cmd_set_volume_index_t {
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:	struct vss_ivocproc_cmd_set_volume_index_t cvp_set_vol_idx;
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:	uint16_t sidetone_gain;
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:	uint32_t volume; /* in index */
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:	* Volume index utilized by the vocproc to index into the volume table
/root/machinex/sound/soc/msm/qdsp6/q6voice.h:	* volume on the VDSP.
/root/machinex/sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c:	compressed_audio.volume = volume;
/root/machinex/sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c:int compressed_set_volume(unsigned volume)
/root/machinex/sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c:		.period = SOFT_VOLUME_PERIOD,
/root/machinex/sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c:		.rampingcurve = SOFT_VOLUME_CURVE_LINEAR,
/root/machinex/sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c:		rc = q6asm_set_lrgain(compressed_audio.prtd->audio_client,
/root/machinex/sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c:	ret = compressed_set_volume(0);
/root/machinex/sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c:	ret = q6asm_set_softvolume(compressed_audio.prtd->audio_client,
/root/machinex/sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c:			return -EAGAIN;
/root/machinex/sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c:		.step = SOFT_VOLUME_STEP,
/root/machinex/sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c:	struct asm_softvolume_params softvol = {
/root/machinex/sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c:	unsigned volume;
/root/machinex/sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c:						volume & 0xFFFF);
/root/machinex/sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c:						(volume >> 16) & 0xFFFF,
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:int multi_ch_pcm_set_volume(unsigned volume)
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:	multi_ch_pcm_audio.volume = volume;
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:		.period = SOFT_VOLUME_PERIOD,
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:	pr_err("multi_ch_pcm_set_volume\n");
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:		pr_err("%s q6asm_set_volume\n", __func__);
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:		.rampingcurve = SOFT_VOLUME_CURVE_LINEAR,
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:		rc = q6asm_set_volume(multi_ch_pcm_audio.prtd->audio_client,
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:	ret = multi_ch_pcm_set_volume(multi_ch_pcm_audio.volume);
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:	ret = q6asm_set_softvolume(multi_ch_pcm_audio.prtd->audio_client,
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:static struct snd_msm_volume multi_ch_pcm_audio = {NULL, 0x2000};
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:		.step = SOFT_VOLUME_STEP,
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:	struct asm_softvolume_params softvol = {
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:struct snd_msm_volume {
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:	unsigned volume;
/root/machinex/sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c:								volume);
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c:int lpa_set_volume(unsigned volume)
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c:	lpa_audio.volume = volume;
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c:	lpa_set_volume(lpa_audio.volume);
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c:		.period = SOFT_VOLUME_PERIOD,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c:		.rampingcurve = SOFT_VOLUME_CURVE_LINEAR,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c:		rc = q6asm_set_lrgain(lpa_audio.prtd->audio_client,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c:	ret = q6asm_set_softvolume(lpa_audio.prtd->audio_client, &softvol);
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c:			return -EAGAIN;
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c:		.step = SOFT_VOLUME_STEP,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c:	struct asm_softvolume_params softvol = {
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c:	unsigned volume;
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c:						volume & 0xFFFF);
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c:						(volume >> 16) & 0xFFFF,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	afe_loopback_gain(INT_FM_TX , ucontrol->value.integer.value[0]);
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:#define INT_RX_VOL_GAIN 0x2000
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:			eq_data[eq_idx].eq_bands[band_idx].filter_gain;
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:			eq_data[eq_idx].eq_bands[band_idx].filter_gain);
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	eq_data[eq_idx].eq_bands[band_idx].filter_gain =
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	if (!compressed_set_volume(ucontrol->value.integer.value[0]))
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	if (!lpa_set_volume(ucontrol->value.integer.value[0]))
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	if (!multi_ch_pcm_set_volume(ucontrol->value.integer.value[0]))
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	INT_RX_VOL_GAIN, 0, msm_routing_get_compressed_vol_mixer,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	INT_RX_VOL_GAIN, 0, msm_routing_get_fm_vol_mixer,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	INT_RX_VOL_GAIN, 0, msm_routing_get_lpa_vol_mixer,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	INT_RX_VOL_GAIN, 0, msm_routing_get_multimedia2_vol_mixer,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	msm_routing_set_compressed_vol_mixer, compressed_rx_vol_gain),
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	msm_routing_set_fm_vol_mixer, fm_rx_vol_gain),
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	msm_routing_set_lpa_vol_mixer, lpa_rx_vol_gain),
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	msm_routing_set_multimedia2_vol_mixer, multimedia2_rx_vol_gain),
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	pr_debug("%s: filter_gain = %d\n", __func__,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:static const DECLARE_TLV_DB_LINEAR(compressed_rx_vol_gain, 0,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:static const DECLARE_TLV_DB_LINEAR(fm_rx_vol_gain, 0,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:static const DECLARE_TLV_DB_LINEAR(lpa_rx_vol_gain, 0,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:static const DECLARE_TLV_DB_LINEAR(multimedia2_rx_vol_gain, 0,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c:	uint32_t     filter_gain; /* Filter band initial gain (dB) */
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.h:int compressed_set_volume(unsigned volume);
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.h:int lpa_set_volume(unsigned volume);
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.h:int multi_ch_pcm_set_volume(unsigned volume);
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voice-v2.c:	int volume = ucontrol->value.integer.value[0];
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voice-v2.c:	int volume = ucontrol->value.integer.value[0];
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voice-v2.c:				msm_voice_volume_get, msm_voice_volume_put),
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voice-v2.c:				msm_volte_volume_get, msm_volte_volume_put),
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voice-v2.c:	pr_debug("%s: volume: %d\n", __func__, volume);
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voice-v2.c:	pr_debug("%s: volume: %d\n", __func__, volume);
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voice-v2.c:						RX_PATH, volume);
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voice-v2.c:						RX_PATH, volume);
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voice-v2.c:static int msm_voice_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voice-v2.c:static int msm_voice_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voice-v2.c:static int msm_volte_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voice-v2.c:static int msm_volte_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voip-v2.c:	int volume = ucontrol->value.integer.value[0];
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voip-v2.c:				msm_voip_volume_get, msm_voip_volume_put),
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voip-v2.c:	pr_debug("%s: volume: %d\n", __func__, volume);
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voip-v2.c:static int msm_voip_volume_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voip-v2.c:static int msm_voip_volume_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/msm/qdsp6v2/msm-pcm-voip-v2.c:			     volume);
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:	debugfs_afelb_gain = debugfs_create_file("afe_loopback_gain",
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:		debugfs_remove(debugfs_afelb_gain);
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:#define Q6AFE_MAX_VOLUME 0x3FFF
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:	} else if (!strncmp(lb_str, "afe_loopback_gain", 17)) {
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:	if (debugfs_afelb_gain)
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:int afe_loopback_gain(u16 port_id, u16 volume)
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:int afe_sidetone(u16 tx_port_id, u16 rx_port_id, u16 enable, uint16_t gain)
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:			param[1] = (Q6AFE_MAX_VOLUME * param[1]) / 100;
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:	pr_debug("%s: %d %hX\n", __func__, port_id, volume);
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:				pr_err("%s: Error, volume shoud be 0 to 100 percentage param = %lu\n",
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:		pr_err("%s: Failed : afe loopback gain only for TX ports. port_id %d\n",
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:	pr_info("%s: tx_port_id:%d rx_port_id:%d enable:%d gain:%d\n", __func__,
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:				rc = afe_loopback_gain(param[0], param[1]);
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:	set_param.gain = volume;
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:	set_param.pdata.param_id = AFE_PARAM_ID_LOOPBACK_GAIN_PER_PATH;
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:	S_IFREG | S_IWUGO, NULL, (void *) "afe_loopback_gain",
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:	    (sizeof(struct afe_loopback_gain_per_path_param) -
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:static struct dentry *debugfs_afelb_gain;
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:	struct afe_loopback_gain_per_path_param set_param;
/root/machinex/sound/soc/msm/qdsp6v2/q6afe.c:					tx_port_id, rx_port_id, enable, gain);
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:		eq.eq_bands[i].filter_gain =
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:					eq_params->eq_bands[i].filter_gain;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:				eq_params->eq_bands[i].filter_gain, i);
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:int q6asm_set_lrgain(struct audio_client *ac, int left_gain, int right_gain)
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:int q6asm_set_softvolume(struct audio_client *ac,
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:int q6asm_set_volume(struct audio_client *ac, int volume)
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	lrgain.data.module_id = ASM_MODULE_ID_VOL_CTRL;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:						lrgain.data.param_id);
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:						lrgain.data.param_id);
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	lrgain.data.param_id = ASM_PARAM_ID_VOL_CTRL_LR_CHANNEL_GAIN;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	lrgain.data.param_size = lrgain.param.data_payload_size -
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	lrgain.data.reserved = 0;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	lrgain.hdr.opcode = ASM_STREAM_CMD_SET_PP_PARAMS_V2;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	lrgain.l_chan_gain = left_gain;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	lrgain.param.data_payload_addr_lsw = 0;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	lrgain.param.data_payload_addr_msw = 0;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	lrgain.param.data_payload_size = sizeof(lrgain) -
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	lrgain.param.mem_map_handle = 0;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	lrgain.r_chan_gain = right_gain;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:		pr_debug("%s: filter_gain:%d bandnum:%d\n", __func__,
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	q6asm_add_hdr_async(ac, &lrgain.hdr, sz, TRUE);
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	rc = apr_send_pkt(ac->apr, (uint32_t *) &lrgain);
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:				sizeof(lrgain.data);
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:				sizeof(lrgain.hdr) - sizeof(lrgain.param);
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	struct asm_soft_step_volume_params softvol;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:			struct asm_softvolume_params *softvol_param)
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	struct asm_volume_ctrl_lr_chan_gain lrgain;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	struct asm_volume_ctrl_master_gain vol;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	struct asm_volume_ctrl_mute_config mute;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	sz = sizeof(struct asm_soft_step_volume_params);
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	sz = sizeof(struct asm_volume_ctrl_lr_chan_gain);
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	sz = sizeof(struct asm_volume_ctrl_master_gain);
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	sz = sizeof(struct asm_volume_ctrl_mute_config);
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	vol.data.param_id = ASM_PARAM_ID_VOL_CTRL_MASTER_GAIN;
/root/machinex/sound/soc/msm/qdsp6v2/q6asm.c:	vol.master_gain = volume;
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c:			case VSS_IVOCPROC_CMD_DEREGISTER_VOLUME_CAL_TABLE:
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c:			case VSS_IVOCPROC_CMD_REGISTER_VOLUME_CAL_TABLE:
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c:			case VSS_IVOCPROC_CMD_SET_RX_VOLUME_INDEX:
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c:		common.voice[i].dev_rx.volume = common.default_vol_val;
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c:		common.voice[i].sidetone_gain = 0x512;
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c:	cvp_vol_cmd.cvp_set_vol_idx.vol_index = v->dev_rx.volume;
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c:	cvp_vol_cmd.hdr.opcode = VSS_IVOCPROC_CMD_SET_RX_VOLUME_INDEX;
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c:	/* send volume index to cvp */
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c:					sidetone_cal_data.gain);
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c:					sidetone_cal_data.gain);
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c:	struct cvp_set_rx_volume_index_cmd cvp_vol_cmd;
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c:	v->dev_rx.volume = vol_idx;
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c:				VSS_IVOCPROC_CMD_DEREGISTER_VOLUME_CAL_TABLE;
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.c:				VSS_IVOCPROC_CMD_REGISTER_VOLUME_CAL_TABLE;
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:#define VSS_IVOCPROC_CMD_DEREGISTER_VOLUME_CAL_TABLE    0x00011278
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:#define VSS_IVOCPROC_CMD_REGISTER_VOLUME_CAL_TABLE      0x00011277
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:#define VSS_IVOCPROC_CMD_SET_RX_VOLUME_INDEX		0x000110EE
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:	/* Phsical address to be registered with the vocproc. The volume
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:	* provided in VSS_IVOCPROC_CMD_CACHE_VOLUME_CALIBRATION_TABLE and set
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:	/* Size of the volume calibration table in bytes. */
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:struct cvp_set_rx_volume_index_cmd {
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:struct vss_ivocproc_cmd_register_volume_cal_table_t {
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:	struct vss_ivocproc_cmd_register_volume_cal_table_t cvp_vol_cal_tbl;
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:struct vss_ivocproc_cmd_set_volume_index_t {
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:	struct vss_ivocproc_cmd_set_volume_index_t cvp_set_vol_idx;
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:	uint16_t sidetone_gain;
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:	uint32_t volume; /* in index */
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:	* Volume index utilized by the vocproc to index into the volume table
/root/machinex/sound/soc/msm/qdsp6v2/q6voice.h:	* volume on the VDSP.
/root/machinex/sound/soc/omap/ams-delta.c: * constellation and speakerphone gain from userspace by issuing AT commands
/root/machinex/sound/soc/omap/mcbsp.c:		*chgain = st_data->ch0gain;
/root/machinex/sound/soc/omap/mcbsp.c:		*chgain = st_data->ch1gain;
/root/machinex/sound/soc/omap/mcbsp.c:int omap_st_get_chgain(struct omap_mcbsp *mcbsp, int channel, s16 *chgain)
/root/machinex/sound/soc/omap/mcbsp.c:int omap_st_set_chgain(struct omap_mcbsp *mcbsp, int channel, s16 chgain)
/root/machinex/sound/soc/omap/mcbsp.c:	MCBSP_ST_WRITE(mcbsp, SGAINCR, ST_CH0GAIN(st_data->ch0gain) | \
/root/machinex/sound/soc/omap/mcbsp.c:		omap_st_chgain(mcbsp);
/root/machinex/sound/soc/omap/mcbsp.c:		omap_st_chgain(mcbsp);
/root/machinex/sound/soc/omap/mcbsp.c:static void omap_st_chgain(struct omap_mcbsp *mcbsp)
/root/machinex/sound/soc/omap/mcbsp.c:		      ST_CH1GAIN(st_data->ch1gain));
/root/machinex/sound/soc/omap/mcbsp.c:		st_data->ch0gain = chgain;
/root/machinex/sound/soc/omap/mcbsp.c:		st_data->ch1gain = chgain;
/root/machinex/sound/soc/omap/mcbsp.h:#define OMAP_ST_REG_SGAINCR	0x24
/root/machinex/sound/soc/omap/mcbsp.h:#define ST_CH0GAIN(value)	((value) & 0xffff)	/* Bits 0:15 */
/root/machinex/sound/soc/omap/mcbsp.h:#define ST_CH1GAIN(value)	(((value) & 0xffff) << 16) /* Bits 16:31 */
/root/machinex/sound/soc/omap/mcbsp.h:int omap_st_get_chgain(struct omap_mcbsp *mcbsp, int channel, s16 *chgain);
/root/machinex/sound/soc/omap/mcbsp.h:int omap_st_set_chgain(struct omap_mcbsp *mcbsp, int channel, s16 chgain);
/root/machinex/sound/soc/omap/mcbsp.h:/********************** McBSP Sidetone SGAINCR bit definitions *************/
/root/machinex/sound/soc/omap/mcbsp.h:	s16 ch0gain;
/root/machinex/sound/soc/omap/mcbsp.h:	s16 ch1gain;
/root/machinex/sound/soc/omap/omap-mcbsp.c:#define OMAP_MCBSP_ST_GET_CHANNEL_VOLUME(channel)			\
/root/machinex/sound/soc/omap/omap-mcbsp.c:#define OMAP_MCBSP_ST_SET_CHANNEL_VOLUME(channel)			\
/root/machinex/sound/soc/omap/omap-mcbsp.c:	if (omap_st_get_chgain(mcbsp, channel, &chgain))		\
/root/machinex/sound/soc/omap/omap-mcbsp.c:	 * McBSP3 as example again (16 or 32 bit samples):
/root/machinex/sound/soc/omap/omap-mcbsp.c:				      omap_mcbsp_get_st_ch0_volume,
/root/machinex/sound/soc/omap/omap-mcbsp.c:				      omap_mcbsp_get_st_ch0_volume,
/root/machinex/sound/soc/omap/omap-mcbsp.c:				      omap_mcbsp_get_st_ch1_volume,
/root/machinex/sound/soc/omap/omap-mcbsp.c:				      omap_mcbsp_get_st_ch1_volume,
/root/machinex/sound/soc/omap/omap-mcbsp.c:omap_mcbsp_get_st_ch##channel##_volume(struct snd_kcontrol *kc,	\
/root/machinex/sound/soc/omap/omap-mcbsp.c:				      omap_mcbsp_set_st_ch0_volume),
/root/machinex/sound/soc/omap/omap-mcbsp.c:				      omap_mcbsp_set_st_ch0_volume),
/root/machinex/sound/soc/omap/omap-mcbsp.c:				      omap_mcbsp_set_st_ch1_volume),
/root/machinex/sound/soc/omap/omap-mcbsp.c:				      omap_mcbsp_set_st_ch1_volume),
/root/machinex/sound/soc/omap/omap-mcbsp.c:omap_mcbsp_set_st_ch##channel##_volume(struct snd_kcontrol *kc,	\
/root/machinex/sound/soc/omap/omap-mcbsp.c:OMAP_MCBSP_ST_GET_CHANNEL_VOLUME(0)
/root/machinex/sound/soc/omap/omap-mcbsp.c:OMAP_MCBSP_ST_GET_CHANNEL_VOLUME(1)
/root/machinex/sound/soc/omap/omap-mcbsp.c:OMAP_MCBSP_ST_SET_CHANNEL_VOLUME(0)
/root/machinex/sound/soc/omap/omap-mcbsp.c:OMAP_MCBSP_ST_SET_CHANNEL_VOLUME(1)
/root/machinex/sound/soc/omap/omap-mcbsp.c:		return -EAGAIN;						\
/root/machinex/sound/soc/omap/omap-mcbsp.c:	return omap_st_set_chgain(mcbsp, channel, val);			\
/root/machinex/sound/soc/omap/omap-mcbsp.c:	s16 chgain;							\
/root/machinex/sound/soc/omap/omap-mcbsp.c:	uc->value.integer.value[0] = chgain;				\
/root/machinex/sound/soc/omap/rx51.c:	snd_soc_limit_volume(codec, "TPA6130A2 Headphone Playback Volume", 42);
/root/machinex/sound/soc/samsung/i2s.c:			return -EAGAIN;
/root/machinex/sound/soc/samsung/i2s.c:			return -EAGAIN;
/root/machinex/sound/soc/samsung/i2s.c:			return -EAGAIN;
/root/machinex/sound/soc/samsung/i2s.c:		return -EAGAIN;
/root/machinex/sound/soc/samsung/i2s.c:		return -EAGAIN;
/root/machinex/sound/soc/samsung/neo1973_wm8753.c:	/* todo: gg check mode (DSP_B) against CSR datasheet */
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:				     ARRAY_SIZE(amp_gain_controls));
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:	/* attach gpio amp gain (if any) */
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:			dev_err(dev, "cannot get amp gpio gain0\n");
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:			dev_err(dev, "cannot get amp gpio gain1\n");
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:		gpio_direction_output(pd->amp_gain[0], 0);
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:		gpio_direction_output(pd->amp_gain[1], 0);
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:		gpio_free(pd->amp_gain[0]);
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:		gpio_free(pd->amp_gain[0]);
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:		gpio_free(pd->amp_gain[1]);
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:		gpio_free(pd->amp_gain[1]);
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:			gpio_free(pdata->amp_gain[0]);
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:	gpio_set_value_cansleep(pdata->amp_gain[0], value & 1);
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:	gpio_set_value_cansleep(pdata->amp_gain[1], value >> 1);
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:	if (pd->amp_gain[0] > 0) {
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:	if (pd->amp_gain[0] > 0) {
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:	if (pdata->amp_gain[0] > 0) {
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:	if (pdata->amp_gain[0] > 0) {
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:	if (to && pdata->amp_gain[0] > 0)
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:	/* if we're umuting, also re-set the gain */
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c: * @kcontrol: The control for the speaker gain.
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c: * @kcontrol: The control for the speaker gain.
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c: * @kcontrol: The control for the speaker gain.
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c: * @kcontrol: The control for the speaker gain.
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c: * Note, if the speaker amp is muted, then we do not set a gain value
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c: * Read the value for the AMP gain control.
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c: * Read the value for the AMP gain control.
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:		ret = gpio_request(pd->amp_gain[0], "gpio-amp-gain0");
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:		ret = gpio_request(pd->amp_gain[1], "gpio-amp-gain1");
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c: * Set the value of the speaker gain from the specified
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c: * Set the value of the speaker gain from the specified
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:		snd_soc_add_card_controls(card, amp_gain_controls,
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c: * speaker_gain_get - read the speaker gain setting.
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:		       speaker_gain_get, speaker_gain_put),
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c: * speaker_gain_put - set the speaker gain setting.
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c: * speaker_gain_set - set the value of the speaker amp gain
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:		speaker_gain_set(spk_gain);
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:		speaker_gain_set(value);
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:	spk_gain = value;
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:static const struct snd_kcontrol_new amp_gain_controls[] = {
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:static int speaker_gain_get(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:static int speaker_gain_put(struct snd_kcontrol *kcontrol,
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:static int spk_gain;
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:static void speaker_gain_set(int value)
/root/machinex/sound/soc/samsung/s3c24xx_simtec.c:	ucontrol->value.integer.value[0] = spk_gain;
/root/machinex/sound/soc/samsung/s3c24xx_simtec_tlv320aic23.c: * BAST		MIC, HPOUT, LOUT, LIN	TPA2001D1 (HPOUTL,R) (gain hardwired)
/root/machinex/sound/soc/samsung/s3c-i2s-v2.c:		/* clear again, just in case */
/root/machinex/sound/soc/sh/hac.c:		/* timeout, try again */
/root/machinex/sound/soc/sh/siu_dai.c:	 * Add mixer support. The SPB is used to change the volume. Both
/root/machinex/sound/soc/sh/siu_dai.c:	case VOLUME_CAPTURE:
/root/machinex/sound/soc/sh/siu_dai.c:	case VOLUME_CAPTURE:
/root/machinex/sound/soc/sh/siu_dai.c:	case VOLUME_PLAYBACK:
/root/machinex/sound/soc/sh/siu_dai.c:	case VOLUME_PLAYBACK:
/root/machinex/sound/soc/sh/siu_dai.c:		cur_vol = port_info->capture.volume;
/root/machinex/sound/soc/sh/siu_dai.c:		cur_vol = port_info->playback.volume;
/root/machinex/sound/soc/sh/siu_dai.c:#define DFLT_VOLUME_LEVEL	0x08000800
/root/machinex/sound/soc/sh/siu_dai.c:# define SIU_MAX_VOLUME		0x1000
/root/machinex/sound/soc/sh/siu_dai.c:# define SIU_MAX_VOLUME		0x7fff
/root/machinex/sound/soc/sh/siu_dai.c:#define VOLUME_CAPTURE		0
/root/machinex/sound/soc/sh/siu_dai.c:#define VOLUME_PLAYBACK		1
/root/machinex/sound/soc/sh/siu_dai.c:	.get		= siu_dai_get_volume,
/root/machinex/sound/soc/sh/siu_dai.c:	.get		= siu_dai_get_volume,
/root/machinex/sound/soc/sh/siu_dai.c:	.info		= siu_dai_info_volume,
/root/machinex/sound/soc/sh/siu_dai.c:	.info		= siu_dai_info_volume,
/root/machinex/sound/soc/sh/siu_dai.c:	(*port_info)->capture.volume = DFLT_VOLUME_LEVEL;
/root/machinex/sound/soc/sh/siu_dai.c:		port_info->capture.volume = new_vol;
/root/machinex/sound/soc/sh/siu_dai.c:	(*port_info)->playback.volume = DFLT_VOLUME_LEVEL;
/root/machinex/sound/soc/sh/siu_dai.c:		port_info->playback.volume = new_vol;
/root/machinex/sound/soc/sh/siu_dai.c:	.private_value	= VOLUME_CAPTURE,
/root/machinex/sound/soc/sh/siu_dai.c:	.private_value	= VOLUME_PLAYBACK,
/root/machinex/sound/soc/sh/siu_dai.c:	.put		= siu_dai_put_volume,
/root/machinex/sound/soc/sh/siu_dai.c:	.put		= siu_dai_put_volume,
/root/machinex/sound/soc/sh/siu_dai.c:	siu_write32(base + SIU_SBDVCA, port_info->playback.volume);
/root/machinex/sound/soc/sh/siu_dai.c:	siu_write32(base + SIU_SBDVCB, port_info->capture.volume);
/root/machinex/sound/soc/sh/siu_dai.c:static int siu_dai_get_volume(struct snd_kcontrol *kctrl,
/root/machinex/sound/soc/sh/siu_dai.c:static int siu_dai_info_volume(struct snd_kcontrol *kctrl,
/root/machinex/sound/soc/sh/siu_dai.c:static int siu_dai_put_volume(struct snd_kcontrol *kctrl,
/root/machinex/sound/soc/sh/siu_dai.c:	    ucontrol->value.integer.value[0] > SIU_MAX_VOLUME ||
/root/machinex/sound/soc/sh/siu_dai.c:	    ucontrol->value.integer.value[1] > SIU_MAX_VOLUME)
/root/machinex/sound/soc/sh/siu_dai.c:	uinfo->value.integer.max = SIU_MAX_VOLUME;
/root/machinex/sound/soc/sh/siu_dai.c:		vol = port_info->capture.volume;
/root/machinex/sound/soc/sh/siu_dai.c:		vol = port_info->playback.volume;
/root/machinex/sound/soc/sh/siu_dai.c:	 * Volume levels: looks like the DSP firmware implements volume controls
/root/machinex/sound/soc/sh/siu.h:	u32				volume;
/root/machinex/sound/soc/soc-core.c:EXPORT_SYMBOL_GPL(snd_soc_limit_volume);
/root/machinex/sound/soc/soc-core.c:		 * In those cases we don't try to register the device again.
/root/machinex/sound/soc/soc-core.c:int snd_soc_limit_volume(struct snd_soc_codec *codec,
/root/machinex/sound/soc/soc-core.c: * snd_soc_limit_volume - Set new limit to an existing volume control.
/root/machinex/sound/soc/soc-dapm.c:/* create new dapm volume control */
/root/machinex/sound/sparc/amd7930.c:	amd->mgain = 0;
/root/machinex/sound/sparc/amd7930.c:	amd->pgain = 200;
/root/machinex/sound/sparc/amd7930.c:	amd->rgain = 128;
/root/machinex/sound/sparc/amd7930.c:	case VOLUME_CAPTURE:
/root/machinex/sound/sparc/amd7930.c:	case VOLUME_CAPTURE:
/root/machinex/sound/sparc/amd7930.c:	case VOLUME_MONITOR:
/root/machinex/sound/sparc/amd7930.c:	case VOLUME_MONITOR:
/root/machinex/sound/sparc/amd7930.c:	case VOLUME_PLAYBACK:
/root/machinex/sound/sparc/amd7930.c:	case VOLUME_PLAYBACK:
/root/machinex/sound/sparc/amd7930.c: * databook which has all the programming information and gain tables.
/root/machinex/sound/sparc/amd7930.c:#define VOLUME_CAPTURE	1
/root/machinex/sound/sparc/amd7930.c:#define VOLUME_MONITOR	0
/root/machinex/sound/sparc/amd7930.c:#define VOLUME_PLAYBACK	2
/root/machinex/sound/sparc/amd7930.c: * elements match sun's gain curve (but with higher resolution):
/root/machinex/sound/sparc/amd7930.c:		.get		=	snd_amd7930_get_volume,
/root/machinex/sound/sparc/amd7930.c:		.get		=	snd_amd7930_get_volume,
/root/machinex/sound/sparc/amd7930.c:		.get		=	snd_amd7930_get_volume,
/root/machinex/sound/sparc/amd7930.c:/* gx, gr & stg gains.  this table must contain 256 elements with
/root/machinex/sound/sparc/amd7930.c:		.info		=	snd_amd7930_info_volume,
/root/machinex/sound/sparc/amd7930.c:		.info		=	snd_amd7930_info_volume,
/root/machinex/sound/sparc/amd7930.c:		.info		=	snd_amd7930_info_volume,
/root/machinex/sound/sparc/amd7930.c:	int			mgain;
/root/machinex/sound/sparc/amd7930.c:	int			pgain;
/root/machinex/sound/sparc/amd7930.c:	int			rgain;
/root/machinex/sound/sparc/amd7930.c:	level = (amd->pgain * (256 + ARRAY_SIZE(ger_coeff))) >> 8;
/root/machinex/sound/sparc/amd7930.c:	map->gx = gx_coeff[amd->rgain];
/root/machinex/sound/sparc/amd7930.c:	map->stgr = gx_coeff[amd->mgain];
/root/machinex/sound/sparc/amd7930.c:		.private_value	=	VOLUME_CAPTURE,
/root/machinex/sound/sparc/amd7930.c:		.private_value	=	VOLUME_MONITOR,
/root/machinex/sound/sparc/amd7930.c:		.private_value	=	VOLUME_PLAYBACK,
/root/machinex/sound/sparc/amd7930.c:		.put		=	snd_amd7930_put_volume,
/root/machinex/sound/sparc/amd7930.c:		.put		=	snd_amd7930_put_volume,
/root/machinex/sound/sparc/amd7930.c:		.put		=	snd_amd7930_put_volume,
/root/machinex/sound/sparc/amd7930.c:static int snd_amd7930_get_volume(struct snd_kcontrol *kctl, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/sparc/amd7930.c:static int snd_amd7930_info_volume(struct snd_kcontrol *kctl, struct snd_ctl_elem_info *uinfo)
/root/machinex/sound/sparc/amd7930.c:static int snd_amd7930_put_volume(struct snd_kcontrol *kctl, struct snd_ctl_elem_value *ucontrol)
/root/machinex/sound/sparc/amd7930.c:		swval = &amd->mgain;
/root/machinex/sound/sparc/amd7930.c:		swval = &amd->mgain;
/root/machinex/sound/sparc/amd7930.c:		swval = &amd->pgain;
/root/machinex/sound/sparc/amd7930.c:		swval = &amd->pgain;
/root/machinex/sound/sparc/amd7930.c:		swval = &amd->rgain;
/root/machinex/sound/sparc/amd7930.c:		swval = &amd->rgain;
/root/machinex/sound/sparc/cs4231.c:	/* clear IRQ again */
/root/machinex/sound/sparc/cs4231.c:		return -EAGAIN;
/root/machinex/sound/sparc/dbri.c: * audio devices. But the SUN HW group decided against it, at least on my
/root/machinex/sound/sparc/dbri.c:		dbri->mm.data[0] &= ~0x3f;	/* Reset the volume bits */
/root/machinex/sound/sparc/dbri.c:		dbri->mm.data[0] |= (DBRI_MAX_VOLUME - left_gain);
/root/machinex/sound/sparc/dbri.c:		dbri->mm.data[1] |= (DBRI_MAX_VOLUME - right_gain);
/root/machinex/sound/sparc/dbri.c:		dbri->mm.data[2] |= CS4215_LG(left_gain);
/root/machinex/sound/sparc/dbri.c:		dbri->mm.data[3] |= CS4215_RG(right_gain);
/root/machinex/sound/sparc/dbri.c:		dbri->stream_info[idx].left_gain = 0;
/root/machinex/sound/sparc/dbri.c:		dbri->stream_info[idx].right_gain = 0;
/root/machinex/sound/sparc/dbri.c:#define CS4215_MLB	(1<<4)	/* 1: Microphone: 20dB gain disabled */
/root/machinex/sound/sparc/dbri.c:#define DBRI_MAX_GAIN		15	/* Input gain */
/root/machinex/sound/sparc/dbri.c:#define DBRI_MAX_VOLUME		63	/* Output volume */
/root/machinex/sound/sparc/dbri.c:	 .get   = snd_cs4215_get_volume,
/root/machinex/sound/sparc/dbri.c:	 .get   = snd_cs4215_get_volume,
/root/machinex/sound/sparc/dbri.c:	if (info->left_gain != vol[0]) {
/root/machinex/sound/sparc/dbri.c:	if (info->right_gain != vol[1]) {
/root/machinex/sound/sparc/dbri.c:		if (vol[0] > DBRI_MAX_GAIN || vol[1] > DBRI_MAX_GAIN)
/root/machinex/sound/sparc/dbri.c:		if (vol[0] > DBRI_MAX_VOLUME || vol[1] > DBRI_MAX_VOLUME)
/root/machinex/sound/sparc/dbri.c:		info->left_gain = vol[0];
/root/machinex/sound/sparc/dbri.c:		info->right_gain = vol[1];
/root/machinex/sound/sparc/dbri.c:	 .info  = snd_cs4215_info_volume,
/root/machinex/sound/sparc/dbri.c:	 .info  = snd_cs4215_info_volume,
/root/machinex/sound/sparc/dbri.c:		int left_gain = info->left_gain & 0x3f;
/root/machinex/sound/sparc/dbri.c:	int left_gain;		/* mixer elements                 */
/root/machinex/sound/sparc/dbri.c:	int right_gain;
/root/machinex/sound/sparc/dbri.c:		int right_gain = info->right_gain & 0x3f;
/root/machinex/sound/sparc/dbri.c:		left_gain = info->left_gain & 0xf;
/root/machinex/sound/sparc/dbri.c:		/* Now set the recording gain. */
/root/machinex/sound/sparc/dbri.c: * parameters (volume, output selection) time multiplexed in 8 byte
/root/machinex/sound/sparc/dbri.c:	 .put   = snd_cs4215_put_volume,
/root/machinex/sound/sparc/dbri.c:	 .put   = snd_cs4215_put_volume,
/root/machinex/sound/sparc/dbri.c:		right_gain = info->right_gain & 0xf;
/root/machinex/sound/sparc/dbri.c:static int snd_cs4215_get_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/sparc/dbri.c:static int snd_cs4215_info_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/sparc/dbri.c:static int snd_cs4215_put_volume(struct snd_kcontrol *kcontrol,
/root/machinex/sound/sparc/dbri.c:	ucontrol->value.integer.value[0] = info->left_gain;
/root/machinex/sound/sparc/dbri.c:	ucontrol->value.integer.value[1] = info->right_gain;
/root/machinex/sound/sparc/dbri.c:		uinfo->value.integer.max = DBRI_MAX_GAIN;
/root/machinex/sound/sparc/dbri.c:		uinfo->value.integer.max = DBRI_MAX_VOLUME;
/root/machinex/sound/spi/at73c213.c:	.info	= snd_at73c213_aux_capture_volume_info,
/root/machinex/sound/spi/at73c213.c:	.info	= snd_at73c213_line_capture_volume_info,
/root/machinex/sound/spi/at73c213.c:	.info	= snd_at73c213_pa_volume_info,
/root/machinex/sound/spi/at73c213.c:	.private_value	= PA_CTRL | (PA_CTRL_APAGAIN << 8) | \
/root/machinex/sound/spi/at73c213.c:	/* Protect mixer registers against concurrent access. */
/root/machinex/sound/spi/at73c213.c:	/* Protect SSC registers against concurrent access. */
/root/machinex/sound/spi/at73c213.c:static int snd_at73c213_aux_capture_volume_info(
/root/machinex/sound/spi/at73c213.c:static int snd_at73c213_line_capture_volume_info(
/root/machinex/sound/spi/at73c213.c:static int snd_at73c213_pa_volume_info(struct snd_kcontrol *kcontrol,
/root/machinex/sound/spi/at73c213.h:/* DAC left line in gain register */
/root/machinex/sound/spi/at73c213.h:/* DAC right line in gain register */
/root/machinex/sound/spi/at73c213.h:#define PA_CTRL_APAGAIN		0
/root/machinex/sound/synth/emux/emux_effect.c:	{PARM_BYTE, 0, 0xff, -1, SNDRV_EMUX_UPDATE_VOLUME},	/* initial attenuation */
/root/machinex/sound/synth/emux/emux_effect.c:	{PARM_BYTE, 0, 0xff, parm_offset(cutoff), SNDRV_EMUX_UPDATE_VOLUME},	/* cutoff */
/root/machinex/sound/synth/emux/emux_nrpn.c:	{20, EMUX_FX_LFO1_VOLUME,	fx_lfo1_volume},
/root/machinex/sound/synth/emux/emux_nrpn.c:	{9, EMUX_FX_LFO1_VOLUME, gs_vib_depth},
/root/machinex/sound/synth/emux/emux_nrpn.c:	case SNDRV_MIDI_SYSEX_GS_MASTER_VOLUME:
/root/machinex/sound/synth/emux/emux_nrpn.c:#define fx_lfo1_volume	fx_twice_value	/* [0,127] 0.1875dB */
/root/machinex/sound/synth/emux/emux_nrpn.c:		snd_emux_update_port(port, SNDRV_EMUX_UPDATE_VOLUME);
/root/machinex/sound/synth/emux/emux_oss.c:	case _EMUX_OSS_INITIAL_VOLUME:
/root/machinex/sound/synth/emux/emux_oss.c:	case _GUS_VOLUME_SCALE:
/root/machinex/sound/synth/emux/emux_oss.c:		port->volume_atten = 0;
/root/machinex/sound/synth/emux/emux_oss.c:		port->volume_atten = 32;
/root/machinex/sound/synth/emux/emux_oss.c:			port->volume_atten = (short)p1;
/root/machinex/sound/synth/emux/emux_oss.c:			snd_emux_update_port(port, SNDRV_EMUX_UPDATE_VOLUME);
/root/machinex/sound/synth/emux/emux_oss.c:		/* volume ramping not supported */
/root/machinex/sound/synth/emux/emux_seq.c:	p->volume_atten = 0;
/root/machinex/sound/synth/emux/emux_synth.c:		/* assuming linear volume */
/root/machinex/sound/synth/emux/emux_synth.c: * calculate volume attenuation
/root/machinex/sound/synth/emux/emux_synth.c:calc_volume(struct snd_emux_voice *vp)
/root/machinex/sound/synth/emux/emux_synth.c:	calc_volume(vp);
/root/machinex/sound/synth/emux/emux_synth.c:		calc_volume(vp);
/root/machinex/sound/synth/emux/emux_synth.c:	case MIDI_CTL_MSB_MAIN_VOLUME:
/root/machinex/sound/synth/emux/emux_synth.c:	/* compute volume target and correct volume parameters */
/root/machinex/sound/synth/emux/emux_synth.c:				do_again++; /* release this at the next interrupt */
/root/machinex/sound/synth/emux/emux_synth.c:	if (do_again) {
/root/machinex/sound/synth/emux/emux_synth.c:	if (update & SNDRV_EMUX_UPDATE_VOLUME)
/root/machinex/sound/synth/emux/emux_synth.c:		if (vp->apan != (int)pan_volumes[pan]) {
/root/machinex/sound/synth/emux/emux_synth.c:	int ch, do_again = 0;
/root/machinex/sound/synth/emux/emux_synth.c: * Magic to calculate the volume (actually attenuation) from all the
/root/machinex/sound/synth/emux/emux_synth.c:		main_vol = chan->control[MIDI_CTL_MSB_MAIN_VOLUME];
/root/machinex/sound/synth/emux/emux_synth.c:		main_vol = chan->control[MIDI_CTL_MSB_MAIN_VOLUME] * vp->reg.amplitude / 127;
/root/machinex/sound/synth/emux/emux_synth.c:	master_vol = port->chset.gs_master_volume;
/root/machinex/sound/synth/emux/emux_synth.c:		snd_emux_update_channel(port, chan, SNDRV_EMUX_UPDATE_VOLUME);
/root/machinex/sound/synth/emux/emux_synth.c: * So volume becomes maximum when avol is 0 (no attenuation), and
/root/machinex/sound/synth/emux/emux_synth.c:static int calc_volume(struct snd_emux_voice *vp);
/root/machinex/sound/synth/emux/emux_synth.c:static unsigned char pan_volumes[256] = {
/root/machinex/sound/synth/emux/emux_synth.c:/* table for volume target calculation */
/root/machinex/sound/synth/emux/emux_synth.c:/* tables for volume->attenuation calculation */
/root/machinex/sound/synth/emux/emux_synth.c:			update_voice(emu, vp, SNDRV_EMUX_UPDATE_VOLUME);
/root/machinex/sound/synth/emux/emux_synth.c:		/* using volume table */
/root/machinex/sound/synth/emux/emux_synth.c: * Voice volume is controlled by volume attenuation parameter.
/root/machinex/sound/synth/emux/emux_synth.c:	vol += port->volume_atten;
/root/machinex/sound/synth/emux/emux_synth.c:			vp->aaux = pan_volumes[255 - pan];
/root/machinex/sound/synth/emux/emux_synth.c:			vp->apan = pan_volumes[pan];
/root/machinex/sound/synth/emux/soundfont.c:	/* 6points volume envelope */
/root/machinex/sound/synth/emux/soundfont.c:	/* scale_freq, scale_factor, volume, and fractions not implemented */
/root/machinex/sound/synth/emux/soundfont.c:				/* try again to search the corresponding sample */
/root/machinex/sound/usb/6fire/control.c:		snd_printk(KERN_ERR PREFIX "Invalid channel in volume control.");
/root/machinex/sound/usb/6fire/control.c:		snd_printk(KERN_ERR PREFIX "Invalid channel in volume control.");
/root/machinex/sound/usb/6fire/control.c:		snd_printk(KERN_ERR PREFIX "Invalid channel in volume control.");
/root/machinex/sound/usb/6fire/control.c:		snd_printk(KERN_ERR PREFIX "Invalid channel in volume control.");
/root/machinex/sound/usb/6fire/control.c: *   volumes and introduced mute switch
/root/machinex/sound/usb/caiaq/audio.c:		 * all sample rates are allowed again */
/root/machinex/sound/usb/caiaq/input.c:		/* volume */
/root/machinex/sound/usb/endpoint.c:	case -EAGAIN:
/root/machinex/sound/usb/endpoint.c: * - decrease the delay count again
/root/machinex/sound/usb/endpoint.c:		 * Reset it so that we autodetect again the next time.
/root/machinex/sound/usb/format.c:	/* Call the triplet parser again, but this time, fp->rate_table is
/root/machinex/sound/usb/midi.c:		 * again at interface 0 by calling usb_set_interface() on it.
/root/machinex/sound/usb/misc/ua101.c:	case -EAGAIN:
/root/machinex/sound/usb/mixer.c:	/* Are there devices with volume range more than 255? I use a bit more
/root/machinex/sound/usb/mixer.c:	case UAC_FU_VOLUME:
/root/machinex/sound/usb/mixer.c:		/* disable non-functional volume control */
/root/machinex/sound/usb/mixer.c:		/* disable non-functional volume control */
/root/machinex/sound/usb/mixer.c:		if (control == UAC_FU_VOLUME) {
/root/machinex/sound/usb/mixer.c:		master_bits &= ~UAC_CONTROL_BIT(UAC_FU_VOLUME);
/root/machinex/sound/usb/mixer.c:	/* Most audio usb devices lie about volume resolution.
/root/machinex/sound/usb/mixer.c: *  	- parse available sample rates again when clock sources changed
/root/machinex/sound/usb/mixer.c:	 * read-only. set_cur_mix_value() will check the mask again and won't
/root/machinex/sound/usb/mixer.c:				"set volume quirk for QuickCam E3500\n");
/root/machinex/sound/usb/mixer.c:				 "set volume quirk for UDA1321/N101 chip\n");
/root/machinex/sound/usb/mixer.c:static void volume_control_quirks(struct usb_mixer_elem_info *cval,
/root/machinex/sound/usb/mixer.c: * TLV callback for mixer volume controls
/root/machinex/sound/usb/mixer.c:	unsigned int type;	/* control type (mute, volume, etc.) */
/root/machinex/sound/usb/mixer.c:			   "usbmixer: master volume quirk for PCM2702 chip\n");
/root/machinex/sound/usb/mixer.c:			   "usbmixer: volume control quirk for Tenx TP6911 Audio Headset\n");
/root/machinex/sound/usb/mixer.c:/* volume control quirks */
/root/machinex/sound/usb/mixer.c:		volume_control_quirks(cval, kctl);
/root/machinex/sound/usb/mixer.c:			   "volume range (=%u), cval->res is probably wrong.",
/root/machinex/sound/usb/mixer_maps.c:	{ 0xc, NULL }, /* Mic feedback Mute/volume (No capture inputs on device) */
/root/machinex/sound/usb/mixer_maps.c:	{ 3, "Master" }, /* FU: master volume - left / right / mute */
/root/machinex/sound/usb/mixer_maps.c:	{ 7, "Master Playback" }, /* Mute/volume for speaker */
/root/machinex/sound/usb/mixer_maps.c:	{ 9, NULL }, /* Capture Mute/volume (No capture inputs on device */
/root/machinex/sound/usb/mixer_maps.c: * e.g. no Master and fake PCM volume
/root/machinex/sound/usb/quirks.c:	return -EAGAIN;
/root/machinex/sound/usb/quirks.c:	/* return -EAGAIN, so the creation of an audio interface for this
/root/machinex/sound/usb/usx2y/usb_stream.c:		return -EAGAIN;
/root/machinex/sound/usb/usx2y/usbus428ctldefs.h:struct usX2Y_volume {
/root/machinex/sound/usb/usx2y/usbus428ctldefs.h:		struct usX2Y_volume vol;
/root/machinex/sound/usb/usx2y/usbusx2yaudio.c:		err = usX2Y_rate_set(usX2Y(card), 44100);	// Lets us428 recognize output-volume settings, disturbs us122.
/root/machinex/sound/usb/usx2y/usbusx2y.c:	compiles again with alsa-current.
/root/machinex/sound/usb/usx2y/usbusx2y.c: * pipe 4 is used for switching the lamps, setting samplerate, volumes ....   
/root/machinex/sound/usb/usx2y/usbusx2y.c:	//	printk("%i:0x%02X ", 8, (int)((unsigned char*)usX2Y->In04Buf)[8]); Master volume shows 0 here if fader is at max during boot ?!?
/root/machinex/sound/usb/usx2y/usbusx2y.c:	Simplified things and made ohci work again.
