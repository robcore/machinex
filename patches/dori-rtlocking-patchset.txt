1271-rtmutex-Make-wait_lock-irq-safe.patch
2839-sched-Consider-pi-boosting-in-setscheduler.patch
3138-sched-Handle-priority-boosted-tasks-proper-in-setsch.patch
3266-rtmutex-Remove-bogus-hrtimer_active-check.patch
3276-sched-deadline-locking-rtmutex-Fix-open-coded-check-.patch
3277-locking-rtmutex-Rename-argument-in-the-rt_mutex_adju.patch
3367-locking-rtmutex-Use-acquire-release-semantics.patch
3368-rtmutex-Delete-scriptable-tester.patch
3369-rtmutex-Warn-if-trylock-is-called-from-hard-softirq-.patch
patches2/1936-locking-rtmutex-Implement-lockless-top-waiter-wakeup.patch
patches2/1937-locking-rtmutex-Drop-usage-of-__HAVE_ARCH_CMPXCHG.patch
patches2/1938-locking-rtmutex-Update-stale-plist-comments.patch
patches2/3144-futex-Lower-the-lock-contention-on-the-HB-lock-durin.patch
patches3/0351-locking-Move-the-rtmutex-code-to-kernel-locking.patch
patches3/0354-sched-rt-Move-rt-specific-bits-into-new-header-file.patch
patches3/0355-sched-Consider-pi-boosting-in-setscheduler.patch
patches3/0357-rtmutex-Fix-deadlock-detector-for-real.patch
patches3/0390-rtmutex-Handle-deadlock-detection-smarter.patch
patches3/0391-rtmutex-Detect-changes-in-the-pi-lock-chain.patch
patches3/0394-Revert-sched-Consider-pi-boosting-in-setscheduler.patch
patches3/0569-rtmutex-Simplify-rtmutex_slowtrylock.patch
patches3/0570-rtmutex-Simplify-and-document-try_to_take_rtmutex.patch
patches3/0571-rtmutex-No-need-to-keep-task-ref-for-lock-owner-chec.patch
patches3/0572-rtmutex-Clarify-the-boost-deboost-part.patch
patches3/0573-rtmutex-Document-pi-chain-walk.patch
patches3/0574-rtmutex-Simplify-remove_waiter.patch
patches3/0575-rtmutex-Confine-deadlock-logic-to-futex.patch
patches3/0576-rtmutex-Cleanup-deadlock-detector-debug-logic.patch
patches3/0577-rtmutex-Avoid-pointless-requeueing-in-the-deadlock-d.patch
patches3/0962-locking-rtmutex-Optimize-setting-task-running-after-.patch
patches3/0963-locking-rtmutex-Avoid-a-NULL-pointer-dereference-on-.patch
patches3/0964-locking-rtmutex-Set-state-back-to-running-on-error.patch
