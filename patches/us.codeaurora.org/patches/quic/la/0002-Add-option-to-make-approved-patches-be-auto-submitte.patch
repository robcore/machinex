From 487c6a2cea662c1324c235af1592c28842dbd81c Mon Sep 17 00:00:00 2001
From: Martin Fick <mfick@codeaurora.org>
Date: Thu, 10 Jun 2010 15:23:26 -0600
Subject: [PATCH 2/2] Add option to make approved patches be auto-submitted

Add a "Publish & Submit" button to the web review screen.  This
button performs the actions that the "Publish Comments" button
performs while additionally submitting the patch for merging.

Bug: issue 391
---
 .../gerrit/common/data/PatchSetPublishDetail.java  |    9 +++++
 .../gerrit/client/changes/ChangeConstants.java     |    1 +
 .../client/changes/ChangeConstants.properties      |    1 +
 .../client/changes/PublishCommentScreen.java       |   35 +++++++++++++++++---
 .../changedetail/PatchSetPublishDetailFactory.java |    2 +
 .../gerrit/server/project/ChangeControl.java       |   24 +++++++++----
 6 files changed, 60 insertions(+), 12 deletions(-)

diff --git a/gerrit-common/src/main/java/com/google/gerrit/common/data/PatchSetPublishDetail.java b/gerrit-common/src/main/java/com/google/gerrit/common/data/PatchSetPublishDetail.java
index 70cc10d..7a0ada3 100644
--- a/gerrit-common/src/main/java/com/google/gerrit/common/data/PatchSetPublishDetail.java
+++ b/gerrit-common/src/main/java/com/google/gerrit/common/data/PatchSetPublishDetail.java
@@ -32,6 +32,7 @@ public class PatchSetPublishDetail {
   protected List<PatchLineComment> drafts;
   protected Map<ApprovalCategory.Id, Set<ApprovalCategoryValue.Id>> allowed;
   protected Map<ApprovalCategory.Id, PatchSetApproval> given;
+  protected boolean isSubmitAllowed;
 
   public Map<ApprovalCategory.Id, Set<ApprovalCategoryValue.Id>> getAllowed() {
     return allowed;
@@ -66,6 +67,10 @@ public class PatchSetPublishDetail {
     this.drafts = drafts;
   }
 
+  public void setSubmitAllowed(boolean allowed) {
+    isSubmitAllowed = allowed;
+  }
+
   public AccountInfoCache getAccounts() {
     return accounts;
   }
@@ -94,4 +99,8 @@ public class PatchSetPublishDetail {
   public PatchSetApproval getChangeApproval(final ApprovalCategory.Id id) {
     return given.get(id);
   }
+
+  public boolean isSubmitAllowed() {
+    return isSubmitAllowed;
+  }
 }
diff --git a/gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/ChangeConstants.java b/gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/ChangeConstants.java
index e79d1a2..fed0927 100644
--- a/gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/ChangeConstants.java
+++ b/gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/ChangeConstants.java
@@ -96,6 +96,7 @@ public interface ChangeConstants extends Constants {
 
   String buttonReview();
   String buttonPublishCommentsSend();
+  String buttonPublishSubmitSend();
   String buttonPublishCommentsCancel();
   String headingCoverMessage();
   String headingPatchComments();
diff --git a/gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/ChangeConstants.properties b/gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/ChangeConstants.properties
index 7c4c986..155d657 100644
--- a/gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/ChangeConstants.properties
+++ b/gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/ChangeConstants.properties
@@ -73,6 +73,7 @@ abandonChangeTitle = Code Review - Abandon Change
 
 buttonReview = Review
 buttonPublishCommentsSend = Publish Comments
+buttonPublishSubmitSend = Publish and Submit
 buttonPublishCommentsCancel = Cancel
 headingCoverMessage = Cover Message:
 headingPatchComments = Patch Comments:
diff --git a/gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/PublishCommentScreen.java b/gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/PublishCommentScreen.java
index 9691119..401591c 100644
--- a/gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/PublishCommentScreen.java
+++ b/gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/PublishCommentScreen.java
@@ -25,6 +25,7 @@ import com.google.gerrit.client.ui.PatchLink;
 import com.google.gerrit.client.ui.SmallHeading;
 import com.google.gerrit.common.PageLinks;
 import com.google.gerrit.common.data.ApprovalType;
+import com.google.gerrit.common.data.ChangeDetail;
 import com.google.gerrit.common.data.PatchSetPublishDetail;
 import com.google.gerrit.reviewdb.ApprovalCategory;
 import com.google.gerrit.reviewdb.ApprovalCategoryValue;
@@ -67,6 +68,7 @@ public class PublishCommentScreen extends AccountScreen implements
   private NpTextArea message;
   private FlowPanel draftsPanel;
   private Button send;
+  private Button submit;
   private Button cancel;
   private boolean saveStateOnUnload = true;
   private List<CommentEditorPanel> commentEditors;
@@ -109,6 +111,10 @@ public class PublishCommentScreen extends AccountScreen implements
     send.addClickHandler(this);
     buttonRow.add(send);
 
+    submit = new Button(Util.C.buttonPublishSubmitSend());
+    submit.addClickHandler(this);
+    buttonRow.add(submit);
+
     cancel = new Button(Util.C.buttonPublishCommentsCancel());
     cancel.addClickHandler(this);
     buttonRow.add(cancel);
@@ -142,7 +148,9 @@ public class PublishCommentScreen extends AccountScreen implements
   public void onClick(final ClickEvent event) {
     final Widget sender = (Widget) event.getSource();
     if (send == sender) {
-      onSend();
+      onSend(false);
+    } else if (submit == sender) {
+      onSend(true);
     } else if (cancel == sender) {
       saveStateOnUnload = false;
       goChange();
@@ -250,6 +258,7 @@ public class PublishCommentScreen extends AccountScreen implements
     if (r.getChange().getStatus().isOpen()) {
       initApprovals(r, approvalPanel);
     }
+
     if (lastState != null && patchSetId.equals(lastState.patchSetId)) {
       message.setText(lastState.message);
     }
@@ -285,11 +294,13 @@ public class PublishCommentScreen extends AccountScreen implements
         panel.add(editor);
       }
     }
+
+    submit.setVisible(r.isSubmitAllowed());
   }
 
-  private void onSend() {
+  private void onSend(final boolean submit) {
     if (commentEditors.isEmpty()) {
-      onSend2();
+      onSend2(submit);
     } else {
       final GerritCallback<VoidResult> afterSaveDraft =
           new GerritCallback<VoidResult>() {
@@ -298,7 +309,7 @@ public class PublishCommentScreen extends AccountScreen implements
             @Override
             public void onSuccess(final VoidResult result) {
               if (++done == commentEditors.size()) {
-                onSend2();
+                onSend2(submit);
               }
             }
           };
@@ -308,7 +319,7 @@ public class PublishCommentScreen extends AccountScreen implements
     }
   }
 
-  private void onSend2() {
+  private void onSend2(final boolean submit) {
     final Map<ApprovalCategory.Id, ApprovalCategoryValue.Id> values =
         new HashMap<ApprovalCategory.Id, ApprovalCategoryValue.Id>();
     for (final ValueRadioButton b : approvalButtons) {
@@ -321,6 +332,20 @@ public class PublishCommentScreen extends AccountScreen implements
         new HashSet<ApprovalCategoryValue.Id>(values.values()),
         new GerritCallback<VoidResult>() {
           public void onSuccess(final VoidResult result) {
+            if(submit) {
+              submit();
+            } else {
+              saveStateOnUnload = false;
+              goChange();
+            }
+          }
+        });
+  }
+
+  private void submit() {
+    Util.MANAGE_SVC.submit(patchSetId,
+        new GerritCallback<ChangeDetail>() {
+          public void onSuccess(ChangeDetail result) {
             saveStateOnUnload = false;
             goChange();
           }
diff --git a/gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/changedetail/PatchSetPublishDetailFactory.java b/gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/changedetail/PatchSetPublishDetailFactory.java
index c98d129..31274bc 100644
--- a/gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/changedetail/PatchSetPublishDetailFactory.java
+++ b/gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/changedetail/PatchSetPublishDetailFactory.java
@@ -29,6 +29,7 @@ import com.google.gerrit.reviewdb.PatchSetApproval;
 import com.google.gerrit.reviewdb.PatchSetInfo;
 import com.google.gerrit.reviewdb.RefRight;
 import com.google.gerrit.reviewdb.ReviewDb;
+import com.google.gerrit.server.ChangeUtil;
 import com.google.gerrit.server.IdentifiedUser;
 import com.google.gerrit.server.account.AccountInfoCacheFactory;
 import com.google.gerrit.server.patch.PatchSetInfoFactory;
@@ -121,6 +122,7 @@ final class PatchSetPublishDetailFactory extends Handler<PatchSetPublishDetail>
     detail.setDrafts(drafts);
     detail.setAllowed(allowed);
     detail.setGiven(given);
+    detail.setSubmitAllowed(control.canSubmit(patchSetId) == null);
 
     return detail;
   }
diff --git a/gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java b/gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java
index 97dd276..e5f9e88 100644
--- a/gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java
+++ b/gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java
@@ -184,13 +184,9 @@ public class ChangeControl {
     return false;
   }
 
-  /** @return an error string if this user cannot currently submit patch
-   *          sets to this change */
-  public String canSubmit(final PatchSet.Id patchSetId, final ReviewDb db,
-        final ApprovalTypes approvalTypes,
-        FunctionState.Factory functionStateFactory)
-         throws OrmException {
-
+  /** @return an error string if this user can never submit patch sets
+   *          to this change */
+  public String canSubmit(final PatchSet.Id patchSetId) {
     if (change.getStatus().isClosed()) {
       return "Change " + patchSetId.getParentKey() + " is closed";
     }
@@ -200,6 +196,20 @@ public class ChangeControl {
     if (!getRefControl().canSubmit()) {
       return "User does not have permission to submit";
     }
+    return null;
+  }
+
+  /** @return an error string if this user cannot currently submit patch
+   *          sets to this change */
+  public String canSubmit(final PatchSet.Id patchSetId, final ReviewDb db,
+        final ApprovalTypes approvalTypes,
+        FunctionState.Factory functionStateFactory)
+         throws OrmException {
+
+    String err = canSubmit(patchSetId);
+    if (err != null) {
+      return err;
+    }
 
     final List<PatchSetApproval> allApprovals =
         new ArrayList<PatchSetApproval>(db.patchSetApprovals().byPatchSet(
-- 
1.7.0.2

