From f457d5d4e38ced798d6807d03609d85ea02748a4 Mon Sep 17 00:00:00 2001
From: Mike Mager <mikemager@codeaurora.org>
Date: Tue, 14 Oct 2014 11:02:58 -0700
Subject: [PATCH] QCamera2: allow RDI video mode steaming

Change-Id: Icb8a0647526bbc1c4e98326d0423f407a67fbd1d
---
 QCamera2/HAL/QCamera2HWI.cpp    | 22 +++++++++++++++-------
 QCamera2/HAL/QCameraChannel.cpp |  3 ++-
 2 files changed, 17 insertions(+), 8 deletions(-)

diff --git a/QCamera2/HAL/QCamera2HWI.cpp b/QCamera2/HAL/QCamera2HWI.cpp
index 679d636..74d3028 100644
--- a/QCamera2/HAL/QCamera2HWI.cpp
+++ b/QCamera2/HAL/QCamera2HWI.cpp
@@ -4067,8 +4067,14 @@ int32_t QCamera2HardwareInterface::addVideoChannel()
         return rc;
     }
 
-    rc = addStreamToChannel(pChannel, CAM_STREAM_TYPE_VIDEO,
-                            video_stream_cb_routine, this);
+    if (isRdiMode()) {
+        ALOGD("RDI_DEBUG %s[%d]: Add raw stream to video channel", __func__, __LINE__);
+        rc = addStreamToChannel(pChannel, CAM_STREAM_TYPE_RAW,
+                                video_stream_cb_routine, this);
+    } else {
+        rc = addStreamToChannel(pChannel, CAM_STREAM_TYPE_VIDEO,
+                                video_stream_cb_routine, this);
+    }
     if (rc != NO_ERROR) {
         ALOGE("%s: add video stream failed, ret = %d", __func__, rc);
         delete pChannel;
@@ -4849,17 +4855,17 @@ int32_t QCamera2HardwareInterface::preparePreview()
         }
     } else {
         bool recordingHint = mParameters.getRecordingHintValue();
-        if(!isRdiMode() && recordingHint) {
+        if(recordingHint) {
             cam_dimension_t videoSize;
             mParameters.getVideoSize(&videoSize.width, &videoSize.height);
-            if (!is4k2kResolution(&videoSize)) {
+            if (!isRdiMode() && !is4k2kResolution(&videoSize)) {
                rc = addChannel(QCAMERA_CH_TYPE_SNAPSHOT);
                if (rc != NO_ERROR) {
                    return rc;
                }
             }
             rc = addChannel(QCAMERA_CH_TYPE_VIDEO);
-            if (rc != NO_ERROR) {
+            if (!isRdiMode() && rc != NO_ERROR) {
                 delChannel(QCAMERA_CH_TYPE_SNAPSHOT);
                 ALOGE("%s[%d]:failed!! rc = %d", __func__, __LINE__, rc);
                 return rc;
@@ -4867,9 +4873,11 @@ int32_t QCamera2HardwareInterface::preparePreview()
         }
 
         rc = addChannel(QCAMERA_CH_TYPE_PREVIEW);
-        if (!isRdiMode() && (rc != NO_ERROR)) {
+        if (rc != NO_ERROR) {
             if (recordingHint) {
-                delChannel(QCAMERA_CH_TYPE_SNAPSHOT);
+                if (!isRdiMode()) {
+                    delChannel(QCAMERA_CH_TYPE_SNAPSHOT);
+                }
                 delChannel(QCAMERA_CH_TYPE_VIDEO);
             }
             ALOGE("%s[%d]:failed!! rc = %d", __func__, __LINE__, rc);
diff --git a/QCamera2/HAL/QCameraChannel.cpp b/QCamera2/HAL/QCameraChannel.cpp
index 60d19a9..57a640f 100644
--- a/QCamera2/HAL/QCameraChannel.cpp
+++ b/QCamera2/HAL/QCameraChannel.cpp
@@ -695,7 +695,8 @@ int32_t QCameraVideoChannel::releaseFrame(const void * opaque, bool isMetaData)
 {
     QCameraStream *pVideoStream = NULL;
     for (int i = 0; i < m_numStreams; i++) {
-        if (mStreams[i] != NULL && mStreams[i]->isTypeOf(CAM_STREAM_TYPE_VIDEO)) {
+        if (mStreams[i] != NULL && (mStreams[i]->isTypeOf(CAM_STREAM_TYPE_VIDEO) ||
+                                    mStreams[i]->isTypeOf(CAM_STREAM_TYPE_RAW))) {
             pVideoStream = mStreams[i];
             break;
         }
-- 
1.8.2.1

