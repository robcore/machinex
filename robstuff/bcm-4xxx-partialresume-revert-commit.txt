From efecf121775fb6db31d82cbd1f2c88d383fd273c Mon Sep 17 00:00:00 2001
From: Pranav Vashi <neobuddy89@gmail.com>
Date: Wed, 23 Nov 2016 22:11:56 +0530
Subject: [PATCH] Revert "ARM: msm: shamu: Add wlan partial resume support"

This reverts commit e50f7c4b2ec94224d79334013c420e733054b45f.
---
 arch/arm/mach-msm/board-msm-bcm4356.c | 118 ----------------------------------
 1 file changed, 118 deletions(-)

diff --git a/arch/arm/mach-msm/board-msm-bcm4356.c b/arch/arm/mach-msm/board-msm-bcm4356.c
index d36a108..9a17681 100644
--- a/arch/arm/mach-msm/board-msm-bcm4356.c
+++ b/arch/arm/mach-msm/board-msm-bcm4356.c
@@ -8,10 +8,6 @@
 #include <linux/wlan_plat.h>
 #include <linux/mmc/host.h>
 #include <linux/if.h>
-#ifdef CONFIG_PARTIALRESUME
-#include <linux/partialresume.h>
-#include <linux/spinlock.h>
-#endif
 
 #include <mach/gpio.h>
 #include <mach/board.h>
@@ -27,10 +23,6 @@
 static int gpio_wl_reg_on = 82;
 static int brcm_wake_irq = -1;
 
-#ifdef CONFIG_PARTIALRESUME
-static bool bcm_wifi_process_partial_resume(int action);
-#endif
-
 #ifdef CONFIG_DHD_USE_STATIC_BUF
 
 #define WLAN_STATIC_SCAN_BUF0		5
@@ -516,9 +508,6 @@ static struct wifi_platform_data brcm_wlan_control = {
 #endif
 	.get_wake_irq	= brcm_wlan_get_wake_irq,
 	.get_country_code = brcm_wlan_get_country_code,
-#ifdef CONFIG_PARTIALRESUME
-	.partial_resume = bcm_wifi_process_partial_resume,
-#endif
 };
 
 static struct platform_device brcm_device_wlan = {
@@ -551,110 +540,3 @@ int __init brcm_wlan_init(void)
 	return rc;
 }
 subsys_initcall(brcm_wlan_init);
-
-#ifdef CONFIG_PARTIALRESUME
-static bool smd_partial_resume(struct partial_resume *pr)
-{
-	return true;
-}
-
-#define PR_INIT_STATE          0
-#define PR_IN_RESUME_STATE     1
-#define PR_RESUME_OK_STATE     2
-#define PR_SUSPEND_OK_STATE    3
-
-static DECLARE_COMPLETION(bcm_comp);
-static int bcm_suspend = PR_INIT_STATE;
-static spinlock_t bcm_lock;
-
-/*
- * Partial Resume State Machine:
-    _______
-   / else [INIT]________________________
-   \______/   | notify_resume           \
-           [IN_RESUME]              wait_for_ready
-           /       \ vote_for_suspend   /
-   vote_for_resume [SUSPEND_OK]________/
-           \       / vote_for_resume  /
-          [RESUME_OK]                /
-                   \________________/
- */
-
-static bool bcm_wifi_process_partial_resume(int action)
-{
-	bool suspend = false;
-	int timeout = 0;
-
-	if ((action != WIFI_PR_NOTIFY_RESUME) && (bcm_suspend == PR_INIT_STATE))
-		return suspend;
-
-	if (action == WIFI_PR_WAIT_FOR_READY)
-		timeout = wait_for_completion_timeout(&bcm_comp,
-						      msecs_to_jiffies(50));
-
-	spin_lock(&bcm_lock);
-	switch (action) {
-	case WIFI_PR_WAIT_FOR_READY:
-		suspend = (bcm_suspend == PR_SUSPEND_OK_STATE) && (timeout != 0);
-		bcm_suspend = PR_INIT_STATE;
-		break;
-	case WIFI_PR_VOTE_FOR_RESUME:
-		bcm_suspend = PR_RESUME_OK_STATE;
-		complete(&bcm_comp);
-		break;
-	case WIFI_PR_VOTE_FOR_SUSPEND:
-		if (bcm_suspend == PR_IN_RESUME_STATE)
-			bcm_suspend = PR_SUSPEND_OK_STATE;
-		complete(&bcm_comp);
-		break;
-	case WIFI_PR_NOTIFY_RESUME:
-		INIT_COMPLETION(bcm_comp);
-		bcm_suspend = PR_IN_RESUME_STATE;
-		break;
-	case WIFI_PR_INIT:
-		bcm_suspend = PR_INIT_STATE;
-		break;
-	}
-	spin_unlock(&bcm_lock);
-	return suspend;
-}
-
-bool wlan_vote_for_suspend(void)
-{
-	return bcm_wifi_process_partial_resume(WIFI_PR_VOTE_FOR_SUSPEND);
-}
-EXPORT_SYMBOL(wlan_vote_for_suspend);
-
-static bool bcm_wifi_partial_resume(struct partial_resume *pr)
-{
-	bool suspend;
-
-	suspend = bcm_wifi_process_partial_resume(WIFI_PR_WAIT_FOR_READY);
-	pr_info("%s: vote %d\n", __func__, suspend);
-	return suspend;
-}
-
-static struct partial_resume smd_pr = {
-	.irq = 200,
-	.partial_resume = smd_partial_resume,
-};
-
-static struct partial_resume wlan_pr = {
-	.partial_resume = bcm_wifi_partial_resume,
-};
-
-int __init wlan_partial_resume_init(void)
-{
-	int rc;
-
-	/* Setup partial resume */
-	spin_lock_init(&bcm_lock);
-	wlan_pr.irq = brcm_wake_irq;
-	printk("%s: Wlan wake IRQ = %d\n", __func__, wlan_pr.irq);
-	rc = register_partial_resume(&wlan_pr);
-	rc = register_partial_resume(&smd_pr);
-	return rc;
-}
-
-late_initcall(wlan_partial_resume_init);
-#endif
