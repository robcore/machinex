2017-04-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched fair: make min max use unsigned int for
	cpus

2017-04-29  robcore <robpatershuk@gmail.com>

	* kernel/power/wakelock.c: dont need that ifndef

2017-04-29  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/Makefile: used cflag trickery to fix
	wireless instead of the previous commit which just broke it

2017-04-29  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/siutils.c,
	drivers/video/msm/vidc/1080p/resource_tracker/vcd_res_tracker.c: fix
	the vidc comparison in a smarter way

2017-04-29  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/vidc/1080p/resource_tracker/vcd_res_tracker.c: 
	fix a bool comparison with a constant in vcd_res_tracker

2017-04-29  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/siutils.c: fix some (surprise
	surprise) shitty casting in dhd siutils (what the FUCK was the point
	of that anyway? YOU DUMB FUCKERS LEARN HOW TO CODE FOR YOUR OWN
	FUCKING HARDWARE)

2017-04-29  robcore <robpatershuk@gmail.com>

	* Makefile: okay misleading-indentation, the novelty has worn off

2017-04-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c: fixup that too, i
	actually kinda like gcc warning me about shitty indents

2017-04-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c: think it is supposed
	to be coded this way

2017-04-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c: oops

2017-04-29  robcore <robpatershuk@gmail.com>

	* block/Kconfig.iosched: BLK_CGROUP wont ever be built as a module

2017-04-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c,
	fs/ecryptfs/crypto.c, kernel/sched/sched.h: some more if else fixing

2017-04-29  robcore <robpatershuk@gmail.com>

	* mm/vmscan.c: oooh gcc 6 is good at finding sneaky errors

2017-04-29  robcore <robpatershuk@gmail.com>

	* Makefile: this toolchain doesnt have graphite

2017-04-29  robcore <robpatershuk@gmail.com>

	* Makefile, build_kernel.sh, build_single_driver.sh, cleanup.sh: for
	fun, trying out gcc 6.3 linaro hardfloat

2017-04-29  robcore <robpatershuk@gmail.com>

	* pending_uapi.txt: there a more complete list

2017-04-29  robcore <robpatershuk@gmail.com>

	* pending_uapi.txt: found some more todo

2017-04-29  robcore <robpatershuk@gmail.com>

	* include/media/msm_camera.h, include/uapi/media/Kbuild,
	include/uapi/media/msm_camera.h: msm_camera - exporting the lot of
	it to userspace

2017-04-29  robcore <robpatershuk@gmail.com>

	* pending_uapi.txt: TODO: I made a list of all of the uapi
	conversions i need to look into

2017-04-29  robcore <robpatershuk@gmail.com>

	* include/uapi/linux/leds-an30259a.h: leds - fix my uapi header

2017-04-29  robcore <robpatershuk@gmail.com>

	* include/linux/leds-an30259a.h, include/uapi/linux/leds-an30259a.h: 
	leds - fix my userspace export for leds

2017-04-29  robcore <robpatershuk@gmail.com>

	* include/linux/mpu_411.h, include/uapi/linux/Kbuild,
	include/uapi/linux/mpu_411.h: mpu_411 - export to userspace

2017-04-29  robcore <robpatershuk@gmail.com>

	* include/linux/k2dh.h, include/uapi/linux/Kbuild,
	include/uapi/linux/k2dh.h: uapi - export stm accelerometer ioctls to
	userspace

2017-04-29  robcore <robpatershuk@gmail.com>

	* arch/x86/Kconfig, arch/x86/include/asm/pvqspinlock.h,
	arch/x86/include/asm/qspinlock.h, arch/x86/include/asm/spinlock.h,
	arch/x86/include/asm/spinlock_types.h, arch/x86/kernel/Makefile,
	arch/x86/kernel/paravirt-spinlocks.c,
	f72b8792d180948b4b3898374998f5ac8c02e539.patch.1,
	include/asm-generic/qspinlock.h,
	include/asm-generic/qspinlock_types.h, kernel/Kconfig.locks,
	kernel/cpuset.c, kernel/locking/Makefile,
	kernel/locking/mcs_spinlock.h, kernel/locking/qspinlock.c: possed

2017-04-29  robcore <robpatershuk@gmail.com>

	* pos.sh: overshot my wad, possing

2017-04-29  robcore <robpatershuk@gmail.com>

	* kernel/locking/mcs_spinlock.h: TODO: get compxchange release. wish
	i knew which branch samsung was using

2017-04-29  robcore <robpatershuk@gmail.com>

	* kernel/locking/mcs_spinlock.h: little more fix merging

2017-04-29  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/pvqspinlock.h,
	arch/x86/include/asm/qspinlock.h, kernel/locking/mcs_spinlock.h,
	kernel/locking/qspinlock.c: little more

2017-04-29  robcore <robpatershuk@gmail.com>

	* f72b8792d180948b4b3898374998f5ac8c02e539.patch.1,
	kernel/locking/qspinlock.c: final squash of qspinlock

2017-04-29  robcore <robpatershuk@gmail.com>

	* kernel/locking/qspinlock.c:  unfair qspinlock: Variable frequency lock stealing mechanism

2017-04-29  robcore <robpatershuk@gmail.com>

	* kernel/locking/qspinlock.c: qspinlock: Split the MCS queuing code
	into a separate slowerpath

2017-04-29  robcore <robpatershuk@gmail.com>

	* arch/x86/Kconfig, arch/x86/include/asm/qspinlock.h,
	arch/x86/kernel/Makefile, arch/x86/kernel/paravirt-spinlocks.c,
	kernel/locking/qspinlock.c: more qspin squashing

2017-04-29  robcore <robpatershuk@gmail.com>

	* kernel/locking/qspinlock.c: qspinlock - prolong the stay in the
	pending bit path

2017-04-29  robcore <robpatershuk@gmail.com>

	* include/asm-generic/qspinlock_types.h, kernel/locking/qspinlock.c: 
	qspinlock optimize for smaller nr_cpus

2017-04-29  robcore <robpatershuk@gmail.com>

	* include/asm-generic/qspinlock_types.h, kernel/locking/qspinlock.c: 
	qspinlock - extract out the exchange of tail word code

2017-04-29  robcore <robpatershuk@gmail.com>

	* include/asm-generic/qspinlock_types.h, kernel/locking/qspinlock.c: 
	qspinlock - add pending bit

2017-04-29  robcore <robpatershuk@gmail.com>

	* arch/x86/Kconfig, arch/x86/include/asm/qspinlock.h,
	arch/x86/include/asm/spinlock.h,
	arch/x86/include/asm/spinlock_types.h: x86 bs

2017-04-29  robcore <robpatershuk@gmail.com>

	* include/asm-generic/qspinlock.h,
	include/asm-generic/qspinlock_types.h, kernel/Kconfig.locks,
	kernel/locking/Makefile, kernel/locking/mcs_spinlock.h,
	kernel/locking/qspinlock.c: qspinlock: A simple generic 4-byte queue
	spinlock

2017-04-29  robcore <robpatershuk@gmail.com>

	* kernel/locking/mcs_spinlock.h: use read/write once instead of
	access in mcs spinlocks

2017-04-29  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: cpuset-Fix-cpuset-sched_relax_domain_level

2017-04-29  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: 
	cpuset-initialize-effective-masks-when-clone_children-is-enabled

2017-04-28  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/binder.c: binder - disable debugging (shut
	the fuck up)

2017-04-28  robcore <robpatershuk@gmail.com>

	* include/linux/unaligned/access_ok.h: include/linux/unaligned:
	force inlining of byteswap operations

2017-04-28  robcore <robpatershuk@gmail.com>

	* drivers/mmc/card/queue.c: but not using it yet

2017-04-28  robcore <robpatershuk@gmail.com>

	* drivers/mmc/card/queue.c: TEST
	ANDROID-mmc-move-to-a-SCHED_FIFO-thread.

2017-04-28  robcore <robpatershuk@gmail.com>

	* include/linux/compiler-gcc6.h: compiler-add-support-for-GCC-6

2017-04-28  robcore <robpatershuk@gmail.com>

	* kernel/freezer.c: freezer - on second thought freezer needs all
	the help it can get, and im pretty sure the task test is the correct
	way to go

2017-04-28  robcore <robpatershuk@gmail.com>

	* drivers/leds/led-class.c: THERE it was - when i converted leds
	class to use dev attrs, apparently the source commit had this as
	read only (while still keeping the "store" routine for some
	reason(?). one or the other makes more sense, jack

2017-04-28  robcore <robpatershuk@gmail.com>

	* kernel/freezer.c: overkill freezer as an experiment

2017-04-28  robcore <robpatershuk@gmail.com>

	* kernel/fork.c: initalize the seqlock in fork

2017-04-28  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: kernel exit: throw sequence locks/counters around
	stats accounting

2017-04-28  robcore <robpatershuk@gmail.com>

	* include/linux/leds-an30259a.h, include/uapi/linux/Kbuild,
	include/uapi/linux/leds-an30259a.h: leds - pass JF header to
	userspace via uapi/kbuild

2017-04-28  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h, arch/arm/kernel/topology.c,
	drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: reverted all
	those topology ones again for now

2017-04-28  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h, arch/arm/kernel/topology.c,
	include/linux/cpufreq.h: hooold up imma gonna create a krait entry

2017-04-28  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h: 
	WIP-arm-Enable-frequency-invariant-scheduler-load

2017-04-28  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c: WIP-arm-topology-Define-TC2-energy
	(idea for dtb-platform device conversion

2017-04-28  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c: 
	WIP-arm-Cpu-invariant-scheduler-load-tracking-and-capacity

2017-04-28  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c: 
	WIP-arm-Enable-max-freq-invariant-scheduler-load-tracking

2017-04-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: WIP - cpufreq
	- add frequency invariant scheduler load tracking to cpufreq.c

2017-04-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c, include/linux/cpufreq.h: muahaha
	- if this works we reap the benifits of more concise freq stats
	accounting, without having to bother with power usage

2017-04-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c: added smarter logic for
	compare_for_sort

2017-04-28  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c,
	drivers/cpufreq/cpufreq_stats.c, include/linux/cpufreq.h: after all
	this time, youd think i would know off hand how to register a
	platform device from scratch...

2017-04-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c: add back power stats again on a
	hunch

2017-04-28  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: no suspend time

2017-04-28  robcore <robpatershuk@gmail.com>

	* init/do_mounts.c: TEST - init: reduce rootwait polling interval
	time to 5ms from 100ms

2017-04-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c: loadavg - test out alternative (newer)
	loadavging function again

2017-04-28  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c, drivers/battery/sec_fuelgauge.c: a
	very small amount of battery logic from i337m again to test

2017-04-28  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c: reverted

2017-04-28  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c: also no

2017-04-28  robcore <robpatershuk@gmail.com>

	* drivers/battery/max77693_charger.c: reverted

2017-04-28  robcore <robpatershuk@gmail.com>

	* drivers/battery/max77693_charger.c: nope

2017-04-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	-sched-migration-Move-calc_load_migrate-into-CPU_DYING

2017-04-28  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/core.c: oops mmc schedule -> fix my derp when
	taking it off of a single core thread

2017-04-28  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/debug.c,
	kernel/sched/fair.c, kernel/sched/sched.h: reverted those three for
	now

2017-04-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	WIP-UTIL_EST-switch-to-usage-of-tasks-s-estimated

2017-04-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	-WIP-UTIL_EST-sched-core-fair-add-support-to-use-estimate

2017-04-28  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/debug.c, kernel/sched/fair.c: 
	WIP-UTIL_EST-sched-fair-add-support-for-estimated-util

2017-04-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_electrodemand.c: electro - raise the freq
	for responsiveness

2017-04-27  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/core.c: mmc core - make mmc delayed work unbound

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: some fair.c fixes/experiments

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fair - turn cstate aware back on, and cut
	load_avg calc limits in half

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: testing walt without cstate awareness

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/completion.c, kernel/sched/cpufreq.c,
	kernel/sched/cpufreq_schedutil.c: prematurely import schedutil gov
	and cpufreq hook to investigate, also grabbed a memory barrier
	removal

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/wakeup_reason.h, kernel/power/main.c,
	kernel/power/power.h, kernel/power/process.c,
	kernel/power/suspend.c, kernel/power/wakelock.c,
	kernel/power/wakeup_reason.c: I think the ol wakeup_reason/suspend
	method using a combination of "todo" and "wakeup" worked better

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: sched tune isnt good?

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h, arch/arm/kernel/topology.c,
	include/linux/cpufreq.h, kernel/ksysfs.c, kernel/sched/fair.c: nope
	fuck em

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: lets see if this doesnt fix it, if not, fuck
	it this is working thus far

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/ksysfs.c: one last reminder of old arch power

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h, arch/arm/kernel/topology.c,
	include/linux/cpufreq.h, kernel/ksysfs.c, kernel/sched/fair.c: added
	arm topology changes back, removed arch power, etc

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/sched/fair.c: sched tune
	seemed to work fine

2017-04-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_hellsactive.c,
	drivers/cpufreq/cpufreq_machinactive.c,
	drivers/cpufreq/cpufreq_whiskyactive.c,
	drivers/cpufreq/cpufreq_yankdemand.c, include/linux/sched.h: get rid
	of unneccesary migration notifiers

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, include/trace/events/sched.h,
	init/Kconfig, kernel/sched/Makefile, kernel/sched/core.c,
	kernel/sched/fair.c: some more sched freq input fallout correction

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h: get rid of some remants of sched freq input

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/tune.c: 
	ched-Fix-sysctl_sched_cfs_boost-type-to-be-int

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/trace/events/sched.h, kernel/sched/sched.h: sched/walt:
	remove unused RQ "nt_" runnable sums

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c: ditto that

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c: ANDROID: sched/tune:
	__pcpu_scope_cpu_boost_groups can be stati

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: dox

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	-FIXUP-sched-tune-update-accouting-before-CPU-capac

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c: FIXUP-sched-tune-add-fixes

2017-04-27  robcore <robpatershuk@gmail.com>

	* drivers/irqchip/irq-sunxi-nmi.c, drivers/irqchip/irq-tb10x.c,
	include/linux/irq.h, kernel/irq/generic-chip.c: probably wont work
	-genirq-Generic-chip-Change-irq_reg_-readl-writel-arg.

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping_debug.c: 
	timekeeping-Cap-array-access-in-timekeeping_debug

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/walt.c: 
	sched-walt-include-missing-header-for-arm_timer_read.

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/trace/events/sched.h, kernel/sched/sched.h: sched/walt:
	use do_div instead of division operator

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: space.

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Favor-higher-cpus-only-for-boosted-tasks

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: reverted

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: have this

2017-04-27  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, include/linux/cpuidle.h,
	include/linux/suspend.h, kernel/power/suspend.c,
	kernel/sched/idle.c: UPSTREAM-PM-sleep-Re-implement-suspend-to-idle

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-call-OPP-update-when-going-idle

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	UPSTREAM-sched-Add-SD_PREFER_SIBLING-for-SMT-level

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Picking cpus with low OPPs for
	tasks that prefer idle CPUs

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c: FIXUP: sched/tune: do initialization as a
	postcore_initicall

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/tune.c, kernel/sched/tune.h: 
	sched/tune: Introducing a new schedtune attribute prefer_idle

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-use-util-instead-of-capacity-to-select-busy-cpu

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/walt.c: arch_timer: add error handling when the MPM
	global timer is cleared

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: FIXUP: sched: Fix double-release of spinlock
	in move_queued_task

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: FIXUP: sched/fair: Fix hang during suspend in
	sched_group_energy

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: FIXUP-sched-fix-SchedFreq-integration

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: FIXUP-sched-fix-set_cfs_cpu_capacity

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-EAS-Avoid-causing-spikes-to-max-freq

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/cputime.c, kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sched/walt.c, kernel/sched/walt.h, kernel/sysctl.c: 
	sched/walt: Accounting for number of irqs pending on each core

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	include/trace/events/sched.h, init/Kconfig, kernel/sched/Makefile,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/rt.c,
	kernel/sched/sched.h, kernel/sched/stop_task.c,
	kernel/sched/walt.c, kernel/sched/walt.h, kernel/sysctl.c: sched:
	Introduce Window Assisted Load Tracking  (WALT)

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h, kernel/sysctl.c: REMOVED
	CONFIG_SCHED_FREQ_INPUT

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: sched gov needs some work

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/Kconfig,
	drivers/cpufreq/cpufreq_electrodemand.c: fix a stupid derp in
	electro

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: enabling sched freq input for this
	build, as we will be adding it with WALT next update

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: oops

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/kernel.h, include/net/codel.h,
	kernel/sched/deadline.c, kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sched/stop_task.c: fixed up net/reciprocal divide shit
	(hopefully, we may have runaway drivers), as well as replaced
	inc/dec nr running with add/sub

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/net/bpf_jit_32.c, net/core/filter.c: now can i get away
	with removing reciprocal divide from bpf?

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/flex_array.h, include/linux/slab_def.h,
	include/net/red.h, lib/flex_array.c, lib/reciprocal_div.c,
	net/sched/sch_netem.c: aaaand there is the rest of it...gonna see if
	i can get away with this

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/reciprocal_div.h, kernel/sched/fair.c,
	kernel/sched/tune.c: muahahahahah got it to build...i hope that rdiv
	hack didnt break something else...

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c: 
	sched-tune-fix-PB-and-PC-cuts-indexes-definition.

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-optimize-idle-cpu-selection-for-boosted-tasks

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/exit.c, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h, kernel/sched/tune.c, kernel/sched/tune.h: 
	FIXUP: sched/tune: fix accounting for runnable tasks

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/sched/tune.c: 
	sched-tune-use-a-single-initialisation-function

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/tune.h: 
	sched-fair-tune-simplify-fair.c-code

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.h: FIXUP: sched/tune: fix compilation error on
	!CONFIG_CGROUP_SCHEDTUNE

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c: FIXUP: sched/tune: fix payoff calculation for
	boost

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/sched/cpufreq_sched.c: I
	*think* I have done what I need to in order to backport the sched
	gov...will test and view debug logs

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: disabled sched gov for now, as i
	need to convert the kobject shit to our older sysfs setup

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/sched/fair.c: now that we
	have so many other factors within the scheduling core that are
	driving our frequency selection, i cannot see the
	CONFIG_SCHED_FREQ_INPUT functions as a helpful addition, but rather
	a detrimental, deprecated method that never really worked well in
	the first place.

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpufreq_sched.c: shit forgot to bring that back

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpufreq_sched.c: but revert for now cause i wanna try
	it out as is

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	drivers/cpufreq/cpufreq_intelliactive.c,
	kernel/sched/cpufreq_sched.c: gonna work on converting this sched
	gov to be more friendly for our sysfs

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/tune.c: boost - add support for
	negative boost vals

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/tune.c, kernel/sched/tune.h: 
	FIX: sched/tune: move schedtune_nornalize_energy into fair.c

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	FIX-sched-tune-update-usage-of-boosted-task-util

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sysctl.c: sched-fair-add-tunable-to-set-initial-task-load

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sysctl.c: sched/fair: add tunable to force selection at cpu
	granularity

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sysctl.c: 
	sched-EAS-take-cstate-into-account-when-selecting-id;

2017-04-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/Kconfig, kernel/sched/cpufreq_sched.c: 
	sched-cpufreq_sched-Consolidated-update

2017-04-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/Kconfig, include/linux/sched_energy.h,
	include/trace/events/sched.h, init/Kconfig, kernel/sched/Makefile,
	kernel/sched/fair.c, kernel/sched/sched.h: sched - SMP config
	placement for non-SMP targets

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c: 
	FIXUP-sched-tune-properly-account-of-exiting-tasks

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-filter-energy_diff-based-on-energy_payoff

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c, kernel/sched/tune.h: 
	sched-tune-add-support-to-compute-normalized-energy[

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-keep-track-of-energy-capacity-variations

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/tune.c, kernel/sched/tune.h: 
	sched-fair-add-boosted-task-utilization.;

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/tune.c, kernel/sched/tune.h: 
	sched/{fair,tune}: track RUNNABLE tasks impact on per CPU boost
	value;

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c: 
	sched-tune-compute-and-keep-track-of-per-CPU-boost

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup_subsys.h, init/Kconfig, kernel/sched/tune.c,
	kernel/sysctl.c: sched-tune-add-initial-support-for-CGroups

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: add boosted CPU usage;

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: add function to convert boost
	value into "margin"

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, init/Kconfig,
	kernel/sched/Makefile, kernel/sched/tune.c, kernel/sysctl.c: 
	sched-tune-add-sysctl-interface-to-define-a-boost-val

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	FIXUP-sched-fair-jump-to-max-OPP-when-crossing-UP-threshold

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpufreq_sched.c: FIXUP: sched: scheduler-driven cpu
	frequency selection

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpufreq_sched.c: FIXUP: sched: scheduler-driven cpu
	frequency selection

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: sched-rt-scheduler-sets-capacity-requirement

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c, kernel/sched/fair.c,
	kernel/sched/sched.h: sched: deadline: use deadline bandwidth in
	scale_rt_capacity

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: 
	-sched-remove-call-of-sched_avg_update-from-sched_rt

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched/fair: jump to max OPP when crossing UP threshold

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: cpufreq_sched triggers for load
	balancing

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: a little fixup and awaaaaaaaaay we go! (Tiny
	Rick!)

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: second bringup conversion

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: old bringup - remove double lock balance from
	move_one_task (conversion to detach/attach)

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-core-fair-trigger-OPP-change-request-on-fork.

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: add triggers for OPP change
	requests

2017-04-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_whiskyactive.c, include/linux/cpufreq.h,
	kernel/sched/cpufreq_sched.c: backport work for cpufreq_sched
	governor

2017-04-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: update configs

2017-04-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/Kconfig, include/linux/cpufreq.h,
	include/linux/sched.h, kernel/sched/Makefile,
	kernel/sched/cpufreq_sched.c, kernel/sched/fair.c,
	kernel/sched/sched.h: sched: scheduler-driven cpu frequency
	selection

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched_energy.h, kernel/sched/Makefile,
	kernel/sched/energy.c: sched: Support for extracting EAS energy
	costs from DT

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Consider misfit tasks when
	load-balancing

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: sched - add group
	misfit task load balance type

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: fixed up my mess in sched.h

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Add-per-cpu-max-capacity-to-sched_group_capacity

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Do-eas-idle-balance-regardless-of-the-rq-avg;

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched: Update max cpu capacity in case of max frequency constraints

2017-04-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/sched.h: 
	gonna integrate this later (its really just the same functions
	slightly updated with a name change), but i am going to standardize
	all of my add/sub/inc/dec nr running once and for all

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: revert

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: doubled

2017-04-27  robcore <robpatershuk@gmail.com>

	* sound/soc/codecs/sound_control_copy.c, sound/soc/codecs/wcd9310.c: 
	i...dont know what that even does

2017-04-27  robcore <robpatershuk@gmail.com>

	* sound/soc/codecs/sound_control_copy.c, sound/soc/codecs/wcd9310.c: 
	HACK - allow tabla config_mode_active parameter to be updated via
	module param

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: couple more fixups

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Disable-energy-unfriendly-nohz-kicks

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: logspam - stop printing out max cpu capacity
	every time something fucking happens

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Consider a not over-utilized
	energy-aware system as balanced

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Energy-aware-wake-up-task-placement.

2017-04-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Determine-the-current-sched_group-idle-state

2017-04-27  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, include/linux/cpuidle.h,
	kernel/sched/idle.c, kernel/sched/sched.h: sched, cpuidle: Track
	cpuidle state index in the scheduler

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Enable-idle-balance-to-pull-single-task-toward

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Consider-spare-cpu-capacity-at-task-wake-up

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Add-cpu-capacity-awareness-to-wakeup-balancing

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Leverage the idle state info when
	choosing the "idlest" cpu

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: reverted that too

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: reverted

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fuck

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Determine-the-current-sched_group-idle-state.

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Add over-utilization/tipping point
	indicator

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Add-over-utilization-tipping-point-indicator

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Estimate energy impact of scheduling
	decisions

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Extend sched_group_energy to test
	load-balancing decisions

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Calculate-energy-consumption-of-sched_group

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched: Highest energy aware balancing sched_domain level pointer

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Compute cpu capacity available at
	current frequency

2017-04-26  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c, include/linux/sched.h,
	kernel/sched/core.c: sched: Introduce SD_SHARE_CAP_STATES
	sched_domain flag

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Initialize energy data structures

2017-04-26  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/sched.h: 
	sched-Introduce-energy-data-structures

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/features.h: 
	sched-Make-energy-awareness-a-sched-feature

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Prevent unnecessary active balance of
	single task in sched group

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Enable-idle-balance-to-pull-single-task

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: reverted

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: revert this

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: REMOVE added driver_target notifier I
	hacked in. lets cross our fingers that this is the solution

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: fixup syntax derps

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched: Store
	system-wide maximum cpu capacity in root domain

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Fix new tasks load avg removed
	from source CPU in wake_up_new_task()

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched/fair: Move the
	cache-hot load_avg variable into its own cacheline

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-fair-Make-it-possible-to-account-fair-load-avg

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: dox

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Update-task-group-s-load_avg-after-task-moves

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Fix-overly-small-weight-for-interactive-govs

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Optimize-per-entity-utilization-tracking

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Defer calling scaling functions

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Optimize __update_load_avg()

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Rename-scale-to-cap_scale

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched/fair: Initialize task load and
	utilization before placing task on rq

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Get-rid-of-scaling-utilization-by-capacity

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Name utilization related data and
	functions consistently

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Remove-unused-struct-sched_group_capacity orig

2017-04-26  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-fair-Make-utilization-tracking-CPU-scale-invariant

2017-04-26  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c: sched/fair: Make load
	tracking frequency scale-invariant

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Move-CFS-tasks-to-CPUs-with-higher-capacity.

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Replace-capacity_factor-by-usage

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Add-struct-rq-cpu_capacity_orig

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Make-scale_rt-invariant-with-frequency.

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-core-Remove-unused-argument-from-sched_class

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Unify switched_{from,to}_fair()
	and task_move_group_fair() (again)

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/features.h: 
	sched-fair-Make-the-entity-load-aging-on-attaching-a-feature-again

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: moved it.

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_hardlimit.c: fix a derp in my hardlimit
	notifiers

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_hardlimit.c: 
	this may be dangerous, but im adding a __cpufreq_governor(policy,
	CPUFREQ_GOV_LIMITS); to cpufreq_driver_target

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_hardlimit.c: make hardlimit only respond
	to cpufreq_notify

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: ohhhhh if you dont register your
	notifier, it isnt called, and thus any mod_timer work will bug
	because no executing function is associated with it....KNOWLEDGE IS
	POWER

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_hardlimit.c: GOD DAMN IT. GOD DAMN TODAY

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: REVERT - cpu-boost again, turns out
	THAT was somehow the issue?

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: reverted sched stuff

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c, drivers/cpufreq/cpufreq_hardlimit.c,
	kernel/sched/core.c: did some cool shit, also did some other shit i
	will have to revert

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: I REALLY want my simplified cpu boost
	driver thought

2017-04-26  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h, arch/arm/kernel/topology.c,
	drivers/cpufreq/cpu-boost.c, drivers/cpufreq/cpufreq_hardlimit.c,
	include/linux/cpufreq_hardlimit.h, include/linux/sched.h,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/features.h,
	kernel/sched/sched.h: possed

2017-04-26  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: done fucked up

2017-04-26  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c: you are doing NOTHING for me atm!

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: right fix that mess

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: the real fix? revert
	that commit until we have prereqs

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: some hax/fixes

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: oops we have that covered in the
	notifier

2017-04-26  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h, arch/arm/kernel/topology.c: fixed
	now?

2017-04-26  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h: topology, you need jesus...i
	mean, you need sched.hs header inclusion. so... you know, there it
	is.

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: BYE ARCH POWER!! also testing now to see if i
	need that dummy declaration

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: sched-Optimize-freq-invariant-accounting.

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Move CFS tasks to CPUs with higher
	capacity

2017-04-26  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c: arm: topology: Define TC2 energy and
	provide it to the scheduler

2017-04-26  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h, arch/arm/kernel/topology.c: 
	arm-Update-arch_scale_cpu_capacity-to-reflect-change

2017-04-26  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c, include/linux/sched.h,
	kernel/sched/core.c: sched: Introduce SD_SHARE_CAP_STATES
	sched_domain flag

2017-04-26  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c: ARM: topology: Use the new
	cpu_capacity interface

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: sched: Make scale_rt
	invariant with frequency

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched/core: Remove unused argument from sched_class::task_move_group

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Unify-switched_-from-to-_fair-and-task_move

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/features.h: 
	sched-fair-Make-the-entity-load-aging-on-attaching-a-sched-feature

2017-04-26  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h: arm: Enable frequency invariant
	scheduler load-tracking support

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_hardlimit.c,
	include/linux/cpufreq_hardlimit.h: hardlimit - export the
	reapply_hard_limits() symbol and hook it into cpufreqs policy
	updater (will test to see if it should come before or after the
	rwsem) -- cpuboost - remove hotplug and wakeup boosts from the
	driver as hotplug boost has always been useless, and i am going to
	attempt wakeup boost from the hardlimit driver again soon but use a
	cached value or something for the sysfs

2017-04-26  robcore <robpatershuk@gmail.com>

	* sound/soc/codecs/sound_control.c: faux sound updates - TODO: does
	snd_reg_access really need to test for sound_control_locked being
	true? perhaps this prevents conflicting parallel register writes in
	which case...cool, otherwise...perhaps we should forgo the
	sound_control_locked integer with a good ol fashioned spinlock...

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: having to do this makes no sense

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: there we go im just an idiot (as per usual)

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fixup some compatibility issues for our
	source base

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Have-task_move_group_fair-also-detach-entity

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Have task_move_group_fair()
	unconditionally add the entity load to the runqueue

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Ensure a task has a non-normalized
	vruntime when returning back to CFS

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Clean up load average references

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched/fair: Provide runnable_load_avg back to cfs_rq

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Remove task and group entity load
	when they are dead

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-fair-Init-cfs_rq-s-sched_entity-load-average

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Implement
	update_blocked_averages() for CONFIG_FAIR_GROUP_SCHED=n

2017-04-26  robcore <robpatershuk@gmail.com>

	* .gitignore, include/linux/sched.h, kernel/sched/core.c,
	kernel/sched/debug.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched/fair: Rewrite runnable load and utilization average tracking

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Calculate CPUs usage statistic and put
	it into struct sg_lb_stats::group_usage

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c, kernel/sched/fair.c: sched: Track group
	sched_entity usage contributions

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-fair-Remove-rq-s-runnable-avg

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/power/Makefile, kernel/power/suspend_time.c,
	kernel/power/wakeup_reason.c: replace suspend_time.c with a simple
	hook in wakeup reasons instead

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_whiskyactive.c: fixed a thing

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_machinactive.c,
	drivers/cpufreq/cpufreq_whiskyactive.c: more fixes for machinactive
	and whiskyactive

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fair - UPSTREAM - fix signedness of
	get_update_sysctl_factor

2017-04-26  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/cputime.c: backported some
	cputime updates from linux 4.7, and hacked in a new raw_spin_lock...

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_whiskyactive.c: both interactive based
	govs -> syntax errors galore

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_machinactive.c,
	drivers/cpufreq/cpufreq_whiskyactive.c: whisky/machinactive - fix
	syntax errors

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_machinactive.c: machinactive - fix my
	missing raging semi-colons for the fixed conditional

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_machinactive.c: machinactive - further to
	that last commit - fix a couple of conditionals that were doing
	nothing

2017-04-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_machinactive.c,
	drivers/cpufreq/cpufreq_whiskyactive.c: whisky - bring back freq
	lock, also reposition the locking around the timer function as I
	learned ages ago that the previous positioning was fatal (and is why
	this driver cant load). also for whiskyactive, fix a couple of
	conditionals that were doing nothing.

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: holding off on that cpuset commit for now

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: cpuset-Fix-cpuset-sched_relax_domain_level

2017-04-26  robcore <robpatershuk@gmail.com>

	* arch/powerpc/platforms/powernv/opal-irqchip.c,
	include/linux/irqdomain.h, kernel/irq/irqdomain.c: genirq-irqdomain:
	allow aliasing

2017-04-26  robcore <robpatershuk@gmail.com>

	* include/linux/msi.h, kernel/irq/msi.c: 
	genirq-Provide-default-callbacks-for-msi_domain_ops

2017-04-26  robcore <robpatershuk@gmail.com>

	* include/linux/msi.h, kernel/irq/msi.c: 
	genirq-Introduce-msi_domain_alloc-free_irqs;

2017-04-26  robcore <robpatershuk@gmail.com>

	* include/linux/msi.h, kernel/irq/Kconfig, kernel/irq/Makefile,
	kernel/irq/msi.c: genirq-Add-generic-msi-irq-domain-support

2017-04-26  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c: genirq: Work around __irq_set_handler vs
	stacked domains ordering issue

2017-04-26  robcore <robpatershuk@gmail.com>

	* include/linux/irqdomain.h, kernel/irq/irqdomain.c: 
	irqdomain-Introduce-helper-function-irq_domain_add

2017-04-26  robcore <robpatershuk@gmail.com>

	* include/linux/irqdomain.h, kernel/irq/irqdomain.c: genirq:
	Introduce helper irq_domain_set_info() to reduce duplicated code

2017-04-26  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/chip.c: genirq: Introduce
	irq_chip.irq_compose_msi_msg() to support stacked irqchip

2017-04-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/Makefile,
	arch/arm/mach-msm/perf_event_msm_krait_l2.c: fuck it

2017-04-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/perf_event_msm_krait_l2.c: fix something with
	the krait l2 pmu?

2017-04-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/Makefile: trying out krait perf events again

2017-04-25  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/chip.c: 
	genirq-Add-more-helper-functions

2017-04-25  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/chip.c: 
	genirq-Introduce-helper-functions-to-support-stacked-irqs

2017-04-25  robcore <robpatershuk@gmail.com>

	* kernel/irq/irqdomain.c: 
	irqdomain-Do-irq_find_mapping-and-set_type-for-hierarchy

2017-04-25  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, include/linux/irqdomain.h,
	kernel/irq/Kconfig, kernel/irq/chip.c, kernel/irq/irqdomain.c: 
	irqdomain: Introduce new interfaces to support hierarchy irqdomains

2017-04-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: 
	sched-Reset-decay_count-when-task-is-enqueued

2017-04-25  robcore <robpatershuk@gmail.com>

	* kernel/irq/handle.c: EXPORT_SYMBOL_GPL(no_action); (fixed, some of
	my sources just need the added export.h

2017-04-25  robcore <robpatershuk@gmail.com>

	* include/linux/rwsem.h, kernel/Kconfig.locks,
	kernel/locking/rwsem-xadd.c, kernel/locking/rwsem.c: add
	CONFIG_RWSEM_SPIN_ON_OWNER

2017-04-25  robcore <robpatershuk@gmail.com>

	* kernel/locking/rtmutex-tester.c: rtmutex tester - stat.h

2017-04-25  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c: make mutex_can_spin_on_owner an inline
	function, and some dox

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: flip_cover detection - build
	in an override for hall detection

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_hardlimit.c,
	drivers/cpufreq/cpufreq_whiskyactive.c: hardlimit - make the
	notifier policy again

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: ondemand - fix tunables,
	storing of mutliplier, and set relation to C on freq increase

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: cpufreq - in __cpu_set_policy, why not
	just fix the min/max if there is a problem?

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c: stats - using the real value is
	more effective

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_hardlimit.c,
	drivers/cpufreq/cpufreq_whiskyactive.c: whisky, i knew that the
	target_freq_lock would fail

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_hardlimit.c: hardlimits - transition might
	make more sense

2017-04-25  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/Kconfig,
	drivers/cpufreq/cpufreq_whiskyactive.c: adjusted whiskyactive to our
	source - may have to do something about the rwsems and spinlocks, we
	will see

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/Makefile: some reordering

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c: cpufreq stats - we will use the
	cached val for now

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: intelli - back to each_online
	cpu

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_hardlimit.c: remove hardlimit hcpu
	notifier, cpu policy is enough

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_whiskyactive.c: doing some work to make
	whiskyactive compatible

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_hardlimit.c: oops register the correct
	function for hotcpu...aaaand go!

2017-04-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: REVERT sched/core/fair
	changes but keep intelli using active online cpu

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_hardlimit.c: 
	hardlimit - add policy and hcpu notifiers so hard limits are
	reapplied when policy changes

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c, kernel/sched/core.c: a little
	more hacking in sched - core this time, also use for_each_active_cpu
	when calculating load in intelli to test

2017-04-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: a little sched hacking -
	make stats report current frequency directly from cpu core

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_hardlimit.c,
	include/linux/cpufreq_hardlimit.h: nope that failed miserably

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: im confused as to why we havent just
	been using policy->max for cpuboosts cpufreq_verify_within_limits
	check

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_hardlimit.c,
	include/linux/cpufreq_hardlimit.h: hardlimit 2.3 - quickly built in
	a lazy override switch

2017-04-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/Kconfig, arch/arm/mach-msm/Makefile,
	drivers/cpufreq/Kconfig, drivers/cpufreq/Makefile,
	{arch/arm/mach-msm => drivers/cpufreq}/alucard_hotplug.c,
	{arch/arm/mach-msm => drivers/cpufreq}/autosmp.c,
	{arch/arm/mach-msm => drivers/cpufreq}/blu_plug.c,
	{arch/arm/mach-msm => drivers/cpufreq}/bricked_hotplug.c,
	{arch/arm/mach-msm => drivers/cpufreq}/dyn_hotplug.c,
	{arch/arm/mach-msm => drivers/cpufreq}/fast_hotplug.c,
	{arch/arm/mach-msm => drivers/cpufreq}/intelli_hotplug.c,
	{arch/arm/mach-msm => drivers/cpufreq}/ix_hotplug.c,
	{arch/arm/mach-msm => drivers/cpufreq}/mako_hotplug.c,
	arch/arm/mach-msm/cpufreq.c => drivers/cpufreq/msm_cpufreq.c,
	{arch/arm/mach-msm => drivers/cpufreq}/msm_hotplug.c,
	{arch/arm/mach-msm => drivers/cpufreq}/msm_sleeper.c,
	{arch/arm/mach-msm => drivers/cpufreq}/thunderplug.c: moved hotplug
	drivers and msm cpufreq to drivers/cpufreq

2017-04-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mvp/mvpkm/mvpkm_kernel.h,
	arch/arm/mvp/mvpkm/mvpkm_main.c,
	drivers/net/wireless/bcmdhd/Makefile,
	drivers/net/wireless/bcmdhd/Makefile.jb,
	drivers/net/wireless/bcmdhd/Makefile.jbp,
	drivers/net/wireless/bcmdhd/bcmsdh_linux.c,
	drivers/net/wireless/bcmdhd/dhd.h,
	drivers/net/wireless/bcmdhd/dhd_linux.c: config - remove useless
	"HAS_WAKEUP" from device files, will remove Kconfig entry once im
	sure they are purged entirely

2017-04-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c: cpustats - a fix from 3.18

2017-04-25  robcore <robpatershuk@gmail.com>

	* kernel/seccomp.c: seccomp - fix other half of an old commit

2017-04-25  robcore <robpatershuk@gmail.com>

	* include/linux/ioport.h, kernel/resource.c: resource: provide new
	functions to walk through resources

2017-04-25  robcore <robpatershuk@gmail.com>

	* kernel/kexec.c: kexec: use common function for
	kimage_normal_alloc() and kimage_crash_alloc()

2017-04-25  robcore <robpatershuk@gmail.com>

	* kernel/kexec.c: 
	kexec-move-segment-verification-code-in-a-separate-function

2017-04-25  robcore <robpatershuk@gmail.com>

	* include/linux/kexec.h, kernel/kexec.c: 
	kexec-rename-unusebale_pages-to-unusable_pages

2017-04-25  robcore <robpatershuk@gmail.com>

	* include/linux/module.h, kernel/module.c: 
	module-add-within_module-function

2017-04-25  robcore <robpatershuk@gmail.com>

	* fs/proc/array.c, include/linux/capability.h, kernel/capability.c,
	security/commoncap.c: CAPS - fix em

2017-04-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: remove bricked stuff from rq
	stats

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: nope go back to normal ol
	intelli

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: fix cpu boost

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/battery/max17048_fuelgauge.c,
	drivers/battery/max77693_charger.c, drivers/battery/sec_battery.c: 
	battery driver fixup again...also add in a toggle for aicl bypass.
	also i get that bools are interchangable but why make it so
	confused?

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: trying out doris ondemand

2017-04-24  robcore <robpatershuk@gmail.com>

	* include/linux/pm_qos.h: fix stupid bullshit dvfs

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: fix a derp

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intellicount was a massive
	failure - going with a different test

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: use intellinit as a reference
	point for the cpu reference, so thermal core control can go fuck
	itself

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: i will hold off on
	initializing the icount until the loop starts actually

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: turned my simple counter into
	full-fledged, sysfs interface so users can control the value at
	runtime: intellicount. catchy. bumping version to 6.6 for fun

2017-04-24  robcore <robpatershuk@gmail.com>

	* fs/seq_file.c: i have a bad feeling about that mcount commit

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/power.h, drivers/base/power/sysfs.c: fixup the
	pm_qos_sysfs_add_latency_tolerance commit - also cleaned up my
	power.h header in drivers/base/power/

2017-04-24  robcore <robpatershuk@gmail.com>

	* kernel/power/qos.c: got rid of dumb debugfs bs

2017-04-24  robcore <robpatershuk@gmail.com>

	* include/linux/err.h, include/linux/pm_qos.h: add missing unlikely
	to ptr in IS_ERR_OR_NULL

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-fusion3-battery.c: change my fusion back
	to semi-default as well

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c,
	drivers/battery/max77693_charger.c, drivers/battery/sec_battery.c: 
	intelliplug - added a simple counter to perform a full cpu refresh
	every so often

2017-04-24  robcore <robpatershuk@gmail.com>

	* Makefile, drivers/misc/max77693-muic.c,
	drivers/net/wireless/bcmdhd/Makefile,
	drivers/net/wireless/bcmdhd/dhd_linux.c, mm/memcontrol.c: reverted
	makefile flags, memcontrol, and wireless

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/qos.c, include/linux/pm_qos.h,
	kernel/power/qos.c: updated some qos stuff to test

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/dhd_linux.c: hehe switching between c
	and shell scripting tires the brain

2017-04-24  robcore <robpatershuk@gmail.com>

	* Makefile: remove conflicting flag from makefile

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/Makefile,
	drivers/net/wireless/bcmdhd/dhd_linux.c: dhd wireless - risky but im
	curious - disabled anything adaptive scheduling/cpu control related

2017-04-24  robcore <robpatershuk@gmail.com>

	* fs/seq_file.c: seq file - fix a missing m->from reset to 0 if
	there is no mcount

2017-04-24  robcore <robpatershuk@gmail.com>

	* fs/seq_file.c: header movement

2017-04-24  robcore <robpatershuk@gmail.com>

	* fs/seq_file.c: spacing cleanup in seq_file

2017-04-24  robcore <robpatershuk@gmail.com>

	* Makefile, drivers/misc/max77693-muic.c, mm/memcontrol.c: testing
	out some Makefile flags, and a spelling fix in muic

2017-04-24  robcore <robpatershuk@gmail.com>

	* fs/timerfd.c: timerfd-Implement-show_fdinfo-method

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c: ahh that didnt help either

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/misc/max77693-muic.c: i knew that would fail

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c: more hax

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-fusion3-battery.c,
	drivers/battery/sec_battery.c, drivers/misc/max77693-muic.c: will
	this work?

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c: revert that for now

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c: oops

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: aaaand fix my stupid derp in
	bringing back the cpu_up/down methods

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: there fixed

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: oops again

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: oops

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c, drivers/cpufreq/cpu-boost.c,
	drivers/soc/qcom/intelli_hotplug.c: k restored stuff from last
	working...state notifier is a blocking notifier chain, thus anything
	to do with cpus onlining/offlining is a no go

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c, drivers/cpufreq/cpu-boost.c: 
	fix hotplug boost assignement and some var assignements in intelli

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: fix up some potential overflows in
	cpu-boost as well, also fix my assignments when setting the freqs
	from sysfs

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: make my ondemand work again

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: did some more intelli
	-insurance work

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelli - i think my signed
	integers are overflowing

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/battery/max77693_charger.c: fix some wireless charging
	shit

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/battery/max77693_charger.c: some wireless hacking, and
	some fixes to my dumbass logic

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: ondemand - fixup some of my
	tunables and restore the cur=min break

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelliplug - run the cycle
	cpus function on wakeup to resume hotplugging after suspend, alter
	the cycle_cpus function to account for usages other than init, and
	bump the version to 6.4

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelli - add extra insurance
	that defaults will be set on init

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelli plug - some more
	fixup and version bump

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: gonna go ahead and avoid a
	foward declaration

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: some intelli fixes/tweaks to
	my cycle_cpus routine

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/freq_table.c: fix up
	some of my cpufreq code

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelli - got rid of useless
	hcpu notifier

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: reverted

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: nope bad idea

2017-04-24  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: i want to see this actually

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c,
	drivers/thermal/intelli/msm_thermal.c, include/linux/cpu.h: 
	hotplug/thermal - notifications have to go both ways for this to
	properly initialize. i give you: intelli_init()

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_hotplug.c: all that work flushing in msm
	hotplug is bad with our new wqs

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: something tells me thats no
	good

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_sleeper.c: i think msm sleeper is preventing
	shit

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c,
	drivers/cpufreq/cpufreq_ondemand.c: fuck you on demand i can have a
	down differential of 0 if i fucking want

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: couple of fixes

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c: well fuck

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c: cpu stats - add function to load
	all the freq/table/power info from DT, will eventually setup
	platform refs for it but for now i want to see if moving shit around
	helps my reporting at all

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: i would say that deserves an
	arbitrary bump in intelliversion

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c, kernel/cpu.c: 
	intelliplug/cpu.c - instead of going through all the nonboot-cpu
	up/down work hassle on start up, why not just integrate the the
	functions that do it consistently during pm suspend/resume?

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: spacing is helpful

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: oops hysteresis is now "val"

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/restart.c: lets just use the same cache flushing
	on restart for both panic and regular reboot

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c: sec battery -> one would assume
	that a function dedicated to checking the cable type and named as
	such would...you know, include checks for the GOD DAMN CABLE TYPE

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/hotplug.c, arch/arm/mach-msm/intelli_hotplug.c: 
	let us change intelli hystersis, also mark RO attrs accordingly

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/restart.c: okay give regular reboot just a quick
	cache flush

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/hotplug.c, arch/arm/mach-msm/restart.c: fix up a
	cache flush in hotplug, also change my panic sequence and reboot
	flushing policy

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_charger.c: sec_charger - add in a missing
	kfree of pdata on error

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/battery/max17048_fuelgauge.c: fake an ENERGY_NOW battery
	prop

2017-04-24  robcore <robpatershuk@gmail.com>

	* drivers/battery/max77693_charger.c, drivers/battery/sec_battery.c: 
	some battery hax/fixes

2017-04-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/hotplug.c, arch/arm/mach-msm/intelli_hotplug.c,
	drivers/cpufreq/freq_table.c: a couple more dori tricks and some
	fixes for intelliplug

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c: did a thing?

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_gov_msm.c: not that this will make a
	difference, but we have a third option for relation in msm dcvs now

2017-04-23  robcore <robpatershuk@gmail.com>

	* include/linux/cpufreq.h: and make sure i have the appropriate defs
	in cpufreq.h

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: some dori inspired cpufreq driver
	changes...deep breath...

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: some dorimanx-inspired
	ondemand tweaks

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: some finishing touches for
	powersave bias

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: and one more test before i
	just fucking gut powersave bias

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: user cpu relation c in lieu of
	relation h for od

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelli - add my extra
	profile to the number of nr_run_profiles logic

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/io.c: msm io.c: use phys_addr_t for
	msm_shared_ram_phys

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: more machinex profile hacking

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: more od hacking

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: ;

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c,
	drivers/cpufreq/cpufreq_ondemand.c: :

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelli - got rid of my
	unneeded define, also experimenting with all 4 cores run levels with
	the machinex nr run profile

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c, drivers/cpufreq/cpu-boost.c: 
	fixed a derp in cpu boost (sending work to the wrong queue) and a
	derp in intelli plug (using cpu notifier instead of hotcpu notifier)

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: 1566 for optimal is fine

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: fixed up some syntax, also
	machinex really should be in between balanced and performance,
	because thats what it is

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/bricked_hotplug.c,
	arch/arm/mach-msm/intelli_hotplug.c: fixup my intelli run profile

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: oops thesholds isnt a word

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: ;

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: some msm rq stats experiments
	and fixes - biggest fix being that msm rq stats hotplug handler
	should always just return NOTIFY_OK

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelli - added machinex
	profile (a cross between balance and performance), and got rid of
	the useless, unneccesary differentiation between nr_profiles - we
	ALWAYS use full mode

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: fix up my ondemand defaults to
	what is working well throughout

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c,
	drivers/cpufreq/cpufreq_ondemand.c: some ondemand/msm rq fixes

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c,
	arch/arm/mach-msm/msm_rq_stats.c, drivers/cpufreq/cpu-boost.c: 
	cpu-boost overhaul[3 in 1!]: separate wakeup/hotplug/input boost
	functions entirely, so we can set separate freqs, timings, etc for
	each type. also ditch usage of work_pending and instead mod any work
	that was pending (work_pending is well-documented and well-known
	regarding its inconsistency). umm finaly for intelli plug i fixed my
	hcpu notifier callback

2017-04-23  robcore <robpatershuk@gmail.com>

	* include/linux/pm_qos.h, kernel/power/qos.c: REVERT qos
	changes...methinks our input is tied to them for some stupid reason.

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: REVERT acpuclock change -
	fucked everything

2017-04-23  robcore <robpatershuk@gmail.com>

	* include/linux/pm_qos.h, kernel/power/qos.c: getting rid of qos
	throughput bs

2017-04-23  robcore <robpatershuk@gmail.com>

	* include/linux/pm_qos.h, kernel/power/qos.c: pmqos - remove dvfs
	latency

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: fixes in input boost

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: some cleanup/fixup for
	intelli. coming up next -> attacking the cpu_boost driver

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: l2_regulators - when we fixed
	the regulator enable/disable logic in the regulator init sequence,
	we removed the vreg count increment and i suspend this has thrown
	off our balance

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/thermal_sys.c: thermal sys - smarten the polling
	logic up by testing for delay within the if/else statements, using
	mod delayed work instead of cancelling it outright, and only
	cancelling the work at the end of the test if the other two fail

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm8960_tsens.c: little cleanup in tsens - fix our
	250ms poll rate

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_tsens.c: remove devexitp from universal tsens

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: remove extra endif

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: missing bracket

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: cancel delayed work sync in
	thermal before destroying the workqueue

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: govs - disable last of the
	improperly coded "kthread_run" users, stockdemand

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelli plug - some fixup,
	also account for thermal mitigation in progress and skip the cpu up
	call if core control is underway

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: make it conservative for now

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: aaaand a little more
	intellitweaking

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: trying out ditching the freq
	handler for rq stats

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: syncing more with stock s7 rq
	stats

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: more intelli fixes/hax

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/hotplug.c: (rc)->rc

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_hotplug.c: a little msm_hotplug cleanup

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: guess those vals are no good

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c, include/linux/cpu.h,
	kernel/cpu.c: thermal - use a half-ass bool notifier to indicate
	whether or not core control is actually underway ( could have done
	this waaaay cleaner and easier using fauxs cpus_offline
	method...will do so in the future), either way, now cpu_up reporting
	should be more accurate as disabling the print when core control is
	enabled is the same as just...disabling the print.

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: some finishing touches for msm
	rq stats based on our updated timer base and S7 qcom code

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/clock-local.c: nope

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/clock-local.c: local clock - betcha those should
	be longs

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c, include/linux/rq_stats.h: ported
	over bricked changes thanks to dorimanx

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c,
	drivers/thermal/intelli/msm_thermal.c: fix up my thermal default
	vals again, keep core control high and freq low to see if that helps
	our init

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/bricked_hotplug.c: copule little bricked
	touchups

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: aaaand more rq hax

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c, include/linux/cpu.h,
	kernel/cpu.c: added doris good idea of only printing the failed
	cpu_up calls if core control isnt enabled. this is a good way to
	test if there is something else preventing our init calls.

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: cant resist - gotta try out msm
	rq stats hax again

2017-04-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: make thermal cc enabled on
	boot again

2017-04-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c,
	drivers/thermal/intelli/msm_thermal.c, include/linux/cpufreq.h: 
	revert that - nogo

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c,
	drivers/thermal/intelli/msm_thermal.c, include/linux/cpufreq.h: some
	more hacking

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/alucard_hotplug.c,
	arch/arm/mach-msm/intelli_hotplug.c, tester.sh: intelli plug 6.0 -
	fix up types, timing, and a few speed tweaks to take this thing off
	the ground.

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelli timing, change to s64
	from u64 for time vals

2017-04-22  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c: just a little fixup

2017-04-22  robcore <robpatershuk@gmail.com>

	* drivers/battery/max77693_charger.c, drivers/battery/sec_battery.c: 
	some battery hax (i think I fixed WC for ya Mark!)

2017-04-22  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c: REVERT - battery - report 0 when
	running on battery

2017-04-22  robcore <robpatershuk@gmail.com>

	* drivers/tty/vt/vt.c, include/linux/workqueue.h, init/main.c,
	kernel/workqueue.c, lib/debugobjects.c, mm/slab.c: rever those
	workqueue ones

2017-04-22  robcore <robpatershuk@gmail.com>

	* drivers/tty/vt/vt.c, lib/debugobjects.c, mm/slab.c: get rid of
	remaining uses of deprecated keventd

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c,
	drivers/thermal/intelli/msm_thermal.c: thermal - lowering defaults
	to 65 and 70 for freq and cc respectively. sorry speed lovers.

2017-04-22  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue - merge remaining fixes from
	mainline 4.11 - except for some choice hacks and alterations for our
	backport

2017-04-22  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h, init/main.c, kernel/workqueue.c: 
	workqueue - make workqueue available early during boot

2017-04-22  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: dump workqueue state on sanity
	check failures in destroy_workqueue()

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c,
	drivers/thermal/intelli/msm_thermal.c: we are going to go with
	queuing thermal work on 0 again

2017-04-22  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: aaand that should be mutex
	destroy

2017-04-22  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: oops just one =

2017-04-22  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: oops theres a good idea,
	fix my exit routine

2017-04-22  robcore <robpatershuk@gmail.com>

	* drivers/thermal/franco_thermal.c,
	drivers/thermal/intelli/msm_thermal.c: doing some work in franco
	thermal...also...wtf how did i delete a bracket?

2017-04-22  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: some beginning work to
	allow for multiple thermal drivers

2017-04-22  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: and fix the sensor_id to 0
	in the driver

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c,
	drivers/thermal/intelli/msm_thermal.c: msm thermal - raise default
	frequency step mitigation to 3

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: try out a capacity reserve of
	39

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: nope dont freeze the cpu
	work!

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: lets arbitrarily raise the
	version info for it too ;)

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: lower sampling rate slightly

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: fixup my hotplug notifier
	formatting

2017-04-22  robcore <robpatershuk@gmail.com>

	* kernel/power/wakelock.c: wakelock - bring back my upstreamed
	workqueue for garbage collection

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: fix an extra bracket

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: a little tinkering with
	intelli - made up_down_work a freezable workqueue, and added a
	hotplug notifier callback

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: okay now that was overkill -
	but lets try a capacity reserve that is significantly lower

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: what happens if i fuck with
	thread capacity?

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: match cpu boost again

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: reduce sampling rate again

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: make sure we rechedule

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: make that first core for good
	measure

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: some intelliplug guessing

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: fixin fixin fixin

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c,
	drivers/thermal/intelli/msm_thermal.c: come on occams razor

2017-04-22  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: numa - let me fuck around with it!

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c,
	drivers/thermal/intelli/msm_thermal.c: hackery

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c, kernel/workqueue.c: clearly i
	am a hack

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: trying out a nifty trick with
	intelli plug workqueue alloc

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	drivers/input/keyboard/gpio_keys.c: gpio_keys - hacking (including
	ported keycode_pressed sysfs feature from samsung

2017-04-22  robcore <robpatershuk@gmail.com>

	* drivers/input/touchscreen/Kconfig,
	drivers/input/touchscreen/Makefile,
	drivers/input/touchscreen/mms114.c, include/linux/i2c/mms114.h: 
	Input-add-MELFAS-mms114-touchscreen-driver

2017-04-22  robcore <robpatershuk@gmail.com>

	* Documentation/devicetree/bindings/input/lpc32xx-key.txt,
	drivers/input/keyboard/Kconfig, drivers/input/keyboard/Makefile,
	drivers/input/keyboard/lpc32xx-keys.c: Input - add support for key
	scan interface of the LPC32xx SoC

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: fuck it just set the options
	right in the driver

2017-04-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: the ol switcheroo

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelli - allow sampling rate
	to be changed at runtime

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelli fix

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: REVERT - rq stats again

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: therm fix

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: more more more

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: more intelli fixes

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: updating online cores there
	is silly

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: interesting test with msm rq
	stats again

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: msm thermal init - update
	offline cores right from the get go

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: fix thermal too

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: HIPRI wqs no longer support
	flushing

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: touchup

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: fixup

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: remove mutex, but do some
	more important work

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: logic fixup

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: get rid of get put online
	cpus

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelliplug 5.7 - move
	initial bringdown of cpu cores to the cpu updown work function to
	avoid further lock contention

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelli 5.6 part 2, protect
	intelli up_down_work with a mutex

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelliplug 5.6 - make
	suspend/resume functions faster by avoiding them all together if
	suspend is disabled in the first place. also some misc cleanup all
	throughout

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: raise thermal steps to 3 by
	default

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/power/process.c, kernel/power/suspend.c: more touchups to
	power

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/power/process.c, kernel/power/suspend.c: process - print
	fixes mostly, and one freezer fix that may work well

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c,
	drivers/thermal/intelli/msm_thermal.c, drivers/video/msm/mdp.c: fix
	my flags

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: some od tweaks

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c,
	drivers/thermal/intelli/msm_thermal.c, drivers/video/msm/mdp.c: some
	workqueue fixes

2017-04-21  robcore <robpatershuk@gmail.com>

	* include/linux/interrupt.h, include/linux/irqdesc.h,
	kernel/irq/manage.c, kernel/irq/pm.c: genirq / PM: Add flag for
	shared NO_SUSPEND interrupt lines

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, include/linux/irqdesc.h,
	kernel/irq/pm.c, kernel/power/suspend.c: genirq: Introduce helper
	irq_desc_get_irq()

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: there

2017-04-21  robcore <robpatershuk@gmail.com>

	* include/linux/suspend.h, kernel/power/main.c: revert that aaaand

2017-04-21  robcore <robpatershuk@gmail.com>

	* include/linux/suspend.h, kernel/power/main.c: give myself pm sleep
	debugging regardless

2017-04-21  robcore <robpatershuk@gmail.com>

	* Documentation/ABI/testing/sysfs-power,
	arch/arm/configs/canadefconfig, drivers/base/power/wakeup.c,
	include/linux/suspend.h, kernel/irq/pm.c, kernel/power/main.c: 
	wakeirq - report wakeup irq

2017-04-21  robcore <robpatershuk@gmail.com>

	* Documentation/power/devices.txt, drivers/base/power/main.c,
	include/linux/pm_runtime.h: PM / sleep: Allow devices without
	runtime PM to do direct-complete

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeirq.c, drivers/base/power/wakeup.c: PM /
	wakeirq: Avoid setting power.wakeirq too hastily

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeirq.c: guess export is explicitly needed in
	wakeirq driver

2017-04-21  robcore <robpatershuk@gmail.com>

	* include/linux/pm_wakeirq.h: fix a typo

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/freezer.c: fix my freezer.c again

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/base/power/Makefile, drivers/base/power/main.c,
	drivers/base/power/power.h, drivers/base/power/runtime.c,
	drivers/base/power/wakeirq.c, drivers/base/power/wakeup.c,
	include/linux/pm.h, include/linux/pm_wakeirq.h,
	include/linux/pm_wakeup.h: Subject: [PATCH] PM / Wakeirq: Add
	 automated device wake IRQ handling \ \ Turns out we can automate the
	handling for the device_may_wakeup() \ quite a bit by using the
	kernel wakeup source list as suggested \ by Rafael J. Wysocki
	 <rjw@rjwysocki.net>. \ \ And as some hardware has separate dedicated
	wake-up interrupt \ in addition to the IO interrupt, we can automate
	the handling by \ adding a generic threaded interrupt handler that
	just calls the \ device PM runtime to wake up the device. \  \ This allows dropping code from device drivers as we currently \
	are doing it in multiple ways, and often wrong. \  \ For most drivers, we should be able to drop the following \
	boilerplate code from runtime_suspend and runtime_resume \
	functions: \  \ ... \ device_init_wakeup(dev, true); \ ... \ if
	(device_may_wakeup(dev)) \ able_irq_wake(irq); \ ... \ if
	(device_may_wakeup(dev)) \ it_wakeup(dev, false); \ ... \  \ We can replace it with just the following init and exit \ time
	 code: \ \ ... \ device_init_wakeup(dev, true); \
	dev_pm_set_wake_irq(dev, irq); \ ... \ dev_pm_clear_wake_irq(dev); \
	device_init_wakeup(dev, false); \ ... \  \ And for hardware with dedicated wake-up interrupts: \  \ ... \ device_init_wakeup(dev, true); \
	dev_pm_set_dedicated_wake_irq(dev, irq); \ ... \
	dev_pm_clear_wake_irq(dev); \ device_init_wakeup(dev, false); \ ...

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: gotta fix up my kthreads, till
	then, using old ondemand

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/input/touchscreen/synaptics_i2c_rmi4.c,
	drivers/input/touchscreen/synaptics_i2c_rmi4.h: synaptics - back to
	powersuspend for you

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/cgroup_freezer.c: revert cgroup freezer changes

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c, drivers/input/ff-core.c,
	drivers/input/ff-memless.c, drivers/input/input-polldev.c: more hax

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/matrix_keypad.c,
	drivers/input/touchscreen/cy8ctmg110_ts.c: more hacking

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: some gpio keys hacking

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c,
	drivers/input/keyboard/gpio_keys.c: some hacking

2017-04-21  robcore <robpatershuk@gmail.com>

	* Documentation/DocBook/filesystems.tmpl, drivers/base/class.c,
	drivers/base/core.c, drivers/gpio/gpiolib.c, drivers/md/bitmap.c,
	drivers/md/bitmap.h, drivers/md/md.c, drivers/md/md.h,
	drivers/mfd/pm8xxx-irq.c, drivers/net/bonding/bond_sysfs.c,
	fs/kernfs/dir.c, fs/kernfs/file.c, fs/kernfs/inode.c,
	fs/kernfs/kernfs-internal.h, fs/kernfs/mount.c,
	fs/kernfs/symlink.c, fs/namespace.c, fs/proc/root.c,
	fs/sysfs/Makefile, fs/sysfs/bin.c, fs/sysfs/dir.c, fs/sysfs/file.c,
	fs/sysfs/group.c, fs/sysfs/inode.c, fs/sysfs/mount.c,
	fs/sysfs/symlink.c, fs/sysfs/sysfs.h, include/linux/cgroup.h,
	include/linux/device.h, include/linux/fs.h, include/linux/kernfs.h,
	include/linux/kobject.h, include/linux/kobject_ns.h,
	include/linux/netdevice.h, include/linux/sysfs.h,
	include/linux/user_namespace.h, init/Kconfig, kernel/cgroup.c,
	kernel/user.c, kernel/user_namespace.c, lib/kobject.c,
	net/core/net-sysfs.c, pm8xxx.txt: possed

2017-04-21  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/gpio/gpiolib.c, drivers/md/bitmap.c, drivers/md/bitmap.h,
	drivers/md/md.h, drivers/mfd/pm8xxx-irq.c, fs/kernfs/dir.c,
	fs/kernfs/file.c, fs/kernfs/inode.c, fs/kernfs/kernfs-internal.h,
	fs/kernfs/mount.c, fs/kernfs/symlink.c, fs/sysfs/dir.c,
	fs/sysfs/file.c, fs/sysfs/group.c, fs/sysfs/mount.c,
	fs/sysfs/symlink.c, fs/sysfs/sysfs.h, include/linux/kernfs.h,
	include/linux/kobject.h, include/linux/sysfs.h, lib/kobject.c: done
	fucked it alllll up

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/kernfs/dir.c, fs/kernfs/file.c, fs/kernfs/inode.c,
	fs/kernfs/kernfs-internal.h, fs/kernfs/mount.c,
	fs/kernfs/symlink.c, fs/namespace.c, fs/sysfs/dir.c,
	fs/sysfs/mount.c, fs/sysfs/symlink.c, fs/sysfs/sysfs.h,
	include/linux/cgroup.h, include/linux/kernfs.h, init/Kconfig,
	kernel/cgroup.c, pm8xxx.txt: cgroup - convert to kernfs

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/mount.c: 
	sysfs-kernfs-drop-unused-params-from-sysfs_fill_sup

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/kernfs/kernfs-internal.h, fs/kernfs/symlink.c,
	fs/sysfs/symlink.c, fs/sysfs/sysfs.h: sysfs, kernfs: move symlink
	core code

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/kernfs/file.c, fs/kernfs/kernfs-internal.h, fs/sysfs/file.c,
	fs/sysfs/sysfs.h: 
	sysfs-kernfs-move-file-core-code-to-fs-kernfs-file.c

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/kernfs/dir.c, fs/kernfs/inode.c, fs/kernfs/kernfs-internal.h,
	fs/sysfs/Makefile, fs/sysfs/dir.c, fs/sysfs/sysfs.h: 
	sysfs-kernfs-move-dir-core-code-to-fs-kernfs-dir.c

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/kernfs/kernfs-internal.h, fs/sysfs/sysfs.h: 
	sysfs-kernfs-move-internal-decls-to-fs-kernfs-kernfs.

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/file.c, fs/sysfs/group.c,
	fs/sysfs/inode.c, fs/sysfs/mount.c, fs/sysfs/symlink.c,
	fs/sysfs/sysfs.h, include/linux/kernfs.h, include/linux/sysfs.h: 
	sysfs-kernfs-introduce-kernfs-_find_and-_get

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c, fs/sysfs/inode.c, fs/sysfs/sysfs.h: 
	sysfs-kernfs-prepare-open-release-poll-paths

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs-kernfs-prepare-mmap-path-for-kernfs

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs, kernfs: prepare write path for kernfs

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs-kernfs-prepare-read-path-for-kernfs.

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/group.c, fs/sysfs/sysfs.h,
	include/linux/kernfs.h, include/linux/sysfs.h, lib/kobject.c: 
	sysfs-kernfs-introduce-kernfs_create_dir-_ns

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/file.c, fs/sysfs/inode.c,
	fs/sysfs/symlink.c, fs/sysfs/sysfs.h: 
	sysfs-kernfs-replace-sysfs_dirent-s_dir.kobj

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c, fs/sysfs/inode.c, fs/sysfs/sysfs.h,
	include/linux/kernfs.h: sysfs, kernfs: introduce kernfs_setattr()

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/symlink.c, fs/sysfs/sysfs.h,
	include/linux/kernfs.h: sysfs-kernfs-introduce-kernfs_rename-_ns

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/symlink.c, include/linux/kernfs.h: 
	sysfs-kernfs-introduce-kernfs_create_link

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/file.c, fs/sysfs/group.c,
	fs/sysfs/symlink.c, fs/sysfs/sysfs.h, include/linux/kernfs.h: 
	sysfs-kernfs-introduce-kernfs_remove-_by_name-_ns

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c: 
	sysfs-make-__sysfs_add_one-fail-if-the-parent-isn-t-created

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/mount.c, fs/sysfs/symlink.c,
	fs/sysfs/sysfs.h, include/linux/sysfs.h, lib/kobject.c: sysfs: drop
	kobj_ns_type handling, take #2

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c: revert

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs-use-a-separate-locking-class-for-open-files

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c: sysfs-handle-duplicate-removal-attempts

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/mount.c, fs/sysfs/symlink.c,
	fs/sysfs/sysfs.h, lib/kobject.c: Revert "sysfs: drop kobj_ns_type
	handling"

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/symlink.c, fs/sysfs/sysfs.h: 
	sysfs-rename-sysfs_assoc_lock-and-explain

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs-use-generic_file_llseek-for-sysfs_file_ops

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: 
	sysfs-return-correct-error-code-on-unimplemented-mmap

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/sysfs.h: 
	sysfs-separate-out-dup-filename-warning

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/inode.c, fs/sysfs/sysfs.h: 
	sysfs-move-sysfs_hash_and_remove-to-fs-sysfs-dir.c

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/sysfs.h: sysfs-remove-unused-sysfs_get_dentry-prototype.

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/sysfs.h: sysfs-honor-bin_attr.attr.ignore_lockdep

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c, fs/sysfs/inode.c, fs/sysfs/sysfs.h: 
	sysfs-merge-sysfs_elem_bin_attr-into-sysfs_elem_attr

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs-fix-sysfs_write_file-for-bin-file

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs-bin-Fix-size-handling-overflow-for-bin_attr

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/file.c, fs/sysfs/sysfs.h: 
	sysfs-make-sysfs_file_ops-follow-ignore_lockdep-flag

2017-04-21  robcore <robpatershuk@gmail.com>

	* Documentation/DocBook/filesystems.tmpl, fs/sysfs/Makefile,
	fs/sysfs/bin.c, fs/sysfs/dir.c, fs/sysfs/file.c, fs/sysfs/inode.c,
	fs/sysfs/sysfs.h: ysfs-merge-regular-and-bin-file-handling

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: 
	sysfs-prepare-open-path-for-unified-regular-bin-file

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/file.c, fs/sysfs/sysfs.h: 
	-sysfs-copy-bin-mmap-support-from-fs-sysfs-bin.c

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs-add-sysfs_bin_read.

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c, fs/sysfs/sysfs.h: sysfs: prepare path write for
	unified

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/bin.c: sysfs-collapse-fs-sysfs-bin.c-fill_read-into-read

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/bin.c: sysfs-skip-bin_buffer-buffer-while-reading

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs-use-seq_file-when-reading-regular-files;

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs: use transient write buffer

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs-add-sysfs_open_file-sd-and-file

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs: rename sysfs_buffer to sysfs_open_file

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs-remove-sysfs_buffer-ops

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs-remove-sysfs_buffer-needs_read_fill

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs-remove-unused-sysfs_buffer-pos.

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/group.c, fs/sysfs/inode.c,
	fs/sysfs/sysfs.h: sysfs-introduce-__-sysfs_remove

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c: sysfs-make-__sysfs_remove_dir-recursive

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, lib/kobject.c: 
	kobject-grab-an-extra-reference-on-kobject-sd-to-all

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/file.c, fs/sysfs/inode.c,
	fs/sysfs/symlink.c, fs/sysfs/sysfs.h: sysfs: remove
	sysfs_addrm_cxt->parent_sd

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/bin.c, fs/sysfs/dir.c, fs/sysfs/file.c,
	fs/sysfs/group.c, fs/sysfs/inode.c, fs/sysfs/symlink.c,
	fs/sysfs/sysfs.h: sysfs-name-comes-before-ns.

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/gpio/gpiolib.c, drivers/md/bitmap.c, drivers/md/md.c,
	drivers/md/md.h, fs/sysfs/dir.c, fs/sysfs/file.c, fs/sysfs/group.c,
	fs/sysfs/symlink.c, fs/sysfs/sysfs.h, include/linux/sysfs.h: 
	sysfs-clean-up-sysfs_get_dirent.

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/mount.c, fs/sysfs/symlink.c,
	fs/sysfs/sysfs.h, lib/kobject.c: sysfs-drop-kobj_ns_type-handling

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, fs/sysfs/symlink.c, include/linux/sysfs.h: 
	sysfs-remove-ktype-namespace-invocations-in-symlink

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, include/linux/kobject.h, include/linux/sysfs.h,
	lib/kobject.c: sysfs-remove-ktype-namespace-invocations-in-directory

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/base/class.c, drivers/net/bonding/bond_sysfs.c,
	fs/sysfs/file.c, fs/sysfs/group.c, fs/sysfs/sysfs.h,
	include/linux/device.h, include/linux/netdevice.h,
	include/linux/sysfs.h, net/core/net-sysfs.c: sysfs: make attr
	namespace interface less convoluted

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c: sysfs-use-check_submounts_and_drop

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/mount.c, include/linux/kobject_ns.h, lib/kobject.c,
	net/core/net-sysfs.c: sysfs: Restrict mounting sysfs

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, fs/proc/root.c, fs/sysfs/bin.c, fs/sysfs/dir.c,
	fs/sysfs/file.c, fs/sysfs/group.c, fs/sysfs/mount.c,
	fs/sysfs/sysfs.h, include/linux/fs.h,
	include/linux/user_namespace.h, kernel/user.c,
	kernel/user_namespace.c: coding style and userns: Better
	restrictions on when proc and sysfs can be mounted

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/file.c, fs/sysfs/inode.c,
	fs/sysfs/symlink.c: sysfs: fix up 80 column coding style issues

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/bin.c, fs/sysfs/dir.c, fs/sysfs/file.c,
	fs/sysfs/inode.c, fs/sysfs/mount.c, fs/sysfs/symlink.c: more coding
	style space issues

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/bin.c, fs/sysfs/file.c, fs/sysfs/symlink.c: 
	sysfs-fix-placement-of-EXPORT_SYMBOL.

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c: dox

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c: dox

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c: sysfs-group.c-fix-up-broken-string-coding-style

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c: sysfs-group.c-fix-up-some-coding-style-issues.

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c: sysfs-group.c-fix-trailing-whitespace

2017-04-21  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c: sysfs: group.c: move EXPORT_SYMBOL_GPL() to the
	proper location

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/freezer.c: some freezer hacking

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/cgroup_freezer.c: further entangle the web of lies that is
	my backport

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/cgroup_freezer.c: hack for mutex backport

2017-04-21  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h: revert that

2017-04-21  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h: fuck

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/cgroup_freezer.c: 
	cgroup-fix-rcu_read_lock-leak-in-update_if_frozen

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/cgroup_freezer.c: cgroup_freezer: replace freezer->lock
	with freezer_mutex

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: fuck we dont have that yet

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: suspend - a couple of enhancements from
	mainline

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/msm_fb.c, drivers/video/msm/msm_fb.h: REVERT -
	msm fb changes

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/irqchip/irq-gic.c: naw its good

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/irqchip/irq-gic.c: may have fucked this

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/irqchip/irq-gic.c: irqchip - remove log_base_wakeup_reason

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c: sec battery - Return "0" when no
	power supply is present

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/rtc/rtc-pm8xxx.c: rtc - forget the jump labels and just
	return irq handled throughout

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/input/touchscreen/synaptics_i2c_rmi4.c,
	drivers/input/touchscreen/synaptics_i2c_rmi4.h: synaptics_i2c_rmi4 -
	trying out state notifier instead of powersuspend

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/msm_fb.c, drivers/video/msm/msm_fb.h: using
	powersuspend again with msm_fb

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input.c,
	drivers/input/keyboard/cypress_touchkey_236/cypress-touchkey-236.c,
	drivers/input/misc/gpio_input.c: a little more input hacking

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input.c,
	drivers/input/touchscreen/synaptics_i2c_rmi4.c: input hax (key reset
	on resume)

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/cypress_touchkey/cypress-touchkey.c,
	drivers/input/keyboard/cypress_touchkey_236/cypress-touchkey-236.c,
	drivers/input/keyboard/cypress_touchkey_236/cypress-touchkey-236_ms
	m8960.c, drivers/input/keyboard/gpio_keys.c,
	drivers/input/keyboard/tc360-touchkey.c,
	drivers/input/misc/mpu6050/mpu6050_selftest.c,
	drivers/input/misc/mpu6500/mpu6500_selftest.c,
	drivers/input/touchscreen/cy8c_tmg_ts.c,
	drivers/input/touchscreen/cy8c_ts.c,
	drivers/input/touchscreen/cyttsp-i2c-qc.c,
	drivers/input/touchscreen/cyttsp4_btn.c,
	drivers/input/touchscreen/cyttsp4_core.c,
	drivers/input/touchscreen/cyttsp4_mt_common.c,
	drivers/input/touchscreen/cyttsp4_mt_common.h,
	drivers/input/touchscreen/ft5x06_ts.c,
	drivers/input/touchscreen/lge_touch_core.c,
	drivers/input/touchscreen/mms_ts_144.c,
	drivers/input/touchscreen/msm_ts.c,
	drivers/input/touchscreen/mxt224e.c,
	drivers/input/touchscreen/mxts.c,
	drivers/input/touchscreen/mxts_msm8930.c,
	drivers/input/touchscreen/rmi_f34.c,
	drivers/input/touchscreen/synaptics_i2c_rmi.c,
	drivers/input/touchscreen/synaptics_i2c_rmi.h,
	drivers/input/touchscreen/synaptics_i2c_rmi4.c,
	drivers/input/touchscreen/synaptics_i2c_rmi4.h,
	drivers/input/touchscreen/synaptics_i2c_rmi_msm8930.c,
	drivers/input/touchscreen/synaptics_i2c_rmi_msm8930.h,
	drivers/input/touchscreen/tsc2007.c,
	drivers/input/touchscreen/zinitix_bt_532.c: gpio_keys - some flip
	cover hacking/brought back powersuspend

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/power/Kconfig, kernel/power/Makefile: get rid of partial
	resume

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c, kernel/irq/irqdesc.c: irq hacking - fixup some
	positioning

2017-04-21  robcore <robpatershuk@gmail.com>

	* include/linux/suspend.h, kernel/power/wakelock.c: some power
	hacking - restore freezer/suspend/etc to non-partial resume method

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c, kernel/power/wakelock.c,
	kernel/power/wakeup_reason.c: gonna see if i can get away with
	regular old suspend

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/power/process.c, kernel/workqueue.c: bring back showing wq
	state in suspend

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/power/autosleep.c: that might do it...

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/base/syscore.c, drivers/gpio/gpio-msm-common.c,
	include/linux/irqdesc.h, include/linux/partialresume.h,
	include/linux/wakeup_reason.h, kernel/irq/irqdesc.c,
	kernel/power/Kconfig, kernel/power/Makefile,
	kernel/power/partialresume.c, kernel/power/suspend.c,
	kernel/power/wakeup_reason.c: reverted those

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/base/syscore.c, include/linux/irqdesc.h,
	include/linux/partialresume.h, kernel/irq/irqdesc.c,
	kernel/power/Kconfig, kernel/power/Makefile,
	kernel/power/wakeup_reason.c: ohhhh shit you know what it could just
	be the autosleep commit

2017-04-21  robcore <robpatershuk@gmail.com>

	* include/linux/wakeup_reason.h, kernel/irq/irqdesc.c,
	kernel/power/suspend.c, kernel/power/wakeup_reason.c: partial resume
	- i am shutting you down

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/power/partialresume.c: revert - partial resuem add missing
	mutex unlock

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/gpio/gpio-msm-common.c: msm gpio - bring back logging of
	wakeup reasons

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/power/process.c: freezer, use boottime to compare tstamps

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/power/process.c, kernel/workqueue.c: revert workqueue -
	show wq state in suspend

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c, drivers/thermal/franco_thermal.c: 
	bring back wakeup source destroy callbacks via rcu

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c, block/blk-core.c,
	block/elevator.c: REVERT -
	block-dont-allow-nr_pending-to-go-negative

2017-04-21  robcore <robpatershuk@gmail.com>

	* mm/percpu.c: revert percpu commit

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/power/wakeup_reason.c: make that interruptible again...i
	think i may get rid of partial resume

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/power/wakeup_reason.c: i gotta fix this

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: cpu boost, ignore hardlimit once
	again until i unify shit

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_hardlimit.c: remove thermal condition from
	hardlimit for a bit due to errors in my thermal logic, will update
	thermal soon

2017-04-21  robcore <robpatershuk@gmail.com>

	* mm/hugetlb.c, mm/page_alloc.c, mm/rmap.c: fixup some bullshit

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: bring back necessary wakeup funcs

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: fix a couple more derps in wakeup;

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: fix some derps in wakeup, but also
	make the check for wakeup sources quicker for those who have it
	disabled entirely

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c, drivers/base/power/power.h,
	drivers/base/power/wakeup.c: some wakeup timing fixes from mainline,
	as well as changing intelli hotplugs polling back to 35ms

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/msm_fb.c: revert msmfb bs

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c, drivers/video/msm/msm_fb.c,
	robstuff/recov-last-kmsg-2017-04-21.01.27.29.txt: reverted rcu
	callbacks for wakeup source unregister, and fucked around with msm
	fb which i will need to fix

2017-04-21  robcore <robpatershuk@gmail.com>

	* mm/hugetlb.c, mm/page_alloc.c, mm/rmap.c: REVERT recent mm commtis

2017-04-21  robcore <robpatershuk@gmail.com>

	* sound/soc/codecs/wcd9310.c, sound/soc/codecs/wcd9xxx-common.c: 
	REVERT wcd changes

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c, mm/percpu.c: bring back msm
	rq/percpu commits

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c, mm/percpu.c: REVERT - msm rq
	stats changes

2017-04-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c: REVERT loadavg stuff, keep my thermal
	stuff

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: wakeblock - keep the block check in
	stats printing, leave out the display on check

2017-04-21  robcore <robpatershuk@gmail.com>

	* sound/soc/codecs/wcd9310.c, sound/soc/codecs/wcd9xxx-common.c: a
	few updated wcd9310 params

2017-04-21  robcore <robpatershuk@gmail.com>

	* drivers/thermal/franco_thermal.c: fucked around with franco
	thermal some more, nothing set it in stone yet

2017-04-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: maybe a somewhat middle
	ground is better, changed it to 40ms

2017-04-20  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: raised intelli plug sampling
	back to 100, 35 is just way too much

2017-04-20  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/thermal/Kconfig,
	kernel/sched/loadavg.c: loadavg - try out some load-averaging
	techniques by Andreilux

2017-04-20  robcore <robpatershuk@gmail.com>

	* drivers/thermal/Kconfig, drivers/thermal/Makefile,
	drivers/thermal/franco_thermal.c: initial (unfinished) adaptation of
	franco thermal - TODO: setup an enable/disable feature via
	fauxs/upstreams method, also include the original msm_thermal driver
	as well. Im gonna give three options in the end (similiar to
	hotplugs, govs, etc)

2017-04-20  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdnie_lite_tuning.c: rob - mdnie - ensure that
	mdnie hijack is set on without having to change the scenario

2017-04-20  robcore <robpatershuk@gmail.com>

	* mm/percpu.c: percpu-free-percpu-allocation-info-for-uniprocessor

2017-04-20  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: msm_rq_stats: some missing
	touchups from "msm: rq_stats: Calculate load based on current freq
	limit"

2017-04-20  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: msm: rq_stats: Use cpufreq API
	to get the current frequency

2017-04-20  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: remove some wakeblocking reporting
	tests in wakeup driver, as it seems to be making our deprecated
	waitqueue wait forever

2017-04-20  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: cpuboost - ensure boost respects
	hardlimit again

2017-04-20  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c, arch/arm/mach-msm/hotplug.c,
	arch/arm/mach-msm/idle-v7.S: revert cpu tinkering

2017-04-20  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c, arch/arm/mach-msm/hotplug.c,
	arch/arm/mach-msm/idle-v7.S: some cpufreq tinkering

2017-04-20  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-8064.c, arch/arm/mach-msm/board-8960.c: 
	msm - lower the voltage on some of our wireless services

2017-04-19  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: mm, thp: do not allow thp faults to avoid cpuset
	restrictions

2017-04-19  robcore <robpatershuk@gmail.com>

	* mm/rmap.c: mm: fix sleeping function warning from __put_anon_vma

2017-04-19  robcore <robpatershuk@gmail.com>

	* mm/rmap.c: -mm-rmap-fix-use-after-free-in-__put_anon_vma

2017-04-19  robcore <robpatershuk@gmail.com>

	* mm/hugetlb.c: mm/hugetlb.c: add cond_resched_lock() in
	return_unused_surplus_pages()

2017-04-19  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c, kernel/sched/sched.h: REVERT - sched
	commits, except keeping updated nr run stats

2017-04-19  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: made a sort of "hybrid" nr running

2017-04-19  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c, kernel/sched/sched.h: trying out the
	previous method of calculating nr_running

2017-04-19  robcore <robpatershuk@gmail.com>

	* fs/proc/loadavg.c: proc-enhance-time-average-nr_running-stats

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdnie_lite_tuning.c,
	drivers/video/msm/mdnie_lite_tuning.h,
	drivers/video/msm/mdnie_lite_tuning_data.h: mDNie - update from
	wootever/whathubs mdnie control to yank555s mdnie_hijack

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdnie_lite_tuning.c: some mdnie cleaning

2017-04-19  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: buildscript - give adb connect a buffer

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/core.c: methinks that i replaced "workqueue" with
	"system_wq" ages ago, and now that i have replaced it with my mx_mmc
	wq the other one is irrelevant

2017-04-19  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: buildscript - fix the logic in my ADBRETRY
	function;

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/core.c, drivers/mmc/core/host.c: fix up my
	placement in host.c

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/core.c, drivers/mmc/core/host.c: a couple of
	(hopeful) fixes for the workqueue issue

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdnie_lite_tuning.c: some mdnie fixes/tuning for
	our device

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/logger.c: hmm...i need to fix this.

2017-04-19  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/video/msm/Kconfig,
	drivers/video/msm/mdnie_lite_tuning.c,
	drivers/video/msm/mdnie_lite_tuning.h: updated/fixed/ported mdnie
	control, time to test

2017-04-19  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/video/msm/Kconfig,
	drivers/video/msm/mdnie_lite_tuning.c: reverted for now just to test
	other updates

2017-04-19  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/video/msm/Kconfig,
	drivers/video/msm/mdnie_lite_tuning.c: gotta do some rearranging
	here. i really want this!

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdnie_lite_tuning.c: mdnie_lite_tuning ->
	removed a double check for mipi resume state condition

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_hardlimit.c: hardlimit - use local cached
	variable for limited_max_freq_thermal -> "thermal_hardlimit" (no
	functional change, just a little optimization)

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_hardlimit.c,
	drivers/thermal/intelli/msm_thermal.c: fixed a couple derps, also
	removed the excess reassignment to freq_is_therm_limited in
	cpufreq.c

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_hardlimit.c,
	drivers/thermal/intelli/msm_thermal.c,
	include/linux/cpufreq_hardlimit.h, include/linux/thermal.h: 
	cpufreq/hardlimit/thermal - lazy attempt at having cpufreq-hardlimit
	respect limited_max_freq_thermal

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/base/dd.c: shut up

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/iommu/iommu.c: iommu: Add NULL pointer check in
	iommu_present

2017-04-19  robcore <robpatershuk@gmail.com>

	* include/linux/radix-tree.h, lib/radix-tree.c: radix-tree: add
	radix_tree_gang_lookup_index

2017-04-19  robcore <robpatershuk@gmail.com>

	* mm/Kconfig, mm/Makefile, mm/zcache.c: mm zcache: add core files

2017-04-19  robcore <robpatershuk@gmail.com>

	* block/blk-core.c, block/elevator.c: block: dont allow nr_pending
	to go negative

2017-04-19  robcore <robpatershuk@gmail.com>

	* f72b8792d180948b4b3898374998f5ac8c02e539.patch.1,
	include/linux/workqueue.h, kernel/workqueue.c: workqueue: add
	cancel_work()

2017-04-19  robcore <robpatershuk@gmail.com>

	* kernel/power/process.c, kernel/workqueue.c: PM / suspend: show
	workqueue state in suspend flow

2017-04-19  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: fuck that

2017-04-19  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: update debugobjects fixup callbacks
	return type

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/core.c: mmc - keep kmmcd as it was, now that we
	have the singlethread wq setup

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/core.c: mmc - turn system_wq ops into a
	singlethread workqueue too

2017-04-19  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/core.c: use legacy method for allocating mmc
	workqueue, so as to avoid unwanted memory reclaim checks

2017-04-18  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/core.c: going with mem reclaim now, simple is
	probably better

2017-04-18  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/core.c, include/linux/workqueue.h,
	kernel/workqueue.c: reverting that because im trying out a path of
	least resistence first

2017-04-18  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/core.c, include/linux/workqueue.h,
	kernel/workqueue.c: workqueues - we need some reclaiming in the mmc
	core/host/block drivers, so ol rob came up with system_reclaim_wq
	and we are allocated the main workqueue with WQ_MEM_RECLAIM in
	mmc_init

2017-04-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: updated config

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: revert that we are good

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: couple more updates from 4.7

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: fix setting affinity of unbound threads

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: fix rebound workers warning

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: fix GHOST pending flag

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/locking/lockdep.c, kernel/rcu/rcutorture.c,
	kernel/workqueue.c, net/ipv4/syncookies.c, net/ipv6/syncookies.c,
	net/rds/page.c: tags - fix define per cpu expansions

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: dox

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/workqueue.c,
	kernel/workqueue_internal.h: sched/core: Get rid of cpu argument in
	wq_worker_sleeping()

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: Replace usage of init_name with
	dev_set_name()

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c:  workqueue: handle NUMA_NO_NODE for unbound pool_work

2017-04-18  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, kernel/workqueue.c,
	lib/Kconfig.debug: workqueue: implement
	"workqueue.debug_force_rr_cpu" debug feature

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: schedule WORK_CPU_UNBOUND work on
	wq_unbound_cpumask CPUs

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: REVERT - make sure delayed work runs on local
	cpu

2017-04-18  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h, kernel/workqueue.c: workqueue: skip
	flush dependency checks for legacy workqueues

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: simplify the
	apply_workqueue_attrs_locked()

2017-04-18  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, include/linux/workqueue.h,
	kernel/watchdog.c, kernel/workqueue.c, lib/Kconfig.debug: workqueue:
	implement lockup detector

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: warn if memory reclaim tries to
	flush !WQ_MEM_RECLAIM

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: allocate the unbound pool using
	local node memory

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: make sure work runs in local cpu again

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue fix - sched: Fix a race between
	__kthread_bind() and sched_setaffinity()

2017-04-18  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h, kernel/workqueue.c: workqueue: move
	flush_scheduled_work() to workqueue.h

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: remove the lock from wq_sysfs_prep_attrs

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c:  workqueue: remove the declaration of copy_workqueue_attrs()

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: wq: ensure changes are properly syncronized

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: wq: separate out and refactor the locking of
	applying attrs

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: simplify wq_update_unbound_numa()

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: wq_pool_mutex protects the
	attrs-installation

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: dox

2017-04-18  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h, kernel/workqueue.c: workqueue: Allow
	modifying low level unbound workqueue cpumask

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: Create low-level unbound workqueues
	cpumask

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: split apply_workqueue_attrs() into
	3 stages

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue -reorder sysfs

2017-04-18  robcore <robpatershuk@gmail.com>

	* drivers/tty/sysrq.c, include/linux/workqueue.h,
	kernel/workqueue.c: workqueue: dump workqueues on sysrq-t

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: keep track of the flushing task and
	pool manager

2017-04-18  robcore <robpatershuk@gmail.com>

	* dfbcbf42dd07b649bb02b1558e2c7150c035b4dc.patch.1,
	kernel/workqueue.c: workqueue: make the workqueues list RCU walkable

2017-04-18  robcore <robpatershuk@gmail.com>

	* dfbcbf42dd07b649bb02b1558e2c7150c035b4dc.patch.1,
	kernel/workqueue.c: workqueue: use pb to format cpumasks and
	nodemasks

2017-04-18  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/whci/debug.c,
	drivers/usb/wusbcore/reservation.c,
	drivers/usb/wusbcore/wa-rpipe.c, drivers/usb/wusbcore/wusbhc.c,
	drivers/uwb/drp.c, drivers/uwb/uwb-debug.c, fs/proc/array.c,
	fs/seq_file.c, include/linux/bitmap.h, include/linux/cpumask.h,
	include/linux/nodemask.h, include/linux/seq_file.h,
	kernel/irq/proc.c, kernel/profile.c, kernel/trace/trace.c,
	lib/bitmap.c, mm/slub.c: REVERT scnprintf stuff, wqs dont need it
	after next commit

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: allow rescuer thread to do more
	work.

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: invert the order between pool->lock
	and mayday_lock

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: cosmetic update in rescuer_thread()

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: revert workqueues to where they were gold

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/watchdog.c: watchdog-Replace-__raw_get_cpu_var-uses

2017-04-18  robcore <robpatershuk@gmail.com>

	* fs/ext4/mballoc.c: block-Replace-__this_cpu_ptr-with-raw_cpu_ptr

2017-04-18  robcore <robpatershuk@gmail.com>

	* fs/buffer.c: block-Replace-__this_cpu_ptr-with-raw_cpu_ptr.

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue - nope my changes were from upstream

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue test

2017-04-18  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-max77693.c: reverted

2017-04-18  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-max77693.c: holdup

2017-04-18  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: @franciscofranco - wakeup source
	blocker, added a master override bool -> why not?

2017-04-18  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: also update wakeup source blocker to
	be more of a core service - responding to ws events unconditionally
	- all thanks to franco and dori of course

2017-04-18  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: Wakeup - try out using rcu/async
	callbacks for removing wakeup sources again

2017-04-18  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: use francos display state to
	determine whether or not to do useless printing routine when screen
	is on

2017-04-18  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: enable wakeup boost by default

2017-04-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/motor/Kconfig,
	drivers/motor/immvibespi.c, drivers/motor/immvibespi_msm8960.c,
	drivers/motor/max77693_haptic.c: revert that im guessing it was my
	init but whatever for now

2017-04-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/motor/Kconfig,
	drivers/motor/immvibespi.c, drivers/motor/immvibespi_msm8960.c,
	drivers/motor/max77693_haptic.c: max77693 - add simple pm ops to
	allow the motor to sleep on suspend

2017-04-18  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: a couple of power main fixes

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/power/autosleep.c: autosleep - add wakelock printk control

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: oops fix idr_get_new_above

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: a couple of workqueue experiments

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/irq/internals.h, kernel/locking/Makefile: couple more fixes

2017-04-18  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/irqdesc.c: fixup all my doubled
	legacy irq shit

2017-04-18  robcore <robpatershuk@gmail.com>

	* kernel/irq/pm.c: irq pm - gonna try doing irq resume "improperly
	(not in reverse)" as i have not seen any impressive sources that
	include this "fix";

2017-04-18  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/mpm.c: ah bitmap_empty is correct

2017-04-18  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/mpm.c, arch/arm/mach-msm/msm_show_resume_irq.c: 
	mpm - try out some spinlocking...also fix show_resume_irqs
	permissions

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irqhandler.h: fix that so its a bool

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, include/linux/irqhandler.h: 
	genirq-Split-out-flow-handler-typedefs-into-seperate-headers

2017-04-17  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/include/mach/mpm.h,
	arch/arm/mach-msm/lpm_resources.c, arch/arm/mach-msm/mpm.c,
	arch/arm/mach-msm/pm.h, arch/arm/mach-msm/rpm_resources.c,
	arch/arm/mach-msm/rpm_resources.h, arch/arm/mach-msm/spm_devices.c: 
	sclk - return to uint32_t value

2017-04-17  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/Kconfig, drivers/irqchip/irq-sunxi-nmi.c,
	drivers/irqchip/irq-tb10x.c, include/linux/irq.h,
	include/linux/irqchip/arm-gic.h, include/linux/irqdomain.h,
	kernel/irq/Kconfig, kernel/irq/chip.c, kernel/irq/generic-chip.c,
	kernel/irq/irqdomain.c: possed

2017-04-17  robcore <robpatershuk@gmail.com>

	* pos.sh: possing back to wakeup routine, its all i did this for
	anyhow

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h: gotta fix this shit

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/irqchip/irq-sunxi-nmi.c, drivers/irqchip/irq-tb10x.c,
	include/linux/irq.h, kernel/irq/generic-chip.c,
	kernel/irq/irqdesc.c: couple of fixes

2017-04-17  robcore <robpatershuk@gmail.com>

	* arch/powerpc/platforms/powernv/opal-irqchip.c,
	drivers/irqchip/irq-sunxi-nmi.c, drivers/irqchip/irq-tb10x.c,
	drivers/pci/Kconfig, drivers/pci/msi.c, include/linux/irq.h,
	include/linux/irqdomain.h, include/linux/irqhandler.h,
	include/linux/msi.h, kernel/irq/Kconfig, kernel/irq/Makefile,
	kernel/irq/chip.c, kernel/irq/generic-chip.c,
	kernel/irq/irqdomain.c, kernel/irq/manage.c, kernel/irq/msi.c,
	kernel/irq/settings.h: possed

2017-04-17  robcore <robpatershuk@gmail.com>

	* pos.sh: possing out the msi shit

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irqchip/arm-gic.h: irqchip: gic: Remove warning by
	including linux/irqdomain.h

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/generic-chip.c: REVERT -
	genirq-Generic-chip-Add-big-endian-I-O-accessors

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/irqdesc.c: genirq: Generic chip:
	Allow irqchip drivers to override irq_reg_{readl,writel}

2017-04-17  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/Kconfig, kernel/irq/Kconfig,
	kernel/irq/irqdesc.c: gotta fix that

2017-04-17  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/Kconfig, include/linux/irq.h,
	kernel/irq/irqdesc.c: fixup my irqheader and checkout legacy irq
	funcs

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irqhandler.h: add irqhandler.h

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/chip.c, kernel/irq/manage.c,
	kernel/irq/settings.h: UPSTREAM: genirq: Add flag to force mask in
	disable_irq[_nosync]()

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/chip.c: reverted

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/chip.c: this is doubled

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/chip.c: genirq: Introduce helper
	functions to support stacked irq_chip

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/generic-chip.c:  genirq: Generic chip: Add big endian I/O accessors (and some
	 defines for NOMASK which i need to get the defs for quick

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/irqchip/irq-sunxi-nmi.c, drivers/irqchip/irq-tb10x.c,
	include/linux/irq.h, kernel/irq/generic-chip.c: 
	genirq-Generic-chip-Change-irq_reg_-readl-writel-args

2017-04-17  robcore <robpatershuk@gmail.com>

	* arch/powerpc/platforms/powernv/opal-irqchip.c,
	include/linux/irqdomain.h, kernel/irq/irqdomain.c: genirq -
	irqdomain: allow irq domain aliasing

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/msi.c: 
	-genirq-Move-irq_chip_write_msi_msg-helper-to-core.

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/pci/Kconfig, drivers/pci/msi.c, kernel/irq/msi.c: PCI/MSI:
	Move cached entry functions to irq core

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/msi.h, kernel/irq/msi.c: 
	genirq-Provide-default-callbacks-for-msi_domain_ops

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/msi.h, kernel/irq/msi.c: 
	genirq-Introduce-msi_domain_alloc-free_irqs

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/msi.h, kernel/irq/Kconfig, kernel/irq/Makefile,
	kernel/irq/msi.c: genirq-Add-generic-msi-irq-domain-support

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c: 
	genirq-Work-around-__irq_set_handler-vs-stacked-domain

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irqdomain.h, kernel/irq/irqdomain.c: irqdomain:
	Introduce helper function irq_domain_add_hierarchy()

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irqdomain.h, kernel/irq/irqdomain.c: irqdomain:
	Implement a method to automatically call parent domains alloc/free

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irqdomain.h, kernel/irq/irqdomain.c: 
	genirq-Introduce-helper-irq_domain_set_info

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/chip.c: genirq: Introduce
	irq_chip.irq_compose_msi_msg() to support stacked irqchip

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/chip.c: 
	-genirq-Add-more-helper-functions-to-support-stacked-irqs

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/chip.c: 
	-genirq-Introduce-helper-functions-to-support-stacked-irqs

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/irqdomain.c: 
	irqdomain-Do-irq_find_mapping-and-set_type-for-hierarchy

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, include/linux/irqdomain.h,
	kernel/irq/Kconfig, kernel/irq/chip.c, kernel/irq/irqdomain.c: 
	irqdomain-Introduce-new-interfaces-to-support-hierarchy

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/base/syscore.c, include/linux/interrupt.h,
	kernel/irq/chip.c, kernel/irq/internals.h, kernel/irq/pm.c: genirq:
	Simplify wakeup mechanism

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/pm.c: genirq: Mark wakeup sources
	as armed on suspend

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c: 
	genirq-Create-helper-for-flow-handler-entry-check

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c: genirq-Distangle-edge-handler-entry.

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/pm.c: genirq-Avoid-double-loop-on-suspend.

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/pm.c: genirq: Move MASK_ON_SUSPEND handling into
	suspend_device_irqs()

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/pm.c: genirq-Make-use-of-pm-misfeature-accounting.

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/internals.h, kernel/irq/manage.c, kernel/irq/pm.c: 
	genirq: Move suspend/resume logic into irq/pm code

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/manage.c: PM / sleep / irq: Do not suspend wakeup
	interrupts

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/irqdesc.c: 
	genirq-Fix-memory-leak-when-calling-irq_free_hwirqs

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/irqdesc.c: 
	genirq-Provide-generic-hwirq-allocation-facility.FIX

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irqdesc.h, kernel/irq/internals.h,
	kernel/irq/manage.c, kernel/irq/pm.c, kernel/irq/spurious.c: REVERT
	- irq / PM: Fix IRQF_NO_SUSPEND problem with shared interrupts

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/sched/cputime.c: cputime-use read once not access once

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/cpu_pm.c: add from_suspend to cpu_pm

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: update workqueue again now that waits are
	sorted out

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_mmu.c: 
	-kgsl-fix-genalloc-BUG-when-detroying-pagetable

2017-04-17  robcore <robpatershuk@gmail.com>

	* Documentation/DocBook/device-drivers.tmpl,
	Documentation/filesystems/caching/operations.txt,
	drivers/gpu/msm/adreno.c, drivers/gpu/msm/z180.c,
	drivers/md/dm-bufio.c, drivers/md/dm-snap.c, drivers/scsi/sg.c,
	fs/btrfs/extent_io.c, fs/buffer.c, fs/cifs/connect.c,
	fs/fs-writeback.c, fs/fscache/cookie.c, fs/fscache/internal.h,
	fs/fscache/main.c, fs/fscache/page.c, fs/gfs2/lock_dlm.c,
	fs/gfs2/ops_fstype.c, fs/gfs2/recovery.c, fs/gfs2/super.c,
	fs/inode.c, fs/jbd2/transaction.c, fs/nfs/file.c, fs/nfs/inode.c,
	fs/nfs/internal.h, fs/nfs/nfs4proc.c, fs/nfs/pagelist.c,
	fs/nfs/pnfs.c, fs/nfs/write.c, include/linux/backing-dev.h,
	include/linux/ftrace_event.h, include/linux/sunrpc/sched.h,
	include/linux/tty.h, include/linux/wait.h,
	include/linux/writeback.h, include/trace/ftrace.h, kernel/ptrace.c,
	kernel/sched/wait.c, kernel/trace/trace_events.c,
	kernel/trace/trace_export.c, kernel/workqueue.c, mm/backing-dev.c,
	mm/filemap.c, mm/ksm.c, mm/swapfile.c, net/irda/af_irda.c,
	net/netfilter/ipvs/ip_vs_sync.c, net/sunrpc/sched.c,
	security/keys/gc.c, security/keys/request_key.c: reverted the wait
	shit

2017-04-17  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	drivers/input/keyboard/gpio_keys.c: turning net namespaces back on
	think it is the fault behind swype (hopefully)

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/base/syscore.c, include/linux/interrupt.h,
	include/linux/irq.h, kernel/irq/chip.c, kernel/irq/internals.h,
	kernel/irq/manage.c, kernel/irq/pm.c, kernel/irq/settings.h: fuck
	man

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/base/syscore.c, include/linux/interrupt.h,
	kernel/irq/internals.h, kernel/irq/pm.c: nopers

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/chip.c, kernel/irq/manage.c,
	kernel/irq/settings.h: 
	UPSTREAM-genirq-Add-flag-to-force-mask-in-disable_irq

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/handle.c: how come i cant export irqreturn_ts?

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irqdesc.h, kernel/irq/Kconfig, kernel/irq/chip.c,
	kernel/irq/devres.c, kernel/irq/handle.c, kernel/irq/irqdesc.c,
	kernel/irq/resend.c: reverted

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irqdesc.h, kernel/irq/Kconfig, kernel/irq/chip.c,
	kernel/irq/devres.c, kernel/irq/handle.c, kernel/irq/irqdesc.c,
	kernel/irq/resend.c: nevermind

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/resend.c: 
	genirq-Prevent-resend-to-interrupts-marked-IRQ_NESTED

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/devres.c: genirq: devres: Fix testing return value of
	request_any_context_irq()

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c: genirq: chip: set pending only for edge
	interrupts

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/irqdesc.c: add include

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irqdesc.h, kernel/irq/Kconfig, kernel/irq/irqdesc.c: 
	genirq: Add irq_domain-aware core IRQ handler

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/irqchip/irq-gic.c, kernel/irq/chip.c: irqchip - use
	raw_cpu_ptr instead of _this_cpu_ptr

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/manage.c: rever ttaht

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/manage.c: irq: Warn when shared interrupts do not match
	on NO_SUSPEND

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/irqdesc.c: genirq: Fix memory leak when calling
	irq_free_hwirqs()

2017-04-17  robcore <robpatershuk@gmail.com>

	* Documentation/IRQ-domain.txt, kernel/irq/internals.h: dox

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/Kconfig, kernel/irq/irqdesc.c: 
	genirq: Provide generic hwirq allocation facility

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c, kernel/irq/handle.c: irq -
	export no_action

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: disabled powersuspend in
	input, and threw a useless pm wakeup event into resume for wakeup
	keys (home)

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/cypress_touchkey/cypress-touchkey.c,
	drivers/input/keyboard/cypress_touchkey_236/cypress-touchkey-236.c,
	drivers/input/keyboard/cypress_touchkey_236/cypress-touchkey-236_ms
	m8960.c, drivers/input/keyboard/tc360-touchkey.c,
	drivers/input/misc/mpu6050/mpu6050_selftest.c,
	drivers/input/misc/mpu6500/mpu6500_selftest.c,
	drivers/input/touchscreen/cy8c_tmg_ts.c,
	drivers/input/touchscreen/cy8c_ts.c,
	drivers/input/touchscreen/cyttsp-i2c-qc.c,
	drivers/input/touchscreen/cyttsp4_btn.c,
	drivers/input/touchscreen/cyttsp4_core.c,
	drivers/input/touchscreen/cyttsp4_mt_common.c,
	drivers/input/touchscreen/cyttsp4_mt_common.h,
	drivers/input/touchscreen/ft5x06_ts.c,
	drivers/input/touchscreen/lge_touch_core.c,
	drivers/input/touchscreen/mms_ts_144.c,
	drivers/input/touchscreen/msm_ts.c,
	drivers/input/touchscreen/mxt224e.c,
	drivers/input/touchscreen/mxts.c,
	drivers/input/touchscreen/mxts_msm8930.c,
	drivers/input/touchscreen/rmi_f34.c,
	drivers/input/touchscreen/synaptics_i2c_rmi.c,
	drivers/input/touchscreen/synaptics_i2c_rmi.h,
	drivers/input/touchscreen/synaptics_i2c_rmi4.c,
	drivers/input/touchscreen/synaptics_i2c_rmi4.h,
	drivers/input/touchscreen/synaptics_i2c_rmi_msm8930.c,
	drivers/input/touchscreen/synaptics_i2c_rmi_msm8930.h,
	drivers/input/touchscreen/tsc2007.c,
	drivers/input/touchscreen/zinitix_bt_532.c, pos.sh: undeffed
	powersuspend for everything in input

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-avoid-running-idle_balance-on-behalf-of-wrong-cpu

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h: 
	workqueue-apply-__WQ_ORDERED-to-create_singlethread

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-use-nr_node_ids-instead-of-wq_numa_tbl_len

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-remove-the-misnamed-out_unlock-label

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: fixup-remove-rescuer-pool

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-unfold-start_worker-into-create_worker.

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-remove-wakeup-from-worker_set_flags

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	-workqueue-remove-an-unneeded-UNBOUND-test-before-wake

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-alloc-struct-worker-on-its-local-node.

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-reuse-the-already-calculated-pwq

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c, sop.sh: 
	workqueue-zero-cpumask-of-wq_numa_possible_cpumask

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, include/linux/irqdesc.h, kernel/irq/Kconfig,
	kernel/irq/chip.c, kernel/irq/irqdesc.c, kernel/irq/pm.c: revert all
	that for now to build and check...then i gotta work on my irq PM
	management

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/pm.c: gotta revert
	genirq-Mark-wakeup-sources-as-armed-on-suspend

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c: 
	genirq-Create-helper-for-flow-handler-entry-check

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c: genirq: Distangle edge handler entry

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/pm.c: genirq-Avoid-double-loop-on-suspend.

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/irq/pm.c: genirq-Move-MASK_ON_SUSPEND-handling-into-suspend

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/irqdesc.h, kernel/irq/Kconfig, kernel/irq/irqdesc.c: 
	#include <linux/irqdomain.h>

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Update cur_freq in the cpufreq policy
	notifier callback

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c, pos.sh, sop.sh: workqueue - update up to
	fix-dev_set_uevent_suppress-imbalance

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/usb/core/hub.c: bring back hub commit

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/usb/core/hub.c, include/linux/cpu_rmap.h,
	include/linux/interrupt.h, include/linux/irq.h,
	include/linux/irqdesc.h, include/linux/irqnr.h,
	include/linux/kernel_stat.h, include/linux/pagemap.h,
	include/linux/wait.h, kernel/Makefile, kernel/sched/wait.c,
	kernel/softirq.c, kernel/workqueue.c, lib/cpu_rmap.c,
	mm/backing-dev.c, mm/filemap.c: possed

2017-04-17  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-04-17  robcore <robpatershuk@gmail.com>

	* mm/backing-dev.c: perhaps this should be wait_on_bit_lock, as we
	clear the bit after the wait...

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/workqueue.h,
	kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sched/sched_avg.c, kernel/workqueue.c, pos.sh: possed

2017-04-17  robcore <robpatershuk@gmail.com>

	* pos.sh: possing a bit

2017-04-17  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, arch/arm/configs/canadefconfig, pos.sh: brought
	back mpu and cache erp

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: i may want to try using count and just
	making it nr_running

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: TECHNICALLY i should be able to get away
	with this...

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: fix up nr_running count

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: avoid running idle_balance() on behalf
	of wrong CPU

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/sched.h,
	kernel/sched/sched_avg.c: sched: Fix bug in average nr_running and
	nr_iowait calculation

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/sched/wait.c: fix wait.c -> smp_store_mb

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/cpu_rmap.h, include/linux/interrupt.h,
	include/linux/irq.h, include/linux/irqdesc.h,
	include/linux/irqnr.h, include/linux/kernel_stat.h,
	kernel/Makefile, lib/cpu_rmap.c: dunno if we were building our much
	need generic hard irqs, but now we are

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/softirq.c: endif

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/sched/wait.c, kernel/softirq.c: a doubled commit in wait.c

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: add need_rebind

2017-04-17  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: cleaned up config

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: synced workqueue with 3.18-sammy, changed
	idr_get_new in worker_pool_assign_id to idr_get_new_above

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h: 
	workqueue-apply-__WQ_ORDERED-to-create_singlethread

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-use-nr_node_ids-instead-of-wq_numa_tbl_len

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-remove-the-misnamed-out_unlock-label

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: dox

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: fixup remove rescuer pool

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-unfold-start_worker-into-create_worker

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-remove-wakeup-from-worker_set_flags

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-remove-an-unneeded-UNBOUND-test-before-waking

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-alloc-struct-worker-on-its-local-node.

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-reuse-the-already-calculated-pwq

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-zero-cpumask-of-wq_numa_possible_cpumask

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: missing POOL DISASOSSIATED flag in rebind

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-fix-dev_set_uevent_suppress-imbalance

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	-workqueue-clear-POOL_DISASSOCIATED-in-rebind_workers

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-sanity-check-pool-cpu-in-wq_worker_sleeping

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-clear-leftover-flags-when-detached.

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-remove-useless-WARN_ON_ONCE

2017-04-17  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, arch/arm/configs/canadefconfig: turn off arm mpu
	and msm cache erp

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-remove-the-empty-check-in-too_many_workers.

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-use-pool-cpu-0-to-stand-for-an-unbound-pool

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h, kernel/sched/wait.c: 
	sched-wait-Provide-infrastructure-to-deal-with-nested-sleeps

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/pagemap.h, include/linux/wait.h,
	kernel/sched/wait.c, mm/filemap.c: 
	SCHED-add-some-wait.on_bit.timeout-interfaces

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/usb/core/hub.c: there it is, just use init work in place
	of PREPARE DELAYED for hub

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue_internal.h: cleanup

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/usb/core/hub.c: use schedule work instead of PREPARE
	DELAYED WORK

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: a little cleanup, trivial

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/idr.h, lib/idr.c: add idr_is_empty, dont need it now
	but it could come in handy down the road and its just a simple check

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-remove-the-confusing-POOL_FREEZING

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-rename-first_worker-to-first_idle_worker

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h: 
	workqueue-remove-unused-work_clear_pending

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h: workqueue-remove-unused-WORK_CPU_END

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h: workqueue: declare system_highpri_wq

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-use-generic-attach-detach-routine-for-rescue-workers

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: separate pool-attaching code out
	from create_worker()

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c, kernel/workqueue_internal.h: 
	workqueue-rename-manager_mutex-to-attach_mutex

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-narrow-the-protection-range-of-manager_mutex

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: convert worker_idr to worker_ida

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c, kernel/workqueue_internal.h: workqueue:
	separate iteration role from worker_idr

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/misc/sec_misc.c, drivers/mmc/core/core.c: fix a work
	queue, make mx_drop_caches and make samsungs annoying one on suspend
	a dummy

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/firewire/core-transaction.c,
	drivers/gpu/drm/exynos/exynos_hdmi.c, drivers/md/dm-crypt.c,
	drivers/md/dm-kcopyd.c, drivers/md/dm-raid1.c,
	drivers/staging/nvec/nvec.c, drivers/usb/otg/msm72k_otg.c: NO MORE
	WQ_NON_REENTRANT

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: this is so crazy it just might work

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-destroy-worker-directly-in-the-idle-timeout

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: async worker destruction

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-destroy_worker-should-destroy-idle-workers

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h: so long nrt_freezable

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h, kernel/workqueue.c: 
	workqueue-Remove-deprecated-flush-_delayed-_work_sync

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-simplify-wq_update_unbound_numa

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-make-rescuer_thread-empty-wq-maydays-list

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-fix-bugs-in-wq_update_unbound_numa-failure.

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/md/dm.c, drivers/mmc/host/dw_mmc.c,
	drivers/video/msm/mdp.c, fs/dlm/ast.c, fs/gfs2/main.c,
	include/linux/workqueue.h, net/ceph/messenger.c,
	net/nfc/llcp/llcp.c, sound/soc/msm/qdsp6v2/audio_ocmem.c: remove
	deprecated WQ_NON_REENTRANT they are all

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h, kernel/workqueue.c: 
	workqueue-Provide-destroy_delayed_work_on_stack

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h: dox

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h: workqueue-remove-PREPARE_-DELAYED_-WORK

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-Calling-destroy_work_on_stack-after-flush

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue - fix ordered workqueues in NUMA
	setups

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-convert-bus-code-to-use-dev_groups

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: dox

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: for us, disable numa everything

2017-04-17  robcore <robpatershuk@gmail.com>

	* Documentation/workqueue.txt, include/linux/workqueue.h,
	kernel/workqueue.c: dox

2017-04-17  robcore <robpatershuk@gmail.com>

	* crypto/pcrypt.c, drivers/message/i2o/driver.c,
	drivers/net/wireless/rt2x00/rt2x00dev.c,
	drivers/net/wireless/rtlwifi/base.c,
	drivers/pci/hotplug/pciehp_hpc.c,
	drivers/pci/hotplug/shpchp_core.c, drivers/scsi/be2iscsi/be_main.c,
	drivers/scsi/qla4xxx/ql4_os.c, drivers/scsi/scsi_transport_fc.c,
	include/linux/workqueue.h, net/bluetooth/hci_core.c,
	net/mac80211/main.c: 
	drivers-avoid-format-strings-in-names-passed-to-alloc-workqueue

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-don-t-perform-NUMA-aware-allocations-on-offline-nodes

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h, kernel/printk/printk.c,
	kernel/sched/core.c, kernel/workqueue_internal.h: debug bs

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-use-kmem_cache_free-instead-of-kfree

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-avoid-false-negative-WARN_ON-in-destroy

2017-04-17  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, include/linux/workqueue.h,
	kernel/workqueue.c: workqueue-update-sysfs-interface-to-reflect-NUMA

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-implement-NUMA-affinity-for-unbound-work

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-introduce-put_pwq_unlocked.

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: introduce numa_pwq_tbl_install()

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-use-NUMA-aware-allocation-for-pwqs

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-break-init_and_link_pwq-into-two-functions

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: map an unbound workqueues to
	multiple per-node pool_workqueues

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: move hot fields of workqueue_struct
	to the end

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-make-workqueue-name-fixed-len

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-determine-NUMA-node-of-workers;

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-drop-H-from-kworker-names-of-unbound-workers

2017-04-17  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/whci/debug.c,
	drivers/usb/wusbcore/reservation.c,
	drivers/usb/wusbcore/wa-rpipe.c, drivers/usb/wusbcore/wusbhc.c,
	drivers/uwb/drp.c, drivers/uwb/uwb-debug.c, fs/proc/array.c,
	fs/seq_file.c, include/linux/bitmap.h, include/linux/cpumask.h,
	include/linux/nodemask.h, include/linux/seq_file.h,
	kernel/irq/proc.c, kernel/profile.c, kernel/trace/trace.c,
	kernel/workqueue.c, lib/bitmap.c, mm/slub.c: bring back
	cpumask_scnprint funcs

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-add-workqueue-unbound_attrs

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h, kernel/workqueue.c: workqueue:
	implement sysfs interface for workqueues

2017-04-17  robcore <robpatershuk@gmail.com>

	* mm/swapfile.c: wait_on_bit fix in mm

2017-04-17  robcore <robpatershuk@gmail.com>

	* fs/nfs/nfs4proc.c: another nfs fix

2017-04-17  robcore <robpatershuk@gmail.com>

	* fs/nfs/pagelist.c, include/linux/backing-dev.h, mm/backing-dev.c: 
	fix backing dev and nfs again

2017-04-17  robcore <robpatershuk@gmail.com>

	* fs/nfs/inode.c, fs/nfs/internal.h, include/linux/sunrpc/sched.h,
	include/linux/wait.h, kernel/sched/wait.c, net/sunrpc/sched.c: 
	sched: Allow wait_on_bit_action() functions to support a timeout

2017-04-17  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/caching/operations.txt,
	drivers/md/dm-bufio.c, drivers/md/dm-snap.c, fs/btrfs/extent_io.c,
	fs/buffer.c, fs/cifs/connect.c, fs/fs-writeback.c,
	fs/fscache/cookie.c, fs/fscache/internal.h, fs/fscache/main.c,
	fs/fscache/page.c, fs/gfs2/lock_dlm.c, fs/gfs2/ops_fstype.c,
	fs/gfs2/recovery.c, fs/gfs2/super.c, fs/inode.c,
	fs/jbd2/transaction.c, fs/nfs/file.c, fs/nfs/pnfs.c,
	fs/nfs/write.c, include/linux/wait.h, include/linux/writeback.h,
	kernel/ptrace.c, kernel/sched/wait.c, mm/filemap.c, mm/ksm.c,
	security/keys/gc.c, security/keys/request_key.c: sched-remove the
	proliferation of wait_on_bit_action funcs again

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue - remove doubled function

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: dox;

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: re-remove sleep_on etc

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: 
	Revert-sched-wait-Suppress-Sparse-variable-shadowing

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: 
	sched-wait-Suppress-Sparse-variable-shadowing-warning

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: dox

2017-04-17  robcore <robpatershuk@gmail.com>

	* Documentation/DocBook/device-drivers.tmpl: dox

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: wait-add-wait_event_cmd

2017-04-17  robcore <robpatershuk@gmail.com>

	* kernel/{ => sched}/wait.c: moved wait back

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: 
	sched-wait-Fix-__wait_event_interruptible_lock_irq_timeout

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: sched-wait-Fix-build-breakage

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h, kernel/{sched => }/wait.c: 
	sched-wait-Introduce-prepare_to_wait_event

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: 
	sched-wait-Add-___wait_cond_timeout-to-wait_event-_timeout

2017-04-17  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: sched-wait-Clean-up-wait.h-details-a-bit

2017-04-16  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/iommu_domains.c: REVERT - iommu domains

2017-04-16  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/module.c: REVERT the ref.text ARM_SEC_REF is old
	and dead

2017-04-16  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/iommu_domains.c: TEST - msm: Disable use of the
	IOMMU

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/ion.h: add err.h

2017-04-16  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/module.c: arm module - add a couple of missing
	init refs

2017-04-16  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig: have i been missing ARM_MPU? gonna try it

2017-04-16  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/smp.c: a little cleanup

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/msm_audio_amrwb.h: son of a whore

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/uapi/linux/mmc/Kbuild, include/uapi/linux/mmc/ioctl.h: fix
	ioctl uapi header while im at it

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/msm_audio_aac.h: oops dyslexic moment

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/uapi/linux/Kbuild, include/uapi/video/Kbuild: and kbuild
	headers

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/ioprio.h, include/linux/msm_adc.h,
	include/linux/msm_adsp.h, include/linux/msm_audio.h,
	include/linux/msm_audio_aac.h, include/linux/msm_audio_ac3.h,
	include/linux/msm_audio_acdb.h, include/linux/msm_audio_amrnb.h,
	include/linux/msm_audio_amrwb.h,
	include/linux/msm_audio_amrwbplus.h, include/linux/msm_audio_mvs.h,
	include/linux/msm_audio_qcp.h, include/linux/msm_audio_sbc.h,
	include/linux/msm_audio_voicememo.h, include/linux/msm_audio_wma.h,
	include/linux/msm_audio_wmapro.h, include/linux/msm_charm.h,
	include/linux/msm_ion.h, include/linux/msm_ipc.h,
	include/linux/msm_kgsl.h, include/linux/msm_mdp.h,
	include/linux/msm_q6vdec.h, include/linux/msm_q6venc.h,
	include/linux/msm_rmnet.h, include/linux/msm_rotator.h,
	include/linux/msm_vidc_dec.h, include/linux/msm_vidc_enc.h,
	include/linux/tspp.h, include/uapi/linux/ioprio.h,
	include/uapi/linux/msm_adc.h, include/uapi/linux/msm_adsp.h,
	include/uapi/linux/msm_audio.h, include/uapi/linux/msm_audio_aac.h,
	include/uapi/linux/msm_audio_ac3.h,
	include/uapi/linux/msm_audio_acdb.h,
	include/uapi/linux/msm_audio_amrnb.h,
	include/uapi/linux/msm_audio_amrwb.h,
	include/uapi/linux/msm_audio_amrwbplus.h,
	include/uapi/linux/msm_audio_mvs.h,
	include/uapi/linux/msm_audio_qcp.h,
	include/uapi/linux/msm_audio_sbc.h,
	include/uapi/linux/msm_audio_voicememo.h,
	include/uapi/linux/msm_audio_wma.h,
	include/uapi/linux/msm_audio_wmapro.h,
	include/uapi/linux/msm_charm.h, include/uapi/linux/msm_ion.h,
	include/uapi/linux/msm_ipa.h, include/uapi/linux/msm_ipc.h,
	include/uapi/linux/msm_kgsl.h, include/uapi/linux/msm_mdp.h,
	include/uapi/linux/msm_q6vdec.h, include/uapi/linux/msm_q6venc.h,
	include/uapi/linux/msm_rmnet.h, include/uapi/linux/msm_rotator.h,
	include/uapi/linux/msm_vidc_dec.h,
	include/uapi/linux/msm_vidc_enc.h, include/uapi/linux/tspp.h,
	include/uapi/video/mipi_display.h,
	include/uapi/video/msm_hdmi_modes.h, include/video/mipi_display.h,
	include/video/msm_hdmi_modes.h: a ton of important msm exports to
	uapi

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/idle_stats_device.h,
	include/uapi/linux/idle_stats_device.h: ditto msm_idle_stats

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/ion.h, include/uapi/linux/ion.h: ion - export to
	userspace via uapi

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/adreno.c: those kgsl changes were a bad idea, just
	keep the timer ones

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/scsi/sg.c: fix sg

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/adreno.c, drivers/gpu/msm/z180.c: forget the
	custom wait event interfaces in the gpu drivers, they do the same
	bloody thing as the generic now

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/adreno.c, include/linux/tty.h,
	include/linux/wait.h: some kgsl/tty/wait fixups

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h, net/irda/af_irda.c,
	net/netfilter/ipvs/ip_vs_sync.c: 
	sched-wait-Make-the-__wait_event-interface-more-friendly

2017-04-16  robcore <robpatershuk@gmail.com>

	* kernel/{ => sched}/wait.c: moved wait back to sched to build

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: collapse all the wait events

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: sched-wait-Collapse-__wait_event_timeout.

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: sched/wait: Collapse __wait_event()

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/ftrace_event.h, include/trace/ftrace.h,
	kernel/trace/trace_events.c, kernel/trace/trace_export.c: 
	tracing-Fix-array-size-mismatch-in-format-string.

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: sched-wait-Introduce-___wait_event.

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: 
	sched-wait-Change-the-wait_exclusive-control-flow.

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: sched/wait: Change timeout logic

2017-04-16  robcore <robpatershuk@gmail.com>

	* kernel/{sched => }/wait.c: dox

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/input/misc/max77693-haptic.c: max77693 haptic from
	upstream: sturdier suspend/resume ops

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/matrix_keypad.c: matrix keypad - use a
	spinlock instead of a mutex for irq work

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: trying one out with syscore
	ops

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: phew glad i caught this, needs
	to be ret not error

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: created a very interesting,
	franken gpio driver with improved detection and some ideas for the
	future, a lot of this courtesy of qcom msm8996 (s7)

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: hold up may have found my
	solution

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: reverted

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: god DAMN this custom samsung
	shit

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: Input: gpio_keys - remove
	useless reinitialization of pdata->nbuttons

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: reverted

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: revert this got somethin up my
	sleeve

2017-04-16  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/caching/operations.txt,
	drivers/input/keyboard/cypress_touchkey/cypress-touchkey.c,
	drivers/input/keyboard/cypress_touchkey_236/cypress-touchkey-236.c,
	drivers/input/keyboard/cypress_touchkey_236/cypress-touchkey-236_ms
	m8960.c, drivers/input/keyboard/gpio_keys.c, drivers/md/dm-bufio.c,
	drivers/md/dm-snap.c, drivers/scsi/sg.c, drivers/tty/tty_port.c,
	fs/buffer.c, fs/cifs/connect.c, fs/fs-writeback.c,
	fs/fscache/cookie.c, fs/fscache/internal.h, fs/fscache/main.c,
	fs/fscache/page.c, fs/gfs2/lock_dlm.c, fs/gfs2/ops_fstype.c,
	fs/gfs2/recovery.c, fs/gfs2/super.c, fs/inode.c,
	fs/jbd2/transaction.c, fs/nfs/file.c, fs/nfs/inode.c,
	fs/nfs/internal.h, fs/nfs/nfs4proc.c, fs/nfs/pagelist.c,
	fs/nfs/pnfs.c, fs/nfs/write.c, include/linux/sunrpc/sched.h,
	include/linux/tty.h, include/linux/wait.h,
	include/linux/writeback.h, kernel/ptrace.c, kernel/sched/wait.c,
	mm/backing-dev.c, mm/filemap.c, mm/ksm.c, mm/swapfile.c,
	net/irda/af_irda.c, net/netfilter/ipvs/ip_vs_sync.c,
	net/sunrpc/sched.c, security/keys/gc.c, security/keys/request_key.c: 
	POSSED (adreno has some shitty timeout logic, as well as other stuff
	too probably. at least it booted tho

2017-04-16  robcore <robpatershuk@gmail.com>

	* pos.sh: POSSING

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/tty/tty_port.c: fix tty_port

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/scsi/sg.c: one last fix

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/scsi/sg.c: make sg smarter (and coded properly)

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: gpio_keys: give resume events
	a little more juice

2017-04-16  robcore <robpatershuk@gmail.com>

	* mm/backing-dev.c, mm/swapfile.c: fix up swapfile and backing dev

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/cypress_touchkey/cypress-touchkey.c,
	drivers/input/keyboard/cypress_touchkey_236/cypress-touchkey-236.c,
	drivers/input/keyboard/cypress_touchkey_236/cypress-touchkey-236_ms
	m8960.c, fs/nfs/inode.c, fs/nfs/internal.h,
	include/linux/sunrpc/sched.h, include/linux/wait.h,
	kernel/sched/wait.c, net/sunrpc/sched.c: cypress touchkeys (i may
	extend this to all input) disable powersuspend and use PM

2017-04-16  robcore <robpatershuk@gmail.com>

	* fs/nfs/pagelist.c: make nfs4proc wait_on_bit_io

2017-04-16  robcore <robpatershuk@gmail.com>

	* fs/nfs/nfs4proc.c: fix another nfs derp

2017-04-16  robcore <robpatershuk@gmail.com>

	* fs/nfs/pagelist.c: fix nfs

2017-04-16  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/caching/operations.txt,
	drivers/md/dm-bufio.c, drivers/md/dm-snap.c, fs/buffer.c,
	fs/cifs/connect.c, fs/fs-writeback.c, fs/fscache/cookie.c,
	fs/fscache/internal.h, fs/fscache/main.c, fs/fscache/page.c,
	fs/gfs2/lock_dlm.c, fs/gfs2/ops_fstype.c, fs/gfs2/recovery.c,
	fs/gfs2/super.c, fs/inode.c, fs/jbd2/transaction.c, fs/nfs/file.c,
	fs/nfs/pnfs.c, fs/nfs/write.c, include/linux/wait.h,
	include/linux/writeback.h, kernel/ptrace.c, kernel/sched/wait.c,
	mm/filemap.c, mm/ksm.c, security/keys/gc.c,
	security/keys/request_key.c: 
	sched-Remove-proliferation-of-wait_on_bit-action-fun.

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: 
	sched-wait-Explain-the-shadowing-and-type-inconsistencies

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: wait-add-wait_event_cmd.

2017-04-16  robcore <robpatershuk@gmail.com>

	* kernel/{ => sched}/wait.c: move wait back

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: 
	-sched-wait-Fix-__wait_event_interruptible_lock_irq_t.

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h, kernel/{sched => }/wait.c: 
	sched-wait-Introduce-prepare_to_wait_event

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: 
	sched-wait-Add-___wait_cond_timeout-to-wait_event-_t

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: sched/wait: Clean up wait.h details a bit

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/tty.h, include/linux/wait.h, net/irda/af_irda.c,
	net/netfilter/ipvs/ip_vs_sync.c: Subject: [PATCH 04482/80000]
	sched/wait: Make the __

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: collapse squash for wait

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: sched-wait-Introduce-___wait_event

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: 
	sched-wait-Change-the-wait_exclusive-control-flow.

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: sched-wait-Change-timeout-logic

2017-04-16  robcore <robpatershuk@gmail.com>

	* Documentation/DocBook/device-drivers.tmpl, include/linux/wait.h,
	kernel/sched/wait.c, net/irda/af_irda.c: reverted that shit

2017-04-16  robcore <robpatershuk@gmail.com>

	* Documentation/DocBook/device-drivers.tmpl, include/linux/wait.h,
	kernel/sched/wait.c, net/irda/af_irda.c: a bunch of stupid bullshit

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: sched-wait-Introduce-___wait_event

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: 
	sched-wait-Change-the-wait_exclusive-control-flow

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h: sched/wait: Change timeout logic

2017-04-16  robcore <robpatershuk@gmail.com>

	* fs/namei.c: vfs: dont set FILE_CREATED before calling
	->atomic_open()

2017-04-16  robcore <robpatershuk@gmail.com>

	* arch/alpha/mm/fault.c, arch/arm/mm/fault.c, arch/frv/mm/fault.c,
	arch/microblaze/mm/fault.c, arch/openrisc/mm/fault.c,
	arch/score/mm/fault.c, arch/um/kernel/trap.c,
	arch/unicore32/mm/fault.c, arch/x86/mm/fault.c, include/linux/mm.h: 
	pass userspace fault flag again

2017-04-16  robcore <robpatershuk@gmail.com>

	* arch/alpha/mm/fault.c,
	arch/arm/mach-msm/msm_bus/msm_bus_fabric.c, arch/arm/mm/fault.c,
	arch/frv/mm/fault.c, arch/microblaze/mm/fault.c,
	arch/openrisc/mm/fault.c, arch/score/mm/fault.c,
	arch/um/kernel/trap.c, arch/unicore32/mm/fault.c,
	arch/x86/mm/fault.c, block/blk-ioc.c, fs/dcache.c,
	fs/fscache/page.c, include/linux/memcontrol.h, include/linux/mm.h,
	include/linux/radix-tree.h, lib/radix-tree.c, mm/filemap.c,
	mm/memcontrol.c, mm/nobootmem.c, mm/shmem.c, mm/swap_state.c,
	mm/vmscan.c: possed

2017-04-16  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_bus/msm_bus_fabric.c, pos.sh: possing most

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, include/linux/sched.h, mm/filemap.c,
	mm/memcontrol.c, mm/memory.c, pos.sh: 
	mm-memcg-enable-memcg-OOM-killer-only-for-user-fault

2017-04-16  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_bus/msm_bus_fabric.c: technically this
	should work...

2017-04-16  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_bus/msm_bus_fabric.c: hmm

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/tty.h: fix up my tty_port wait change

2017-04-16  robcore <robpatershuk@gmail.com>

	* mm/filemap.c: mm: avoid unnecessary atomic operations during
	end_page_writeback()

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, mm/memcontrol.c, mm/vmscan.c: 
	vmscan-memcg-do-softlimit-reclaim-also-for-targeted

2017-04-16  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: memcg-get-rid-of-soft-limit-tree-infrastructure

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, mm/memcontrol.c, mm/vmscan.c: memcg,
	vmscan: integrate soft reclaim tighter with zone shrinking code

2017-04-16  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: memcg: remove redundant code in
	mem_cgroup_force_empty_write()

2017-04-16  robcore <robpatershuk@gmail.com>

	* fs/dcache.c:  vfs: use __getname/__putname for getcwd() system call

2017-04-16  robcore <robpatershuk@gmail.com>

	* arch/alpha/mm/fault.c, arch/arm/mm/fault.c, arch/frv/mm/fault.c,
	arch/microblaze/mm/fault.c, arch/openrisc/mm/fault.c,
	arch/score/mm/fault.c, arch/um/kernel/trap.c,
	arch/unicore32/mm/fault.c, arch/x86/mm/fault.c, include/linux/mm.h: 
	arch: mm: pass userspace fault flag to generic fault handler

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, include/linux/sched.h, mm/filemap.c,
	mm/memcontrol.c, mm/memory.c: REVERT -
	mm-memcg-enable-memcg-OOM-killer-only-for-user-fault until i find
	FLAG_FAULT_USER

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/tty.h, include/linux/wait.h: sched/wait: Make the
	signal_pending() checks consistent

2017-04-16  robcore <robpatershuk@gmail.com>

	* mm/filemap.c: mm: cleanup add_to_page_cache_locked()

2017-04-16  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, include/linux/sched.h, mm/filemap.c,
	mm/memcontrol.c, mm/memory.c: mm: memcg: enable memcg OOM killer
	only for user faults

2017-04-16  robcore <robpatershuk@gmail.com>

	* block/blk-ioc.c, fs/fscache/page.c, include/linux/radix-tree.h,
	lib/radix-tree.c, mm/filemap.c, mm/nobootmem.c, mm/shmem.c,
	mm/swap_state.c: lib/radix-tree.c: make radix_tree_node_alloc() work
	correctly within interrupt

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdp4_overlay_lcdc.c,
	drivers/video/msm/mdp_dma_dsi_video.c,
	drivers/video/msm/mipi_dsi_host.c, kernel/sched/fair.c: revert those
	waits dont trust em

2017-04-16  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-core-Remove-false-positive-warning-from-wake_up

2017-04-16  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdp4_overlay_lcdc.c,
	drivers/video/msm/mdp_dma_dsi_video.c,
	drivers/video/msm/mipi_dsi_host.c: a couple of interrupble waits

2017-04-16  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, arch/arm/mach-msm/board-jf_eur.c,
	arch/arm/mach-msm/include/mach/jf_eur-gpio.h,
	drivers/irda/ir_remote_con.c: revert all that no go

2017-04-15  robcore <robpatershuk@gmail.com>

	* drivers/irda/ir_remote_con.c: fix devexit_p

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c: oops again

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/include/mach/jf_eur-gpio.h: there it is

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jactive_eur-gpiomux.c: reverted that...lol
	was jactive who cares

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jactive_eur-gpiomux.c: hmmm...

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, arch/arm/mach-msm/board-jf_eur.c: 
	turning on IRDA_MC96 for testing

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: nope

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: turning off net ns

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: different SCFS test

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: SCFS tests

2017-04-15  robcore <robpatershuk@gmail.com>

	* fs/Makefile, mm/iov_iter.c => fs/iov-iter.c, fs/scfs/file.c,
	mm/Makefile, mm/bootmem.c, mm/filemap.c, mm/filemap_xip.c: reverted
	all that, makes no difference

2017-04-15  robcore <robpatershuk@gmail.com>

	* mm/filemap.c, mm/iov_iter.c: some mm hax - **HUNCH TIME** ->
	technically, cant we just check if we are in atomic when choosing
	which iov_iter_copy_to_user to use? if so, i may have just fixed our
	issues with DHD file writes when turning off wifi hotspot

2017-04-15  robcore <robpatershuk@gmail.com>

	* mm/Makefile, mm/{iov-iter.c => iov_iter.c}: rename
	iov-iter->iov_iter

2017-04-15  robcore <robpatershuk@gmail.com>

	* fs/Makefile, mm/Makefile, {fs => mm}/iov-iter.c: moved iov-iter to
	mm

2017-04-15  robcore <robpatershuk@gmail.com>

	* mm/bootmem.c: bootmem - add missing totalram_pages designation

2017-04-15  robcore <robpatershuk@gmail.com>

	* mm/filemap.c: extra space

2017-04-15  robcore <robpatershuk@gmail.com>

	* mm/filemap_xip.c: added something useless to mm filemap_xip

2017-04-15  robcore <robpatershuk@gmail.com>

	* fs/scfs/file.c: scfs - add VM_NONLINEAR vma_flag back to scfs
	(which used to be VM_CAN_NONLINEAR).

2017-04-15  robcore <robpatershuk@gmail.com>

	* fs/exec.c, fs/read_write.c, mm/filemap.c: reverted that for now

2017-04-15  robcore <robpatershuk@gmail.com>

	* fs/exec.c, fs/read_write.c, mm/filemap.c: working on an experiment
	for atomic reads/writes with the filemap, but am gonna revert
	because im pretty sure the "cond_resched/schedule()" calls in
	do_generic_file_read from /mm/filemap.c are the culprit. so imma
	work on that today.

2017-04-15  robcore <robpatershuk@gmail.com>

	* drivers/input/misc/pmic8xxx-pwrkey.c: add a little booster
	wakelock for the power key when NOT poweroff charging

2017-04-15  robcore <robpatershuk@gmail.com>

	* snapshot/Kbuild.patch.000, snapshot/Kconfig.patch.000,
	snapshot/Makefile.patch.000, snapshot/null.patch.000,
	snapshot/null.patch.001, snapshot/null.patch.002,
	snapshot/null.patch.003, snapshot/null.patch.004,
	snapshot/null.patch.005, snapshot/null.patch.006,
	snapshot/null.patch.007, snapshot/null.patch.008,
	snapshot/null.patch.009, snapshot/null.patch.010,
	snapshot/null.patch.011, snapshot/null.patch.012,
	snapshot/null.patch.013, snapshot/null.patch.014,
	snapshot/null.patch.015, snapshot/null.patch.016,
	snapshot/null.patch.017, snapshot/null.patch.018,
	snapshot/null.patch.019, snapshot/null.patch.020,
	snapshot/null.patch.021, snapshot/null.patch.022,
	snapshot/null.patch.023, snapshot/null.patch.024,
	snapshot/null.patch.025, snapshot/null.patch.026,
	snapshot/null.patch.027, snapshot/null.patch.028,
	snapshot/null.patch.029, snapshot/null.patch.030,
	snapshot/null.patch.031, snapshot/null.patch.032,
	snapshot/null.patch.033, snapshot/null.patch.034,
	snapshot/null.patch.035, snapshot/null.patch.036,
	snapshot/null.patch.037, snapshot/null.patch.038,
	snapshot/null.patch.039, snapshot/null.patch.040,
	snapshot/null.patch.041, snapshot/null.patch.042,
	snapshot/null.patch.043, snapshot/null.patch.044,
	snapshot/null.patch.045, snapshot/null.patch.046,
	snapshot/null.patch.047, snapshot/null.patch.048,
	snapshot/null.patch.049, snapshot/null.patch.050,
	snapshot/null.patch.051, snapshot/null.patch.052,
	snapshot/null.patch.053, snapshot/null.patch.054,
	snapshot/null.patch.055, snapshot/null.patch.056,
	snapshot/null.patch.057, snapshot/null.patch.058,
	snapshot/null.patch.059, snapshot/null.patch.060,
	snapshot/null.patch.061, snapshot/null.patch.062,
	snapshot/null.patch.063, snapshot/null.patch.064,
	snapshot/null.patch.065, snapshot/null.patch.066,
	snapshot/null.patch.067, snapshot/null.patch.068,
	snapshot/null.patch.069, snapshot/null.patch.070,
	snapshot/null.patch.071, snapshot/null.patch.072,
	snapshot/null.patch.073, snapshot/null.patch.074,
	snapshot/null.patch.075, snapshot/null.patch.076,
	snapshot/null.patch.077, snapshot/null.patch.078,
	snapshot/null.patch.079, snapshot/null.patch.080,
	snapshot/null.patch.081, snapshot/null.patch.082,
	snapshot/null.patch.083, snapshot/null.patch.084,
	snapshot/null.patch.085, snapshot/null.patch.086,
	snapshot/null.patch.087, snapshot/null.patch.088,
	snapshot/null.patch.089, snapshot/null.patch.090,
	snapshot/null.patch.091, snapshot/null.patch.092,
	snapshot/null.patch.093, snapshot/null.patch.094,
	snapshot/null.patch.095, snapshot/null.patch.096,
	snapshot/null.patch.097, snapshot/null.patch.098,
	snapshot/null.patch.099, snapshot/null.patch.100,
	snapshot/null.patch.101, snapshot/null.patch.102,
	snapshot/null.patch.103, snapshot/null.patch.104,
	snapshot/null.patch.105, snapshot/null.patch.106,
	snapshot/null.patch.107, snapshot/null.patch.108,
	snapshot/null.patch.109, snapshot/null.patch.110,
	snapshot/null.patch.111, snapshot/null.patch.112,
	snapshot/null.patch.113, snapshot/null.patch.114,
	snapshot/null.patch.115, snapshot/null.patch.116,
	snapshot/null.patch.117, snapshot/null.patch.118,
	snapshot/null.patch.119, snapshot/null.patch.120,
	snapshot/null.patch.121, snapshot/null.patch.122,
	snapshot/null.patch.123, snapshot/null.patch.124,
	snapshot/null.patch.125, snapshot/null.patch.126,
	snapshot/null.patch.127, snapshot/null.patch.128,
	snapshot/null.patch.129, snapshot/null.patch.130,
	snapshot/null.patch.131, snapshot/null.patch.132,
	snapshot/null.patch.133, snapshot/null.patch.134,
	snapshot/null.patch.135, snapshot/null.patch.136,
	snapshot/null.patch.137, snapshot/null.patch.138,
	snapshot/null.patch.139, snapshot/null.patch.140,
	snapshot/null.patch.141, snapshot/null.patch.142,
	snapshot/null.patch.143, snapshot/null.patch.144,
	snapshot/null.patch.145, snapshot/null.patch.146,
	snapshot/null.patch.147, snapshot/null.patch.148,
	snapshot/null.patch.149, snapshot/null.patch.150,
	snapshot/null.patch.151, snapshot/null.patch.152,
	snapshot/null.patch.153, snapshot/null.patch.154,
	snapshot/null.patch.155, snapshot/null.patch.156,
	snapshot/null.patch.157, snapshot/null.patch.158,
	snapshot/null.patch.159, snapshot/null.patch.160,
	snapshot/null.patch.161, snapshot/null.patch.162,
	snapshot/null.patch.163, snapshot/null.patch.164,
	snapshot/null.patch.165, snapshot/null.patch.166,
	snapshot/null.patch.167, snapshot/null.patch.168,
	snapshot/null.patch.169, snapshot/null.patch.170,
	snapshot/null.patch.171, snapshot/null.patch.172,
	snapshot/null.patch.173, snapshot/null.patch.174,
	snapshot/null.patch.175, snapshot/null.patch.176,
	snapshot/null.patch.177, snapshot/null.patch.178,
	snapshot/null.patch.179, snapshot/null.patch.180,
	snapshot/null.patch.181, snapshot/null.patch.182,
	snapshot/null.patch.183, snapshot/null.patch.184,
	snapshot/null.patch.185, snapshot/null.patch.186,
	snapshot/null.patch.187, snapshot/null.patch.188,
	snapshot/null.patch.189, snapshot/null.patch.190,
	snapshot/null.patch.191, snapshot/null.patch.192,
	snapshot/null.patch.193, snapshot/null.patch.194,
	snapshot/null.patch.195, snapshot/null.patch.196,
	snapshot/null.patch.197, snapshot/null.patch.198,
	snapshot/null.patch.199, snapshot/null.patch.200,
	snapshot/null.patch.201, snapshot/null.patch.202,
	snapshot/null.patch.203, snapshot/null.patch.204,
	snapshot/null.patch.205, snapshot/null.patch.206,
	snapshot/null.patch.207, snapshot/null.patch.208,
	snapshot/null.patch.209, snapshot/null.patch.210,
	snapshot/null.patch.211, snapshot/null.patch.212,
	snapshot/null.patch.213, snapshot/null.patch.214,
	snapshot/null.patch.215, snapshot/null.patch.216,
	snapshot/null.patch.217, snapshot/null.patch.218,
	snapshot/null.patch.219, snapshot/null.patch.220,
	snapshot/null.patch.221, snapshot/null.patch.222,
	snapshot/null.patch.223, snapshot/null.patch.224,
	snapshot/null.patch.225, snapshot/null.patch.226,
	snapshot/null.patch.227, snapshot/null.patch.228,
	snapshot/null.patch.229, snapshot/null.patch.230,
	snapshot/null.patch.231, snapshot/null.patch.232,
	snapshot/null.patch.233, snapshot/null.patch.234,
	snapshot/null.patch.235, snapshot/null.patch.236,
	snapshot/null.patch.237, snapshot/null.patch.238,
	snapshot/null.patch.239, snapshot/null.patch.240,
	snapshot/null.patch.241, snapshot/null.patch.242,
	snapshot/null.patch.243, snapshot/null.patch.244,
	snapshot/null.patch.245, snapshot/null.patch.246,
	snapshot/null.patch.247, snapshot/null.patch.248,
	snapshot/null.patch.249, snapshot/null.patch.250,
	snapshot/null.patch.251, snapshot/null.patch.252,
	snapshot/null.patch.253, snapshot/null.patch.254,
	snapshot/null.patch.255, snapshot/null.patch.256,
	snapshot/null.patch.257, snapshot/null.patch.258,
	snapshot/null.patch.259, snapshot/null.patch.260,
	snapshot/null.patch.261, snapshot/null.patch.262,
	snapshot/null.patch.263, snapshot/null.patch.264,
	snapshot/null.patch.265, snapshot/null.patch.266,
	snapshot/null.patch.267, snapshot/null.patch.268,
	snapshot/null.patch.269, snapshot/null.patch.270,
	snapshot/null.patch.271, snapshot/null.patch.272,
	snapshot/null.patch.273, snapshot/null.patch.274,
	snapshot/null.patch.275, snapshot/null.patch.276,
	snapshot/null.patch.277, snapshot/null.patch.278,
	snapshot/null.patch.279, snapshot/null.patch.280,
	snapshot/null.patch.281, snapshot/null.patch.282,
	snapshot/null.patch.283, snapshot/null.patch.284,
	snapshot/null.patch.285, snapshot/null.patch.286,
	snapshot/null.patch.287, snapshot/null.patch.288,
	snapshot/null.patch.289, snapshot/null.patch.290,
	snapshot/null.patch.291, snapshot/null.patch.292,
	snapshot/null.patch.293, snapshot/null.patch.294,
	snapshot/null.patch.295, snapshot/null.patch.296,
	snapshot/null.patch.297, snapshot/null.patch.298,
	snapshot/null.patch.299, snapshot/null.patch.300,
	snapshot/null.patch.301, snapshot/null.patch.302,
	snapshot/null.patch.303, snapshot/null.patch.304,
	snapshot/null.patch.305, snapshot/null.patch.306,
	snapshot/null.patch.307, snapshot/null.patch.308,
	snapshot/null.patch.309, snapshot/null.patch.310,
	snapshot/null.patch.311, snapshot/null.patch.312,
	snapshot/null.patch.313, snapshot/null.patch.314,
	snapshot/null.patch.315, snapshot/null.patch.316,
	snapshot/null.patch.317, snapshot/null.patch.318,
	snapshot/null.patch.319, snapshot/null.patch.320,
	snapshot/null.patch.321, snapshot/null.patch.322,
	snapshot/null.patch.323, snapshot/null.patch.324,
	snapshot/null.patch.325, snapshot/null.patch.326,
	snapshot/null.patch.327, snapshot/null.patch.328,
	snapshot/null.patch.329, snapshot/null.patch.330,
	snapshot/null.patch.331, snapshot/null.patch.332,
	snapshot/null.patch.333, snapshot/null.patch.334,
	snapshot/null.patch.335, snapshot/null.patch.336,
	snapshot/null.patch.337, snapshot/null.patch.338,
	snapshot/null.patch.339, snapshot/null.patch.340,
	snapshot/null.patch.341, snapshot/null.patch.342,
	snapshot/null.patch.343, snapshot/null.patch.344,
	snapshot/null.patch.345, snapshot/null.patch.346,
	snapshot/null.patch.347, snapshot/null.patch.348,
	snapshot/null.patch.349, snapshot/null.patch.350,
	snapshot/null.patch.351, snapshot/null.patch.352,
	snapshot/null.patch.353, snapshot/null.patch.354,
	snapshot/null.patch.355, snapshot/null.patch.356,
	snapshot/null.patch.357, snapshot/null.patch.358,
	snapshot/null.patch.359, snapshot/null.patch.360,
	snapshot/null.patch.361, snapshot/null.patch.362,
	snapshot/null.patch.363, snapshot/null.patch.364,
	snapshot/null.patch.365, snapshot/null.patch.366,
	snapshot/null.patch.367, snapshot/null.patch.368,
	snapshot/null.patch.369, snapshot/null.patch.370,
	snapshot/null.patch.371, snapshot/null.patch.372,
	snapshot/null.patch.373, snapshot/null.patch.374,
	snapshot/null.patch.375, snapshot/null.patch.376,
	snapshot/null.patch.377, snapshot/null.patch.378,
	snapshot/null.patch.379, snapshot/null.patch.380,
	snapshot/null.patch.381, snapshot/null.patch.382,
	snapshot/null.patch.383, snapshot/null.patch.384,
	snapshot/null.patch.385, snapshot/null.patch.386,
	snapshot/null.patch.387, snapshot/null.patch.388,
	snapshot/null.patch.389, snapshot/null.patch.390,
	snapshot/null.patch.391, snapshot/null.patch.392,
	snapshot/null.patch.393, snapshot/null.patch.394,
	snapshot/null.patch.395, snapshot/null.patch.396,
	snapshot/null.patch.397, snapshot/null.patch.398,
	snapshot/null.patch.399, snapshot/null.patch.400,
	snapshot/null.patch.401, snapshot/null.patch.402,
	snapshot/null.patch.403, snapshot/null.patch.404,
	snapshot/null.patch.405, snapshot/null.patch.406,
	snapshot/null.patch.407, snapshot/null.patch.408,
	snapshot/null.patch.409, snapshot/null.patch.410,
	snapshot/null.patch.411, snapshot/null.patch.412,
	snapshot/null.patch.413, snapshot/null.patch.414,
	snapshot/null.patch.415, snapshot/null.patch.416,
	snapshot/null.patch.417, snapshot/null.patch.418,
	snapshot/null.patch.419, snapshot/null.patch.420,
	snapshot/null.patch.421, snapshot/null.patch.422,
	snapshot/null.patch.423, snapshot/null.patch.424,
	snapshot/null.patch.425, snapshot/null.patch.426,
	snapshot/null.patch.427, snapshot/null.patch.428,
	snapshot/null.patch.429, snapshot/null.patch.430,
	snapshot/null.patch.431, snapshot/null.patch.432,
	snapshot/null.patch.433, snapshot/null.patch.434,
	snapshot/null.patch.435, snapshot/null.patch.436,
	snapshot/null.patch.437, snapshot/null.patch.438,
	snapshot/null.patch.439, snapshot/null.patch.440,
	snapshot/null.patch.441, snapshot/null.patch.442,
	snapshot/null.patch.443, snapshot/null.patch.444,
	snapshot/null.patch.445, snapshot/null.patch.446,
	snapshot/null.patch.447, snapshot/null.patch.448,
	snapshot/null.patch.449, snapshot/null.patch.450,
	snapshot/null.patch.451, snapshot/null.patch.452,
	snapshot/null.patch.453, snapshot/null.patch.454,
	snapshot/null.patch.455, snapshot/null.patch.456,
	snapshot/null.patch.457, snapshot/null.patch.458,
	snapshot/null.patch.459, snapshot/null.patch.460,
	snapshot/null.patch.461, snapshot/null.patch.462,
	snapshot/null.patch.463, snapshot/null.patch.464,
	snapshot/null.patch.465, snapshot/null.patch.466,
	snapshot/null.patch.467, snapshot/null.patch.468,
	snapshot/null.patch.469, snapshot/null.patch.470,
	snapshot/null.patch.471, snapshot/null.patch.472,
	snapshot/null.patch.473, snapshot/null.patch.474,
	snapshot/null.patch.475, snapshot/null.patch.476,
	snapshot/null.patch.477, snapshot/null.patch.478,
	snapshot/null.patch.479, snapshot/null.patch.480,
	snapshot/null.patch.481, snapshot/null.patch.482,
	snapshot/null.patch.483, snapshot/null.patch.484,
	snapshot/null.patch.485, snapshot/null.patch.486,
	snapshot/null.patch.487, snapshot/null.patch.488,
	snapshot/null.patch.489, snapshot/null.patch.490,
	snapshot/null.patch.491, snapshot/null.patch.492,
	snapshot/null.patch.493, snapshot/null.patch.494,
	snapshot/null.patch.495, snapshot/null.patch.496,
	snapshot/null.patch.497, snapshot/null.patch.498,
	snapshot/null.patch.499, snapshot/null.patch.500,
	snapshot/null.patch.501, snapshot/null.patch.502,
	snapshot/null.patch.503, snapshot/null.patch.504,
	snapshot/null.patch.505, snapshot/null.patch.506,
	snapshot/null.patch.507, snapshot/null.patch.508,
	snapshot/null.patch.509, snapshot/null.patch.510,
	snapshot/null.patch.511, snapshot/null.patch.512,
	snapshot/null.patch.513, snapshot/null.patch.514,
	snapshot/null.patch.515, snapshot/null.patch.516,
	snapshot/null.patch.517, snapshot/null.patch.518,
	snapshot/null.patch.519, snapshot/null.patch.520,
	snapshot/null.patch.521, snapshot/null.patch.522,
	snapshot/null.patch.523, snapshot/null.patch.524,
	snapshot/null.patch.525, snapshot/null.patch.526,
	snapshot/null.patch.527, snapshot/null.patch.528,
	snapshot/null.patch.529, snapshot/null.patch.530,
	snapshot/null.patch.531, snapshot/null.patch.532,
	snapshot/null.patch.533, snapshot/null.patch.534,
	snapshot/null.patch.535, snapshot/null.patch.536,
	snapshot/null.patch.537, snapshot/null.patch.538,
	snapshot/null.patch.539, snapshot/null.patch.540,
	snapshot/null.patch.541, snapshot/null.patch.542,
	snapshot/null.patch.543, snapshot/null.patch.544,
	snapshot/null.patch.545, snapshot/null.patch.546,
	snapshot/null.patch.547, snapshot/null.patch.548,
	snapshot/null.patch.549, snapshot/null.patch.550,
	snapshot/null.patch.551, snapshot/null.patch.552,
	snapshot/null.patch.553, snapshot/null.patch.554,
	snapshot/null.patch.555, snapshot/null.patch.556,
	snapshot/null.patch.557, snapshot/null.patch.558,
	snapshot/null.patch.559, snapshot/null.patch.560,
	snapshot/null.patch.561, snapshot/null.patch.562,
	snapshot/null.patch.563, snapshot/null.patch.564,
	snapshot/null.patch.565, snapshot/null.patch.566,
	snapshot/null.patch.567, snapshot/null.patch.568,
	snapshot/null.patch.569, snapshot/null.patch.570,
	snapshot/null.patch.571, snapshot/null.patch.572,
	snapshot/null.patch.573, snapshot/null.patch.574,
	snapshot/null.patch.575, snapshot/null.patch.576,
	snapshot/null.patch.577, snapshot/null.patch.578,
	snapshot/null.patch.579, snapshot/null.patch.580,
	snapshot/null.patch.581, snapshot/null.patch.582,
	snapshot/null.patch.583, snapshot/null.patch.584,
	snapshot/null.patch.585, snapshot/null.patch.586,
	snapshot/null.patch.587, snapshot/null.patch.588,
	snapshot/null.patch.589, snapshot/null.patch.590,
	snapshot/null.patch.591, snapshot/null.patch.592,
	snapshot/null.patch.593, snapshot/null.patch.594,
	snapshot/null.patch.595, snapshot/null.patch.596,
	snapshot/null.patch.597, snapshot/null.patch.598,
	snapshot/null.patch.599, snapshot/null.patch.600,
	snapshot/null.patch.601, snapshot/null.patch.602,
	snapshot/null.patch.603, snapshot/null.patch.604,
	snapshot/null.patch.605, snapshot/null.patch.606,
	snapshot/null.patch.607, snapshot/null.patch.608,
	snapshot/null.patch.609, snapshot/null.patch.610,
	snapshot/null.patch.611, snapshot/null.patch.612,
	snapshot/null.patch.613, snapshot/null.patch.614,
	snapshot/null.patch.615, snapshot/null.patch.616,
	snapshot/null.patch.617, snapshot/null.patch.618,
	snapshot/null.patch.619, snapshot/null.patch.620,
	snapshot/null.patch.621, snapshot/null.patch.622,
	snapshot/null.patch.623, snapshot/null.patch.624,
	snapshot/null.patch.625, snapshot/null.patch.626,
	snapshot/null.patch.627, snapshot/null.patch.628,
	snapshot/null.patch.629, snapshot/null.patch.630,
	snapshot/null.patch.631, snapshot/null.patch.632,
	snapshot/null.patch.633, snapshot/null.patch.634,
	snapshot/null.patch.635, snapshot/null.patch.636,
	snapshot/null.patch.637, snapshot/null.patch.638,
	snapshot/null.patch.639, snapshot/null.patch.640,
	snapshot/null.patch.641, snapshot/null.patch.642,
	snapshot/null.patch.643, snapshot/null.patch.644,
	snapshot/null.patch.645, snapshot/null.patch.646,
	snapshot/null.patch.647, snapshot/null.patch.648,
	snapshot/null.patch.649, snapshot/null.patch.650,
	snapshot/null.patch.651, snapshot/null.patch.652,
	snapshot/null.patch.653, snapshot/null.patch.654,
	snapshot/null.patch.655, snapshot/null.patch.656,
	snapshot/null.patch.657, snapshot/null.patch.658,
	snapshot/null.patch.659, snapshot/null.patch.660,
	snapshot/null.patch.661, snapshot/null.patch.662,
	snapshot/null.patch.663, snapshot/null.patch.664,
	snapshot/null.patch.665, snapshot/null.patch.666,
	snapshot/null.patch.667, snapshot/null.patch.668,
	snapshot/null.patch.669, snapshot/null.patch.670,
	snapshot/null.patch.671, snapshot/null.patch.672,
	snapshot/null.patch.673, snapshot/null.patch.674,
	snapshot/null.patch.675, snapshot/null.patch.676,
	snapshot/null.patch.677, snapshot/null.patch.678,
	snapshot/null.patch.679, snapshot/null.patch.680,
	snapshot/null.patch.681, snapshot/null.patch.682,
	snapshot/null.patch.683, snapshot/null.patch.684,
	snapshot/null.patch.685, snapshot/null.patch.686,
	snapshot/null.patch.687, snapshot/null.patch.688,
	snapshot/null.patch.689, snapshot/null.patch.690,
	snapshot/null.patch.691, snapshot/null.patch.692,
	snapshot/null.patch.693, snapshot/null.patch.694,
	snapshot/null.patch.695, snapshot/null.patch.696,
	snapshot/null.patch.697, snapshot/null.patch.698,
	snapshot/null.patch.699, snapshot/null.patch.700,
	snapshot/null.patch.701, snapshot/null.patch.702,
	snapshot/null.patch.703, snapshot/null.patch.704,
	snapshot/null.patch.705, snapshot/null.patch.706,
	snapshot/null.patch.707, snapshot/null.patch.708,
	snapshot/null.patch.709, snapshot/null.patch.710,
	snapshot/null.patch.711, snapshot/null.patch.712,
	snapshot/null.patch.713, snapshot/null.patch.714,
	snapshot/null.patch.715, snapshot/null.patch.716,
	snapshot/null.patch.717, snapshot/null.patch.718,
	snapshot/null.patch.719, snapshot/null.patch.720,
	snapshot/null.patch.721, snapshot/null.patch.722,
	snapshot/null.patch.723, snapshot/null.patch.724,
	snapshot/null.patch.725, snapshot/null.patch.726,
	snapshot/null.patch.727, snapshot/null.patch.728,
	snapshot/null.patch.729, snapshot/null.patch.730,
	snapshot/null.patch.731, snapshot/null.patch.732,
	snapshot/null.patch.733, snapshot/null.patch.734,
	snapshot/null.patch.735, snapshot/null.patch.736,
	snapshot/null.patch.737, snapshot/null.patch.738,
	snapshot/null.patch.739, snapshot/null.patch.740,
	snapshot/null.patch.741, snapshot/null.patch.742,
	snapshot/null.patch.743, snapshot/null.patch.744,
	snapshot/null.patch.745, snapshot/null.patch.746,
	snapshot/null.patch.747, snapshot/null.patch.748,
	snapshot/null.patch.749, snapshot/null.patch.750,
	snapshot/null.patch.751, snapshot/null.patch.752,
	snapshot/null.patch.753, snapshot/null.patch.754,
	snapshot/null.patch.755, snapshot/null.patch.756,
	snapshot/null.patch.757, snapshot/null.patch.758,
	snapshot/null.patch.759, snapshot/null.patch.760,
	snapshot/null.patch.761, snapshot/null.patch.762,
	snapshot/null.patch.763, snapshot/null.patch.764,
	snapshot/null.patch.765, snapshot/null.patch.766,
	snapshot/null.patch.767, snapshot/null.patch.768,
	snapshot/null.patch.769, snapshot/null.patch.770,
	snapshot/null.patch.771, snapshot/null.patch.772,
	snapshot/null.patch.773, snapshot/null.patch.774,
	snapshot/null.patch.775, snapshot/null.patch.776,
	snapshot/null.patch.777, snapshot/null.patch.778,
	snapshot/null.patch.779, snapshot/null.patch.780,
	snapshot/null.patch.781, snapshot/null.patch.782,
	snapshot/null.patch.783, snapshot/null.patch.784,
	snapshot/null.patch.785, snapshot/null.patch.786,
	snapshot/null.patch.787, snapshot/null.patch.788,
	snapshot/null.patch.789, snapshot/null.patch.790,
	snapshot/null.patch.791, snapshot/null.patch.792,
	snapshot/null.patch.793, snapshot/null.patch.794,
	snapshot/null.patch.795, snapshot/null.patch.796,
	snapshot/null.patch.797, snapshot/null.patch.798,
	snapshot/null.patch.799, snapshot/null.patch.800,
	snapshot/null.patch.801, snapshot/null.patch.802,
	snapshot/null.patch.803, snapshot/null.patch.804,
	snapshot/null.patch.805, snapshot/null.patch.806,
	snapshot/null.patch.807, snapshot/null.patch.808,
	snapshot/null.patch.809, snapshot/null.patch.810,
	snapshot/null.patch.811: move my snapshot folder elsewhere

2017-04-15  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mipi_dsi.c, drivers/video/msm/msm_fb.c: NOOOOO
	fb blank/unblank --> TOO soon

2017-04-15  robcore <robpatershuk@gmail.com>

	* kernel/power/powersuspend.c: update version again

2017-04-15  robcore <robpatershuk@gmail.com>

	* kernel/power/powersuspend.c: powersuspend - move canceling the
	previous states work to the individual suspend/resume queues

2017-04-15  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mipi_dsi.c, drivers/video/msm/msm_fb.c: 
	experiment - use msm_fb blank/unblank function directly for our
	suspend/resume hooks

2017-04-15  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/power/powersuspend.c,
	kernel/sched/core.c, pos.sh: REVERT back to to P321

2017-04-15  robcore <robpatershuk@gmail.com>

	* kernel/power/powersuspend.c: powersuspend 2.3 - make state-change
	requests lock safe.

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: remove the debugging again

2017-04-15  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: testing less mem barriers again

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, include/linux/preempt.h,
	include/linux/sched.h, kernel/sched/core.c,
	kernel/sched/cpudeadline.c, kernel/sched/idle.c: WHY cant we have
	preemption tricks? must investigate

2017-04-15  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h: i like speed

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/sched/cpudeadline.c: 
	something tells me cpudeadline should be setting all the cpus as
	free_cpus on init...maybe?

2017-04-15  robcore <robpatershuk@gmail.com>

	* include/linux/preempt.h, kernel/sched/core.c, kernel/sched/idle.c: 
	fixed up some of the preempt merge, and am testing two less barrier
	removals as i think it may be overkill. potentially different
	commits from different variations of the function.

2017-04-15  robcore <robpatershuk@gmail.com>

	* include/linux/preempt.h, include/linux/sched.h,
	kernel/sched/core.c, kernel/sched/idle.c: FINALLY found a version of
	set_preempt_need_resched that isnt just a void{} operation

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: atomic sleep debugging for me

2017-04-15  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h: using more conservative vals for load calc

2017-04-15  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: reverted back to FSHIFT

2017-04-15  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/stop_task.c: 
	build time

2017-04-15  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: hopefully this is better sched hacking than
	last night

2017-04-15  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c, kernel/sched/stop_task.c: a little bit of
	hackin

2017-04-15  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c: load avg, use the classic/S7 FSHIFT<< vals
	(division is bad) to test

2017-04-15  robcore <robpatershuk@gmail.com>

	* kernel/locking/lockdep.c: just spaces

2017-04-15  robcore <robpatershuk@gmail.com>

	* kernel/sched/Makefile, kernel/sched/core.c: k now to test
	loadavg.c

2017-04-15  robcore <robpatershuk@gmail.com>

	* include/linux/machinex_defines.h: flashing now, but was probably a
	bad idea

2017-04-15  robcore <robpatershuk@gmail.com>

	* include/linux/machinex_defines.h: is this supposed to be minus 1?

2017-04-15  robcore <robpatershuk@gmail.com>

	* drivers/base/Kconfig, drivers/base/base.h, drivers/base/dd.c,
	drivers/base/dma-contiguous.c, drivers/base/power/opp.c,
	include/linux/device.h, kernel/sched/Makefile, kernel/sched/core.c,
	kernel/sched/loadavg.c: reverted sched, and most of the driver data
	stuff. keeping cpuidle change as a test subject

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpuidle.c: maybe this is the proper way to do
	it...

2017-04-15  robcore <robpatershuk@gmail.com>

	* kernel/sched/Makefile, kernel/sched/loadavg.c: changing that to
	online cpus was probably a bad idea

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpuidle.c: i think that should be 0, and we
	might as well call struct cpuidle_driver "*drv"

2017-04-15  robcore <robpatershuk@gmail.com>

	* kernel/sched/Makefile, kernel/sched/loadavg.c: experiment - try
	using for each online cpu for avg_cpu_nr_running

2017-04-15  robcore <robpatershuk@gmail.com>

	* kernel/sched/Makefile, kernel/sched/core.c: HOLY SHIT HOW DID I
	NOT NOTICE THIS??? EVERYTHING has been doubled from loadavg in the
	sched core, INCLUDING an important update to load calculation. FUCK

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpuidle.c: set it to null? 0? not sure. NULL for
	now to match the other structs in this function

2017-04-15  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpuidle.c: Whoo! fixed state_count no longer
	being a part of driver data while im at it!

2017-04-15  robcore <robpatershuk@gmail.com>

	* drivers/base/Kconfig: cma-increase-CMA_ALIGNMENT-upper-limit-to-12
	(16mb on 32-bit systems).

2017-04-15  robcore <robpatershuk@gmail.com>

	* drivers/base/dma-contiguous.c: CMA-correct-unlock-target.

2017-04-15  robcore <robpatershuk@gmail.com>

	* drivers/base/dd.c, include/linux/device.h: 
	-driver-core-Inline-dev_set-get_drvdata

2017-04-15  robcore <robpatershuk@gmail.com>

	* drivers/base/dd.c: 
	driver-core-dev_get_drvdata-Don-t-check-for-NULL-dev

2017-04-15  robcore <robpatershuk@gmail.com>

	* drivers/base/dd.c, include/linux/device.h: 
	driver-core-dev_set_drvdata-returns-void.

2017-04-15  robcore <robpatershuk@gmail.com>

	* drivers/base/base.h, drivers/base/dd.c, include/linux/device.h: 
	driver core: Move driver_data back to struct device

2017-04-15  robcore <robpatershuk@gmail.com>

	* drivers/base/power/opp.c: PM-OPP-discard-duplicate-OPPs.

2017-04-15  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-mmio.c: 
	regmap-mmio-Fix-regmap_mmio_write-for-uneven-counts

2017-04-15  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: 
	regmap-irq-Fix-possible-ZERO_SIZE_PTR-pointer-deref

2017-04-15  robcore <robpatershuk@gmail.com>

	* Documentation/driver-model/devres.txt, drivers/base/devres.c,
	include/linux/device.h: devres-Add-devm_get_free_pages-API.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, drivers/base/power/wakeup.c: backported
	some fixes for pm main from mainline, and removed a check for ws in
	a call to wakeup_source_deactivate as it already checks for it

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: some pm fixin

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: dpm suspend - we dont need a million if
	else if else for the same fucking condition

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware class - the fallback is
	our default, so just use dev_dbg for the messages

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c, drivers/base/power/main.c,
	include/linux/pm.h, include/linux/pm_runtime.h: PM / sleep:
	Mechanism to avoid resuming runtime-suspended devices unnecessarily

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c, drivers/base/power/main.c: fix a
	superfluous runtime enable

2017-04-14  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/base/regmap/regmap-i2c.c: 
	regmap - needs err.h

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/dma-contiguous.c: cma: Remove potential deadlock
	situation

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/opp.c: PM-OPP-Remove-cpufreq-wrapper-dependency

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/dma-buf.c: dox

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Add-missing-initialization-of-this_page

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Fix-possible-ZERO_SIZE_PTR-pointer-deref

2017-04-14  robcore <robpatershuk@gmail.com>

	* Documentation/driver-model/devres.txt, drivers/base/devres.c,
	include/linux/device.h: devres-introduce-API-devm_kmemdup.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/Kconfig, include/linux/kobject.h, kernel/ksysfs.c,
	kernel/sysctl.c, lib/kobject_uevent.c: 
	kobject-Make-support-for-uevent_helper-optional

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-i2c.c: regmap-i2c-fallback-to-SMBus

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c, include/linux/regmap.h: 
	regmap-add-reg_read-reg_write-callbacks-to-regmap

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache-rbtree.c: 
	regmap-rbtree-improve-64bits-memory-alignment

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-mmio.c: 
	regmap-mmio-Fix-the-bug-of-offset-value-parsing

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-implement-LE-formatting-parsing-for-16-32-bit

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-adds-missing-braces-in-regmap_init

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-mmio.c: 
	regmap-mmio-Add-regmap_mmio_regbits_check

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-mmio.c: 
	regmap-mmio-Add-support-for-1-2-8-bytes-wide-reg

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-mmio.c: 
	regmap-mmio-add-regmap_mmio_-regsize-count-_check

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache.c: 
	regmap-cache-Don-t-attempt-to-sync-non-writeable-reg.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache.c: 
	regmap-cache-Step-by-stride-in-default-sync

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Fix-possible-sleep-in-atomic-in-regmap_bulk_write

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Ensure-regmap_register_patch-is-compatible

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: 
	regmap-irq-Set-data-pointer-only-on-regmap_add_irq

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: regmap: Implementation for
	regmap_multi_reg_write

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/node.c: 
	-numa-fix-NULL-pointer-access-and-memory-leak-in-unreg

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c, include/linux/regmap.h: 
	regmap-add-regmap_parse_val-api

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/domain.c: 
	PM-domains-Turn-latency-warning-into-debug-message

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: PM / hibernate: Fix restore hang in
	freeze_processes()

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Base-regmap_register_patch-on-_regmap_multi

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c, include/linux/regmap.h: 
	regmap-Add-bypassed-version-of-regmap_multi_reg_write

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c, include/linux/regmap.h: 
	regmap-Mark-reg_defaults-in-regmap_multi_reg_write

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: regmap-fix-coccinelle-warnings.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache.c, drivers/base/regmap/regmap.c: 
	regmap-Check-stride-of-register-patch-as-we-register.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: regmap-Clean-up-_regmap_update_bits

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c:  PM / sleep: Asynchronous threads for suspend_late

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: PM / sleep: Asynchronous threads for
	suspend_noirq

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: fix a missing bracket

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: PM / sleep: Asynchronous threads for
	resume_early

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: fixup my async resume_noirq

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: REVERT - async threads for
	resume_noirq, i have it...ish

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: some fixup in async noirq

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: PM / sleep: Asynchronous threads for
	resume_noirq

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/linux/pm.h: PM / sleep: Two
	flags for async suspend_noirq and suspend_late

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/component.c: 
	drivers-base-fix-devres-handling-for-master-device

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/Makefile, drivers/base/component.c,
	include/linux/component.h: 
	drivers-base-provide-an-infrastructure-for-component;

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/serial/bus.c: usb serial bus - convert to dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/video/backlight/lcd.c: lcd dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/scsi/sd.c: scsi - sd - convert to use dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/ssb/main.c: ssb-convert-bus-code-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/rtc/rtc-sysfs.c: -rtc-convert-class-code-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/regulator/core.c: 
	regulator-core-convert-class-code-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/uio/uio.c: UIO-convert-class-code-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/net/phy/mdio_bus.c: 
	mdio_bus-convert-bus-code-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* kernel/events/core.c: pmu_bus-convert-bus-code-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/dma/dmaengine.c, drivers/video/backlight/backlight.c: 
	dma-convert-dma_devclass-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/media/video/v4l2-dev.c: v4l2 - convert to dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/video/output.c: video: output: convert class code to use
	dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/leds/led-class.c: leds - convert to use dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/leds/led-class.c: 
	leds-convert-class-code-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/bus.c, drivers/mmc/core/sdio_bus.c: 
	MMC-convert-bus-code-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* net/wireless/sysfs.c: 
	net-wireless-convert-class-code-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* net/core/net-sysfs.c: little fixup in net dev

2017-04-14  robcore <robpatershuk@gmail.com>

	* net/core/net-sysfs.c: net: core: convert class code to use
	dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/isdn/mISDN/core.c: 
	ISDN-convert-class-code-to-use-dev_groups.

2017-04-14  robcore <robpatershuk@gmail.com>

	* net/rfkill/core.c: net-rfkill-convert-class-code-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* net/ieee802154/wpan-class.c: 
	net-ieee802154-convert-class-code-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* Documentation/memory-barriers.txt, drivers/devfreq/devfreq.c,
	drivers/hid/hid-roccat-arvo.c, drivers/hid/hid-roccat-kone.c: more
	conversions

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/hid/hid-roccat-arvo.c, drivers/hid/hid-roccat-isku.c,
	drivers/hid/hid-roccat-kone.c, drivers/hid/hid-roccat-koneplus.c,
	drivers/hid/hid-roccat-kovaplus.c, drivers/hid/hid-roccat-pyra.c: 
	HID-roccat-convert-class-code-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: will fix ROCCAT - but for now, i
	doubt anyone is using one of their keyboards with this phone

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/devtmpfs.c, fs/cachefiles/namei.c,
	fs/ecryptfs/inode.c, fs/namei.c, fs/nfsd/vfs.c, include/linux/fs.h,
	ipc/mqueue.c: REVERT - locks-break-delegations-on-unlink

2017-04-14  robcore <robpatershuk@gmail.com>

	* mm/backing-dev.c: mm/backing-dev.c: check user buffer length
	before copying data to the related user buffer

2017-04-14  robcore <robpatershuk@gmail.com>

	* mm/backing-dev.c: backing-dev-convert-class-code-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* mm/backing-dev.c: revert that will find the proper fix

2017-04-14  robcore <robpatershuk@gmail.com>

	* mm/backing-dev.c: hmm

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/devtmpfs.c, fs/attr.c, fs/cachefiles/interface.c,
	fs/ecryptfs/inode.c, fs/hpfs/namei.c, fs/inode.c, fs/nfsd/vfs.c,
	fs/open.c, fs/utimes.c, include/linux/fs.h: REVERT -
	locks-break-delegations-on-any-attribute-mod

2017-04-14  robcore <robpatershuk@gmail.com>

	* include/linux/fs.h: REVERT - locks - break delegations on any attr
	mods

2017-04-14  robcore <robpatershuk@gmail.com>

	* include/linux/fs.h: hmmm maybe i should revert this

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: some reg fixes

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/platform.c: ditch some more acpi bs

2017-04-14  robcore <robpatershuk@gmail.com>

	* include/linux/sysfs.h: sysfs-create-__ATTR_WO

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c, include/linux/regmap.h: 
	regmap-Separate-regmap-dev-initialization.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-spmi.c, include/linux/regmap.h: 
	-regmap-spmi-support-base-and-extended-register-space

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: 
	driver-core-unexport-static-function-create_syslog_h.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: rob hack, use system_wq, not
	intended power_efficient workqueue for unloading firmware

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-give-a-protection-when-map-page-failed

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/dma-buf.c, include/linux/dma-buf.h: 
	dma-buf-update-debugfs-output.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Check-readable-regs-in-_regmap_read.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/devres.c, include/linux/device.h: 
	devres-introduce-API-devm_kstrdup;

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/dma-buf.c: dma buf - ignore using IS_ERR_OR_NULL

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: 
	regmap-irq-Remove-domain-on-exit.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-registers-access-for-single-register

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache.c: 
	regmap-cache-Handle-stride-1-in-sync_block_raw_flush;

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware_class-Fix-the-file-size-check

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/bus.c: 
	driver-core-Fix-use-after-free-triggered-by-bus_unregister

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-loader-Add-sparse-annotation.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/class.c, drivers/base/core.c,
	drivers/base/platform.c, drivers/net/bonding/bond_sysfs.c,
	fs/sysfs/file.c, fs/sysfs/group.c, fs/sysfs/symlink.c,
	fs/sysfs/sysfs.h, include/linux/device.h,
	include/linux/netdevice.h, include/linux/sysfs.h,
	net/core/net-sysfs.c: REVERT - namespace changes

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: restore previous hsic driver,
	this is not working

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: regmap: Allow regmap_bulk_write() to
	work for "no-bus" regmaps

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/devtmpfs.c: 
	devtmpfs-Calling-delete_path-only-when-necessary

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/Kconfig: dox

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: 
	Driver-core-Fix-device_add_attrs-error-code-path

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: regmap: Allow regmap_bulk_read() to
	work for "no-bus" regmaps

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c, include/linux/regmap.h: regmap:
	irq: Allow using zero value for ack_base

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: driver-core-fix-device_create-error-path

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 

	firmware-Suppress-fallback-warnings-when-CONFIG_FW_LOADER_HELPER-is-not-set

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-Use-bit-flags-instead-of-boolean-combos

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c, include/linux/firmware.h: 
	firmware-Introduce-request_firmware_direct

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-mmio.c: 
	regmap-use-IS_ERR-to-check-clk_get-results

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Fix-ret-would-return-an-uninitialized-value

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-make-sure-we-unlock-on-failure-in-regmap_bulk;

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	-regmap-trivial-comment-fix-copy-n-paste-error

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/devtmpfs.c, fs/attr.c, fs/cachefiles/interface.c,
	fs/ecryptfs/inode.c, fs/hpfs/namei.c, fs/inode.c, fs/nfsd/vfs.c,
	fs/open.c, fs/utimes.c, include/linux/fs.h: locks: break delegations
	on any attribute modification

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/devtmpfs.c, fs/cachefiles/namei.c,
	fs/ecryptfs/inode.c, fs/namei.c, fs/nfsd/vfs.c, include/linux/fs.h,
	ipc/mqueue.c: locks: break delegations on unlink

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/Kconfig, drivers/base/regmap/Makefile,
	drivers/base/regmap/regmap-spmi.c, include/linux/regmap.h: 
	regmap-add-SPMI-support.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/devres.c: 
	devres-restore-zeroing-behavior-of-devres_alloc.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: regmap: debugfs: Fix a boot
	time crash with early regmap init

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: 
	regmap-irq-clear-status-when-disable-irq

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/memory.c: driver-core-Release-device_hotplug_lock

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: 
	drivers-base-core.c-output-device-renaming-messages

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/devres.c, include/linux/device.h: 
	devres-add-kernel-standard-devm_k.alloc-functions

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Only-send-a-single-buffer-for-async-I-O

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-spi.c: 
	regmap-spi-Handle-async-writes-of-only-one-buffer

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c, include/linux/regmap.h: 
	regmap-new-API-regmap_multi_reg_write-definition

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/dma-contiguous.c,
	drivers/net/wireless/ath/ath5k/dma.c, sound/soc/codecs/alc5632.c: 
	dox

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache.c: 
	regmap-Use-async-I-O-during-cache-sync

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Use-async-I-O-for-patch-application

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: some fixup in regmap

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c, include/linux/regmap.h: 
	regmap-Provide-asynchronous-write-and-update-bits-op

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regcache.c,
	drivers/base/regmap/regmap.c: regmap: Simplify the initiation of
	async I/O

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Don-t-generate-gather-writes-for-single-reg

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c: 
	regmap: Cache async work structures

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, include/linux/device.h: 
	driver-core-remove-dev_bin_attrs-from-struct-class

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, include/linux/device.h: 
	driver-core-remove-dev_attrs-from-struct-class.

2017-04-14  robcore <robpatershuk@gmail.com>

	* arch/powerpc/kernel/smp.c, drivers/base/cpu.c,
	include/linux/cpu.h: hotplug, powerpc, x86: Remove
	cpu_hotplug_driver_lock()

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/bus.c, include/linux/device.h: 
	driver-core-remove-struct-bus_type.drv_attrs

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/bus.c, include/linux/device.h: 
	driver-core-remove-struct-bus_type.bus_attrs

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/platform.c, include/linux/platform_device.h: driver
	core: prevent deferred probe with platform_driver_probe

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-Be-a-bit-more-verbose-about-direct-firmware.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, fs/sysfs/symlink.c, include/linux/sysfs.h: 
	sysfs: remove ktype->namespace() invocations

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/class.c, drivers/net/bonding/bond_sysfs.c,
	fs/sysfs/file.c, fs/sysfs/group.c, fs/sysfs/sysfs.h,
	include/linux/device.h, include/linux/netdevice.h,
	include/linux/sysfs.h, net/core/net-sysfs.c: sysfs: make attr
	namespace interface less convoluted

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: regmap-Add-regmap_fields-APIs.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c, include/linux/regmap.h: 
	-regmap-add-regmap_field_update_bits.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/node.c, fs/proc/meminfo.c, mm/huge_memory.c,
	mm/rmap.c: thp-account-anon-transparent-huge-pages-into-NR_ANON.;

2017-04-14  robcore <robpatershuk@gmail.com>

	* Documentation/dma-buf-sharing.txt, drivers/base/dma-buf.c: 
	dma-buf-Expose-buffer-size-to-userspace-v2

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/dma-buf.c: 
	-dma-buf-Check-return-value-of-anon_inode_getfile

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-loader-fix-pending_fw_head-list-corruption

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regcache-rbtree.c,
	drivers/base/regmap/regcache.c: 
	regmap-rbtree-Make-cache_present-bitmap-per-node

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache-rbtree.c: 
	regmap-rbtree-Reduce-number-of-nodes-take-2

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache-rbtree.c: 
	-regmap-rbtree-Simplify-adjacent-node-look-up

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/memory.c: drivers/base/memory.c: introduce help macro
	to_memory_block

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Fix-continued-read-from-registers

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache-rbtree.c: 
	regcache-rbtree-Fix-reg_stride-1

2017-04-14  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/dma-contiguous.h,
	arch/x86/include/asm/dma-contiguous.h,
	drivers/base/dma-contiguous.c, include/linux/device.h,
	include/linux/dma-contiguous.h: some cma shit

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: driver-core-firmware-use-__ATTR_RW

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: driver-core-core-use-DEVICE_ATTR_RO.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/bus.c: -driver-core-bus-use-DRIVER_ATTR_WO

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/platform.c: 
	driver-core-platform-convert-bus-code-to-use-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/bus.c, drivers/base/class.c, drivers/base/core.c,
	drivers/net/ethernet/sun/niu.c, include/linux/sysfs.h: sysfs.h:
	remove attr_name() macro

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/bus.c, drivers/base/core.c, drivers/base/driver.c,
	fs/sysfs/group.c, include/linux/sysfs.h: sysfs: add
	sysfs_create/remove_groups()

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/memory.c, include/linux/memory.h: drivers: base: use
	standard device online/offline for state change

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/memory.c: drivers: base: refactor
	add_memory_section() to add_memory_block()

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/memory.c: 
	drivers-base-remove-improper-get-put-in-add_memory

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/memory.c, include/linux/memory.h: 
	drivers-base-reduce-add_memory_section-for-boot-time.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/memory.c: 
	drivers-base-unshare-add_memory_section-from-hotplug.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/memory.c: drivers-base-use-device-get-put-functions

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/memory.c: 
	drivers-base-move-mutex-lock-out-of-add_memory_section

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache-rbtree.c: 
	regmap-rbtree-Fix-overlapping-rbnodes

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/dma-contiguous.c: drivers / dma-contiguous: Fix
	__init attribute location

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: 
	drivers-base-Fix-sysfs_deprecated_setup-__init-attr

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Allow-multiple-patches-to-be-registered.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/bus.c, include/linux/device.h: 
	driver-core-bus_type-add-bus_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/base.h, drivers/base/bus.c, drivers/base/driver.c,
	include/linux/device.h: driver-core-bus_type-add-drv_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/base.h, drivers/base/bus.c, drivers/base/core.c,
	include/linux/device.h: driver-core-bus_type-add-dev_groups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache.c, drivers/base/regmap/regmap.c: 
	regmap-regcache-allow-read-only-regs-to-be-cached

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h: 
	regmap-fix-regcache_reg_present-for-empty-cache

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: regmap: core: allow a virtual range
	to cover its own data window

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/opp.c: PM-OPP-Export-opp_add.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache.c: 
	regmap-cache-Make-sure-to-sync-the-last-register;

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/trace/events/power.h: PM /
	Sleep: new trace event to print device suspend and resume times

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, drivers/base/memory.c,
	drivers/base/power/sysfs.c, drivers/base/regmap/regmap-debugfs.c: 
	driver-core-replace-strict_strto-with-kstrtoul

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: drivers:base:core: Moved sym export macros to
	respective functions

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c, include/linux/regmap.h: regmap:
	irq: Allow to acknowledge masked interrupts during initialization

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/platform.c: dox

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Provide-__acquires-__releases-annotations

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/devfreq/devfreq.c, drivers/hsi/hsi.c,
	drivers/ide/ide-cd.c, drivers/ide/ide-gd.c,
	drivers/ide/ide-probe.c, drivers/ide/ide-tape.c,
	drivers/infiniband/core/sysfs.c,
	drivers/infiniband/hw/qib/qib_file_ops.c,
	drivers/isdn/mISDN/dsp_pipeline.c, drivers/mtd/mtdcore.c,
	drivers/platform/x86/wmi.c, drivers/scsi/sd.c,
	drivers/staging/android/timed_output.c, drivers/uwb/lc-dev.c,
	drivers/video/backlight/backlight.c, drivers/video/backlight/lcd.c,
	drivers/video/output.c, drivers/xen/xenbus/xenbus_probe.c,
	mm/backing-dev.c, sound/sound_core.c: 
	-drivers-avoid-format-string-in-dev_set_name

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: more fixups in hsi c

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: i was missing the pm qos object
	assignment

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/dma-buf.c: ACTUALLY revert
	0060-dma-buf-Replace-PTR_RET-with-PTR_ERR_OR_ZERO.patch

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: some shit for brains fixing

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: more hsic hacking

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c, drivers/base/power/qos.c: REVERT
	that for a sec while i hunt for the def

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/dma-buf.c: 
	dma-buf-Replace-PTR_RET-with-PTR_ERR_OR_ZERO

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-cache-bail-in-regmap_async_complete-for-bus

2017-04-14  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/dma-contiguous.h, arch/arm/mm/dma-mapping.c,
	drivers/base/Kconfig, drivers/base/Makefile,
	include/linux/dma-contiguous.h, mm/Kconfig: mm/cma: Move dma
	contiguous changes into a seperate config

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-loader-fix-another-compile-warning-with-PM

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-loader-fix-compile-warning-with-PM_SLEEP

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Suppress-cache-for-partial-register

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware loader: fix use-after-free
	by double abort

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/pinctrl.c, drivers/pinctrl/core.c,
	include/linux/pinctrl/consumer.h, include/linux/pinctrl/devinfo.h: 
	drivers-pinctrl-sleep-and-idle-states-in-the-core.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: regmap-Add-regmap_field-APIs

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/dma-buf.c: media-dma-buf-Cocci-spatch-ptr_ret

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-loader-simplify-holding-module-for-request

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c, include/linux/firmware.h: 
	firmware-loader-don-t-export-cache_firmware

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware-loader-fix-compile-warning

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-loader-fix-build-failure-with-CONFIG_FW_LOADER-not-set

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	driver-core-firmware-loader-kill-FW_ACTION_NOHOTPLUG

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	driver-core-firmware-loader-don-t-cache-FW_ACTION_NONE

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: dox

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/platform.c, include/linux/platform_device.h: 
	platform_device-use-a-macro-instead-of-platform_driver

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-move-EXPORT_SYMBOL-annotations.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	-firmware-Avoid-deadlock-of-usermodehelper-lock

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-core-Cache-all-registers-by-default-when-cachable

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache.c: 
	regmap-Implemented-default-cache-sync-operation

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/memory.c, include/linux/memory_hotplug.h,
	mm/memory_hotplug.c: Driver-core-MM-Drop-offline_memory_block

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/memory.c, include/linux/memory.h: 
	Driver-core-memory-Simplify-__memory_block_change

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c: 
	regmap-Make-regmap-mmio-usable-from-atomic-contexts

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache-rbtree.c,
	drivers/base/regmap/regcache.c: 
	regmap-regcache-Fixup-locking-for-custom-lock-cb

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/cpu.c: dox

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: dox

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Fix-return-from-regmap_debugfs

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Don-t-mark-lockdep-as-broken

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache-rbtree.c: 
	regmap-rbtree-Use-range-information-to-allocate-node

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache-rbtree.c: 
	regmap-rbtree-Factor-out-node-allocation;

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c, include/linux/regmap.h: 
	regmap-Make-regmap_check_range_table-a-public-API

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regcache.c,
	include/linux/regmap.h, include/trace/events/regmap.h: 
	-regmap-Add-support-for-discarding-parts-of-the-reg

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/dma-buf.c, include/linux/dma-buf.h: 
	dma-buf-Add-debugfs-support

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-don-t-corrupt-work-buffer-in-_regmap_raw_write

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: regmap-Back-out-work-buffer-fix

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache.c: 
	regmap-cache-Fix-format-specifier-in-dev_dbg.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache.c: 
	regmap-cache-Make-regcache_sync_block_raw-static

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/qos.c: 
	PM-QoS-Avoid-possible-deadlock-related-to-sysfs-access;

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache.c: 
	regmap-cache-Write-consecutive-registers-in-a-single-op

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache.c: 
	regmap-cache-Split-raw-and-non-raw-syncs.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regcache-rbtree.c,
	drivers/base/regmap/regcache.c: regmap-cache-Factor-out-block-sync

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regcache-rbtree.c,
	drivers/base/regmap/regcache.c: 
	regmap-cache-Factor-out-reg_present-support-from-rbt

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: regmap-async-Add-missing-return

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache-rbtree.c: 
	regmap-cache-Use-raw-I-O-to-sync-rbtrees-if-we-can.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c, include/linux/regmap.h: 
	regmap-core-Provide-regmap_can_raw_write-operation

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regcache.c: 
	regmap-cache-Provide-a-get-address-of-value-op

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache-rbtree.c: 
	regmap-Cut-down-on-the-average-of-nodes-in-the-rbtree

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c: 
	regmap-core-Make-raw-write-available-to-regcache.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	-regmap-core-Warn-on-invalid-operation-combinations

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-don-t-corrupt-work-buffer-in-_regmap_raw_write

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache-rbtree.c: 
	regmap-rbtree-Expose-total-memory-consumption

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Initialize-map-debugfs-before-regcache

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Add-a-registers-range-file

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Simplify-calculation-of-c-max_reg.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache.c: 
	regmap-cache-Store-caches-in-native-register-format

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c: 
	regmap-core-Split-out-in-place-value-parsing

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regcache.c: 
	regmap-cache-Use-regcache_get_value

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regcache-lzo.c,
	drivers/base/regmap/regcache-rbtree.c,
	drivers/base/regmap/regcache.c: 
	regmap-cache-Pass-the-map-rather-than-the-word-size

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: that needs to be oneshot (or the
	other needs to be changed, but i think oneshot is for the better
	given its multiple handlers)

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: more fixups

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: dont have those either

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: hack hack hackarooo

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: a little fix for a stupid error

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: some more conservative hsic
	hacks

2017-04-14  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur-gpiomux.c,
	arch/arm/mach-msm/sysmon.c, drivers/usb/host/ehci-msm-hsic.c,
	drivers/usb/host/ehci-msm.c, drivers/usb/host/ehci-msm2.c,
	drivers/usb/host/ehci.h, drivers/usb/host/hbm.c,
	include/linux/usb/msm_hsusb.h: that was fail

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: more fallout

2017-04-14  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur-gpiomux.c,
	arch/arm/mach-msm/sysmon.c, drivers/usb/host/ehci-msm-hsic.c,
	drivers/usb/host/ehci-msm.c, drivers/usb/host/ehci-msm2.c,
	drivers/usb/host/ehci.h, drivers/usb/host/hbm.c,
	include/linux/usb/msm_hsusb.h: some hsic hacking that will most
	likely result in horrendeous failure

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/bus.c: REVERT - staticizing of system_kset, some of
	our tree still (unfortunately) depends on it.  So I will make the
	changes down the road

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/class.c, drivers/base/core.c,
	drivers/gpio/gpiolib.c, drivers/isdn/mISDN/core.c,
	drivers/power/power_supply_core.c, drivers/rtc/interface.c,
	drivers/scsi/hosts.c, drivers/scsi/osd/osd_uld.c,
	drivers/scsi/scsi_transport_iscsi.c, drivers/spi/spi.c,
	drivers/tty/tty_io.c, drivers/uwb/lc-rc.c, include/linux/device.h,
	include/linux/power_supply.h, include/linux/rtc.h,
	init/do_mounts.c, kernel/power/suspend_test.c,
	net/ieee802154/wpan-class.c, net/nfc/core.c: fuck the constify

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/net/phy/mdio_bus.c: deconsify mdiobus

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: fixup more merge errors in
	debugfs

2017-04-14  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	drivers/base/regmap/regmap-debugfs.c: fix a merge derp

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, drivers/base/regmap/regmap.c,
	include/trace/events/regmap.h: REVERT trace events, doubled

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/acpi/Makefile, drivers/acpi/acpi_platform.c,
	drivers/acpi/internal.h, drivers/acpi/scan.c,
	drivers/base/platform.c, include/linux/platform_device.h: REVERT -
	ACPI bs

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, drivers/base/regmap/regmap.c,
	include/trace/events/regmap.h: 
	regmap-async-Add-tracepoints-for-async-I-O

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/dd.c: drivercore: Fix ordering between deferred_probe
	and exiting initcalls

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-mmio.c, include/linux/regmap.h: 
	regmap-mmio-add-register-clock-support.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Factor-out-debugfs_tot_len-calc

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Optimize-seeking-within-blocks-of-reg

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Add-a-max_reg-member-in-struct-regmap.;

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Fix-reading-in-register-field-units.;

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/class.c, drivers/base/core.c,
	drivers/gpio/gpiolib.c, drivers/isdn/mISDN/core.c,
	drivers/net/phy/mdio_bus.c, drivers/power/power_supply_core.c,
	drivers/rtc/interface.c, drivers/scsi/hosts.c,
	drivers/scsi/osd/osd_uld.c, drivers/scsi/scsi_transport_iscsi.c,
	drivers/spi/spi.c, drivers/uwb/lc-rc.c, include/linux/device.h,
	include/linux/power_supply.h, include/linux/rtc.h,
	init/do_mounts.c, kernel/power/suspend_test.c,
	net/ieee802154/wpan-class.c, net/nfc/core.c: driver-core: constify
	data for class_find_device()

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-spi.c: 
	regmap-spi-Handle-allocation-failures-gracefully

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: regmap-Export-regmap_async_complete

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Export-regmap_async_complete_cb.;

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-Ignore-abort-check-when-no-user-helper-is-unused

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-Reduce-ifdef-CONFIG_FW_LOADER_USER_HELPER

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/Kconfig, drivers/base/firmware_class.c: firmware:
	Make user-mode helper optional

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware: Refactoring for splitting
	user-mode helper code

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-spi.c: 
	regmap-spi-Support-asynchronous-I-O-for-SPI.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: regmap-Add-asynchronous-I-O-support

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: regmap-Add-no-bus-option-for-regmap-API

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: dox

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: revert taht

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: drivers-base-Convert-print_symbol-to-pSR

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-make-sure-the-fw-file-size-is-not-0.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Fix-seeking-from-the-cache

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c: 
	regmap-Add-provisions-to-have-user-defined-write-ops

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Make-sure-we-store-the-last-entry

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Ensure-a-correct-return-value

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Discard-the-cache-if-we-fail-to-alloc

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Fix-check-for-block-start-in-cached-string

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Fix-attempts-to-read-nonexistant-reg

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c, include/linux/regmap.h: 
	regmap-irq-Support-wake-IRQ-mask-inversion

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: 
	regmap-irq-Fix-sync-of-wake-statuses-to-hardware

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: regmap: irq: Use a bulk read for
	interrupt status where possible

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/Makefile, drivers/base/regmap/internal.h,
	drivers/base/regmap/regcache-flat.c,
	drivers/base/regmap/regcache.c, include/linux/regmap.h: 
	regmap-flat-Add-flat-cache-type.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: 
	regmap-irq-enable-wake-support-by-default.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/node.c, mm/Kconfig, mm/page_alloc.c: think i did this

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regmap-debugfs.c: regmap: debugfs: Cache offsets
	of valid regions for dump

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Factor-out-initial-seek.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-debugfs-Avoid-overflows-for-very-small-reads.;

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regmap-debugfs.c: regmap: Cache register and
	value sizes for debugfs

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/platform.c: acpi bs

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: regmap: introduce tables for
	readable/writeable/volatile/precious checks

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/acpi/acpi_platform.c, drivers/base/platform.c,
	include/linux/platform_device.h: ACPI / platform: Initialize ACPI
	handles of platform devices in advane

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/acpi/Makefile, drivers/acpi/acpi_platform.c,
	drivers/acpi/internal.h, drivers/acpi/scan.c,
	drivers/base/platform.c: ACPI-Add-support-for-platform-bus-type.

2017-04-14  robcore <robpatershuk@gmail.com>

	* Documentation/firmware_class/README,
	drivers/base/firmware_class.c: 
	firmware-loader-document-firmware-cache-mechanism

2017-04-14  robcore <robpatershuk@gmail.com>

	* Documentation/firmware_class/README,
	drivers/base/firmware_class.c: firmware loader: introduce module
	parameter to customize(v4) fw search path

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware loader: Fix the concurrent
	request_firmware() race for kref_get/put

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware loader: Fix the race
	FW_STATUS_DONE is followed by class_timeout

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/qos.c: revert

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/power/qos.c: fucked it

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c,
	drivers/base/regmap/regmap-debugfs.c: match firmware_class get
	vfs_attr to our updated source in which it is folded into struct
	path

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: fix needless check for non existent
	var

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-core-Report-registers-in-hex-when-we-can-t-cache

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware-use-noinline_for_stack

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Fix-printing-of-size_t-variable.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware loader: sync firmware
	cache by async_synchronize_full_domain

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware loader: let direct loading
	back on firmware_buf

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-loader-fix-one-reqeust_firmware-race

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware loader: cancel uncache
	work before caching firmware

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/Kconfig: 
	regmap-select-REGMAP-if-REGMAP_MMIO-and-REGMAP_IRQ

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: 
	regmap-make-lock-unlock-functions-customizable;

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Split-raw-writes-that-cross-window-boundaries

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Make-return-code-checks-consistent.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Factor-range-lookup-out-of-page-selection

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regmap-debugfs.c, drivers/base/regmap/regmap.c: 
	regmap-Provide-debugfs-read-of-register-ranges

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-debugfs.c: 
	regmap-Factor-out-debugfs-register-read.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: regmap-Allow-ranges-to-be-named

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: regmap-sanity-check-during-range

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c, include/linux/regmap.h: 
	regmap-Rename-n_ranges-to-num_ranges

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-use-kernel_read-to-read-firmware-into-kernel

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware: teach the kernel to load
	firmware files directly from the filesystem

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, include/linux/device.h, lib/dynamic_debug.c,
	net/core/dev.c:  device and dynamic_debug: Use dev_vprintk_emit

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, include/linux/device.h: 
	dev-Add-dev_vprintk_emit-and-dev_printk_emit

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, include/linux/device.h, lib/dynamic_debug.c: 
	dev_dbg/dynamic_debug: Update to use printk_emit, optimize stack

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware-loader-fix-compile-warning

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: 
	regmap-no-need-primary-handler-for-nested-irq

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware loader: let caching
	firmware piggyback on loading firmware

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware loader: fix firmware
	-ENOENT situations

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c, include/linux/regmap.h: regmap:
	irq: Add mask invert flag  register

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: 
	drivers-core-make-structured-logging-play-nice

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: 
	regmap-irq-initialize-all-irqs-to-wake-disabled.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: regmap: set
	MASK_ON_SUSPEND/SKIP_SET_WAKE if no wake_base

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: regmap: irq: Only update mask
	bits when doing initial mask

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: regmap-fix-some-error-messages

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: regmap: Dont lock in
	regmap_reinit_cache()

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/scsi/scsi_wait_scan.c: some setup for scsi async wait
	scans

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-mmio.c: 
	regmap-Fix-incorrect-arguments-to-kzalloc-call.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: reverted

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: doubled a patch

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Fix-work_buf-switching-for-page-update;

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: regmap: Add support for register indirect
	addressing.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: regmap: Move lock out from internal
	function _regmap_update_bits().

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-mmio.c: 
	regmap-mmio-Staticize-regmap_mmio_gen_context.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c, include/linux/regmap.h: yes

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c, include/linux/regmap.h: wait i
	have wake irqs dont i?

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c, include/linux/regmap.h: 
	regmap-Constify-regmap_irq_chip

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Fix-the-size-calculation-for-map-format.buf

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-clean-up-debugfs-if-regmap_init-fails

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-mmio.c: 
	regmap-mmio-request-native-endian-formatting

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c, include/linux/regmap.h: regmap:
	allow busses to request formatting with specific endianness

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: 
	regmap-Fix-typo-in-IRQ-register-striding

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c, include/linux/regmap.h: 
	regmap-add-support-for-non-contiguous-status-to-regmaps

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: regmap: fix possible memory
	corruption in regmap_bulk_read()

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: regmap-Implement-dev_get_regmap

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: driver-core: extend dev_printk() to pass
	structured data

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Devices-using-format_write-don-t-support-bulk

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Cache-single-values-read-from-the-chip;

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/bus.c: 
	drivers-base-bus.c-local-variables-should-not-be-exported

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/devtmpfs.c: dox

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-validate-regmap_raw_read-write-val_len

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: regmap: fix compile errors in
	regmap-irq.c due to stride changes

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regcache-lzo.c,
	drivers/base/regmap/regcache-rbtree.c,
	drivers/base/regmap/regcache.c,
	drivers/base/regmap/regmap-debugfs.c,
	drivers/base/regmap/regmap-irq.c,
	drivers/base/regmap/regmap-mmio.c, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: regmap-implement-register-striding

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h: regmap: fix compilation when
	!CONFIG_DEBUG_FS

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regmap-debugfs.c, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: regmap-allow-regmap-instances-to-be-named.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-validate-regmap_raw_read-write-val_len.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-mmio.c: 
	regmap-mmio-remove-some-error-checks-now-in-the-core

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-mmio.c: 
	regmap-mmio-convert-some-error-returns-to-BUG.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/Kconfig, drivers/base/regmap/Makefile,
	drivers/base/regmap/regmap-mmio.c, include/linux/regmap.h: 
	regmap-add-MMIO-bus-support

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regcache-rbtree.c,
	drivers/base/regmap/regcache.c, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: 
	regmap-introduce-fast_io-busses-and-use-a-spinlock

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap-i2c.c,
	drivers/base/regmap/regmap-spi.c, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: regmap: introduce explicit bus_context for
	bus callbacks

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c: 
	regmap-Use-pad_bits-and-reg_bits

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/dd.c, drivers/scsi/scsi_scan.c,
	include/scsi/scsi_scan.h: REVERT -
	SCSI-cleanup-usages-of-scsi_complete_async_scans;

2017-04-14  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: trying out gact probability

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: dox

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: dox

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-loader-cache-devices-firmware-during-suspend

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-loader-use-small-timeout-for-cache-device

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-introduce-device_cache-uncache_fw_images

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-loader-store-firmware-name-into-devres-list

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: dox

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware-loader-fix-device-lifetime

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c, include/linux/firmware.h: 
	firmware-loader-introduce-cache_firmware-and-uncache

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c, include/linux/firmware.h: 
	firmware-loader-always-let-firmware_buf-own-the-page

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: firmware loader: introduce
	firmware_buf

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-loader-fix-creation-failure-of-fw-loader

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-loader-remove-unnecessary-wmb

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-loader-fix-races-during-loading-firmware

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: 
	firmware-loader-simplify-pages-ownership-transfer.

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/dd.c, drivers/scsi/scsi_scan.c,
	include/scsi/scsi_scan.h: [SCSI] cleanup usages of
	scsi_complete_async_scans

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/base/firmware_class.c: fw - Use kobj_to_dev

2017-04-14  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: disable my highpri workqueue
	in gpio keys for now

2017-04-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/Kconfig, arch/arm/mach-msm/Makefile,
	arch/arm/mach-msm/board-jf_eur.c,
	arch/arm/mach-msm/machinex_wakeup_keys.c,
	drivers/input/keyboard/gpio_keys.c, include/linux/gpio_keys.h: that
	was pointless. there are so many ways to do this from within the
	android environment itself, that i am better off just writing to the
	existening interface from synapse

2017-04-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/machinex_wakeup_keys.c: fixed up my shitty
	coding

2017-04-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c,
	drivers/input/keyboard/gpio_keys.c, include/linux/gpio_keys.h: okay,
	now lets see if this just breaks alternative key wakeup altogether
	;)

2017-04-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c, include/linux/gpio_keys.h: NICE
	- had to alter the header as well, but got the board file building.
	now to check out what effect this may have on the input driver.

2017-04-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c,
	include/linux/machinex_wakeup_keys.h: to be continued

2017-04-13  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, arch/arm/mach-msm/board-jf_eur.c: 
	fixed a derp in the platform files and added my config entry to
	config file

2017-04-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/Kconfig, arch/arm/mach-msm/Makefile,
	arch/arm/mach-msm/board-jf_eur.c,
	arch/arm/mach-msm/machinex_wakeup_keys.c,
	drivers/input/keyboard/gpio_keys.c, drivers/video/msm/mipi_dsi.c,
	include/linux/machinex_wakeup_keys.h: machinex_wakeup_key - a simple
	module to allow the in-kernel wakeup status of gpio keys to be
	modified at runtime.

2017-04-13  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: updated config to reflect moved
	driver and Kconfig positions

2017-04-13  robcore <robpatershuk@gmail.com>

	* kernel/power/powersuspend.c, kernel/power/state_notifier.c: 
	state_notifier - > setup a proper ksysfs entry for optional defer
	values, to make for a much more consistent power interface --> also
	, for both state notifier and powersuspend, added the WQ_HIGHPRI
	flag for their workqueues as their work IS high priority

2017-04-13  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/Kconfig, drivers/video/msm/Makefile,
	drivers/video/msm/state_notifier2.c, kernel/power/Kconfig,
	kernel/power/Makefile, {drivers/video/msm =>
	kernel/power}/state_notifier.c: State Notifier - moved to the power
	core as it is a crucial driver for our system and should be grouped
	in with the rest of the power framework.  While I was at it, I
	removed my obsolete crummy version of it that I was holding onto for
	reference, and reordered the kernel/power/Makefile so that the
	symbols are populated in proper order (pm/wakelock/partialresume are
	core and should come before our notifier system).

2017-04-13  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdnie_lite_tuning.c: REVERT - my suspend resume
	hooks, i need to do a better job with this

2017-04-13  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdnie_lite_tuning.c: mdnie control: added
	suspend/resume hooks for the mdnie lock, and more safety measures in
	cases where it is preventing other drivers callbacks (ioctls, etc).
	for suspend resume, disable it during suspend if its enabled, and
	enable it again on resume if it was enabled previously

2017-04-13  robcore <robpatershuk@gmail.com>

	* drivers/iommu/msm_iommu-v2.c, drivers/iommu/msm_iommu.c: msm
	iommu: page faults, instead of printing a bunch of useless register
	information upon page fault, WARN_ON_ONCE so we at least get a
	decent backtrace...not much, but better than a bunch of useless
	registers we know nothing about.  Except for maybe Rob Clark...

2017-04-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/iommu_domains.c: EXPERIMENT/HUNCH:msm
	iommu_domains: force platform mode and ignore secure mode altogether

2017-04-13  robcore <robpatershuk@gmail.com>

	* snapshot/Kbuild.patch.000, snapshot/Kconfig.patch.000,
	snapshot/Makefile.patch.000, snapshot/null.patch.000,
	snapshot/null.patch.001, snapshot/null.patch.002,
	snapshot/null.patch.003, snapshot/null.patch.004,
	snapshot/null.patch.005, snapshot/null.patch.006,
	snapshot/null.patch.007, snapshot/null.patch.008,
	snapshot/null.patch.009, snapshot/null.patch.010,
	snapshot/null.patch.011, snapshot/null.patch.012,
	snapshot/null.patch.013, snapshot/null.patch.014,
	snapshot/null.patch.015, snapshot/null.patch.016,
	snapshot/null.patch.017, snapshot/null.patch.018,
	snapshot/null.patch.019, snapshot/null.patch.020,
	snapshot/null.patch.021, snapshot/null.patch.022,
	snapshot/null.patch.023, snapshot/null.patch.024,
	snapshot/null.patch.025, snapshot/null.patch.026,
	snapshot/null.patch.027, snapshot/null.patch.028,
	snapshot/null.patch.029, snapshot/null.patch.030,
	snapshot/null.patch.031, snapshot/null.patch.032,
	snapshot/null.patch.033, snapshot/null.patch.034,
	snapshot/null.patch.035, snapshot/null.patch.036,
	snapshot/null.patch.037, snapshot/null.patch.038,
	snapshot/null.patch.039, snapshot/null.patch.040,
	snapshot/null.patch.041, snapshot/null.patch.042,
	snapshot/null.patch.043, snapshot/null.patch.044,
	snapshot/null.patch.045, snapshot/null.patch.046,
	snapshot/null.patch.047, snapshot/null.patch.048,
	snapshot/null.patch.049, snapshot/null.patch.050,
	snapshot/null.patch.051, snapshot/null.patch.052,
	snapshot/null.patch.053, snapshot/null.patch.054,
	snapshot/null.patch.055, snapshot/null.patch.056,
	snapshot/null.patch.057, snapshot/null.patch.058,
	snapshot/null.patch.059, snapshot/null.patch.060,
	snapshot/null.patch.061, snapshot/null.patch.062,
	snapshot/null.patch.063, snapshot/null.patch.064,
	snapshot/null.patch.065, snapshot/null.patch.066,
	snapshot/null.patch.067, snapshot/null.patch.068,
	snapshot/null.patch.069, snapshot/null.patch.070,
	snapshot/null.patch.071, snapshot/null.patch.072,
	snapshot/null.patch.073, snapshot/null.patch.074,
	snapshot/null.patch.075, snapshot/null.patch.076,
	snapshot/null.patch.077, snapshot/null.patch.078,
	snapshot/null.patch.079, snapshot/null.patch.080,
	snapshot/null.patch.081, snapshot/null.patch.082,
	snapshot/null.patch.083, snapshot/null.patch.084,
	snapshot/null.patch.085, snapshot/null.patch.086,
	snapshot/null.patch.087, snapshot/null.patch.088,
	snapshot/null.patch.089, snapshot/null.patch.090,
	snapshot/null.patch.091, snapshot/null.patch.092,
	snapshot/null.patch.093, snapshot/null.patch.094,
	snapshot/null.patch.095, snapshot/null.patch.096,
	snapshot/null.patch.097, snapshot/null.patch.098,
	snapshot/null.patch.099, snapshot/null.patch.100,
	snapshot/null.patch.101, snapshot/null.patch.102,
	snapshot/null.patch.103, snapshot/null.patch.104,
	snapshot/null.patch.105, snapshot/null.patch.106,
	snapshot/null.patch.107, snapshot/null.patch.108,
	snapshot/null.patch.109, snapshot/null.patch.110,
	snapshot/null.patch.111, snapshot/null.patch.112,
	snapshot/null.patch.113, snapshot/null.patch.114,
	snapshot/null.patch.115, snapshot/null.patch.116,
	snapshot/null.patch.117, snapshot/null.patch.118,
	snapshot/null.patch.119, snapshot/null.patch.120,
	snapshot/null.patch.121, snapshot/null.patch.122,
	snapshot/null.patch.123, snapshot/null.patch.124,
	snapshot/null.patch.125, snapshot/null.patch.126,
	snapshot/null.patch.127, snapshot/null.patch.128,
	snapshot/null.patch.129, snapshot/null.patch.130,
	snapshot/null.patch.131, snapshot/null.patch.132,
	snapshot/null.patch.133, snapshot/null.patch.134,
	snapshot/null.patch.135, snapshot/null.patch.136,
	snapshot/null.patch.137, snapshot/null.patch.138,
	snapshot/null.patch.139, snapshot/null.patch.140,
	snapshot/null.patch.141, snapshot/null.patch.142,
	snapshot/null.patch.143, snapshot/null.patch.144,
	snapshot/null.patch.145, snapshot/null.patch.146,
	snapshot/null.patch.147, snapshot/null.patch.148,
	snapshot/null.patch.149, snapshot/null.patch.150,
	snapshot/null.patch.151, snapshot/null.patch.152,
	snapshot/null.patch.153, snapshot/null.patch.154,
	snapshot/null.patch.155, snapshot/null.patch.156,
	snapshot/null.patch.157, snapshot/null.patch.158,
	snapshot/null.patch.159, snapshot/null.patch.160,
	snapshot/null.patch.161, snapshot/null.patch.162,
	snapshot/null.patch.163, snapshot/null.patch.164,
	snapshot/null.patch.165, snapshot/null.patch.166,
	snapshot/null.patch.167, snapshot/null.patch.168,
	snapshot/null.patch.169, snapshot/null.patch.170,
	snapshot/null.patch.171, snapshot/null.patch.172,
	snapshot/null.patch.173, snapshot/null.patch.174,
	snapshot/null.patch.175, snapshot/null.patch.176,
	snapshot/null.patch.177, snapshot/null.patch.178,
	snapshot/null.patch.179, snapshot/null.patch.180,
	snapshot/null.patch.181, snapshot/null.patch.182,
	snapshot/null.patch.183, snapshot/null.patch.184,
	snapshot/null.patch.185, snapshot/null.patch.186,
	snapshot/null.patch.187, snapshot/null.patch.188,
	snapshot/null.patch.189, snapshot/null.patch.190,
	snapshot/null.patch.191, snapshot/null.patch.192,
	snapshot/null.patch.193, snapshot/null.patch.194,
	snapshot/null.patch.195, snapshot/null.patch.196,
	snapshot/null.patch.197, snapshot/null.patch.198,
	snapshot/null.patch.199, snapshot/null.patch.200,
	snapshot/null.patch.201, snapshot/null.patch.202,
	snapshot/null.patch.203, snapshot/null.patch.204,
	snapshot/null.patch.205, snapshot/null.patch.206,
	snapshot/null.patch.207, snapshot/null.patch.208,
	snapshot/null.patch.209, snapshot/null.patch.210,
	snapshot/null.patch.211, snapshot/null.patch.212,
	snapshot/null.patch.213, snapshot/null.patch.214,
	snapshot/null.patch.215, snapshot/null.patch.216,
	snapshot/null.patch.217, snapshot/null.patch.218,
	snapshot/null.patch.219, snapshot/null.patch.220,
	snapshot/null.patch.221, snapshot/null.patch.222,
	snapshot/null.patch.223, snapshot/null.patch.224,
	snapshot/null.patch.225, snapshot/null.patch.226,
	snapshot/null.patch.227, snapshot/null.patch.228,
	snapshot/null.patch.229, snapshot/null.patch.230,
	snapshot/null.patch.231, snapshot/null.patch.232,
	snapshot/null.patch.233, snapshot/null.patch.234,
	snapshot/null.patch.235, snapshot/null.patch.236,
	snapshot/null.patch.237, snapshot/null.patch.238,
	snapshot/null.patch.239, snapshot/null.patch.240,
	snapshot/null.patch.241, snapshot/null.patch.242,
	snapshot/null.patch.243, snapshot/null.patch.244,
	snapshot/null.patch.245, snapshot/null.patch.246,
	snapshot/null.patch.247, snapshot/null.patch.248,
	snapshot/null.patch.249, snapshot/null.patch.250,
	snapshot/null.patch.251, snapshot/null.patch.252,
	snapshot/null.patch.253, snapshot/null.patch.254,
	snapshot/null.patch.255, snapshot/null.patch.256,
	snapshot/null.patch.257, snapshot/null.patch.258,
	snapshot/null.patch.259, snapshot/null.patch.260,
	snapshot/null.patch.261, snapshot/null.patch.262,
	snapshot/null.patch.263, snapshot/null.patch.264,
	snapshot/null.patch.265, snapshot/null.patch.266,
	snapshot/null.patch.267, snapshot/null.patch.268,
	snapshot/null.patch.269, snapshot/null.patch.270,
	snapshot/null.patch.271, snapshot/null.patch.272,
	snapshot/null.patch.273, snapshot/null.patch.274,
	snapshot/null.patch.275, snapshot/null.patch.276,
	snapshot/null.patch.277, snapshot/null.patch.278,
	snapshot/null.patch.279, snapshot/null.patch.280,
	snapshot/null.patch.281, snapshot/null.patch.282,
	snapshot/null.patch.283, snapshot/null.patch.284,
	snapshot/null.patch.285, snapshot/null.patch.286,
	snapshot/null.patch.287, snapshot/null.patch.288,
	snapshot/null.patch.289, snapshot/null.patch.290,
	snapshot/null.patch.291, snapshot/null.patch.292,
	snapshot/null.patch.293, snapshot/null.patch.294,
	snapshot/null.patch.295, snapshot/null.patch.296,
	snapshot/null.patch.297, snapshot/null.patch.298,
	snapshot/null.patch.299, snapshot/null.patch.300,
	snapshot/null.patch.301, snapshot/null.patch.302,
	snapshot/null.patch.303, snapshot/null.patch.304,
	snapshot/null.patch.305, snapshot/null.patch.306,
	snapshot/null.patch.307, snapshot/null.patch.308,
	snapshot/null.patch.309, snapshot/null.patch.310,
	snapshot/null.patch.311, snapshot/null.patch.312,
	snapshot/null.patch.313, snapshot/null.patch.314,
	snapshot/null.patch.315, snapshot/null.patch.316,
	snapshot/null.patch.317, snapshot/null.patch.318,
	snapshot/null.patch.319, snapshot/null.patch.320,
	snapshot/null.patch.321, snapshot/null.patch.322,
	snapshot/null.patch.323, snapshot/null.patch.324,
	snapshot/null.patch.325, snapshot/null.patch.326,
	snapshot/null.patch.327, snapshot/null.patch.328,
	snapshot/null.patch.329, snapshot/null.patch.330,
	snapshot/null.patch.331, snapshot/null.patch.332,
	snapshot/null.patch.333, snapshot/null.patch.334,
	snapshot/null.patch.335, snapshot/null.patch.336,
	snapshot/null.patch.337, snapshot/null.patch.338,
	snapshot/null.patch.339, snapshot/null.patch.340,
	snapshot/null.patch.341, snapshot/null.patch.342,
	snapshot/null.patch.343, snapshot/null.patch.344,
	snapshot/null.patch.345, snapshot/null.patch.346,
	snapshot/null.patch.347, snapshot/null.patch.348,
	snapshot/null.patch.349, snapshot/null.patch.350,
	snapshot/null.patch.351, snapshot/null.patch.352,
	snapshot/null.patch.353, snapshot/null.patch.354,
	snapshot/null.patch.355, snapshot/null.patch.356,
	snapshot/null.patch.357, snapshot/null.patch.358,
	snapshot/null.patch.359, snapshot/null.patch.360,
	snapshot/null.patch.361, snapshot/null.patch.362,
	snapshot/null.patch.363, snapshot/null.patch.364,
	snapshot/null.patch.365, snapshot/null.patch.366,
	snapshot/null.patch.367, snapshot/null.patch.368,
	snapshot/null.patch.369, snapshot/null.patch.370,
	snapshot/null.patch.371, snapshot/null.patch.372,
	snapshot/null.patch.373, snapshot/null.patch.374,
	snapshot/null.patch.375, snapshot/null.patch.376,
	snapshot/null.patch.377, snapshot/null.patch.378,
	snapshot/null.patch.379, snapshot/null.patch.380,
	snapshot/null.patch.381, snapshot/null.patch.382,
	snapshot/null.patch.383, snapshot/null.patch.384,
	snapshot/null.patch.385, snapshot/null.patch.386,
	snapshot/null.patch.387, snapshot/null.patch.388,
	snapshot/null.patch.389, snapshot/null.patch.390,
	snapshot/null.patch.391, snapshot/null.patch.392,
	snapshot/null.patch.393, snapshot/null.patch.394,
	snapshot/null.patch.395, snapshot/null.patch.396,
	snapshot/null.patch.397, snapshot/null.patch.398,
	snapshot/null.patch.399, snapshot/null.patch.400,
	snapshot/null.patch.401, snapshot/null.patch.402,
	snapshot/null.patch.403, snapshot/null.patch.404,
	snapshot/null.patch.405, snapshot/null.patch.406,
	snapshot/null.patch.407, snapshot/null.patch.408,
	snapshot/null.patch.409, snapshot/null.patch.410,
	snapshot/null.patch.411, snapshot/null.patch.412,
	snapshot/null.patch.413, snapshot/null.patch.414,
	snapshot/null.patch.415, snapshot/null.patch.416,
	snapshot/null.patch.417, snapshot/null.patch.418,
	snapshot/null.patch.419, snapshot/null.patch.420,
	snapshot/null.patch.421, snapshot/null.patch.422,
	snapshot/null.patch.423, snapshot/null.patch.424,
	snapshot/null.patch.425, snapshot/null.patch.426,
	snapshot/null.patch.427, snapshot/null.patch.428,
	snapshot/null.patch.429, snapshot/null.patch.430,
	snapshot/null.patch.431, snapshot/null.patch.432,
	snapshot/null.patch.433, snapshot/null.patch.434,
	snapshot/null.patch.435, snapshot/null.patch.436,
	snapshot/null.patch.437, snapshot/null.patch.438,
	snapshot/null.patch.439, snapshot/null.patch.440,
	snapshot/null.patch.441, snapshot/null.patch.442,
	snapshot/null.patch.443, snapshot/null.patch.444,
	snapshot/null.patch.445, snapshot/null.patch.446,
	snapshot/null.patch.447, snapshot/null.patch.448,
	snapshot/null.patch.449, snapshot/null.patch.450,
	snapshot/null.patch.451, snapshot/null.patch.452,
	snapshot/null.patch.453, snapshot/null.patch.454,
	snapshot/null.patch.455, snapshot/null.patch.456,
	snapshot/null.patch.457, snapshot/null.patch.458,
	snapshot/null.patch.459, snapshot/null.patch.460,
	snapshot/null.patch.461, snapshot/null.patch.462,
	snapshot/null.patch.463, snapshot/null.patch.464,
	snapshot/null.patch.465, snapshot/null.patch.466,
	snapshot/null.patch.467, snapshot/null.patch.468,
	snapshot/null.patch.469, snapshot/null.patch.470,
	snapshot/null.patch.471, snapshot/null.patch.472,
	snapshot/null.patch.473, snapshot/null.patch.474,
	snapshot/null.patch.475, snapshot/null.patch.476,
	snapshot/null.patch.477, snapshot/null.patch.478,
	snapshot/null.patch.479, snapshot/null.patch.480,
	snapshot/null.patch.481, snapshot/null.patch.482,
	snapshot/null.patch.483, snapshot/null.patch.484,
	snapshot/null.patch.485, snapshot/null.patch.486,
	snapshot/null.patch.487, snapshot/null.patch.488,
	snapshot/null.patch.489, snapshot/null.patch.490,
	snapshot/null.patch.491, snapshot/null.patch.492,
	snapshot/null.patch.493, snapshot/null.patch.494,
	snapshot/null.patch.495, snapshot/null.patch.496,
	snapshot/null.patch.497, snapshot/null.patch.498,
	snapshot/null.patch.499, snapshot/null.patch.500,
	snapshot/null.patch.501, snapshot/null.patch.502,
	snapshot/null.patch.503, snapshot/null.patch.504,
	snapshot/null.patch.505, snapshot/null.patch.506,
	snapshot/null.patch.507, snapshot/null.patch.508,
	snapshot/null.patch.509, snapshot/null.patch.510,
	snapshot/null.patch.511, snapshot/null.patch.512,
	snapshot/null.patch.513, snapshot/null.patch.514,
	snapshot/null.patch.515, snapshot/null.patch.516,
	snapshot/null.patch.517, snapshot/null.patch.518,
	snapshot/null.patch.519, snapshot/null.patch.520,
	snapshot/null.patch.521, snapshot/null.patch.522,
	snapshot/null.patch.523, snapshot/null.patch.524,
	snapshot/null.patch.525, snapshot/null.patch.526,
	snapshot/null.patch.527, snapshot/null.patch.528,
	snapshot/null.patch.529, snapshot/null.patch.530,
	snapshot/null.patch.531, snapshot/null.patch.532,
	snapshot/null.patch.533, snapshot/null.patch.534,
	snapshot/null.patch.535, snapshot/null.patch.536,
	snapshot/null.patch.537, snapshot/null.patch.538,
	snapshot/null.patch.539, snapshot/null.patch.540,
	snapshot/null.patch.541, snapshot/null.patch.542,
	snapshot/null.patch.543, snapshot/null.patch.544,
	snapshot/null.patch.545, snapshot/null.patch.546,
	snapshot/null.patch.547, snapshot/null.patch.548,
	snapshot/null.patch.549, snapshot/null.patch.550,
	snapshot/null.patch.551, snapshot/null.patch.552,
	snapshot/null.patch.553, snapshot/null.patch.554,
	snapshot/null.patch.555, snapshot/null.patch.556,
	snapshot/null.patch.557, snapshot/null.patch.558,
	snapshot/null.patch.559, snapshot/null.patch.560,
	snapshot/null.patch.561, snapshot/null.patch.562,
	snapshot/null.patch.563, snapshot/null.patch.564,
	snapshot/null.patch.565, snapshot/null.patch.566,
	snapshot/null.patch.567, snapshot/null.patch.568,
	snapshot/null.patch.569, snapshot/null.patch.570,
	snapshot/null.patch.571, snapshot/null.patch.572,
	snapshot/null.patch.573, snapshot/null.patch.574,
	snapshot/null.patch.575, snapshot/null.patch.576,
	snapshot/null.patch.577, snapshot/null.patch.578,
	snapshot/null.patch.579, snapshot/null.patch.580,
	snapshot/null.patch.581, snapshot/null.patch.582,
	snapshot/null.patch.583, snapshot/null.patch.584,
	snapshot/null.patch.585, snapshot/null.patch.586,
	snapshot/null.patch.587, snapshot/null.patch.588,
	snapshot/null.patch.589, snapshot/null.patch.590,
	snapshot/null.patch.591, snapshot/null.patch.592,
	snapshot/null.patch.593, snapshot/null.patch.594,
	snapshot/null.patch.595, snapshot/null.patch.596,
	snapshot/null.patch.597, snapshot/null.patch.598,
	snapshot/null.patch.599, snapshot/null.patch.600,
	snapshot/null.patch.601, snapshot/null.patch.602,
	snapshot/null.patch.603, snapshot/null.patch.604,
	snapshot/null.patch.605, snapshot/null.patch.606,
	snapshot/null.patch.607, snapshot/null.patch.608,
	snapshot/null.patch.609, snapshot/null.patch.610,
	snapshot/null.patch.611, snapshot/null.patch.612,
	snapshot/null.patch.613, snapshot/null.patch.614,
	snapshot/null.patch.615, snapshot/null.patch.616,
	snapshot/null.patch.617, snapshot/null.patch.618,
	snapshot/null.patch.619, snapshot/null.patch.620,
	snapshot/null.patch.621, snapshot/null.patch.622,
	snapshot/null.patch.623, snapshot/null.patch.624,
	snapshot/null.patch.625, snapshot/null.patch.626,
	snapshot/null.patch.627, snapshot/null.patch.628,
	snapshot/null.patch.629, snapshot/null.patch.630,
	snapshot/null.patch.631, snapshot/null.patch.632,
	snapshot/null.patch.633, snapshot/null.patch.634,
	snapshot/null.patch.635, snapshot/null.patch.636,
	snapshot/null.patch.637, snapshot/null.patch.638,
	snapshot/null.patch.639, snapshot/null.patch.640,
	snapshot/null.patch.641, snapshot/null.patch.642,
	snapshot/null.patch.643, snapshot/null.patch.644,
	snapshot/null.patch.645, snapshot/null.patch.646,
	snapshot/null.patch.647, snapshot/null.patch.648,
	snapshot/null.patch.649, snapshot/null.patch.650,
	snapshot/null.patch.651, snapshot/null.patch.652,
	snapshot/null.patch.653, snapshot/null.patch.654,
	snapshot/null.patch.655, snapshot/null.patch.656,
	snapshot/null.patch.657, snapshot/null.patch.658,
	snapshot/null.patch.659, snapshot/null.patch.660,
	snapshot/null.patch.661, snapshot/null.patch.662,
	snapshot/null.patch.663, snapshot/null.patch.664,
	snapshot/null.patch.665, snapshot/null.patch.666,
	snapshot/null.patch.667, snapshot/null.patch.668,
	snapshot/null.patch.669, snapshot/null.patch.670,
	snapshot/null.patch.671, snapshot/null.patch.672,
	snapshot/null.patch.673, snapshot/null.patch.674,
	snapshot/null.patch.675, snapshot/null.patch.676,
	snapshot/null.patch.677, snapshot/null.patch.678,
	snapshot/null.patch.679, snapshot/null.patch.680,
	snapshot/null.patch.681, snapshot/null.patch.682,
	snapshot/null.patch.683, snapshot/null.patch.684,
	snapshot/null.patch.685, snapshot/null.patch.686,
	snapshot/null.patch.687, snapshot/null.patch.688,
	snapshot/null.patch.689, snapshot/null.patch.690,
	snapshot/null.patch.691, snapshot/null.patch.692,
	snapshot/null.patch.693, snapshot/null.patch.694,
	snapshot/null.patch.695, snapshot/null.patch.696,
	snapshot/null.patch.697, snapshot/null.patch.698,
	snapshot/null.patch.699, snapshot/null.patch.700,
	snapshot/null.patch.701, snapshot/null.patch.702,
	snapshot/null.patch.703, snapshot/null.patch.704,
	snapshot/null.patch.705, snapshot/null.patch.706,
	snapshot/null.patch.707, snapshot/null.patch.708,
	snapshot/null.patch.709, snapshot/null.patch.710,
	snapshot/null.patch.711, snapshot/null.patch.712,
	snapshot/null.patch.713, snapshot/null.patch.714,
	snapshot/null.patch.715, snapshot/null.patch.716,
	snapshot/null.patch.717, snapshot/null.patch.718,
	snapshot/null.patch.719, snapshot/null.patch.720,
	snapshot/null.patch.721, snapshot/null.patch.722,
	snapshot/null.patch.723, snapshot/null.patch.724,
	snapshot/null.patch.725, snapshot/null.patch.726,
	snapshot/null.patch.727, snapshot/null.patch.728,
	snapshot/null.patch.729, snapshot/null.patch.730,
	snapshot/null.patch.731, snapshot/null.patch.732,
	snapshot/null.patch.733, snapshot/null.patch.734,
	snapshot/null.patch.735, snapshot/null.patch.736,
	snapshot/null.patch.737, snapshot/null.patch.738,
	snapshot/null.patch.739, snapshot/null.patch.740,
	snapshot/null.patch.741, snapshot/null.patch.742,
	snapshot/null.patch.743, snapshot/null.patch.744,
	snapshot/null.patch.745, snapshot/null.patch.746,
	snapshot/null.patch.747, snapshot/null.patch.748,
	snapshot/null.patch.749, snapshot/null.patch.750,
	snapshot/null.patch.751, snapshot/null.patch.752,
	snapshot/null.patch.753, snapshot/null.patch.754,
	snapshot/null.patch.755, snapshot/null.patch.756,
	snapshot/null.patch.757, snapshot/null.patch.758,
	snapshot/null.patch.759, snapshot/null.patch.760,
	snapshot/null.patch.761, snapshot/null.patch.762,
	snapshot/null.patch.763, snapshot/null.patch.764,
	snapshot/null.patch.765, snapshot/null.patch.766,
	snapshot/null.patch.767, snapshot/null.patch.768,
	snapshot/null.patch.769, snapshot/null.patch.770,
	snapshot/null.patch.771, snapshot/null.patch.772,
	snapshot/null.patch.773, snapshot/null.patch.774,
	snapshot/null.patch.775, snapshot/null.patch.776,
	snapshot/null.patch.777, snapshot/null.patch.778,
	snapshot/null.patch.779, snapshot/null.patch.780,
	snapshot/null.patch.781, snapshot/null.patch.782,
	snapshot/null.patch.783, snapshot/null.patch.784,
	snapshot/null.patch.785, snapshot/null.patch.786,
	snapshot/null.patch.787, snapshot/null.patch.788,
	snapshot/null.patch.789, snapshot/null.patch.790,
	snapshot/null.patch.791, snapshot/null.patch.792,
	snapshot/null.patch.793, snapshot/null.patch.794,
	snapshot/null.patch.795, snapshot/null.patch.796,
	snapshot/null.patch.797, snapshot/null.patch.798,
	snapshot/null.patch.799, snapshot/null.patch.800,
	snapshot/null.patch.801, snapshot/null.patch.802,
	snapshot/null.patch.803, snapshot/null.patch.804,
	snapshot/null.patch.805, snapshot/null.patch.806,
	snapshot/null.patch.807, snapshot/null.patch.808,
	snapshot/null.patch.809, snapshot/null.patch.810,
	snapshot/null.patch.811: snapshot of msm 3.4 - use splitpatch to
	make it more parseable

2017-04-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/bam_dmux.c: lets make it a second

2017-04-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/bam_dmux.c: haha oops i think i made bams
	timeout like 10 minutes

2017-04-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/bam_dmux.c: bam dmux - in my opinion, i think i
	have created a far safer wake_lock/unlock scenario for the bam
	transfer pipe. the driver uses a self-tracked wakelock counter that
	is protected by spinlocks, but the wakelocks were set, held and
	released all within said spinlocks.  this doesnt strike me as wise,
	given the perilous state of wakeup_source syncronization in the
	linux kernel.  also, changed the remaining time related functions to
	unsigned integers so we dont have to worry about over/underflows.
	DONT MAKE TIME SIGNED!!!  see diff for more details

2017-04-13  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, drivers/base/power/runtime.c: bring
	back power changes for further testing

2017-04-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/io.c, arch/arm/mach-msm/krait-regulator.c: Bring
	back map_page_strongly_ordered as well as the memory barrier in
	kraits regulator, i think havoc is being caused without them

2017-04-13  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, drivers/base/power/runtime.c: temp
	revert of the power stuff so i can test out the scheduling stuff

2017-04-13  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, init/Kconfig, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: REVERT -
	sched-Add-CONFIG_SCHED_HMP-Kconfig-option

2017-04-13  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: REVERT - sched:
	Introduce efficiency, load_scale_factor and capacity

2017-04-13  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: 
	sched-Use-rq-efficiency-in-scaling-load-stats

2017-04-13  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: REVERT -
	sched: Basic task placement support for HMP systems

2017-04-13  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Send-NOHZ-kick-to-idle-cpu-in-same-cluster.

2017-04-13  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	REVERT - sched: Extend active balance to accept push_task argument

2017-04-13  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	REVERT - sched-Handle-cpu-bound-tasks-stuck-on-wrong-cpu

2017-04-13  robcore <robpatershuk@gmail.com>

	* drivers/base/power/Makefile, drivers/base/power/main.c,
	drivers/base/power/power.h, drivers/base/power/runtime.c,
	drivers/base/power/wakeirq.c, drivers/base/power/wakeup.c,
	include/linux/pm.h, include/linux/pm_wakeirq.h,
	include/linux/pm_wakeup.h: k actually got rid of the wake_irq for
	now, i knew it was too far advanced

2017-04-13  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: main - fixup my little movement of
	stats printing outside of the mutex, and brought the others down
	while at it (thats what they did with mainline, and its a smart
	move)

2017-04-13  robcore <robpatershuk@gmail.com>

	* drivers/base/power/Makefile, drivers/base/power/main.c,
	drivers/base/power/power.h, drivers/base/power/runtime.c,
	drivers/base/power/wakeirq.c, drivers/base/power/wakeup.c,
	include/linux/pm.h, include/linux/pm_wakeirq.h,
	include/linux/pm_wakeup.h: imported 4.11s pm_wakeup_irq framework,
	as well as a few fixes here and there in the drivers/base/power --
	all from upstream

2017-04-13  robcore <robpatershuk@gmail.com>

	* .gitignore: update gitignore

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	REVERT - sched-Track-number-of-big-and-small-tasks-on-a-cpu

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Tighten controls for tasks spillover
	to idle cluster

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c: REVERT -
	sched-Extend-proc-sched_debug-with-additional-info

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c: 
	sched-Provide-scaled-load-information-for-tasks;

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Reset-decay_count-when-task-is-enqueued

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	REVERT - tunable for PELT and window -- also the switch to window
	load stats by default

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: REVERT - sched: window-stats: update during
	migration and earlier at wakeup

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: REVERT -
	sched-window-stats-Do-not-account-wait-time

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: REVERT - sched: window-stats: synchronize
	windows across cpus

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: REVERT -
	sched-window-stats-add-prev_window-counter-per-task

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: REVERT -
	sched-window-stats-Add-aggregated-runqueue-windowed

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-window-stats-adjust-RQ-curr-prev-sums-on-task

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c, kernel/sched/sched.h: something tells me
	the lockdep support for those is a good idea

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/seqlock.h, kernel/sched/loadavg.c,
	kernel/sched/sched.h: sched: avg_nr_running/locking - on a hunch
	change the avg_nr_running routines to use raw seqcount functions as
	well, because im certain that our locking is messed up all
	throughout the fuckin core

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: except made the => proper

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: threw a safetynet around ave_nr_running
	potentially returning a negative number

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: on a hunch, using raw seqcounts for fauxs
	inc/dec nr_running

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: vsyscall arm - use uint32_t
	typedefs for tv_sec/nsec

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: vsyscall arm - remove
	unneccessary seqcount_t

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: nope update_task_ravg in put_prev_task is
	futility

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: REVERT - sched: add sched_get_busy,
	sched_set_window APIs

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/bus.c, drivers/base/devtmpfs.c,
	drivers/base/regmap/Kconfig, drivers/base/regmap/Makefile,
	drivers/base/regmap/internal.h, drivers/base/regmap/regcache-lzo.c,
	drivers/base/regmap/regcache-rbtree.c,
	drivers/base/regmap/regcache.c,
	drivers/base/regmap/regmap-debugfs.c,
	drivers/base/regmap/regmap-i2c.c, drivers/base/regmap/regmap-irq.c,
	drivers/base/regmap/regmap-mmio.c,
	drivers/base/regmap/regmap-spi.c, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: possed

2017-04-12  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regmap-debugfs.c, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: REVERT - regmap naming

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: that variable is no longer

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: some fixits in regmap

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Devices-using-format_write-don-t-support-bulk

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: 
	regmap-Converts-group-operation-into-single-read-write

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-Cache-single-values-read-from-the-chip

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/bus.c: 
	drivers-base-bus.c-local-variables-should-not-be-exported

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/devtmpfs.c: typo

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: regmap - validate regmap_raw_read
	write val_len

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: reverted

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: have it

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: regmap - fix compile errors

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regcache-lzo.c,
	drivers/base/regmap/regcache-rbtree.c,
	drivers/base/regmap/regcache.c,
	drivers/base/regmap/regmap-debugfs.c,
	drivers/base/regmap/regmap-irq.c,
	drivers/base/regmap/regmap-mmio.c, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: regmap: implement register striding

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regmap-debugfs.c, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: allow regmap instances to be named again

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched: Extend
	update_task_ravg() to accept wallclock as argument (and properly fit
	update_task_ravg into put_prev_task)

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap.c:  regmap: Use pad_bits and reg_bits when  determining register
	 format.

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regmap-debugfs.c, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: reverted last two

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h: regmap: fix compilation when
	!CONFIG_DEBUG_FS

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regmap-debugfs.c, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: regmap-allow-regmap-instances-to-be-named

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap.c: 
	regmap-validate-regmap_raw_read-write-val_len.

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-mmio.c: 
	regmap-mmio-remove-some-error-checks-now-in-the-core.

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-mmio.c: 
	regmap-mmio-convert-some-error-returns-to-BUG

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/Kconfig, drivers/base/regmap/Makefile,
	drivers/base/regmap/regmap-mmio.c, include/linux/regmap.h: regmap:
	add MMIO bus support

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h,
	drivers/base/regmap/regcache-rbtree.c,
	drivers/base/regmap/regcache.c, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: 
	regmap-introduce-fast_io-busses-and-use-a-spinlock

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/internal.h, drivers/base/regmap/regmap-i2c.c,
	drivers/base/regmap/regmap-spi.c, drivers/base/regmap/regmap.c,
	include/linux/regmap.h: 
	regmap-introduce-explicit-bus_context-for-bus-callbacks

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/preempt.h: nope reverted preempt stuff

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/preempt.h, kernel/sched/core.c: nope 100ms sched
	ravg sucks

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched_ravg_window - rob: for fun, increase
	the avg window to 100 ms

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: revertrted

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: hold up, gonna try a neat thing

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, include/linux/preempt.h,
	include/linux/sched.h, include/linux/sched/sysctl.h, kernel/exit.c,
	kernel/sched/core.c, kernel/sched/cputime.c, kernel/sched/debug.c,
	kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sysctl.c: possed

2017-04-12  robcore <robpatershuk@gmail.com>

	* pos.sh: pos is prepped

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	kernel/sched/core.c, kernel/sched/debug.c, kernel/sched/fair.c,
	kernel/sched/sched.h, kernel/sysctl.c: gonna pos, this is a useless
	patch set

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sysctl.c: sched-Use-absolute-scale-for-notifying-governor

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: temporary fixup for
	this stupid fucking CONFIG_HMP shit

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: sched:
	improve logic for alerting governor

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Stop-task-migration-to-busy-CPUs-due-to-power

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-window-stats-Fix-accounting-bug-in-legacy-mode

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-window-stats-Note-legacy-mode-in-fork-and-exit

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Fix reference to stale task_struct in
	try_to_wake_up()

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Remove hack to enable/disable HMP
	scheduling extensio

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-fix-wrong-load_scale_factor-capacity-nr_big-small-tasks

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: add check for cpu idleness when using
	C-state information

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: 
	sched-window-stats-add-a-new-AVG-policy

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-Fix-compile-error.

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-update-ld_moved-for-active-balance

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-actively-migrate-tasks-to-idle-big-CPUs

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-always-do-idle-balance-with-a-NEWLY_IDLE-idle

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-fix-bail-condition-in-bail_inter_cluster_balance

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Initialize-env-loop-variable-to-0

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h:  sched: window-stats: use policy_mutex in sched_set_window()

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-window_stats-Add-disable-mode-support

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/exit.c, kernel/sched/core.c: 
	sched-window-stats-Fix-exit-race

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-window-stats-code-cleanup

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: sched:
	window-stats: legacy mode

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-window-stats-Code-cleanup

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: sched:
	window-stats: Code cleanup

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: window-stats: Code cleanup

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-window-stats-Remove-unused-prev_window-var

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-disable-frequency-notifications-by-default

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: fix misalignment between requested and
	actual windows

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sysctl.c: sched: Make RAVG_HIST_SIZE tunable

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Fix possibility of "stuck" reserved
	flag

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: initialize env->flags variable to 0

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched: window-stats:
	64-bit type for curr/prev_runnable_sum

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: sched:
	window-stats: Allow acct_wait_time to be tuned

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: scheduler_ipi - add in missing cpu
	decearation

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: remove bs tracing

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/preempt.h, include/linux/sched.h,
	kernel/sched/core.c, kernel/sched/cputime.c, kernel/sched/sched.h: 
	sched-window-stats-Account-interrupt-handling-time-> rob hax - also
	converted tasklist to an enum, and hacked in a backwards compatible
	version of fold_preempt_no_resched

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: sched: window-stats:
	Account idle time as busy time

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: sched: window-stats:
	Account wait time

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: window-stats: update task demand on
	tick

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched - fix herding issue

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: sched: Avoid needless
	migration

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Drop-active-balance-request-upon-cpu-going-off

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched: trigger immediate migration of tasks upon boost

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Extend-boost-benefit-for-small-and-low-prio-tasks

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: 
	sched-window-stats-Handle-policy-change-properly

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-window-stats-Reset-all-window-stats

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: window-stats: Additional error
	checking in sched_set_window()

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: window-stats: Fix incorrect
	calculation of partial_demand

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: window-stats: Fix potential wrong use
	of rq

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-set-initial-task-load-to-just-above-a-small-task

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Check-whether-any-CPUs-are-available.

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: sched: enable hmp, power
	aware scheduling for targets with > 4 CPUs, disable for legacy -->
	also make the alloc_size one value dependant on config FAIR OR RT

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sysctl.c: sched: remove sysctl control for HMP and
	power-aware task placement

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/rt.c, kernel/sched/sched.h: sched: support legacy mode
	better

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: code cleanup: Avoid the long if()
	block of code in set_task_cpu(). Move that code to its own function

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: -sched-Add-BUG_ON-when-task_cpu-is-incorrect.

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-avoid-active-migration-of-tasks-not-in-TASK_RUNNING

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-fix-up-task-load-during-migration

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: avoid pushing tasks to an offline CPU

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/debug.c, kernel/sched/fair.c,
	kernel/sched/sched.h: sched-Add-a-per-rq-max_possible_capacity

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Disable-interrupts-when-holding-the-rq-lock

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Make-wallclock-more-accurate

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched: Make task and CPU load calculations safe from truncation

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-fair-Introduce-C-state-aware-task-placement

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	kernel/sched/fair.c, kernel/sysctl.c: 
	sched-fair-Introduce-scheduler-boost-for-low-latency

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Reset-balance_interval-before-sending-NOHZ

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Avoid-active-migration-of-small-tasks.

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Account-for-cpu-s-current-frequency-when-calc

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-make-sched_set_window-return-failure-when-PELT

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Move around code

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Update-capacity-of-all-online-cpus

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-update-task-statistics-when-CPU-freq-changes

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-do-not-balance-on-exec-if-SCHED_HMP

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c: 
	sched: Use historical load for freq governor

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-window-stats-apply-scaling-to-full-elapsed-windows

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sysctl.c: sched: notify cpufreq on over/underprovisioned CPUs

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sched/sched.h, kernel/sysctl.c: 
	sched-Introduce-spill-threshold-tunables

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sysctl.c: sched-add-migration-load-change-notifier-for-freq

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Limit-MAX_PINNED_INTERVAL-for-more-freq

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Help-out-higher-capacity-CPUs

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	sched-rt-Introduce-power-aware-scheduling-for-rt

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: balance power inefficient CPUs with
	one task

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-check-for-power-inefficient-task-placement

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c:  sched: do nohz load balancing in order of power efficiency

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-run-idle_balance-on-most-power-efficient-CPU

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, kernel/sched/fair.c: 
	sched-add-hook-for-platform-specific-CPU-power-info

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sysctl.c: sched-add-power-aware-scheduling-sysctl.

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/blackfin/include/asm/Kbuild,
	arch/openrisc/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, include/asm-generic/irq_work.h,
	include/linux/irq_work.h, kernel/irq_work.c, kernel/time/timer.c: 
	REVERT - irq commtis, they are clearly bugged

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/bam_dmux.c, arch/arm/mach-msm/iommu_domains.c: 
	that did nothing for mobile hotspot, but it DID slow down boot, so
	back to kzalloc and might as well throw mutexes around allocation
	(im still on the fence, will investigate)

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/bam_dmux.c, arch/arm/mach-msm/iommu_domains.c: 
	msm iommu domains - upon researching every usage of
	gen_pool_alloc_aligned in our tree, and comparing this function to
	patched trees, it would appear that our mutex lock "protecting" the
	function could be what is actually causing BUGs on mobile hotspot
	changes. gonna try it at least

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/cputime.c, kernel/time/posix-cpu-timers.c: put
	cputime adjust back in cputime tho

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/exit.c, kernel/fork.c,
	kernel/sched/cputime.c, kernel/sys.c,
	kernel/time/posix-cpu-timers.c: REVERT - cputime stuff, not ready
	for a seq lock

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/Kbuild: fixup - arm has the
	arch_irq_work_has_interrupt framework in place, just playing catchup

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/irq_work.h, kernel/irq_work.c, kernel/time/timer.c: 
	irq_work: Force raised irq work to run on irq work interrupt

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/Kbuild, arch/blackfin/include/asm/Kbuild,
	arch/openrisc/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, include/asm-generic/irq_work.h,
	include/linux/irq_work.h: 
	irq_work-Introduce-arch_irq_work_has_interrupt

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/cputime.c, kernel/time/posix-cpu-timers.c: move
	cputime_adjust to cputime where it belongs, and fixup the seq
	sequence

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-8064-wifi.c,
	drivers/net/wireless/bcmdhd/dhd_linux_platdev.c,
	drivers/net/wireless/bcmdhd/dhd_sec_feature.h: nope those make
	turning off wifi cause a panic

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/exit.c, kernel/fork.c,
	kernel/sched/cputime.c, kernel/sys.c,
	kernel/time/posix-cpu-timers.c: time, signal: Protect resource use
	statistics with seqlock

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: remove a little something i
	was testing in vsyscall

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/irq_work.h, kernel/irq_work.c, kernel/time/timer.c: 
	REVERT - irq_work-Force-raised-irq-work-to-run-on-irq-work-in-nohz
	(until i find arch_irq_work_has_interrupt)

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-8064-wifi.c,
	drivers/net/wireless/bcmdhd/dhd_linux_platdev.c: some wifi cleanup

2017-04-12  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/dhd_sec_feature.h: TEST - dhd -
	working on fixing a scheduling while atomic error when hotspot is
	enabled/disabled, back-traced and am starting with removing the
	delay in turning wifi off

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/irq_work.h, kernel/irq_work.c, kernel/time/timer.c: 
	irq_work-Force-raised-irq-work-to-run-on-irq-work-in-nohz-timer kick

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: 
	futex-Unlock-hb-lock-in-futex_wait_requeue_pi-error @rollo

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: update_vsyscall_arm - final
	touchup: now that we have write_seqlock/unlock all set up, tested
	and working, the commented out replacement funcs have been dropped
	as they are no longer relevant.

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: make it prettier

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: aaand make them unsigned to
	avoid over/underflows

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: there, i have a hunch those
	should be longs to match timespec

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h: GODDAMNIT forgot to save my
	header file..lol mornings

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c, kernel/time/timekeeping.c: 
	nope that causes LANCHOR errors, gonna staticize everything instead

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: oops didnt save my timekeeping file

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c,
	include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: i
	moved tk_core typedef definition to timekeeper_internal.h so that I
	can use it for our hacked up vsyscall

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: hey look at that, i managed
	to figure out how to use fucking seq lock/unlock while i was at it

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: this makes no sense to me

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	somehow this works...go C! (hopefully i didnt fuck it up

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c,
	include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: some
	noodling

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h: also somehow this was still
	working even though it was entirely improperly defined in the header

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c,
	include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping: Another fix to the VSYSCALL_OLD update_vsyscall (i knew
	this was missing, i had been cheating)

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/Makefile, scripts/Makefile, scripts/basic/Makefile,
	scripts/{ => basic}/bin2c.c: bin2c - simple move

2017-04-12  robcore <robpatershuk@gmail.com>

	* fs/ecryptfs/messaging.c, fs/proc_namespace.c: looks like ns_proxy
	is now just a plain ol member of task

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: fix our hacked, remaining
	get_montonic_bootime

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/seqlock.h: aye that i did

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/seqlock.h: seqcount-Add-raw_write_seqcount_latch (i
	have this dont i?)

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/seqlock.h: seqcount-Provide-raw_read_seqcount

2017-04-12  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, fs/proc/proc_net.c, fs/proc_namespace.c,
	include/linux/nsproxy.h, ipc/namespace.c, kernel/nsproxy.c,
	kernel/utsname.c, net/core/net_namespace.c: 
	amespaces-Use-task_lock-and-not-rcu-to-protect-nsproxy

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping: Use cached ntp_tick_length when accumulating error

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping-Rework-frequency-adjustments

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Provide-fast-and-NMI-safe-access-to-clocks

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: timekeeping: Use tk_read_base as
	argument for timekeeping_get_ns()

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: oops fixed my cycle last in
	our legacy vsyscall.  PS HOW THE FUCK IS THIS STILL WORKING???????
	GO ROB

2017-04-12  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c,
	include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping: Create struct tk_read_base and use it in struct
	timekeeper

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping-Restructure-the-timekeeper-some-more.

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/clocksource.h, include/linux/timekeeper_internal.h,
	kernel/time/timekeeping.c: clocksource-Get-rid-of-cycle_last.

2017-04-12  robcore <robpatershuk@gmail.com>

	* include/linux/time.h, kernel/time/time.c: 
	time-settimeofday-Validate-the-values-of-tv

2017-04-12  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: again - extend update_task_ravg to accept
	wallclock as an arg

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/Makefile: kgsl - comment out the "optimizations
	from the makefile

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/io.c, arch/arm/mach-msm/krait-regulator.c: msm
	memory/regulator - comment out some options i dont think we can
	afford at the moment, such as strongly ordered page mapping and a
	memory barrier upon voltage changes

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/hotplug.c: hotplug warm boot, not shared aligned

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/devices-8064.c: footswitch - raise memeory
	retention freq back to 270. i would rather have power loss than
	issues with the bloody memory faults

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/base/base.h, drivers/base/dd.c,
	drivers/base/dma-coherent.c, drivers/base/dma-mapping.c,
	drivers/base/platform.c, include/asm-generic/dma-coherent.h,
	include/linux/device.h, include/linux/dma-mapping.h: revert those
	driver commits

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/base/platform.c: shit. gotta find that function

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/base/platform.c: drivers: platform: parse IRQ flags from
	resources. This fixes a regression from the net subsystem: After
	commit d52fdbb735c36a209f36a628d40ca9185b349ba7 "smc91x: retrieve
	IRQ and trigger flags in a modern way" a regression would appear on
	some legacy platforms that declare resource irqs like ours

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/base/platform.c: driver core/platform: remove unused
	implicit padding in platform_object

2017-04-11  robcore <robpatershuk@gmail.com>

	* Documentation/memory-hotplug.txt: dox

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/base/dd.c, include/linux/device.h: 
	driver-core-Inline-dev_set-get_drvdata.

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/base/dd.c: 
	driver-core-dev_get_drvdata-Don-t-check-for-NULL-dev

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/base/dd.c, include/linux/device.h: 
	driver-core-dev_set_drvdata-returns-void

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/base/base.h, drivers/base/dd.c, include/linux/device.h: 
	driver-core-Move-driver_data-back-to-struct-device

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/base/dma-contiguous.c: dox

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/base/dma-coherent.c, drivers/base/dma-mapping.c,
	include/asm-generic/dma-coherent.h, include/linux/dma-mapping.h:  DMA-API: Change dma_declare_coherent_memory() CPU address to
	 phys_addr_t

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/base/dd.c: drivers/base/dd.c incorrect pr_debug()
	parameters

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: 
	Revert-driver-core-synchronize-device-shutdown.

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, kernel/sys.c, mm/mmap.c: REVERT - mm -
	check_data_rlimit/may_adjust_brk helpers

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/devices-8064.c,
	arch/arm/mach-msm/devices-8960.c, arch/arm/mach-msm/gdsc.c,
	arch/arm/mach-msm/hotplug.c: some timer updates in platform (changed
	kgsl reset delay to 1 microsecond due to our incredibly fast
	scheduling algo, brought the gdsc timeout back to 10 from 100) and
	reduced the 8960 L2 cache size back to its original 4k

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: perhaps, due to the
	conversion at hand, i need to name my vsyscall func accordingly

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: vsyscall: convert raw
	spinlocks to normal ones and normal write_seqcount funcs to raw.

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/Makefile, arch/arm/mach-msm/Makefile.boot,
	arch/arm/mach-msm/headsmp.S: msm makefile cleanups

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/avs.c: update avs.c

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/scsi/sg.c: sg: fix EWOULDBLOCK errors with scsi-mq

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: REVERT -
	sched-Extend-update_task_ravg-to-accept-wallclock (for now, further
	investigation needed but i have a hunch about that vsyscall routine)

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: update_vsyscall_arm:
	restore original intented comparator function of the *seqnum vector
	sequence increment.

2017-04-11  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c, include/linux/cpu.h, include/linux/sched.h,
	include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sysctl.c, ref2.txt: possed

2017-04-11  robcore <robpatershuk@gmail.com>

	* pos.sh: actually prepped it

2017-04-11  robcore <robpatershuk@gmail.com>

	* pos.sh: gonna pos to one commit above the last working
	(sched_set/get_busy

2017-04-11  robcore <robpatershuk@gmail.com>

	* ref2.txt: updated ref with most recent reference commit

2017-04-11  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c: sysfs - im giving all drivers the ability to
	create and remove groups

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c: 
	sched-Use-historical-load-for-freq-governor-input

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: window-stats: apply scaling to full
	elapsed windows

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sysctl.c:  sched: notify cpufreq on over/underprovisioned CPUs

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sched/sched.h, kernel/sysctl.c: sched: Introduce spill
	threshold tunables to manage overcommitment

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sysctl.c: 
	sched-add-migration-load-change-notifier-for-freq-change

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Limit-MAX_PINNED_INTERVAL-for-more-freqs

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Help out higher capacity CPUs
	when they are overcommitted

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	sched-rt-Introduce-power-aware-scheduling-for-rt

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: balance power inefficient CPUs with
	one task

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-check-for-power-inefficient-task-placement

2017-04-11  robcore <robpatershuk@gmail.com>

	* ref2.txt: ref for where im at, IT BOOTS!!!! FINALLY GOT THIS

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-run-idle_balance-on-most-power-efficient-CPU

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, kernel/sched/fair.c: sched: add hook for
	platform-specific CPU power

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sysctl.c: sched: add power aware scheduling sysctl

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Extend update_task_ravg() to accept
	wallclock as argument

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: sched: add sched_get_busy, sched_set_window
	APIs

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-window-stats-adjust-RQ-curr-prev-sums-on-task

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched: window-stats:
	Add aggregated runqueue windowed stats

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: window-stats: Do not account wait time

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-8064-display.c: revert AV phy timer

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: REVERT - dev kmsg to write_iter

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sys.c, mm/mmap.c: mm-use-may_adjust_brk-helper

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h: mm-introduce-check_data_rlimit-helper

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/base/power/qos.c, include/linux/pm_qos.h,
	kernel/power/qos.c: REVERT pm qos

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sys.c, mm/mmap.c: REVERT - brk-helper

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: this is the one that has historically failed
	for us....

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/base/power/qos.c, include/linux/pm_qos.h,
	kernel/power/qos.c: QoS: Modify data structures and function
	arguments for scalability.

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/sys.c, mm/mmap.c: mm: use may_adjust_brk helper

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: switch-dev-kmsg-to-write_iter.

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-Use-cond_resched_rcu_qs-macro

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-Add-quiescent-state-between-work-items

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-8064-display.c, kernel/power/suspend.c: 
	PM-sleep-Rename-platform-suspend-resume-functions

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/include/mach/cpufreq.h: IT BOOTS!! AND WORKS!
	NSEC-BASED TASK ACCOUNTING BABY! ps also removed useless
	set_cpu_min_lock because only alu-t-boost uses it and i should
	probably incorporate hardlimit/cpuboost/alu t

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/delayacct.c: delayacct-Remove-braindamaged-type-conversions

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/delayacct.c: 
	delayacct-Make-accounting-nanosecond-based

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/acct.c, kernel/fork.c,
	kernel/tsacct.c: sched-Make-task-start_time-nanoseconds-based

2017-04-11  robcore <robpatershuk@gmail.com>

	* fs/proc/array.c, include/linux/sched.h, kernel/fork.c: 
	sched-Make-task-real_start_time-nanoseconds-based

2017-04-11  robcore <robpatershuk@gmail.com>

	* block/blk-cgroup.c, include/linux/cgroup.h, kernel/cgroup.c: 
	REVERT cgroup-update-the-meaning-of-cftype-max_write_len.

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: oops it is from_cgrp

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: oops renamed from_cg to from_cgroup

2017-04-11  robcore <robpatershuk@gmail.com>

	* block/blk-cgroup.c, include/linux/cgroup.h, kernel/cgroup.c,
	kernel/cgroup_freezer.c, kernel/cpuset.c, kernel/events/core.c,
	kernel/sched/core.c: 
	cgroup-drop-skip_css-from-cgroup_taskset_for_each

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-move-css_set_rwsem-locking-outside-of-cgroup

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: separate out put_css_set_locked() and
	remove put_css_set_taskexit()

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: FINALLY NOW WE CAN HAVE
	NICE THINGS!!! cgroup: remove css_scan_tasks() (if it works)

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: make css_set_lock a rwsem and rename it
	to css_set_rwsem

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: reimplement cgroup_transfer_tasks()
	without using css_scan_tasks()

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cpuset.c,
	mm/memcontrol.c: cgroup-implement-cgroup_has_tasks-

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: relocate cgroup_enable_task_cg_lists()

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: enable task_cg_lists on the first cgroup
	mount

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: relocate functions in preparation of
	kernfs conversion

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-misc-preps-for-kernfs-conversion.

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, mm/memory-failure.c: 
	cgroup: introduce cgroup_ino()

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-update-the-meaning-of-cftype-max_write_len

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: factor out cgroup_setup_root() from
	cgroup_mount()

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: revert and hooold up

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-introduce-cgroup_init-exit_cftypes

2017-04-11  robcore <robpatershuk@gmail.com>

	* block/blk-cgroup.c, include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup: update the meaning of cftype->max_write_len

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: refactor my loop in cgroup_create...fingers
	crossed

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: revert -
	cgroup-update-the-meaning-of-cftype-max_write_len

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: update the
	meaning of cftype->max_write_len

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: make
	cgroup_subsys->base_cftypes use cgroup_add_cftypes()

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: update cgroup name handling

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: a little more

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: restructure locking and error handling
	(and fix some of my custom logic

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-release-cgroup_mutex-over-file-removals

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: introduce cgroup_tree_mutex

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/events/core.c,
	mm/memcontrol.c: cgroup: improve css_from_dir() into
	css_tryget_from_dir()

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c,
	include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	fixed up vsyscall stuff properly except with one hack for
	wall_to_monotinic

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/seqlock.h: seqcount: Add raw_write_seqcount_latch()

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: reverted

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: oops

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c, arch/x86/kernel/tsc.c,
	include/linux/timekeeper_internal.h, kernel/time/Kconfig,
	kernel/time/timekeeping.c, kernel/time/timekeeping_internal.h: holy
	shit this is way easier than i made it previously

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/time/clocksource.c, kernel/time/timekeeping.c,
	kernel/time/timekeeping_internal.h: 
	clocksource-Make-delta-calculation-a-function

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, include/linux/timekeeping.h,
	kernel/time/timekeeping.c: timekeeping-Provide-ktime_get_raw

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/char/hangcheck-timer.c: -hangcheck-timer-Use-ktime_get_ns

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Simplify-timekeeping_clocktai;

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: timekeeping-Simplify-getboottime.

2017-04-11  robcore <robpatershuk@gmail.com>

	* drivers/misc/ioc4.c: -misc-ioc4-Use-ktime_get_ns

2017-04-11  robcore <robpatershuk@gmail.com>

	* fs/lockd/mon.c: fs-lockd-Use-ktime_get_ns

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/time/time.c: time-Export-nsecs_to_jiffies

2017-04-11  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: convert arm vsyscall old

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h: 
	timekeeping-Provide-ktime_get-_ns-helpers

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/exit.c, kernel/workqueue.c: and more workqueue and
	kernel/exit

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/gfp.h, include/linux/memcontrol.h,
	include/linux/slab.h, include/linux/slub_def.h,
	include/linux/thread_info.h, include/trace/events/gfpflags.h,
	kernel/fork.c, kernel/workqueue.c, mm/Makefile, mm/page_alloc.c,
	mm/slab_common.c, mm/slub.c, mm/vmalloc.c, mm/zbud.c: REVERT some mm
	and workqueue commits

2017-04-11  robcore <robpatershuk@gmail.com>

	* fs/timerfd.c: timerfd-Use-ktime_mono_to_real

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Provide-ktime_mono_to_any.

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: 
	timekeeping-Use-ktime-based-data-for-ktime_get_update

2017-04-11  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: timekeeping: Use ktime_t data for
	ktime_get_update_offsets_now()

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Use-ktime_t-based-data-for-ktime_get_clocktai

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Use-ktime_t-based-data-for-ktime_get_bool

2017-04-11  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Use-ktime_t-based-data-for-ktime_get_real

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/time.c: more time
	hax

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/time/Kconfig: fixed kconfig

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/Kconfig,
	kernel/time/Makefile, kernel/time/timekeeping.c: fixin shit

2017-04-10  robcore <robpatershuk@gmail.com>

	* ref2.txt: ref

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping: Provide ktime_get_with_offset()

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: timekeeping: Use ktime_t based data

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping-Provide-internal-ktime_t-based-data

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: timekeeping: Use timekeeping_update()
	instead of memcpy()

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping: Cache optimize struct timekeeper

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeper: move tk_xtime to core code

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/ntp.c,
	kernel/time/timekeeping.c: timekeeping: Provide timespec64 based
	interfaces

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/hrtimer.h, include/linux/ktime.h,
	include/linux/time.h, include/linux/timekeeping.h,
	kernel/time/hrtimer.c, kernel/time/posix-timers.c,
	kernel/time/tick-internal.h, kernel/time/time.c,
	kernel/time/timekeeping.h: time: Consolidate the time accessor
	prototypes

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/ntp.c,
	kernel/time/ntp_internal.h, kernel/time/timekeeping.c,
	kernel/time/timekeeping_debug.c, kernel/time/timekeeping_internal.h: 
	timekeeping: Convert timekeeping core to use timespec64s

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/ktime.h, include/linux/time64.h, kernel/time/time.c: 
	time: More core infrastructure for timespec64: Helper and conversion
	functions for timespec64.

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/time.h, include/linux/time64.h: time64: Add time64.h
	header and define struct timespec64

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/ktime.h: ktime: Change ktime_set() to take 64bit
	seconds value

2017-04-10  robcore <robpatershuk@gmail.com>

	* ref2.txt: another ref

2017-04-10  robcore <robpatershuk@gmail.com>

	* ref2.txt: updated ref2

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/ktime.h, include/linux/time.h, kernel/time/Kconfig,
	kernel/time/hrtimer.c, kernel/time/timekeeping.c, mm/memcontrol.c: 
	time - kill non-scalar ktime_t implementation (does not affect us we
	use it)

2017-04-10  robcore <robpatershuk@gmail.com>

	* mm/hugetlb_cgroup.c: hugetlb_cgroup-convert-away-from-cftype-read.

2017-04-10  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/porting, arch/alpha/kernel/osf_sys.c,
	drivers/base/core.c, drivers/base/driver.c, fs/autofs4/root.c,
	fs/coda/dir.c, fs/compat.c, fs/ecryptfs/file.c,
	fs/exportfs/expfs.c, fs/ext2/dir.c, fs/libfs.c, fs/logfs/dir.c,
	fs/minix/dir.c, fs/namespace.c, fs/nfsd/nfs4recover.c,
	fs/nfsd/vfs.c, fs/readdir.c, fs/sysfs/bin.c, fs/sysfs/dir.c,
	fs/sysfs/file.c, fs/sysfs/group.c, fs/sysfs/inode.c,
	fs/sysfs/mount.c, fs/sysfs/symlink.c, fs/sysfs/sysfs.h,
	fs/sysv/dir.c, fs/ufs/dir.c, include/linux/fs.h,
	include/linux/sysfs.h, include/linux/user_namespace.h,
	kernel/user.c, kernel/user_namespace.c: possed

2017-04-10  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-04-10  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, fs/sysfs/mount.c, include/linux/fs.h,
	include/linux/user_namespace.h, kernel/user.c,
	kernel/user_namespace.c: 
	userns-Better-restrictions-on-when-proc-and-sysfs

2017-04-10  robcore <robpatershuk@gmail.com>

	* fs/sysfs/bin.c, fs/sysfs/dir.c, fs/sysfs/file.c,
	fs/sysfs/group.c, fs/sysfs/sysfs.h: more of the same

2017-04-10  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c, fs/sysfs/file.c, fs/sysfs/inode.c,
	fs/sysfs/symlink.c: moar

2017-04-10  robcore <robpatershuk@gmail.com>

	* fs/sysfs/bin.c, fs/sysfs/dir.c, fs/sysfs/file.c,
	fs/sysfs/group.c, fs/sysfs/inode.c, fs/sysfs/mount.c,
	fs/sysfs/symlink.c: space, dox, cleanup

2017-04-10  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c: sysfs: group.c: move EXPORT_SYMBOL_GPL() to the
	proper location

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, drivers/base/driver.c, fs/sysfs/group.c,
	include/linux/sysfs.h: sysfs: add sysfs_create/remove_groups()

2017-04-10  robcore <robpatershuk@gmail.com>

	* fs/compat.c, fs/exportfs/expfs.c, fs/gfs2/export.c,
	fs/nfsd/vfs.c, fs/readdir.c, include/linux/fs.h: reverted

2017-04-10  robcore <robpatershuk@gmail.com>

	* fs/compat.c, fs/exportfs/expfs.c, fs/gfs2/export.c,
	fs/nfsd/vfs.c, fs/readdir.c, include/linux/fs.h: revert me

2017-04-10  robcore <robpatershuk@gmail.com>

	* fs/logfs/dir.c: readdir-convert-logfs

2017-04-10  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c: readdir-convert-sysfs

2017-04-10  robcore <robpatershuk@gmail.com>

	* fs/autofs4/root.c, fs/libfs.c, include/linux/fs.h: [readdir]
	switch dcache_readdir() users to ->iterate()

2017-04-10  robcore <robpatershuk@gmail.com>

	* fs/ext2/dir.c, fs/minix/dir.c, fs/sysv/dir.c, fs/ufs/dir.c: 
	readdir-simple-local-unixlike-switch-to-iterate.;

2017-04-10  robcore <robpatershuk@gmail.com>

	* fs/coda/dir.c, fs/compat.c, fs/exportfs/expfs.c,
	fs/nfsd/nfs4recover.c, fs/readdir.c, include/linux/fs.h:  [readdir] introduce ->iterate(), ctx->pos, dir_emit()

2017-04-10  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/porting, arch/alpha/kernel/osf_sys.c,
	fs/compat.c, fs/ecryptfs/file.c, fs/exportfs/expfs.c,
	fs/nfsd/nfs4recover.c, fs/nfsd/vfs.c, fs/readdir.c,
	include/linux/fs.h: [readdir] introduce iterate_dir() and
	dir_context

2017-04-10  robcore <robpatershuk@gmail.com>

	* mm/Makefile, mm/vmalloc.c, mm/zbud.c: check the start->end logic
	in memory (holy that was fucking stupid)

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/slub_def.h, mm/slub.c: a couple mem fixups

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/slub_def.h: remove an extraneous GFP_KMEMCG

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-remove-wakeup-from-worker_set_flags

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: orkqueue-remove-an-unneeded-UNBOUND-test;

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/mm_types.h, init/Kconfig, kernel/exit.c,
	kernel/fork.c: replace remaining MM_OWNER configs with MEMCG

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/gfp.h, include/linux/memcontrol.h,
	include/linux/slab.h, include/linux/thread_info.h,
	include/trace/events/gfpflags.h, kernel/fork.c, mm/page_alloc.c,
	mm/slab_common.c, mm/slub.c: mm: get rid of __GFP_KMEMCG

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: 
	cpuset-update-cpuset-effective_-cpus-mems-at-hotplug

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: 
	cpuset-add-cs-effective_cpus-and-cs-effective_mems.

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: cpuset,mempolicy: fix sleeping function called
	from invalid context

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-sanity-check-pool-cpu-in-wq_worker_sleep

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-use-pool-cpu-0-to-stand-for-an-unbound-pool

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: memcg: optimize the "Search everything else" loop
	in mm_update_next_owner()

2017-04-10  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c,
	arch/arm/kernel/update_vsyscall_arm.h,
	drivers/battery/max77693_charger.c, drivers/battery/sec_battery.c: 
	removed super unneccessary update_syscalL_arm.h header, and reverted
	battery back to euro build style because i think canadian is
	overkill

2017-04-10  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: holy shit i think this will
	work

2017-04-10  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c,
	arch/arm/kernel/update_vsyscall_arm.h: gonna try arm vsyscall with
	updated seq logic

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: revert that doubled numa in my stupid fucking
	fair sched again

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, drivers/base/memory.c,
	drivers/base/power/sysfs.c, drivers/base/regmap/regmap-debugfs.c,
	include/asm-generic/bitops/lock.h,
	include/asm-generic/cmpxchg-local.h,
	include/asm-generic/cputime_jiffies.h,
	include/asm-generic/cputime_nsecs.h,
	include/asm-generic/dma-mapping-common.h,
	include/asm-generic/early_ioremap.h, include/asm-generic/fixmap.h,
	include/asm-generic/gpio.h, include/asm-generic/memory_model.h,
	include/asm-generic/preempt.h, include/asm-generic/sections.h,
	include/asm-generic/signal.h, include/asm-generic/uaccess.h,
	include/asm-generic/unistd.h, include/asm-generic/vmlinux.lds.h,
	kernel/sched/core.c, kernel/sched/fair.c: possed

2017-04-10  robcore <robpatershuk@gmail.com>

	* pos.sh: possing again, nothing is booting

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/preempt.h: reverted include/preempt for now

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/asm-generic/bitops/lock.h,
	include/asm-generic/cmpxchg-local.h,
	include/asm-generic/cputime_jiffies.h,
	include/asm-generic/cputime_nsecs.h,
	include/asm-generic/dma-mapping-common.h,
	include/asm-generic/early_ioremap.h, include/asm-generic/fixmap.h,
	include/asm-generic/gpio.h, include/asm-generic/memory_model.h,
	include/asm-generic/preempt.h, include/asm-generic/sections.h,
	include/asm-generic/signal.h, include/asm-generic/uaccess.h,
	include/asm-generic/unistd.h, include/asm-generic/vmlinux.lds.h,
	include/linux/preempt.h: a bunch asm-generic/include header
	fixes...though i am going to revert the preempt ones quickly because
	that is a project

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/domain.c, drivers/base/power/main.c,
	drivers/base/power/opp.c, include/linux/pm.h,
	include/linux/pm_runtime.h: possed

2017-04-10  robcore <robpatershuk@gmail.com>

	* pos.sh: possing the power commits again

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: revert the task init

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: Rob hax - fix deltas for
	inc/dec nr_running in fair.c, and initialize entity runnable average
	on fair_sched_group registration

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: quickly inspecting my scheduling for
	duplicated code i might have

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: fixup my derpy transition to async
	runtime/generic pm

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: main - fix my forward declaration

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/opp.c: PM-OPP-discard-duplicate-OPPs.

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/opp.c: 
	PM-OPP-fix-incorrect-OPP-count-handling-in-of_init

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/linux/pm.h,
	include/linux/pm_runtime.h: PM / sleep: Mechanism to avoid resuming
	runtime-suspended devices unnecessarily

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/opp.c: PM / OPP: Remove cpufreq wrapper
	dependency on internal data organization

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/runtime.c: reverted

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/runtime.c: ohhh have it

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/domain.c: 
	-PM-domains-Turn-latency-warning-into-debug-message

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: 
	PM-sleep-Asynchronous-threads-for-suspend_late;

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: 
	PM-sleep-Asynchronous-threads-for-suspend_noirq.;

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: PM / sleep: Asynchronous threads for
	resume_early

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: PM / sleep: Asynchronous threads for
	resume_noirq

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/linux/pm.h: PM / sleep: Two
	flags for async suspend_noirq and suspend_late

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/power/opp.c: PM-OPP-Export-opp_add.

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, drivers/base/memory.c,
	drivers/base/power/sysfs.c, drivers/base/regmap/regmap-debugfs.c: 
	driver-core-replace-strict_strto-with-kstrtoul

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdp.c: naw dont trust it

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdp.c: TEST - do not start LUT for overlay0

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/mmc/host/msm_sdcc.c, mm/page_alloc.c: nope those are no
	good

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/mmc/host/msm_sdcc.c: HACK - remove SOTP_REQUEST from
	msm_sdcc

2017-04-10  robcore <robpatershuk@gmail.com>

	* drivers/mmc/host/msm_sdcc.c: HACK -
	mmc-msm_sdcc-Use-IRQF_NO_THREAD

2017-04-10  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: HACK fix zone brokenness

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-protect-modifications-to-cgroup_idr

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: remove cgroup_root_mutex

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: update locking in cgroup_show_options()

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: rename
	cgroup_subsys->subsys_id to ->id

2017-04-10  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, include/linux/cgroup_subsys.h,
	include/linux/hugetlb_cgroup.h, include/linux/memcontrol.h,
	include/net/cls_cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, kernel/events/core.c, kernel/sched/core.c,
	kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c, mm/memcontrol.c,
	net/ipv4/tcp_memcontrol.c: cgroup: clean up cgroup_subsys names and
	initialization

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: 
	printk-fix-lockdep-instrumentation-of-console_sem

2017-04-10  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: im sure they ended up doing something about this
	upstream, but for now include export.h in lieu of missing module
	support

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, include/linux/cgroup_subsys.h,
	kernel/cgroup.c: -cgroup-drop-module-support

2017-04-09  robcore <robpatershuk@gmail.com>

	* drivers/scsi/scsi.c, kernel/cgroup.c: cgroup: fix locking in
	cgroup_cfts_commit()

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/async.h, kernel/async.c: 
	async-rename-and-redefine-async_func_ptr.

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/async.c: async: simplify lowest_in_progress()

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/async.c: async-initialise-list-heads-to-fix-crash

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/async.c: async: replace list of active domains with global
	list of pending items

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/async.h, kernel/async.c: 
	async-keep-pending-tasks-on-async_domain-and-remove-async_running

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/async.c: async-use-ULLONG_MAX-for-infinity-cookie-value

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/async.h, kernel/async.c: async: bring sanity to the
	use of words domain and running

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/async.c: async: fix __lowest_in_progress()

2017-04-09  robcore <robpatershuk@gmail.com>

	* drivers/scsi/scsi.c, include/linux/async.h, kernel/async.c: async:
	make async_synchronize_full() flush all work regardless of domain

2017-04-09  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/cpu.c,
	kernel/printk/printk.c: house keeping - remove the annoying console
	suspend message, use pr_debug for smp up/down work (printing slows
	down suspend), and return logbuffer shift back to 18

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-use-an-ordered-workqueue-for-cgroup-destruct

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: trivial style updates

2017-04-09  robcore <robpatershuk@gmail.com>

	* drivers/md/bcache/request.c, include/linux/cgroup.h,
	mm/page_cgroup.c: cgroup-remove-stray-references-to-css_id

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-don-t-recycle-cgroup-id-until-all-csses-have-been-destroyed

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c:  cgroup: fix fail path in cgroup_load_subsys()

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-fix-missing-unlock-on-error-in-cgroup_load_subsys

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: remove
	for_each_root_subsys()

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: gonna try out allow_attach again

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-implement-for_each_css

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-factor-out-cgroup_subsys_state-creation

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: combine css handling loops in
	cgroup_create()

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-reorder-operations-in-cgroup_create

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-make-for_each_subsys-useable-under-cgroup_root

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: css iterations and css_from_dir() are
	safe under cgroup_mutex

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-unify-pidlist-and-other-file-handling

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, kernel/sched/core.c, kernel/sched/cpuacct.c,
	mm/memcontrol.c, security/device_cgroup.c:  cgroup: replace cftype->read_seq_string() with cftype->seq_show()

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-remove-cftype-release

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-don-t-skip-seq_open-on-write-only-opens

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-fix-cgroup_subsys_state-leak-for-seq_files;;

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-unexport-cgroup_css-and-remove-__file_cft

2017-04-09  robcore <robpatershuk@gmail.com>

	* fs/9p/vfs_dentry.c, fs/configfs/dir.c, fs/hostfs/hostfs_kern.c,
	fs/libfs.c, fs/proc/generic.c, fs/proc/namespaces.c,
	include/linux/fs.h, kernel/cgroup.c, net/sunrpc/rpc_pipe.c: fs -
	consolidate simple d_delete instances again

2017-04-09  robcore <robpatershuk@gmail.com>

	* Documentation/arm/memory.txt, arch/arm/include/asm/fixmap.h,
	arch/arm/include/asm/highmem.h, arch/arm/mm/highmem.c,
	arch/arm/mm/mmu.c: revert those highmem experiments

2017-04-09  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/highmem.c: REVERT - that last one, someone wasnt
	paying attention...well a couple of people

2017-04-09  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/highmem.c: ARM: mm: fixmap index for highmem starts
	from FIX_KMAP_BEGIN

2017-04-09  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/fixmap.h, arch/arm/mm/highmem.c,
	arch/arm/mm/mmu.c: ARM: expand fixmap region to 3MB

2017-04-09  robcore <robpatershuk@gmail.com>

	* Documentation/arm/memory.txt, arch/arm/include/asm/fixmap.h,
	arch/arm/include/asm/highmem.h, arch/arm/mm/highmem.c,
	arch/arm/mm/mmu.c: ARM: 8031/2: change fixmap mapping region to
	support 32 CPUs

2017-04-09  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/fixmap.h, arch/arm/mm/highmem.c: ARM: 8031/1:
	fixmap: remove FIX_KMAP_BEGIN and FIX_KMAP_END

2017-04-09  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: fix my onslaught of ws prints

2017-04-09  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: reduce log buffer again

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cool

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: possed

2017-04-09  robcore <robpatershuk@gmail.com>

	* pos.sh: possing quickly

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c:  i think i missed one or two

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-implement-for_each_css;

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-factor-out-cgroup_subsys_state-creation

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-combine-css-handling-loops-in-cgroup_create

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-reorder-operations-in-cgroup_create

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	-cgroup-make-for_each_subsys-useable-under-cgroup_root

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: generalize cgroup_pidlist_open_file

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-unify-cgroup_write_X64-and-cgroup_write_string

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-remove-cftype-read-read_map-and-write.

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-don-t-guarantee-cgroup.procs-is-sorted-if-sane

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-remove-cgroup_pidlist-use_count

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: -cgroup-remove-cgroup_pidlist-rwsem

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-refactor-cgroup_pidlist_find

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	-cgroup-introduce-struct-cgroup_pidlist_open_file.

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-implement-delayed-destruction-for-cgroup_pidlist

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-remove-cftype-release.

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-don-t-skip-seq_open-on-write-only-opens-on-pi

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-fix-cgroup_subsys_state-leak-for-seq_files

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-unexport-cgroup_css-and-remove-__file_cft

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, include/linux/vmpressure.h,
	kernel/cgroup.c, mm/memcontrol.c: 
	cgroup-memcg-move-cgroup-event_list-_lock-and-event

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, init/Kconfig, kernel/cgroup.c,
	mm/memcontrol.c: 
	cgroup-memcg-move-cgroup_event-implementation-to-mem

2017-04-09  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c, kernel/cgroup.c,
	kernel/power/suspend.c, kernel/printk/printk.c: turn off kmsg dump
	again by default

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-fix-cgroup_create-error-handling-path

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-fix-cgroup-post-order-descendant-walk-of-empty-subtree

2017-04-09  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: comment out freeze.h header in
	wakeup.c for now

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: fixed suspend.c

2017-04-09  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: disable my (assuming really broken)
	freezer fix, and add in a pm_wakeup_clear if wakeup_source_blocker
	is enabled

2017-04-09  robcore <robpatershuk@gmail.com>

	* fs/Makefile, fs/kernfs/Makefile, fs/kernfs/dir.c,
	fs/kernfs/file.c, fs/kernfs/inode.c, fs/kernfs/mount.c,
	fs/kernfs/symlink.c, include/linux/kernfs.h, include/linux/sysfs.h: 
	sysfs-kernfs-add-skeletons-for-kernfs;

2017-04-09  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c: backport hack

2017-04-09  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c: sysfs: make __sysfs_add_one() fail if the parent
	isnt a dir

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: there fixed up my cgroup.c

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: delete a stupid bracket

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c, kernel/freezer.c, kernel/sched/core.c: revert the
	"fixups" now that i found the actual issue

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: SON OF A BITCH

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/init_task.h, kernel/cgroup.c, kernel/freezer.c,
	kernel/sched/core.c: some fixups

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, include/linux/eventfd.h, kernel/cgroup.c: 
	Kill-indirect-include-of-file.h-from-eventfd.h

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-fix-cgroup_css-invocation-in-css_from_id.

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-make-cgroup_write_event_control-use-css_from_id

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-make-cgroup_event-hold-onto-cgroup_subsys_state

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	-cgroup-implement-CFTYPE_NO_PREFIX

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: make cgroup_css() take cgroup_subsys *
	instead and allow NULL subsys

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/events/core.c: 
	cgroup: rename cgroup_css_from_dir() to css_from_dir() and update
	its syntax

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-fix-cgroup_write_event_control.

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-fix-subsystem-file-accesses-on-the-root-cgroup

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-change-cgroup_from_id-to-css_from_id

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-use-css_get-in-cgroup_create-to-check-CSS_ROOT

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: RCU protect each
	cgroup_subsys_state release

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-move-subsys-file-removal-to-kill_css.

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-factor-out-kill_css.

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: decouple
	cgroup_subsys_state destruction from cgroup destruction

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-replace-cgroup-css_kill_cnt-with-nr_css (also convert
	schedule work to use the independant workqueue

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: bounce cgroup_subsys_state ref kill
	confirmation to a work item

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-move-cgroup-subsys-assignment-to-online_css

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: reorganize css init / exit paths

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: add __rcu
	modifier to cgroup->subsys[]

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: make cgroup_file_open() rcu_read_lock()
	around cgroup_css() and add cfent->css

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c, kernel/events/core.c: cgroup:
	cgroup_css_from_dir() now should be called with RCU read locked

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-add-cgroup_subsys_state-parent

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: rename
	cgroup_subsys_state->dput_work and its callback function

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-always-use-cgroup_css

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, kernel/sched/sched.h, mm/memcontrol.c,
	security/device_cgroup.c: 
	cgroup-make-css_for_each_descendant-and-friends-include-origin -
	also fixed a derp in memcontrol

2017-04-09  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: fix a spelling derp in wakeup.c

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: fixed up my platform_suspend_again which
	is currently unused, but it gives me an idea for a runtime sysfs
	toggle in partialresume

2017-04-09  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c, kernel/freezer.c,
	kernel/power/suspend.c: suspend - replaced my half-hearted
	"freezing_in_progress" notifier with a pre-existing function that
	does it for us and can be called from any context: "pm_freezing."
	Also trying out making the waitqueue task_uninteruptible (it is like
	a 15msec bloody process).

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/capability.c, kernel/freezer.c: housecleaning, exported
	bool "pm_freezing" taken from mainline, and realize now that it is
	held with a mutex lock that it is safer than my freezing_in_progress
	hack so I am going to replace it asap.  also turned off an annoying
	message about our deprecated capability lib

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: printk - for Rob debugging, make
	always_kmsg_dump true by default (still configurable via module
	param of course)

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: unexport
	cgroup_css()

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: subsys allow
	attach can be converted now too i believe

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, kernel/events/core.c, kernel/sched/core.c: cgroup:
	make cgroup_taskset deal with cgroup_subsys_state instead of cgroup

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, include/linux/vmpressure.h,
	kernel/cgroup.c, mm/memcontrol.c, mm/vmpressure.c: 
	cgroup-make-cftype-un-register_event-deal-with-css

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, mm/memcontrol.c: cgroup: make task iterators deal
	with cgroup_subsys_state instead of cgroup cgroup_subsys_state
	instead of cgroup

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cpuset.c: cgroup:
	remove struct cgroup_scanner

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	mm/memcontrol.c: cgroup: make cgroup_task_iter remember the cgroup
	being iterated

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	mm/memcontrol.c: cgroup-rename-cgroup_iter-to-cgroup_task_iter.

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-relocate-cgroup_advance_iter

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, mm/memcontrol.c, security/device_cgroup.c: cgroup:
	make hierarchy iterators deal with cgroup_subsys_state instead of
	cgroup

2017-04-09  robcore <robpatershuk@gmail.com>

	* fs/fs_struct.c: hack around the fact that SEQCOUNT_ZERO shouldnt
	even exist in fs_struct without CONFIG_CPUSETS set.

2017-04-09  robcore <robpatershuk@gmail.com>

	* fs/dcache.c, fs/fs_struct.c, kernel/sched/core.c,
	net/ipv4/inetpeer.c: fix sched core and LEGACY_SEQ declarations
	after changes

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: revert allow attach back
	to cgroup for now

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-always-use-cgroup_next_child-to-walk-the-child

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-convert-cgroup_next_sibling-to-cgroup_next_child

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, include/linux/memcontrol.h,
	kernel/cgroup.c, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c,
	mm/memcontrol.c, mm/vmpressure.c, net/ipv4/tcp_memcontrol.c,
	net/sched/cls_cgroup.c, security/device_cgroup.c: cgroup: pass
	around cgroup_subsys_state instead of cgroup in file methods

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-add-cgroup-dummy_css.

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: pull in
	cgroup_allow_attach from galaxy s7 tree

2017-04-09  robcore <robpatershuk@gmail.com>

	* block/genhd.c, block/partition-generic.c, drivers/md/md.c,
	drivers/md/md.h, fs/cifs/dir.c, fs/dcache.c, fs/fs_struct.c,
	fs/namei.c, fs/nfs/namespace.c, fs/nfs/nfs4_fs.h,
	fs/nfs/nfs4proc.c, fs/nfs/nfs4state.c, fs/nfs/pnfs.c,
	include/linux/dcache.h, include/linux/fs.h,
	include/linux/fs_struct.h, include/linux/genhd.h,
	include/linux/netfilter/x_tables.h, include/linux/u64_stats_sync.h,
	kernel/auditsc.c, net/ipv4/netfilter/arp_tables.c,
	net/ipv4/netfilter/ip_tables.c, net/ipv6/netfilter/ip6_tables.c,
	net/netfilter/x_tables.c: revert my legacy seqs

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: THERE -
	cgroup-pin-cgroup_subsys_state-when-opening-a-cgroup

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/flex_proportions.h, lib/flex_proportions.c: use
	newer, locksafe version of seqcounter for flex props

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-add-subsys-backlink-pointer-to-cftype

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: REVERT -
	cgroup-pin-cgroup_subsys_state-when-opening-a-cgroup;

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h: finished up my converts

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/sched/sched.h: sched.h
	cgroup_subsys_state conversion

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c: doing my
	cgroup_subsys_state change now to make life easier

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: fucking garbage

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: fix my suspend again...again

2017-04-09  robcore <robpatershuk@gmail.com>

	* drivers/md/bcache/request.c, event_list[_lock],
	fs/9p/vfs_dentry.c, fs/configfs/dir.c, fs/hostfs/hostfs_kern.c,
	fs/libfs.c, fs/proc/generic.c, fs/proc/namespaces.c,
	include/linux/cgroup.h, include/linux/eventfd.h,
	include/linux/fs.h, include/linux/memcontrol.h,
	include/linux/vmpressure.h, init/Kconfig, kernel/cgroup.c,
	kernel/cgroup_freezer.c, kernel/cpuset.c, kernel/events/core.c,
	kernel/exit.c, kernel/power/suspend.c, kernel/sched/core.c,
	kernel/sched/cpuacct.c, kernel/sched/sched.h, mm/hugetlb_cgroup.c,
	mm/memcontrol.c, mm/page_cgroup.c, mm/vmpressure.c,
	net/ipv4/tcp_memcontrol.c, net/sched/cls_cgroup.c,
	net/sunrpc/rpc_pipe.c, security/device_cgroup.c: there

2017-04-09  robcore <robpatershuk@gmail.com>

	* pos.sh: okay ACTUALLY possing

2017-04-09  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, mm/vmpressure.c: fuck

2017-04-09  robcore <robpatershuk@gmail.com>

	* pos.sh: possing because i want to check out suspend

2017-04-09  robcore <robpatershuk@gmail.com>

	* net/sunrpc/rpc_pipe.c: god. damn. it.

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpuacct.c: fucking cpu accounting

2017-04-09  robcore <robpatershuk@gmail.com>

	* drivers/md/bcache/request.c, event_list[_lock],
	fs/9p/vfs_dentry.c, fs/configfs/dir.c, fs/hostfs/hostfs_kern.c,
	fs/libfs.c, fs/proc/generic.c, fs/proc/namespaces.c,
	include/linux/cgroup.h, include/linux/fs.h,
	include/linux/vmpressure.h, init/Kconfig, kernel/cgroup.c,
	kernel/cgroup_freezer.c, kernel/sched/core.c,
	kernel/sched/cpuacct.c, mm/memcontrol.c, mm/page_cgroup.c,
	net/sunrpc/rpc_pipe.c, security/device_cgroup.c: fuck it just allow
	attaching

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: i think those write locks were bad news, reverted

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: a few tweaks in cgroup

2017-04-09  robcore <robpatershuk@gmail.com>

	* mm/vmpressure.c: actually fixup vmpressure

2017-04-09  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: seeing as quick wakeup doesnt
	actually do anything, lets see what happens when we dont build it

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h: fix allow attach

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: looks like platform suspend again is
	interfering actually, cannot believe i didnt notice this before

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: fixup my subsys_cgroup_allow_attach

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/events/core.c, kernel/sched/core.c: 
	cgroup-drop-skip_css-from-cgroup_taskset_for_each again

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	fixup-destroy_work-that-i-was-scheduling-instead-of-queueing

2017-04-09  robcore <robpatershuk@gmail.com>

	* drivers/md/bcache/request.c, event_list[_lock],
	fs/9p/vfs_dentry.c, fs/configfs/dir.c, fs/hostfs/hostfs_kern.c,
	fs/libfs.c, fs/proc/generic.c, fs/proc/namespaces.c,
	include/linux/cgroup.h, include/linux/fs.h,
	include/linux/vmpressure.h, init/Kconfig, kernel/cgroup.c,
	kernel/cgroup_freezer.c, kernel/cpuset.c, kernel/events/core.c,
	kernel/power/suspend.c, kernel/sched/core.c,
	kernel/sched/cpuacct.c, mm/memcontrol.c, mm/page_cgroup.c,
	net/sunrpc/rpc_pipe.c, security/device_cgroup.c: possed

2017-04-09  robcore <robpatershuk@gmail.com>

	* pos.sh: possing back to the simple d_delete consolidations

2017-04-09  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/cgroup.c, mm/vmpressure.c,
	net/sunrpc/rpc_pipe.c: gotta pos a bit i think

2017-04-09  robcore <robpatershuk@gmail.com>

	* net/sunrpc/rpc_pipe.c: fix rpc_pipe after removed rpc ops

2017-04-09  robcore <robpatershuk@gmail.com>

	* mm/vmpressure.c: fixed vmpressure

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: fix my suspend implementation

2017-04-09  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: speaking of which, disable cpu
	accounting again

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpuacct.c: fixup changes to cpuacct_stats_show

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/sched/core.c: kill
	cgroup allow attach

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/events/core.c, kernel/sched/core.c: 
	-cgroup-drop-skip_css-from-cgroup_taskset_for_each

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: actually got cgroup compiling

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: fix locking in cgroup_cfts_commit()

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-fix-error-return-from-cgroup_create

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup - fix my modified error return val in
	cgroup_mount

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-use-an-ordered-workqueue-for-cgroup-destruction

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-trivial-style-updates

2017-04-09  robcore <robpatershuk@gmail.com>

	* drivers/md/bcache/request.c, include/linux/cgroup.h,
	mm/page_cgroup.c: cgroup-remove-stray-references-to-css_id

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: dont recycle cgroup id until all csses
	have been destroyed

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-fix-fail-path-in-cgroup_load_subsys.

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c:  cgroup: fix missing unlock on error in cgroup_load_subsys()

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-remove-for_each_root_subsys.

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-implement-for_each_css

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: factor out cgroup_subsys_state creation
	into create_css()

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-combine-css-handling-loops-in-cgroup_create

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c:  cgroup: reorder operations in cgroup_create()

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c:  cgroup: make for_each_subsys() useable under cgroup_root_mutex

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: css iterations and css_from_dir() are
	safe under cgroup_mutex

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: fix cgroup_create() error handling path

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-unify-pidlist-and-other-file-handling

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, mm/memcontrol.c,
	security/device_cgroup.c: 
	cgroup-replace-cftype-read_seq_string-with-cftype

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-attach-cgroup_open_file-to-all-cgroup-files

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-generalize-cgroup_pidlist_open_file

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: unify read path so that seq_file is
	always used

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-unify-cgroup_write_X64-and-cgroup_write_string

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-remove-cftype-read-read_map-and-write

2017-04-09  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: dont guarantee
	cgroup.procs is sorted if sane_behavior

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-remove-cgroup_pidlist-use_count

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-load-and-release-pidlists-from-seq_file-start

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-remove-cgroup_pidlist-rwsem.

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: reverted

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: no wonder i didnt actually apply the one before
	just checked it one sec

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-refactor-cgroup_pidlist_find;

2017-04-09  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	-cgroup-introduce-struct-cgroup_pidlist_open_file;

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-implement-delayed-destruction-for-cgroup_pidlist

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-remove-cftype-release

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-don-t-skip-seq_open-on-write-only-opens

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-fix-cgroup_subsys_state-leak-for-seq_files.

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-unexport-cgroup_css-and-remove-__file_cft

2017-04-08  robcore <robpatershuk@gmail.com>

	* event_list[_lock], include/linux/cgroup.h,
	include/linux/vmpressure.h, kernel/cgroup.c, mm/memcontrol.c: 
	cgroup, memcg: move cgroup->event_list[_lock] and event callbacks
	into memcg

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, init/Kconfig, kernel/cgroup.c,
	mm/memcontrol.c: cgroup, memcg: move cgroup_event implementation to
	memcg

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: fixup destroy_work that i was scheduling instead
	of using our dedicated queue

2017-04-08  robcore <robpatershuk@gmail.com>

	* fs/9p/vfs_dentry.c, fs/configfs/dir.c, fs/hostfs/hostfs_kern.c,
	fs/libfs.c, fs/proc/generic.c, fs/proc/namespaces.c,
	include/linux/fs.h, kernel/cgroup.c, net/sunrpc/rpc_pipe.c: this may
	break...consolidate simple ->d_delete() instances

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: kill css_id

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-fix-cgroup-post-order-descendant-walk

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/eventfd.h, kernel/cgroup.c: Kill indirect include of
	file.h from eventfd.h, use fdget() in cgroup.c

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c:  cgroup: fix rmdir EBUSY regression in 3.11

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-fix-cgroup_css-invocation-in-css_from_id

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-make-cgroup_write_event_control-use-css_from_id

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: make cgroup_event hold onto
	cgroup_subsys_state instead of cgroup

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-implement-CFTYPE_NO_PREFIX.

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: make cgroup_css() take cgroup_subsys
	instead and allow NULL subsys!

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/events/core.c: 
	cgroup: rename cgroup_css_from_dir() to css_from_dir() and update
	its syntax

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: fix cgroup_write_event_control()

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: fix subsystem file accesses on the root
	cgroup

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-change-cgroup_from_id-to-css_from_id;

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-RCU-protect-each-cgroup_subsys_state-release

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-move-subsys-file-removal-to-kill_css

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-factor-out-kill_css

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: decouple
	cgroup_subsys_state destruction from cgroup destruction

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: replace
	cgroup->css_kill_cnt with ->nr_css

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-bounce-cgroup_subsys_state-ref-kill-confirm

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: move
	cgroup->subsys[] assignment to online_css()

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: actually looks like the attach funcs are still
	using struct cgroup *cgrp at this point in the set

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: attempt to convert
	allow_attach for android to use cgroup_subsys_state *css

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-add-__rcu-modifier-to-cgroup-subsys

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: make cgroup_file_open() rcu_read_lock()
	around cgroup_css() and add cfent->css

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c, kernel/events/core.c: cgroup:
	cgroup_css_from_dir() now should be called with RCU read locked

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: add
	cgroup_subsys_state->parent

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: rename
	cgroup_subsys_state->dput_work and its callback function

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: always use cgroup_css()

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, mm/memcontrol.c, security/device_cgroup.c: cgroup:
	make css_for_each_descendant() and friends include the origin css in
	the iteration

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: unexport
	cgroup_css()

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, kernel/events/core.c, kernel/sched/core.c: cgroup:
	make cgroup_taskset deal with cgroup_subsys_state instead of cgroup

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, include/linux/vmpressure.h,
	kernel/cgroup.c, mm/memcontrol.c, mm/vmpressure.c: cgroup: make
	cftype->[un]register_event() deal with cgroup_subsys_state instead
	of cgroup

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, mm/memcontrol.c: cgroup: make task iterators deal
	with cgroup_subsys_state instead of cgroup

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c, kernel/cgroup_freezer.c, kernel/exit.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, kernel/sched/sched.h: 
	FINALLY finished my cgroup_subsys_state conversions! whoot! i know i
	will probably have to convert them back eventually...maybe not?
	anyhow, winning!

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: doing my thang

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h: struct struct :D

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: doing a proper conversion
	to cgroup_subsys_state from cgroup_css

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cpuset.c: 
	cgroup-remove-struct-cgroup_scanner.

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	mm/memcontrol.c: cgroup-make-cgroup_task_iter-remember-the-cgroup

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	mm/memcontrol.c: cgroup - rename cgroup_iter to cgroup_task_iter

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, mm/memcontrol.c, security/device_cgroup.c: cgroup:
	make hierarchy iterators deal with cgroup_subsys_state

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-always-use-cgroup_next_child-to-walk-the-child-path

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-convert-cgroup_next_sibling-to-cgroup_next_child

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, include/linux/memcontrol.h,
	kernel/cgroup.c, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c,
	mm/memcontrol.c, mm/vmpressure.c, net/ipv4/tcp_memcontrol.c,
	net/sched/cls_cgroup.c, security/device_cgroup.c: 
	cgroup-pass-around-cgroup_subsys_state-instead-of-cgroup

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-add-cgroup-dummy_css

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-pin-cgroup_subsys_state-when-opening-a-cgroup.

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: silly struct, how did you get in the
	scheduling core?

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: reverted

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: betcha this one is old

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: nope keep allow_attach
	functions as cgrp members for now

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c:  a couple missing onces

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h: fix header derp

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, kernel/events/core.c, kernel/sched/core.c,
	kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c, mm/memcontrol.c,
	net/core/netprio_cgroup.c, net/sched/cls_cgroup.c,
	security/device_cgroup.c: FINALLY pass around subsys state instead
	of cgrp

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h: fix parent struct as we still have
	cgroup_css instead of cgroup_subsys_state

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c,
	mm/memcontrol.c, security/device_cgroup.c: cgroup-add-css_parent.

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h: cgroup-implement-cgroup_from_id

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: reserve hierarchy_id

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup - dont use idr_remove_all

2017-04-08  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: a little on demand tweaking

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: converted cgroup_ida to idr the old fasioned way
	(hopefully works).

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: convert cgroup_ida to
	cgroup_idr again

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: bring back cgroup stuff

2017-04-08  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/gdsc.c: from msm hacks repo - use 100 ms timeout
	for gdsc

2017-04-08  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelli - remove my suspend
	handler

2017-04-08  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpuidle.c: actually that inapplicable cpuidle
	hack gave me the bright idea to include cpu_pm_enter() as well as
	use the msm driver data state_count var in initialization

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: duh rob, use your special
	"freezing_in_progress" condition instead of bothering with state
	garbage

2017-04-08  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpuidle.c,
	arch/arm/mach-msm/include/mach/cpuidle.h,
	arch/arm/mach-msm/no-pm.c, arch/arm/mach-msm/pm-8x60-hacked.c,
	arch/arm/mach-msm/pm-8x60.c, arch/arm/mach-msm/pm.h: reverted google
	hack

2017-04-08  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpuidle.c: hmmm gonna have to revert google hack
	for now

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: fixup machinex_suspend_again with the
	removal of the upstreamed idle code

2017-04-08  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpuidle.c,
	arch/arm/mach-msm/include/mach/cpuidle.h,
	arch/arm/mach-msm/no-pm.c, arch/arm/mach-msm/pm-8x60-hacked.c,
	arch/arm/mach-msm/pm-8x60.c, arch/arm/mach-msm/pm.h: msm hacked
	cpuidle/pm fix for drv/dev states

2017-04-08  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, include/linux/cpuidle.h,
	include/linux/suspend.h, kernel/power/suspend.c,
	kernel/sched/idle.c: REVERT - UPSTREAM: PM / sleep: Re-implement
	suspend-to-idle handling;

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: revert cgroup stuff while
	i quickly address some other stuff

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: fix ordering of ia_simple_remove

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: finished killing css_id

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: kill css_id

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: idr alloc for cgroups
	failed miserably

2017-04-08  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: a little ondemand tweaking

2017-04-08  robcore <robpatershuk@gmail.com>

	* lib/idr.c: i think the last spin_unlock in the mx_idr_alloc loop
	was superfluous

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: gonna try out cgroup_idr
	now that mx_alloc_idr is in place

2017-04-08  robcore <robpatershuk@gmail.com>

	* lib/idr.c: a little fixup to my special little idr alloc

2017-04-08  robcore <robpatershuk@gmail.com>

	* lib/idr.c: oops those arent static, also export the symbols

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, kernel/sched/core.c, kernel/sched/cpuacct.c,
	mm/hugetlb_cgroup.c, mm/memcontrol.c, security/device_cgroup.c: 
	revert cgroup garbage

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: reverted cgroup stuff,
	kept my cool attempt at idr alloc

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, include/linux/idr.h, kernel/cgroup.c,
	lib/idr.c: created a (maybe) genius idr alloc pseudo function, but
	am now at the mercy of a bunch of stupid fucking cgroup commits i
	made

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: kernel cgroup - convert
	ida to idr

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h: kill css_id again and just change the
	fuckin struct css to subsys_state

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c,
	mm/memcontrol.c, security/device_cgroup.c: cgroup-add-css_parent

2017-04-08  robcore <robpatershuk@gmail.com>

	* mm/hugetlb_cgroup.c: this is going to make my life easier -->
	hugetlb_cgroup: pass around @hugetlb_cgroup instead of cgroup

2017-04-08  robcore <robpatershuk@gmail.com>

	* .gitignore: in fact, add it to gitignore

2017-04-08  robcore <robpatershuk@gmail.com>

	* 2e39465abc4b7856a0ea6fcf4f6b4668bb5db877.patch.1: screw that file
	tho

2017-04-08  robcore <robpatershuk@gmail.com>

	* 2e39465abc4b7856a0ea6fcf4f6b4668bb5db877.patch.1,
	include/linux/cgroup.h, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c,
	mm/memcontrol.c, security/device_cgroup.c: revert that for a sec

2017-04-08  robcore <robpatershuk@gmail.com>

	* 2e39465abc4b7856a0ea6fcf4f6b4668bb5db877.patch.1,
	include/linux/cgroup.h, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c,
	mm/memcontrol.c, security/device_cgroup.c: ohhh

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: revert those workqueue ones for now, missing
	shit

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: huh?

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: determine NUMA node of workers
	accourding to the allowed cpumask

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: drop H from kworker names of
	unbound worker pools

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-add-wq_numa_tbl_len-and-wq_numa_possible

2017-04-08  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: this is what i have been
	missing all along,
	cgroup-add-subsystem-pointer-to-cgroup_subsys_state.

2017-04-08  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: bringing all cpus not online
	at suspend time is bringing the dsp core online every time which is
	probably bad for business, so we are instead bringing them up
	individually

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-move-pwq_pool_locking-outside-of-get-put

2017-04-08  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: screw fakeroot

2017-04-08  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: intelli - fix a typo, make
	machinex_suspend_prep conditional on intelli suspend method being
	disabled while i test it out, and most importantly, actually put it
	in the RIGHT FUCKING CALLBACK slot for state notifier (duh rob)

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: fix memory leak in
	apply_workqueue_attrs()

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: fix unbound workqueue attrs hashing
	/ comparison

2017-04-08  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: fix a bracket in intelli

2017-04-08  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: cpu - fix my logging for my own personal use

2017-04-07  robcore <robpatershuk@gmail.com>

	* build_kernel.sh, include/linux/cgroup.h, kernel/cgroup.c: REVERT
	the cgroup commit that was previously made

2017-04-07  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: Intelliplug 5.5 (only for
	supported SMP CPU PM kernels) - instead of putting sibling cores to
	sleep on suspend, bring them all online as the CPU PM core handles
	offlining and onlining cores while the system sleeps. also move the
	remove_down_lock workqueue above the rest of the functions that call
	it (apply...), and adjusted the tunables to be slightly more
	aggressive (except for touch boost, which has been altered to match
	our cpu boost driver).

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: kernel/cpu: missing synchronizations

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: fix to break the while loop in
	cgroup_attach_task() correctly

2017-04-07  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/entry-header.S, kernel/context_tracking.c: arm:
	Fix build error with context tracking calls

2017-04-07  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/hung_task.c, kernel/sysctl.c: 
	hung_task: Change sysctl_hung_task_check_count to int

2017-04-07  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: done it ebfore

2017-04-07  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: test building with fakeroot

2017-04-07  robcore <robpatershuk@gmail.com>

	* Makefile, drivers/gpu/msm/kgsl_sync.c, fs/sdcardfs/lookup.c,
	include/linux/module.h, kernel/futex.c, kernel/module.c,
	kernel/sched/debug.c, kernel/sched/fair.c, mm/frontswap.c,
	mm/vmstat.c: possed

2017-04-07  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: fixed

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: nah

2017-04-07  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, init/Kconfig, kernel/sched/core.c,
	kernel/sched/debug.c, kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sysctl.c: REVERT - all of that, we need this code for now

2017-04-07  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: there we go, knew i was missing something

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: name changed back to runnable_avg_period

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h, kernel/sysctl.c: some
	more hmp removal

2017-04-07  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/debug.c, kernel/sched/fair.c,
	kernel/sched/sched.h: REVERT -
	sched-Add-sched_avg-utilization_avg_contrib

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: revert that

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Calculate-CPUs-usage-statistic

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: some fixups to the reversions including our
	hacked inc/dec_nr_running

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: REVERT - more tinkering

2017-04-07  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, init/Kconfig, kernel/sched/core.c,
	kernel/sched/debug.c, kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sysctl.c: removed the entirety of HMP shit

2017-04-07  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c: right i think kfree handles everything now

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: 
	futex-Unlock-hb-lock-in-futex_wait_requeue_pi-error-

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: dox

2017-04-07  robcore <robpatershuk@gmail.com>

	* include/linux/module.h, kernel/module.c:  module: add within_module() function

2017-04-07  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c: drivers/input/evdev.c: dont kfree() a
	vmalloc address. If kzalloc() failed and then evdev_open_device()
	fails, evdev_open() will pass a vmallocated pointer to kfree.

2017-04-07  robcore <robpatershuk@gmail.com>

	* mm/frontswap.c: mm: frontswap: invalidate expired data on a
	dup-store failure

2017-04-07  robcore <robpatershuk@gmail.com>

	* fs/sdcardfs/lookup.c: TEST - sdcardfs: Remove stale dentries when
	reusing an inode.

2017-04-07  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_sync.c: msm-kgsl-fix-sync-file-error-handling

2017-04-07  robcore <robpatershuk@gmail.com>

	* mm/vmstat.c: use seq_puts instead of prints in  /proc/vmstat

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c: 
	Revert-sched-Avoid-throttle_cfs_rq-racing-with-period

2017-04-07  robcore <robpatershuk@gmail.com>

	* Makefile: kbuild: Remove useless warning while appending KCFLAGS

2017-04-07  robcore <robpatershuk@gmail.com>

	* net/wireless/scan.c: hold off on that for now actually

2017-04-07  robcore <robpatershuk@gmail.com>

	* net/wireless/scan.c: net/wireless: Fix kernel crash while doing
	iwlist scan

2017-04-07  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c: input: evdev: Move wake_lock_destroy call

2017-04-07  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/devices-8960.c: raise 8960 L2 cache buffer size

2017-04-07  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: nope rule number 1 never mess
	with hsic

2017-04-07  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: wake unlock...a driver we dont
	build anymore? no that cannot be it

2017-04-07  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/setup.c, kernel/sched/fair.c: oops in the pos i
	had reverted the for_each_possible change and left the sched/fair
	change. twas backwards. tis fixed

2017-04-07  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h, arch/arm/kernel/setup.c,
	arch/arm/kernel/topology.c, drivers/cpufreq/cpufreq.c,
	drivers/irqchip/irq-gic.c, include/linux/cpu_pm.h,
	include/linux/cpufreq.h, include/linux/sched.h,
	include/linux/sched/sysctl.h, init/Kconfig, kernel/cpu_pm.c,
	kernel/sched/core.c, kernel/sched/debug.c, kernel/sched/fair.c,
	kernel/sched/features.h, kernel/sched/sched.h, kernel/sysctl.c: 
	possed, but kept for_each_possible_cpu for proc/cpuinfo and the
	battery capacity test

2017-04-07  robcore <robpatershuk@gmail.com>

	* pos.sh: possing (except for two explained afterwards)

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: i
	think i brought back migration notification properly

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/features.h,
	kernel/sched/sched.h: more fixups

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: more shifting to this better code base

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: gotta add back migration notifier

2017-04-07  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: removed the majority of the hmp stuff i
	believe, lets see if i still have anything undefined

2017-04-07  robcore <robpatershuk@gmail.com>

	* drivers/irqchip/irq-gic.c, include/linux/cpu_pm.h,
	include/linux/sched.h, include/linux/sched/sysctl.h, init/Kconfig,
	kernel/cpu_pm.c, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h, kernel/sysctl.c: getting rid of hmp shit

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-fusion3-battery.c: raise the full
	condition to max(ish) capacity again)

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: temp dummy depends

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/sched.h: 
	more fixups

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fixup some garbage in fair...needs more.

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: and more

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: some pick me up in fair

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h, arch/arm/kernel/topology.c: arm
	topology update

2017-04-06  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: cpufreq: Max
	freq invariant scheduler load-tracking and cpu capacity support;

2017-04-06  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: 
	cpufreq-Frequency-invariant-scheduler-load-tracking-support

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h, arch/arm/kernel/topology.c: 
	revert that havent done the scheduler one yet

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h, arch/arm/kernel/topology.c: 
	arm-Update-arch_scale_cpu_capacity-to-reflect-change.

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/topology.h, kernel/sched/core.c: 
	arm-Enable-frequency-invariant-scheduler-load-tracking

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fixup

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c: ARM: topology: Use the new
	cpu_capacity interface

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Prevent-unnecessary-active-balance-of-single-task

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Enable idle balance to pull single
	task towards cpu with higher capacity

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: 
	sched-Store-system-wide-maximum-cpu-capacity-in-root;

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Fix new tasks load avg removed
	from source CPU in wake_up_new_task()

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Disable the task group load_avg
	update for the root_task_gro

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: 

	sched-fair-Move-the-cache-hot-load_avg-variable-into-its-own-cacheline

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched/fair: Make it possible to account fair load avg consistently

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: dox

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Update task group load_avg after
	task migration

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Fix overly small weight for
	interactive group entities

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Optimize-per-entity-utilization-tracking

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Optimize __update_load_avg() (fix
	it really, I have seen negative spreads)

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Rename scale() to cap_scale()

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched/fair: Initialize task load and
	utilization before placing task on rq

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Get-rid-of-scaling-utilization-by-cap

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Name-utilization-related-data-and-functions

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Remove-unused-struct-sched_group_capacity

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Replace capacity_factor by usage

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Fix stale overloaded status in
	the busiest group finding logic

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Make load tracking frequency
	scale-invariant

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Add-struct-rq-cpu_capacity_orig.

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/setup.c, kernel/sched/fair.c: Two Part: sched:
	Move CFS tasks to CPUs with higher capacity -- Rob->ARM-Setup: use
	"for_each_possible" cpu instead of present for proc/cpuinfo

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Make-scale_rt-invariant-with-frequency

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-core-Delete-PF_EXITING-checks-from-cpu_cgroup

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-core-Remove-unused-argument-from-sched_class

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Unify-switched_-from-to-_fair-and-task-move

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/features.h: sched/fair: Make the
	entity load aging on attaching tunable

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Fix switched_to_fair() per entity
	load tracking

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	-sched-fair-Have-task_move_group_fair-also-detach-entity

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Have-task_move_group_fair-unconditionally

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Factor-out-the-at-detach

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fixups from the goddamn hmp stuff i should
	have reverted

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Ensure a task has a non-normalized
	vruntime when returning back to CFS

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Clean-up-load-average-references

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-fair-Provide-runnable_load_avg-back-to-cfs_rq.

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Remove task and group entity load
	when they are dead

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched/fair: Init cfs_rq sched_entity load average

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Implement
	update_blocked_averages() for CONFIG_FAIR_GROUP_SCHED=n

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/debug.c,
	kernel/sched/fair.c, kernel/sched/sched.h: sched fair: Rewrite
	runnable load and utilization average

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Track-group-sched_entity-usage-contributions.

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-fair-Remove-rq-s-runnable-avg

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Calculate CPUs usage statistic and put
	it into struct sg_lb_stats::group_usage

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: core - use hz again

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: little code clean (cosmetic

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: use suspend_freeze_state directly in
	machinex_suspend_again

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: fixed my custom suspend again handler

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: suspend - separate out suspend functions
	so all the work isnt muddled in the main functions - also adjust to
	accomodate both partial resume and my freeze-state pseudo-notifier

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/power/main.c, kernel/power/power.h,
	kernel/power/suspend.c, kernel/power/suspend_test.c: 
	PM-sleep-Simplify-sleep-states-sysfs-interface-code.

2017-04-06  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, include/linux/cpuidle.h,
	include/linux/suspend.h, kernel/power/suspend.c,
	kernel/sched/idle.c: TEST- WILL PROBABLY BREAK- UPSTREAM: PM /
	sleep: Re-implement suspend-to-idle handling

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fixup some conversions from
	rurunnable_avg_period to avg_period

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/debug.c, kernel/sched/fair.c,
	kernel/sched/sched.h: sched-Add-sched_avg-utilization_avg_contrib

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c: sched/loadavg: Fix loadavg artifacts on
	fully idle and on fully loaded systems

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/trace/events/sched.h, kernel/sched/fair.c: 
	sched-add-sched-blocked-tracepoint

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/nmi.h, kernel/watchdog.c, lib/Kconfig.debug: 
	hardlockup: detect hard lockups without NMIs using secondary cpus

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/time/ntp.c: time-adjtimex-Validate-the-ADJ_FREQUENCY-values

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: Revert "workqueue: make sure delayed work run
	in local cpu"

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: turn krait workaround back on

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: brought back my old freq
	handling for rq stats

2017-04-06  robcore <robpatershuk@gmail.com>

	* block/blk-cgroup.c, block/blk-cgroup.h, cgroup,
	include/linux/cgroup.h, include/linux/context_tracking.h,
	include/linux/context_tracking_state.h, include/linux/memcontrol.h,
	include/linux/tick.h, include/linux/vtime.h, kernel/cgroup.c,
	kernel/cgroup_freezer.c, kernel/context_tracking.c,
	kernel/cpuset.c, kernel/events/core.c, kernel/sched/core.c,
	kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c, mm/memcontrol.c,
	mm/vmpressure.c, net/core/netprio_cgroup.c,
	net/ipv4/tcp_memcontrol.c, net/sched/cls_cgroup.c,
	security/device_cgroup.c: possed

2017-04-06  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, mm/memcontrol.c, security/device_cgroup.c: nope
	this is a loaded issue

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup_freezer.c, kernel/cpuset.c: 
	fuck it all for now i need a nap

2017-04-06  robcore <robpatershuk@gmail.com>

	* block/blk-cgroup.c, block/blk-cgroup.h, cgroup,
	include/linux/cgroup.h, include/linux/memcontrol.h,
	kernel/cgroup.c, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/events/core.c, kernel/sched/core.c, kernel/sched/cpuacct.c,
	mm/hugetlb_cgroup.c, mm/memcontrol.c, mm/vmpressure.c,
	net/core/netprio_cgroup.c, net/ipv4/tcp_memcontrol.c,
	net/sched/cls_cgroup.c, security/device_cgroup.c: cgroup stuff

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup - try out simple
	lookup again

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/cpuacct.c: cgroup, sched:
	convert away from cftype->read_map()

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/context_tracking.h,
	include/linux/context_tracking_state.h, include/linux/tick.h,
	include/linux/vtime.h, kernel/context_tracking.c: 
	context_tracking-Wrap-static-key-check

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: dont guarantee cgroup.procs is sorted if
	sane_behavior;

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-remove-cgroup_pidlist-use_count.

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-load-and-release-pidlists-from-seq_file-start.

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: remove cgroup_pidlist->rwsem

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-refactor-cgroup_pidlist_find.

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-introduce-struct-cgroup_pidlist_open_file

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-implement-delayed-destruction-for-cgroup_pidlist

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: dont skip seq_open on write only opens
	on pidlist files

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/spm_devices.c: REVERT l2 retention, not that it
	matters those are dt nodes

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-8064-regulator.c,
	arch/arm/mach-msm/board-8064.c: REVERT dc voltage and 8921_s7 freq

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-fusion3-battery.c: REVERT battery changes

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_dcvs.c, arch/arm/mach-msm/msm_rq_stats.c: 
	REVERT - msm_rq_stats freq handler

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: revert msm rq stats io wait

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: }

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: msms rq stats - add back iowait
	time

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_dcvs.c, arch/arm/mach-msm/msm_rq_stats.c: 
	add back msm_rq_stats freq handler

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-fusion3-battery.c: battery - make charger
	max identify bsp-allowed 2100 mA as max charging limit

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-8064-regulator.c: return 8921_s7 to 110000

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-8064.c: phy_init_seq - return DC voltage
	to 0x38 from 0x68

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/spm_devices.c: experiment - turn on l2 retention

2017-04-06  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c: this is an impossible condition,
	but it has been working...so...

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: sched debug/stats - too much
	overhead

2017-04-06  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c: sec battery fix

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/panic.c: ifdef not if def

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/panic.c: fixed the CONFIG option in panic

2017-04-06  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/sched/debug.c: gonna build
	sched debug and sched stats -- fixed a derp in debug

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, include/linux/sched.h,
	include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sysctl.c: possed

2017-04-06  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: another stupid little fix

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: bloody +

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fix ifdef

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: a little tinkering

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Update capacity of all online cpus
	when min_max_freq changes

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-update-task-statistics-when-CPU-frequency-changes

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-do-not-balance-on-exec-if-SCHED_HMP

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c: 
	sched - use historical load for freq gov input

2017-04-06  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-window-stats-apply-scaling-to-full-elapsed-windows

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sysctl.c: sched: notify cpufreq on over/underprovisioned CPUs

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sysctl.c: add migration notifier

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sched/sched.h, kernel/sysctl.c: 
	sched-Introduce-spill-threshold-tunables

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sysctl.c: some fixin

2017-04-06  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sysctl.c: this was a mistake

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: ched-fair-Limit-MAX_PINNED_INTERVAL

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Help-out-higher-capacity-CPUs

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	power aware for realtime

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: balance power inefficient CPUs with
	one task

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched - check for power inefficient task
	placement

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-do-nohz-load-balancing-in-order-of-power-efficiency

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-run-idle_balance-on-most-power-efficient-CPU.

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, kernel/sched/fair.c: sched: add hook for
	platform-specific CPU power information

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sysctl.c: sched-add-power-aware-scheduling-sysctl

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched - extend update_task_ravg to accept
	wallclock

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: updated the migration bs that breaks because
	of having multpile spinlocks held, i will fix

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: ched: add sched_get_busy, sched_set_window
	APIs

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: add something stupid

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched: window-stats:
	Add aggregated runqueue windowed stats

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: 
	sched-window-stats-synchronize-windows-across-cpus

2017-04-05  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c,
	drivers/cpufreq/cpufreq_stockdemand.c: some gov tuning

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: disable stat details

2017-04-05  robcore <robpatershuk@gmail.com>

	* drivers/base/power/qos.c, include/linux/pm_qos.h,
	kernel/power/qos.c: the qos commit is a double

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: updated config

2017-04-05  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: and adjoining fixes

2017-04-05  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: ondemand improvements

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/sched/core.c,
	kernel/sched/debug.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	caught up to where we were

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Handle-cpu-bound-tasks-stuck-on-wrong-cpu

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Send-NOHZ-kick-to-idle-cpu-in-same-cluster

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: 
	sched-Basic-task-placement-support-for-HMP-systems

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched: Introduce
	efficiency, load_scale_factor and capacity

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, init/Kconfig, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: 
	sched-Add-CONFIG_SCHED_HMP-Kconfig-option.

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: 
	sched-Use-rq-efficiency-in-scaling-load-stats

2017-04-05  robcore <robpatershuk@gmail.com>

	* drivers/irqchip/irq-gic.c, include/linux/cpu_pm.h,
	kernel/cpu_pm.c: cpu_pm-Add-level-to-the-cluster-pm-notification

2017-04-05  robcore <robpatershuk@gmail.com>

	* drivers/base/power/qos.c, include/linux/pm_qos.h,
	kernel/power/qos.c: 
	QoS-Modify-data-structures-and-function-arguments-for-scalability

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c, lib/Kconfig.debug: 
	printk-Add-LOG_BUF_MAGIC;

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/exit.c, lib/Kconfig.debug: 
	exit-Add-PANIC_ON_RECURSIVE_FAULT-Kconfig-option

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/sched.h: 
	sched: Make the scheduler aware of C-state for cpus

2017-04-05  robcore <robpatershuk@gmail.com>

	* 2e39465abc4b7856a0ea6fcf4f6b4668bb5db877.patch.1,
	arch/arm/configs/canadefconfig, kernel/irq_work.c,
	kernel/sched/clock.c, kernel/softirq.c, kernel/time/hrtimer.c,
	kernel/time/tick-broadcast.c, kernel/time/tick-common.c,
	kernel/time/tick-oneshot.c, kernel/time/tick-sched.c,
	kernel/time/timer.c: time - convert to use this_cpu instead of
	get_cpu_var

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: ACTUALLY robustify topology setup

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/exit.c, kernel/fork.c,
	kernel/sched/core.c, kernel/sched/cputime.c, kernel/sys.c,
	kernel/time/posix-cpu-timers.c: reverted all that

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/exit.c, kernel/fork.c,
	kernel/sched/core.c, kernel/sched/cputime.c, kernel/sys.c,
	kernel/time/posix-cpu-timers.c: sched: Robustify topology setup

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	init/Kconfig, kernel/sched/core.c, kernel/sched/debug.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: revert
	scheduler things from today

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/Kconfig, arch/arm/mach-msm/acpuclock-krait.c: 
	make the Krait L2 workaroud Kconfigurable

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	drivers/barcode_emul/barcode_emul_ice4.c, fs/dcache.c,
	fs/proc_namespace.c, include/linux/cgroup.h,
	include/linux/cgroup_subsys.h, include/linux/idr.h,
	kernel/cgroup.c, kernel/cgroup_freezer.c, kernel/exit.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, kernel/sched/sched.h: 
	possed

2017-04-05  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c: cgroup changes for the
	3.14 merge

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: merging with 3.14

2017-04-05  robcore <robpatershuk@gmail.com>

	* fs/dcache.c:  vfs: use __getname/__putname for getcwd() system call

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	drivers/barcode_emul/barcode_emul_ice4.c, fs/dcache.c,
	fs/proc_namespace.c, kernel/cgroup.c: vfs - make getcwd use rcu
	protection

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-superblock-can-t-be-released-with-active-dentreis

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, include/linux/cpu.h,
	include/linux/sched.h, include/linux/sched/sysctl.h,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/rt.c,
	kernel/sched/sched.h, kernel/sysctl.c: REVERT - all sched patches
	that caused boot fail

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, include/linux/cgroup_subsys.h,
	include/linux/idr.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/exit.c, kernel/sched/core.c, kernel/sched/cpuacct.c,
	kernel/sched/sched.h: cgroups - merged 3.13 cgroup code using
	compatibility idr_alloc/destroy fucntions that were back ported and
	none of this will work probably

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: reverted

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: nope my cgroups are fucked...idr alloc i fucking
	hate you

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-fix-to-break-the-while-loop-in-cgroup_attach

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: restore the call to eventfd->poll()

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: revert removal of bind

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: make sure parent wont be destroyed before
	its children

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-remove-bind-method-from-cgroup_subsys

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-remove-a-NULL-check-in-cgroup_exit.

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: fix lockdep warning for event_control

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: have it

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-implement-generic-child-descendant-walk-macro

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: REVERT that

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-superblock-can-t-be-released-with-active-dentry

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: deprecate remount option changes

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Reset-balance_interval-before-sending-NOHZ-kick

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Avoid-active-migration-of-small-tasks

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Account-for-cpu-s-current-frequency-when-calc

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-make-sched_set_window-return-failure-when-PELT

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Update capacity of all online cpus
	when min_max_freq changes

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-update-task-statistics-when-CPU-frequency-changes

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-do-not-balance-on-exec-if-SCHED_HMP

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: 
	sched-Use-historical-load-for-freq-governor-input.

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-window-stats-apply-scaling-to-full-elapsed-win;

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sysctl.c: sched-notify-cpufreq-on-over-underprovisioned-CPUs

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sched/sched.h, kernel/sysctl.c: 
	-sched-Introduce-spill-threshold-tunables;

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sysctl.c: sched-add-migration-load-change-notifier-for-freq

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Limit MAX_PINNED_INTERVAL for
	more frequent load balancing

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Help out higher capacity CPUs
	when they are overcommitted

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	sched-rt-Introduce-power-aware-scheduling-for-real-time-tasks

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-balance-power-inefficient-CPUs-with-one-task

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-check-for-power-inefficient-task-placement

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-do-nohz-load-balancing-in-order-of-power-efficiency

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-run-idle_balance-on-most-power-efficient-CPU

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, kernel/sched/fair.c: 
	sched-add-hook-for-platform-specific-CPU-power-info

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sysctl.c: sched-add-power-aware-scheduling-sysctl

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: 
	sched-Extend-update_task_ravg-to-accept-wallcloc

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: sched-add-sched_get_busy-sched_set_window-APIs

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-window-stats-adjust-RQ-curr-prev-sums-on-task

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched: window-stats:
	Add aggregated runqueue windowed stats

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: sched: window-stats: synchronize windows
	across cpus

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-window-stats-Do-not-account-wait-time.

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-window-stats-update-during-migration-and-earlier

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/sched/core.c: sched: move
	definition of update_task_ravg(). set_task_cpu() will need to call
	update_task_ravg(). Move up definition to make it easy.

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: some fixups

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: there fixed

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: fuck

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: window based by default

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Provide-tunable-to-switch-between-PELT-and-window based load
	stats

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Reset-decay_count-when-task-is-enqueued
	(fixed)

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c: debug

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c: 
	sched-Extend-proc-sched_debug-with-additional-info

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Tighten-controls-for-tasks-spillover-to-idle

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Track-number-of-big-and-small-tasks-on-a-cpu.

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched: Handle cpu-bound tasks stuck on wrong cpu

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Send-NOHZ-kick-to-idle-cpu-in-same-cluster.

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: 
	sched-Basic-task-placement-support-for-HMP-systems.

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: 
	sched-Use-rq-efficiency-in-scaling-load-stats

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: 
	sched-Introduce-efficiency-load_scale_factor-and-cap

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, init/Kconfig, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: 
	sched-Add-CONFIG_SCHED_HMP-Kconfig-option.;

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/notifier.c: 
	notifier-Substitute-rcu_access_pointer-for-rcu_deref

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: dox

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: sched -moved some shit around

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	drivers/cpufreq/cpufreq_conservative.c,
	drivers/cpufreq/cpufreq_governor.c,
	drivers/cpufreq/cpufreq_governor.h,
	drivers/cpufreq/cpufreq_ondemand.c: reverted

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	drivers/cpufreq/cpufreq_conservative.c,
	drivers/cpufreq/cpufreq_governor.c,
	drivers/cpufreq/cpufreq_governor.h,
	drivers/cpufreq/cpufreq_ondemand.c: tried something stupid

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/dma-mapping.c, drivers/base/dma-mapping.c,
	include/asm-generic/dma-mapping-common.h: REVERT -
	common-dma-mapping-introduce-common-remapping-func

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-pxa/lpd270.c, kernel/debug/kdb/kdb_bp.c: it is a
	wrapper anyway

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-pxa/lpd270.c, kernel/debug/kdb/kdb_bp.c: this is a
	lot of effort

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/string.h, lib/string.c: lib: string: Make all calls
	to strnicmp into calls to strncasecmp

2017-04-05  robcore <robpatershuk@gmail.com>

	* lib/string.c: lib-string.c-remove-duplicated-function.

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/kallsyms.c: kernel-kallsyms.c-use-__seq_open_private.

2017-04-05  robcore <robpatershuk@gmail.com>

	* lib/textsearch.c: lib-textsearch.c-remove-textsearch_put-reference

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/list.h: list - include kernel.h

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: printk: git rid of [sched_delayed] message
	for printk_deferred

2017-04-05  robcore <robpatershuk@gmail.com>

	* fs/fscache/object-list.c: 
	fs-fscache-object-list.c-use-__seq_open_private.

2017-04-05  robcore <robpatershuk@gmail.com>

	* fs/cachefiles/namei.c: CacheFiles: Fix incorrect test for
	in-memory object collision

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/regulator/consumer.h: ehader include

2017-04-05  robcore <robpatershuk@gmail.com>

	* fs/file_table.c: dox

2017-04-05  robcore <robpatershuk@gmail.com>

	* fs/xattr.c:  vfs: Deduplicate code shared by xattr system calls operating on
	 paths

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/screen_info.h: 
	include-linux-screen_info.h-remove-unused-ORIG_-macros

2017-04-05  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: mm: page_alloc: determine migratetype only once

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/dma-mapping.c, drivers/base/dma-mapping.c,
	include/asm-generic/dma-mapping-common.h: 
	common-dma-mapping-introduce-common-remapping-func (this so will not
	work)

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/genalloc.h, lib/genalloc.c: lib/genalloc.c: add
	genpool range check function

2017-04-05  robcore <robpatershuk@gmail.com>

	* include/linux/genalloc.h, lib/genalloc.c: 
	lib-genalloc.c-add-power-aligned-algorithm.

2017-04-05  robcore <robpatershuk@gmail.com>

	* fs/notify/inotify/inotify_fsnotify.c: fsnotify: dont put user
	context if it was never assigned On some failure paths we may
	attempt to free user context even if it wasnt assigned yet.  This
	will cause a NULL ptr deref and a kernel BUG

2017-04-05  robcore <robpatershuk@gmail.com>

	* fs/notify/fsnotify.h, fs/notify/group.c: 
	0099-fs-notify-group.c-make-fsnotify_final_destroy_group-

2017-04-05  robcore <robpatershuk@gmail.com>

	* fs/compat.c, fs/internal.h, fs/namespace.c: fs: namespace:
	suppress may be used uninitialized warnings

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: trying out sched freq input again
	and cpu stat details

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, arch/arm/configs/canadefconfig: nope

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, arch/arm/configs/canadefconfig: trying a thing

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/cputime.c: cputime/irq/vtime accounting updated

2017-04-05  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/Makefile: moved cpuboost to the bottom of the pile

2017-04-05  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: turning off sched freq input

2017-04-05  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: more tinkering

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: you can be 28 again

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: dont need you

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: turn off htc adaptive tuning

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/md/persistent-data/dm-block-manager.c,
	kernel/sched/core.c: remove a ton of redundant task current sets, as
	that is what schedule() does, also some tinkering in sched core.

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-numa-Fix-out-of-bounds-read-in-sched_init_numa.

2017-04-04  robcore <robpatershuk@gmail.com>

	* include/asm-generic/cputime_jiffies.h,
	include/asm-generic/cputime_nsecs.h, kernel/sched/cputime.c: sched,
	time: Fix build error with 64 bit cputime_t on 32 bit systems

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	-sched-Add-default-disabled-option-to-BUG-when-stack-overflows

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/um/drivers/random.c, arch/x86/mm/fault.c,
	drivers/gpu/vga/vgaarb.c, drivers/md/dm-bufio.c,
	drivers/parisc/power.c, drivers/s390/net/claw.c,
	drivers/scsi/qla2xxx/qla_os.c, fs/afs/vlocation.c,
	fs/jfs/jfs_logmgr.c, fs/jfs/jfs_txnmgr.c,
	fs/nfs/blocklayout/blocklayoutdev.c,
	fs/nfs/blocklayout/blocklayoutdm.c, fs/nfsd/nfs4recover.c,
	include/linux/sched.h, init/main.c, kernel/fork.c,
	kernel/time/hrtimer.c, kernel/trace/ring_buffer_benchmark.c: init -
	give init task a canary

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: interactive, that really
	should be postchange i think

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: more od tweaks

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/Kconfig: fix
	missing sched freq input

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: ondemand tweaking

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_userspace.c,
	drivers/cpufreq/freq_table.c: the target commit and cpu_online
	commits need to go away...maybe not the target one but i think so.

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/alucard_hotplug.c: alucard fixes again

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: cpufreq: Only call
	cpufreq_out_of_sync() for driver that implement
	cpufreq_driver.target()

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_userspace.c: 
	remove remaining checks for cpu_online in cpufreq drivers

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/freq_table.c, include/linux/cpufreq.h: goddamnit

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: 
	cpufreq-Retrieve-current-frequency-from-scaling-driver

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/freq_table.c: remove early break routine from
	freq_table

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: 
	cpufreq-create-cpufreq_generic_init-routine

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/freq_table.c, include/linux/cpufreq.h: cpufreq:
	define generic .attr, .exit() and .verify() routines

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/freq_table.c, include/linux/cpufreq.h: cpufreq add
	new helper - cpufreq_table_validate_and_show

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_optimax.c,
	drivers/cpufreq/cpufreq_stockdemand.c,
	drivers/cpufreq/cpufreq_yankdemand.c: get rid of set_cpus_allowed in
	govs again

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/pm-8x60.c: msm:pm-8x60: Do not generate access
	flag faults for the kernel mappings

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: nope

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c, kernel/sched/sched.h: 
	msm_rq_stats - remove any frequency-related calculating from the
	driver

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/pm-8x60.c: msm pm - fixup my detection of
	collapse vs. hotplug

2017-04-04  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, init/Kconfig, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: revert
	those

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: oops

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: sched: Use
	rq->efficiency in scaling load stats

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched: Introduce
	efficiency, load_scale_factor and capacity

2017-04-04  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, init/Kconfig, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: 
	sched-Add-CONFIG_SCHED_HMP-Kconfig-option

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/Kconfig: ifdef

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c: 
	sched-Make-task-load-information-available-in-proc

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: fix lockdep warning for event_control

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: revert that

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: nop

2017-04-04  robcore <robpatershuk@gmail.com>

	* include/linux/kthread.h, include/linux/sched.h, kernel/kthread.c,
	kernel/sched/core.c, kernel/workqueue.c: 
	sched-Fix-a-race-between-__kthread_bind-and-sched

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: shit glad i remembered,
	conservative rq stats are the ONLY way we get stats

2017-04-04  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: ondemand changes again

2017-04-04  robcore <robpatershuk@gmail.com>

	* init/main.c: start init rcu nohz a little later again

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c, arch/powerpc/kernel/smp.c,
	include/linux/sched.h: const inconsistencies

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c: 
	sched-ARM-Create-a-dedicated-scheduler-topology-table

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Fix-nohz.next_balance-update.

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: see how cpus_online fairs instead of
	cpus_active for get affinity

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: screw it keep inc/dec nr running for now
	dorimanx style just addon what was in sub (see how leaving out prev
	and count works)

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/Makefile, kernel/sched/core.c: move loadavg
	structures to core

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-numa-skip-inaccessible-VMAs.

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c: debug shit

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-cond_resched-after-processing-each-work

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	reverted

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	nope

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: cpu-send-KOBJ_ONLINE-event-when-enabling-cpus

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: core us hz again

2017-04-04  robcore <robpatershuk@gmail.com>

	* pos.sh: updated pos

2017-04-04  robcore <robpatershuk@gmail.com>

	* pos.sh, ref2.txt: keep my refs

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, arch/arm/kernel/topology.c,
	arch/arm/mach-msm/Makefile, arch/arm/mach-msm/alucard_hotplug.c,
	arch/arm/mach-msm/intelli_hotplug.c,
	arch/arm/mach-msm/msm_rq_stats.c, arch/arm/mach-msm/pm-8x60.c,
	arch/arm/mach-msm/state_helper.c, arch/powerpc/kernel/smp.c,
	drivers/battery/sec_battery.c, drivers/cpufreq/Kconfig,
	drivers/cpufreq/cpufreq_ondemand.c,
	drivers/cpufreq/cpufreq_optimax.c,
	drivers/cpufreq/cpufreq_stockdemand.c,
	drivers/cpufreq/cpufreq_yankdemand.c, drivers/cpuidle/cpuidle.c,
	drivers/thermal/intelli/msm_thermal.c,
	drivers/video/msm/msm_dss_io_8960.c, include/linux/cgroup_subsys.h,
	include/linux/cpufreq.h, include/linux/cpuidle.h,
	include/linux/kthread.h, include/linux/msm_thermal.h,
	include/linux/sched.h, include/linux/sched/sysctl.h,
	include/linux/sched_energy.h, include/trace/events/cpufreq_sched.h,
	include/trace/events/sched.h, init/Kconfig, init/main.c,
	kernel/cpu.c, kernel/exit.c, kernel/kthread.c, kernel/panic.c,
	kernel/sched/Makefile, kernel/sched/core.c,
	kernel/sched/cpufreq_sched.c, kernel/sched/deadline.c,
	kernel/sched/debug.c, kernel/sched/energy.c, kernel/sched/fair.c,
	kernel/sched/features.h, kernel/sched/idle.c, kernel/sched/rt.c,
	kernel/sched/sched.h, kernel/sched/stop_task.c,
	kernel/sched/tune.c, kernel/sched/tune.h, kernel/sysctl.c,
	kernel/workqueue.c, pos.sh, ref2.txt: possed

2017-04-04  robcore <robpatershuk@gmail.com>

	* pos.sh: another pos tweak

2017-04-04  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-04-04  robcore <robpatershuk@gmail.com>

	* pos.sh: gonna pos

2017-04-04  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c, pos.sh: 
	Revert-workqueue-make-sure-delayed-work-run-in-local-context

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: my guess is that smt will probably
	be a bad idea, but who knows?

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: what does SCHED_MC do again?

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	arch/arm/mach-msm/intelli_hotplug.c, kernel/sched/sched.h: a little
	tweaking to intelli

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: trying a smaller log buffer

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, init/Kconfig,
	init/do_mounts_rd.c, init/init_task.c: revert those

2017-04-04  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: updated config

2017-04-04  robcore <robpatershuk@gmail.com>

	* init/Kconfig, init/do_mounts_rd.c, init/init_task.c: some more
	minor cleanup in init

2017-04-04  robcore <robpatershuk@gmail.com>

	* init/main.c: from galaxy s7 - move rcu_nohz_init a little ways
	back

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: disable autogroup again

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: disable state notifier for now, it
	needs a little tlc from us

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: back to interactive for default
	gov

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: there now hotplug will work
	again

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: revert that, including
	integral, BUT i found how to make hotplug and freq work again and
	that is conservative_rq

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: some nr_running hacks, and reverted preempt
	which is ALWAYS a mistake to mess with

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/features.h: REVERT core
	stuff...still keep nr running

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/features.h: see what, if anything, happens when i
	turn off ATTACH_AGE_LOAD sched feature

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: a little fixup in core,
	as well as some preempt-work

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, arch/arm/mach-msm/Makefile,
	arch/arm/mach-msm/state_helper.c, drivers/battery/sec_battery.c,
	drivers/thermal/intelli/msm_thermal.c, include/linux/msm_thermal.h,
	kernel/panic.c, kernel/sched/sched.h: BIG - brought back state
	helper, including all of its relevant hooks in the thermal and
	battery drivers. In thermal, optimized it to bring cores back online
	that it offlined during mitigation.  Finally, in sched.h, brought
	back faux/alucard stats calculation because we NEED runqueue stats
	in order for any of our hotplug drivers to work.

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/pm-8x60.c: a couple of reverts in pm too (just
	placement and once condition that results in the exact same thing

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/alucard_hotplug.c, kernel/sched/stop_task.c: 
	alucard - return to previous gov iteration

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: EAS: Avoid causing spikes to max-freq
	unnecessarily

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/trace/events/sched.h,
	init/Kconfig, kernel/sched/Makefile, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sched/walt.c, kernel/sched/walt.h, kernel/sysctl.c: reverted
	for now

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/trace/events/sched.h,
	init/Kconfig, kernel/sched/Makefile, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sched/walt.c, kernel/sched/walt.h, kernel/sysctl.c: hmmm this
	may be the line in the sand...

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c: 
	sched-tune-fix-PB-and-PC-cuts-indexes-definition

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-optimize-idle-cpu-selection-for-boost

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/exit.c, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h, kernel/sched/tune.c, kernel/sched/tune.h: 
	sched-tune-fix-accounting-for-runnable-tasks (also move locks into
	core

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c: 
	ched-tune-use-a-single-initialisation-function.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/tune.h: 
	sched-fair-tune-simplify-fair.c-code

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.h: FIXUP-sched-tune-fix-compilation-error

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c: 
	FIXUP-sched-tune-fix-payoff-calculation-for-boost

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/tune.c: 
	sched-tune-Add-support-for-negative-boost-values

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/tune.c, kernel/sched/tune.h: 
	FIX: sched/tune: move schedtune_nornalize_energy into fair.c;

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/Kconfig, include/linux/sched_energy.h,
	include/trace/events/sched.h, init/Kconfig, kernel/sched/Makefile,
	kernel/sched/fair.c, kernel/sched/sched.h: sched: fix build for
	non-SMP target

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-add-energy-procfs-interface.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/stop_task.c: stop task - fix to use add/sub
	nr_running

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h, kernel/sched/tune.c: 
	reverted

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h, kernel/sched/tune.c: a
	bunch of useless trace crap i am going to revert

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/sched/fair.c: grammer
	errors, config update

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	FIX-sched-tune-update-usage-of-boosted-task-util

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sysctl.c: sched-fair-add-tunable-to-set-initial-task-load

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sysctl.c: sched/fair: add tunable to force selection at cpu
	granularity

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sysctl.c: sched: EAS: take cstate into account when selecting
	idle core

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/Kconfig, kernel/sched/cpufreq_sched.c: 
	sched-cpufreq_sched-Consolidated-update.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c: 
	FIXUP-sched-tune-properly-account-of-exiting-tasks

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-filter-energy_diff-based-on-energy_payoff.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c, kernel/sched/tune.h: 
	sched-tune-add-support-to-compute-normalized-energy

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-keep-track-of-energy-capacity-variations.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/tune.c, kernel/sched/tune.h: 
	sched-fair-add-boosted-task-utilization

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/tune.c, kernel/sched/tune.h: 
	sched-fair-tune-track-RUNNABLE-tasks-impact

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/tune.c: 
	sched-tune-compute-and-keep-track-of-per-CPU-boost

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup_subsys.h, init/Kconfig, kernel/sched/tune.c,
	kernel/sysctl.c: sched-tune-add-initial-support-for-CGroups-based

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: -sched-fair-add-boosted-CPU-usage

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: add function to convert boost
	value into "margin"

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, init/Kconfig,
	kernel/sched/Makefile, kernel/sched/tune.c, kernel/sysctl.c: 
	sched/tune: add sysctl interface to define a boost value

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/trace/events/cpufreq_sched.h,
	kernel/sched/cpufreq_sched.c: sched-cpufreq_sched-add-trace-events

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	FIXUP-sched-fair-jump-to-max-OPP-when-crossing-UP

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpufreq_sched.c: 
	-FIXUP-sched-scheduler-driven-cpu-frequency-selection

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpufreq_sched.c: 
	FIXUP-sched-scheduler-driven-cpu-frequency-selection.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: sched-rt-scheduler-sets-capacity-requirement.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c, kernel/sched/fair.c,
	kernel/sched/sched.h: sched: deadline: use deadline bandwidth in
	scale_rt_capacity

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: 
	sched-remove-call-of-sched_avg_update-from-sched_rt

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-fair-jump-to-max-OPP-when-crossing-UP-threshold

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-core-fair-trigger-OPP-change-request-on-fork.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-add-triggers-for-OPP-change-requests.

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/Kconfig, include/linux/cpufreq.h,
	include/linux/sched.h, kernel/sched/Makefile,
	kernel/sched/cpufreq_sched.c, kernel/sched/fair.c,
	kernel/sched/sched.h: sched: scheduler-driven cpu frequency
	selection

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched_energy.h, kernel/sched/Makefile,
	kernel/sched/energy.c: sched: Support for extracting EAS energy
	costs from DT

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Consider misfit tasks when
	load-balancing

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Add-group_misfit_task-load-balance-type

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c, kernel/sched/fair.c: some
	ondemand tweaking

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Add-per-cpu-max-capacity-to-sched_group_cap

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Do-eas-idle-balance-regardless-of-the-rq-avg

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched: Update max cpu capacity in case of max frequency constraints

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/sched.h: 
	CHROMIUM-sched-update-the-average-of-nr_running.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Disable-energy-unfriendly-nohz-kicks

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Consider-a-not-over-utilized-energy-aware-sys

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Energy-aware-wake-up-task-placement.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Determine-the-current-sched_group-idle-state

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, include/linux/cpuidle.h,
	kernel/sched/idle.c, kernel/sched/sched.h: sched, cpuidle: Track
	cpuidle state index in the scheduler

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c: ARM: topology: Use the new
	cpu_capacity interface

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c, arch/powerpc/kernel/smp.c,
	include/linux/sched.h: fix const inconsistencies

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c: sched, ARM: Create a dedicated
	scheduler topology table

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: sched: Add
	over-utilization/tipping point indicator

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Estimate-energy-impact-of-scheduling-decisions.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Extend-sched_group_energy-to-test-load-balancing

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Calculate-energy-consumption-of-sched_group

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: 
	sched-Highest-energy-aware-balancing-sched_domain

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Relocated-cpu_util-and-change-return-type

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Compute-cpu-capacity-available-at-current-freq.

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-Introduce-SD_SHARE_CAP_STATES-sched_domain-flags

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Initialize-energy-data-structures

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/sched.h: sched: Introduce
	energy data structures

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/features.h: 
	-sched-Make-energy-awareness-a-sched-feature

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Prevent-unnecessary-active-balance-of-single-task

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Enable-idle-balance-to-pull-single-task

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Consider-spare-cpu-capacity-at-task-wake-up.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Add-cpu-capacity-awareness-to-wakeup-balancing

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: hackeroooo

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fixup

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: reverted

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: not this one yet

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: 
	sched-Store-system-wide-maximum-cpu-capacity-in-root

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Fix-new-task-s-load-avg-removed

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Disable-the-task-group-load_avg-update

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched/fair: Move the
	cache-hot load_avg variable into its own cacheline

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Avoid-redundant-idle_cpu-call-in-update

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-fair-Make-it-possible-to-account-fair-load-avg

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: dox

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: dox

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Update-task-group-s-load_avg-after-task-migration

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Fix-overly-small-weight-for-interactive-govs

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Optimize-per-entity-utilization-tracking.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Defer-calling-scaling-functions.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Optimize-__update_load_avg

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Rename-scale-to-cap_scale (and try
	out add/sub nr running)

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-fair-Initialize-task-load-and-utilization

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Get rid of scaling utilization by
	capacity_orig

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Name utilization related data and
	functions consistently

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Remove-unused-struct-sched_group_capacity

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Replace capacity_factor by usage

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Fix-stale-overloaded-status-in-the-busiest

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-fair-Make-utilization-tracking-CPU-scale-invariant

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: 
	sched-fair-Convert-arch_scale_cpu_capacity-from-weak.

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c: sched/fair: Make load
	tracking frequency scale-invariant

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: thats right we no longer have
	default_scale_freq_capacity

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Add-struct-rq-cpu_capacity_orig

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: sched: Optimize freq
	invariant accounting

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Make-scale_rt-invariant-with-frequency

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Fix-nohz.next_balance-update

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-core-Delete-PF_EXITING-checks-from-cpu_cgroup

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	-sched-core-Remove-unused-argument-from-sched_class

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Unify-switched_-from-to-_fair-and-task

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/features.h: 
	sched-fair-Make-the-entity-load-aging-on-attaching

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Fix-switched_to_fair-s-per-entity-load

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Have-task_move_group_fair-also-detach

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Have-task_move_group_fair-unconditionally.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Factor out the {at,de}taching of
	the per entity load {to,from} the runqueue

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/msm_dss_io_8960.c: fixed my BUG ON

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_optimax.c,
	drivers/cpufreq/cpufreq_stockdemand.c,
	drivers/cpufreq/cpufreq_yankdemand.c,
	drivers/video/msm/msm_dss_io_8960.c: two updates - govs - no more
	using set_cpus_allowed, and dsi_esc_clk? dont just print nicely,
	BUG_ON.  PANIC THAT SHIT YO

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/kthread.h, include/linux/sched.h, kernel/kthread.c,
	kernel/sched/core.c, kernel/workqueue.c: 
	sched-Fix-a-race-between-__kthread_bind-and-sched_set_affinity

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Ensure-a-task-has-a-non-normalized-vruntime

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Clean-up-load-average-references

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-fair-Provide-runnable_load_avg-back-to-cfs_rq

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Remove-task-and-group-entity-load

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-fair-Init-cfs_rq-s-sched_entity-load-average

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: ()

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: remaining header fixup

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/debug.c,
	kernel/sched/fair.c, kernel/sched/sched.h: (mostly) rewrite runnable load and utilization averaging

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/Kbuild, arch/microblaze/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, arch/x86/include/asm/Kbuild,
	include/asm-generic/preempt.h, include/linux/preempt.h,
	include/linux/sched.h, kernel/sched/core.c, kernel/sched/idle.c: 
	possed

2017-04-03  robcore <robpatershuk@gmail.com>

	* pos.sh: nope possing again

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/Kbuild, arch/microblaze/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, arch/x86/include/asm/Kbuild,
	include/asm-generic/preempt.h, include/linux/preempt.h,
	include/linux/sched.h: brought back preempt stuff from that though

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/Kbuild, arch/microblaze/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, arch/x86/include/asm/Kbuild,
	drivers/gpu/msm/adreno.c, drivers/gpu/msm/z180.c,
	drivers/scsi/sg.c, fs/buffer.c, fs/fs-writeback.c, fs/fs_struct.c,
	fs/jbd2/transaction.c, fs/nfs/file.c, fs/nfs/inode.c,
	fs/nfs/internal.h, fs/nfs/nfs4proc.c, fs/nfs/pagelist.c,
	fs/nfs/write.c, include/asm-generic/preempt.h,
	include/linux/pagemap.h, include/linux/preempt.h,
	include/linux/sched.h, include/linux/sunrpc/sched.h,
	include/linux/wait.h, include/linux/writeback.h, kernel/ptrace.c,
	kernel/sched/wait.c, mm/backing-dev.c, mm/filemap.c, mm/swapfile.c,
	net/sunrpc/sched.c, pos.sh, security/keys/gc.c,
	security/keys/request_key.c: possed wait bit stuff

2017-04-03  robcore <robpatershuk@gmail.com>

	* pos.sh: possing the wait bit stuff

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/scsi/sg.c: scsi fix

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/z180.c: fix 2d driver as well

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/adreno.c: adreno.c - use the new, generic
	__wait_event_interruptible_timeout instead of rolling our own as it
	does literally the exact same thing now

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: WHOOO we can have nice things!

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/preempt.h: hacked in preempt_set_need_resched and
	preempt_fold_need_resched

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/preempt_mask.h, include/linux/rwlock_api_smp.h,
	include/linux/spinlock_api_smp.h, include/linux/spinlock_api_up.h,
	kernel/softirq.c: yep nope

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/preempt_mask.h, include/linux/rwlock_api_smp.h,
	include/linux/spinlock_api_smp.h, include/linux/spinlock_api_up.h,
	kernel/softirq.c: locking: Optimize lock_bh functions...i remember
	this being hell

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/asm-generic/preempt.h, include/linux/sched.h: shady..sched
	- take PREMPT_NEED_RESCHED away from generic code

2017-04-03  robcore <robpatershuk@gmail.com>

	* security/keys/request_key.c: last one in security and the tree i
	think

2017-04-03  robcore <robpatershuk@gmail.com>

	* security/keys/gc.c: security wait_on_bit

2017-04-03  robcore <robpatershuk@gmail.com>

	* fs/nfs/nfs4proc.c: more wait_on_bit

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h: reverted sched.h

2017-04-03  robcore <robpatershuk@gmail.com>

	* fs/buffer.c, fs/fs-writeback.c, fs/fs_struct.c,
	fs/jbd2/transaction.c, fs/nfs/file.c, fs/nfs/pagelist.c,
	fs/nfs/write.c, include/linux/sched.h: some fs wait_on_bit fixes,
	locking fixes, and a screwed up sched patch i need to revert

2017-04-03  robcore <robpatershuk@gmail.com>

	* mm/backing-dev.c, mm/filemap.c, mm/swapfile.c: mm - wait on bit
	fixes

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: mind your ()

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: some core cleanup

2017-04-03  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/Kbuild, arch/microblaze/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, arch/x86/include/asm/Kbuild,
	include/asm-generic/preempt.h, include/linux/preempt.h: bring in asm
	preempt again

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/ptrace.c: ptrace fixup with waiting (also rcu readlocks
	around namespace funcs

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/writeback.h, kernel/sched/core.c: some preempt/wait
	fixes

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: a little more

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/preempt.h, include/linux/sched.h,
	kernel/sched/core.c: some old preempt shit

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/pagemap.h, mm/filemap.c: updated filemap and pagemap
	to the updated wait interfaces

2017-04-03  robcore <robpatershuk@gmail.com>

	* fs/nfs/inode.c, fs/nfs/internal.h, include/linux/sunrpc/sched.h,
	include/linux/wait.h, kernel/sched/wait.c, net/sunrpc/sched.c: 
	cleaned up wait.c/.h

2017-04-03  robcore <robpatershuk@gmail.com>

	* ref2.txt: more detailed ref update

2017-04-03  robcore <robpatershuk@gmail.com>

	* ref2.txt: add another ref

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: REVERT -
	Revert-workqueue-make-sure-delayed-work-run-in-local-cpu

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: cpu: send KOBJ_ONLINE event when enabling cpus

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: actually why dont i just make it equal the
	actual capacity

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: hacked fair a teensy bit

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Calculate CPUs usage statistic and put
	it into struct sg_lb_stats::group_usage

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c, kernel/sched/fair.c: sched: Track group
	sched_entity usage contributions

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Make-sched-entity-usage-tracking-scale-invariable

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/debug.c, kernel/sched/fair.c,
	kernel/sched/sched.h: sched-Add-sched_avg-utilization_avg_contrib.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: changing sched affinity back to
	sched_getaffinity

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: core - use hz once again

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: REVERT sched -calculate cpus usage

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Calculate CPUs usage statistic and put
	it into struct sg_lb_stats::group_usage

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched/fair: Remove rq runnable avg

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Fix the dealing with decay_count
	in __synchronize_entity_decay()

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c: sched/fair: Beef up
	wake_wide()

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: dox

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Clean-up-the-__sched_period-code

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: SANE cleanup in fair

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Move code around

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/pagemap.h, include/linux/wait.h,
	kernel/sched/wait.c, mm/filemap.c: reverted

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/pagemap.h, include/linux/wait.h,
	kernel/sched/wait.c, mm/filemap.c: revert this

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair: calculating the tick load in
	update whatever is unneccesary as it is called by scheduler_tick in
	core.c, so drop it from the cpu active load or whatever it is called
	in fair

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: 
	sched-dl-Fix-sched-class-hopping-CBS-hole.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/auto_group.c, kernel/sched/deadline.c: ps turning
	autogroup back on and that last commit was also a massive conversion
	from access once to read/write once

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/fork.c, kernel/sched/auto_group.c,
	kernel/sched/auto_group.h, kernel/sched/core.c,
	kernel/sched/cputime.c, kernel/sched/fair.c, kernel/sched/rt.c,
	kernel/sched/sched.h, kernel/time/posix-cpu-timers.c: there now we
	have both get nr io wait AND this cpu load...flexibility during
	transition is important.

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/Makefile,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/{proc.c =>
	loadavg.c}, kernel/sched/sched.h: sched: Move the loadavg code to a
	more obvious location -- ROB NOTE: also added our (currently unused)
	nr_iowait_load function that was missing, rest is pending i am
	finding it now. Beyond that updated the idle calculation to be more
	efficient and awaaaaaaay we go!

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: warning on once for __cpu_up

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c, include/linux/cpufreq.h,
	include/linux/sched.h, kernel/fork.c, kernel/sched/cputime.c: REVERT
	- cpu powerstats for a heartbeat

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c: fuck

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: sched-deadline-Use-hrtimer_start.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: sched-deadline-Support-DL-task-migration

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: 
	sched-dl-Prevent-enqueue-of-a-sleeping-task-in-dl

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: sched-deadline-Fix-stale-yield-state

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c: 
	sched-deadline-Fix-deadline-parameter-modification;

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-core-Validate-rq_clock-serialization

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched/core: Remove check of p->sched_class

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: sched/fair: Fix
	sched_entity::avg::decay_count initialization;

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: 
	sched-deadline-Don-t-check-CONFIG_SMP-in-switched_from

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: 
	sched-deadline-Reschedule-from-switched_from_dl

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: sched-deadline-Fix-artificial-overrun

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c: sched/deadline:
	Implement cancel_dl_timer() to use in switched_from_dl()

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/module.c: 
	module-Invalidate-signatures-on-force-loaded-modules

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/time/posix-cpu-timers.c: 
	posix_cpu_timer-Exit-early-when-process-has-been-released

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: futex-Acknowledge-a-new-waiter-in-counter

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c: 
	locking-ww_mutex-Report-recursive-ww_mutex-locking

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: wait-ptrace-assume-__WALL-if-the-child-is-traced

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/trace/ring_buffer.c: 
	ring-buffer-Add-unlikelys-to-make-fast-path-the-default

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/proc.c: 
	sched-loadavg-Fix-loadavg-artifacts-on-fully-idle

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-fix-rebind-bound-workers-warning.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: fix ghost PENDING flag while doing
	MQ IO

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: futex-Handle-unlock_pi-race-gracefully

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/cputime.c: 
	sched-cputime-Fix-steal_account_process_tick

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/module.h, kernel/module.c: 
	modules-fix-longstanding-proc-kallsyms-vs-module

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/resource.c: kernel-resource.c-fix-muxed-resource-handling

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/module.c: module: wrapper for symbol name.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Fix-crash-in-sched_init_numa.

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: 
	futex-Drop-refcount-if-requeue_pi-acquired-the-rtmutex

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: Revert "workqueue: make sure delayed work run
	in local cpu"

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Fix-cpu_active_mask-cpu_online_mask-race;

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Prevent-throttling-in-early-pick_next_task

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-access-local-runqueue-directly-in-single_task

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: security_syslog-should-be-called-once-only

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/power/Kconfig: PM / sleep: Increase default DPM watchdog
	timeout to 60

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Do-not-hint-for-NUMA-balancing-on-VM_MIXED

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/auto_group.c: turning off autogroup scheduling by
	default

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/sched/rt.h, kernel/locking/rtmutex.c,
	kernel/sched/core.c: sched: Handle priority boosted tasks properly
	in setscheduler

2017-04-03  robcore <robpatershuk@gmail.com>

	* include/linux/ktime.h, kernel/time/hrtimer.c: ktime: Fix
	ktime_divns to do signed division

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/cputime.c: 
	sched-cpufreq-update-power-usage-only-if-cpufreq_stat is enabled

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c, include/linux/cpufreq.h,
	include/linux/sched.h, kernel/fork.c, kernel/sched/cputime.c: sched:
	cpufreq: Adds a field cpu_power in the task_struct

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/core.c: mmc - host -> make mmc_schedule_work
	internal function use cpu0 as well

2017-04-03  robcore <robpatershuk@gmail.com>

	* drivers/mmc/host/msm_sdcc.c: HOW DID I NEVER THINK OF DOING THIS
	BEFORE NOW???? Trying queueing the bus bandwidth voting work on CPU
	0 ONLY as any pm suspend/resume errors I see now that they report
	which cpu they are on come from a secondary CPU during
	msmsdcc_disable/enable.  THIS MIGHT BE IT!!!

2017-04-03  robcore <robpatershuk@gmail.com>

	* kernel/sched/wait.c: set_mb was converted to smp_store_mb a while
	back...

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Fix-RLIMIT_RTTIME-when-PI-boosting-to-RT

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/wait.h, kernel/sched/wait.c: sched/wait: Provide
	infrastructure to deal with nested blocking

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/atomic.h, include/linux/bitops.h,
	kernel/sched/core.c: Revert-Revert-locking-Remove-deprecated-smp_mb

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h, kernel/workqueue.c: 
	workqueue-fix-hang-involving-racing-cancel-_delayed_work_sync

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/printk/console_cmdline.h, kernel/printk/printk.c: 
	-console-Fix-console-name-size-mismatch

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/auto_group.c, kernel/sched/core.c: sched/autogroup:
	Fix failure to set cpu.rt_runtime_us

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Fix-hrtick_start-on-UP.

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/time/hrtimer.c: 
	hrtimer-Fix-incorrect-tai-offset-calculation

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: fix sched core for my shitty cgroup...TODO:
	updateit like crazy

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/atomic.h, include/linux/bitops.h,
	kernel/sched/core.c: 
	Revert-locking-Remove-deprecated-smp_mb__-barriers

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: exit-fix-race-between-wait_consider_task-and-wait

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Add-missing-rcu-protection-to-wake_up_all_idle

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: sched-deadline-Avoid-double-accounting

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: 
	sched-deadline-Fix-migration-of-SCHED_DEADLINE-tasks

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	context_tracking-Restore-previous-state-in-schedule

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle_task.c, kernel/sched/stop_task.c: 
	sched-Provide-update_curr-callbacks-for-stop-idle-scan

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c,
	kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	sched-cputime-Fix-clock_nanosleep-clock_gettime

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/kernel_stat.h, kernel/sched/core.c,
	kernel/time/posix-cpu-timers.c: sched/cputime: Fix
	cpu_timer_sample_group() double accounting

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/panic.c: dox

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-numa-Fix-out-of-bounds-read-in-sched_init_numa

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Remove lockdep check in
	sched_move_task()

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/kmod.c: 
	kernel-kmod-fix-use-after-free-of-the-sub_info-struct

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/trace/events/rcu.h, kernel/rcu/tree.c, kernel/rcu/tree.h,
	kernel/rcu/tree_plugin.h: 
	cu-Make-rcu_barrier-understand-about-missing-rcuo

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/context_tracking.c, kernel/sched/core.c: sched: stop the
	unbound recursion in preempt_schedule_context()

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Fix-race-between-task_group-and-sched_task_group

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: dox

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/time/clockevents.c: 
	clockevents-Prevent-shift-out-of-bounds.

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: 
	rcu-More-on-deadlock-between-CPU-hotplug-and-expedite

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/power/process.c: PM / freezer: Clean up code after recent
	fixes

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/freezer.c: dox

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/module.c: 
	modules-lock-around-setting-of-MODULE_STATE_UNFORMED

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, init/Kconfig: just for now, keep
	CONFIG_HOTPLUG in case there is anything i missed

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/alpha/include/uapi/asm/fcntl.h, fs/dcache.c,
	fs/ext2/namei.c, fs/minix/namei.c, fs/namei.c, fs/open.c,
	include/linux/dcache.h, include/linux/fs.h,
	include/uapi/asm-generic/fcntl.h, mm/shmem.c: no o_tempfile :(

2017-04-02  robcore <robpatershuk@gmail.com>

	* Documentation/PCI/pci.txt, arch/arm/configs/at91x40_defconfig,
	arch/arm/configs/bcmring_defconfig,
	arch/arm/configs/edb7211_defconfig,
	arch/arm/configs/footbridge_defconfig,
	arch/arm/configs/fortunet_defconfig,
	arch/arm/configs/ixp2000_defconfig,
	arch/arm/configs/pleb_defconfig, arch/arm/kernel/bios32.c,
	arch/arm/mach-ixp4xx/Kconfig, arch/blackfin/configs/IP0X_defconfig,
	arch/frv/defconfig, arch/h8300/defconfig,
	arch/m68k/configs/m5208evb_defconfig,
	arch/m68k/configs/m5249evb_defconfig,
	arch/m68k/configs/m5272c3_defconfig,
	arch/m68k/configs/m5275evb_defconfig,
	arch/m68k/configs/m5307c3_defconfig,
	arch/m68k/configs/m5407c3_defconfig,
	arch/microblaze/configs/mmu_defconfig,
	arch/microblaze/configs/nommu_defconfig,
	arch/score/configs/spct6600_defconfig, arch/um/defconfig,
	arch/unicore32/configs/unicore32_defconfig,
	arch/unicore32/kernel/pci.c, arch/xtensa/Kconfig,
	arch/xtensa/configs/common_defconfig,
	arch/xtensa/configs/iss_defconfig,
	arch/xtensa/configs/s6105_defconfig, drivers/amba/bus.c,
	drivers/input/serio/serio.c, drivers/isdn/hisax/config.c,
	drivers/isdn/hisax/hfc4s8s_l1.c, drivers/isdn/mISDN/core.c,
	drivers/pci/Makefile, drivers/pci/pci-driver.c,
	drivers/pci/pci-sysfs.c, drivers/pci/pci.h, drivers/pci/probe.c,
	drivers/pci/setup-bus.c, drivers/w1/w1.c,
	drivers/zorro/zorro-driver.c, fs/gfs2/Kconfig, include/linux/pci.h,
	init/Kconfig, mm/Kconfig: destroyed CONFIG_HOTPLUG

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/alpha/include/uapi/asm/fcntl.h, fs/dcache.c,
	fs/ext2/namei.c, fs/minix/namei.c, fs/namei.c, fs/open.c,
	include/linux/dcache.h, include/linux/fs.h,
	include/uapi/asm-generic/fcntl.h, mm/shmem.c: O_TMPFILE

2017-04-02  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c: 
	mm-thp-use-the-correct-function-when-updating-access.

2017-04-02  robcore <robpatershuk@gmail.com>

	* mm/hugetlb.c: mm-hugetlb-Copy-general-hugetlb-code-from-x86-to-mm.

2017-04-02  robcore <robpatershuk@gmail.com>

	* Documentation/ABI/testing/sysfs-bus-pci,
	Documentation/SubmitChecklist, Documentation/cpu-hotplug.txt,
	Documentation/hwmon/submitting-patches,
	Documentation/kbuild/kconfig.txt, Documentation/usb/hotplug.txt,
	arch/arm/Kconfig, arch/arm/configs/canadefconfig,
	arch/blackfin/Kconfig, arch/x86/Kconfig, drivers/base/Kconfig,
	drivers/char/pcmcia/Kconfig, drivers/edac/Kconfig,
	drivers/pci/Kconfig, drivers/pci/hotplug/Kconfig,
	drivers/pcmcia/Kconfig, drivers/staging/media/go7007/go7007.txt,
	include/asm-generic/vmlinux.lds.h, include/linux/hugetlb.h,
	kernel/power/Kconfig, mm/hugetlb.c: 
	mm-hugetlb-Copy-huge_pmd_share-from-x86-to-mm.

2017-04-02  robcore <robpatershuk@gmail.com>

	* drivers/battery/max77693_charger.c, drivers/battery/sec_battery.c: 
	battery - import a couple hax from i337m QB1 source

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: oh i see now...here goes nothing

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: how come i had two of those?

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched - remove double_rq_lock from
	__migrate_task

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, include/linux/reboot.h,
	kernel/reboot.c: REVERT - restart handler dont need it

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/async.c: kernel-async - switch to pr_foo

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/watchdog.c: 
	softlockup-make-detector-be-aware-of-task-switch

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-Use-cond_resched_rcu_qs-macro.

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-Add-quiescent-state-between-work-items

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/lockdep.h, kernel/locking/lockdep.c: 
	locking/lockdep: Revert qrwlock recusive stuff

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/locking/rwsem-xadd.c: -locking-rwsem-Avoid-double-checking-

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Delete-resched_cpu-from-idle_balance

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c:  sched: Improve sysbench performance by fixing spurious active
	 migration

2017-04-02  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/linux/pm.h,
	kernel/power/suspend.c: PM / sleep: Export dpm_suspend_late/noirq()
	and dpm_resume_early/noirq()

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/locking/locktorture.c,
	tools/testing/selftests/rcutorture/configs/lock/LOCK04,
	tools/testing/selftests/rcutorture/configs/lock/LOCK04.boot: 
	locktorture squash

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/reboot.h, kernel/reboot.c: 
	kernel-add-support-for-kernel-restart-handler-notifier

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: sched-rt-Use-resched_curr-in-task_tick_rt.

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched, mips, ia64:
	__ARCH_WANT_UNLOCKED_CTXSW

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c: sched: print_rq(): Dont use tasklist_lock

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-normalize_rt_tasks-Don-t-use-_irqsave-for-task

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Fix-the-task-group-check-in-tg_has_rt_tasks.

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpudeadline.c, kernel/sched/deadline.c: 
	sched/deadline: Fix inter- exclusive cpusets migrations

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: 
	sched-Clean-up-some-typos-and-grammatical-errors

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Test-the-CPU-s-capacity-in-wake_affine

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Allow all architectures to set
	capacity_orig

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, lib/Kconfig.debug: 
	sched-Add-default-disabled-option-to-BUG-when-stack-overruns

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/x86/mm/fault.c, include/linux/sched.h: 
	sched-Add-helper-for-task-stack-page-overrun-check

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Do not stop cpu in
	set_cpus_allowed_ptr() if task is not running

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-core-Use-put_prev_task-accessor-where-possible.

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-cleanup-Remove-useless-assignment

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/seqlock.h: 
	seqlock-Add-irqsave-variant-of-read_seqbegin_or_lock

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/lockdep.h, kernel/cpu.c, kernel/rcu/tree.c: 
	rcu-Eliminate-deadlock-between-CPU-hotplug-and-expidited

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: hoping that fixes my undefined ref

2017-04-02  robcore <robpatershuk@gmail.com>

	* ref2.txt: added a little thing to ref2

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/alpha/include/asm/Kbuild, arch/arm/include/asm/Kbuild,
	arch/blackfin/include/asm/Kbuild, arch/openrisc/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, include/asm-generic/irq_work.h,
	include/linux/irq_work.h, kernel/irq_work.c, kernel/time/timer.c: 
	actually revert the irq commits for now..control variables are
	important

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/alpha/include/asm/Kbuild, arch/arm/include/asm/Kbuild,
	arch/blackfin/include/asm/Kbuild, arch/openrisc/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, include/asm-generic/irq_work.h,
	include/linux/irq_work.h: 
	irq_work-Introduce-arch_irq_work_has_interrupt

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: changing default gov to ondemand
	as stockdemand affects core usage (hotplugging)

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: some sched fixes

2017-04-02  robcore <robpatershuk@gmail.com>

	* init/main.c: think that was doubled...which reminds me

2017-04-02  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, include/linux/rcupdate.h,
	include/linux/torture.h, init/Kconfig, init/main.c,
	kernel/locking/locktorture.c, kernel/locking/rwsem-xadd.c,
	kernel/rcu/rcutorture.c, kernel/rcu/tree.c, kernel/rcu/tree.h,
	kernel/rcu/tree_plugin.h, kernel/sysctl.c,
	kernel/time/tick-sched.c, kernel/torture.c: rcu/irq/nohz/locking
	squash

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/irq_work.h, kernel/irq_work.c, kernel/time/timer.c: 
	irq_work: Force raised irq work to run on irq work interrupt

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/tick.h, init/main.c, kernel/time/tick-common.c,
	kernel/time/tick-internal.h: 
	nohz-Move-nohz-full-init-call-to-tick-init

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/cputime.c: 
	sched-time-Atomically-increment-stime-utime

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, sop.sh: sched-Migrate-waking-tasks.

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, include/linux/hrtimer.h, include/linux/ktime.h,
	include/linux/time.h, include/linux/time64.h,
	include/linux/timekeeper_internal.h, include/linux/timekeeping.h,
	kernel/time/Kconfig, kernel/time/hrtimer.c, kernel/time/ntp.c,
	kernel/time/ntp_internal.h, kernel/time/posix-timers.c,
	kernel/time/tick-internal.h, kernel/time/time.c,
	kernel/time/timekeeping.c, kernel/time/timekeeping.h,
	kernel/time/timekeeping_debug.c, kernel/time/timekeeping_internal.h: 
	nope reverted timer shit again

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/time.h, include/linux/timekeeper_internal.h,
	include/linux/timekeeping.h: move around adj_timex

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/time/time.c: time-Export-nsecs_to_jiffies

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: ktime t
	shit

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Provide-ktime_get_with_offset.

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: 
	timekeeping-Use-ktime_t-based-data-for-ktime_get.

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping-Provide-internal-ktime_t-based-data

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: 
	timekeeping-Use-timekeeping_update-instead-of-memcpy

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/ktime.h: 
	ktime-add-ms_to_ktime-and-ktime_add_ms-helpers

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping-Cache-optimize-struct-timekeeper

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/ktime.h, include/linux/timekeeper_internal.h,
	kernel/time/timekeeping.c: 
	ktime-Change-ktime_set-to-take-64bit-seconds-value

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	seqcount changes for timekeeper

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeper-Move-tk_xtime-to-core-code

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/ntp.c,
	kernel/time/timekeeping.c: 
	timekeeping-Provide-timespec64-based-interfaces.

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/hrtimer.h, include/linux/ktime.h,
	include/linux/time.h, include/linux/timekeeping.h,
	kernel/time/hrtimer.c, kernel/time/posix-timers.c,
	kernel/time/tick-internal.h, kernel/time/time.c,
	kernel/time/timekeeping.h: 
	time-Consolidate-the-time-accessor-prototypes.

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/ntp.c,
	kernel/time/ntp_internal.h, kernel/time/timekeeping.c,
	kernel/time/timekeeping_debug.c, kernel/time/timekeeping_internal.h: 
	timekeeping-Convert-timekeeping-core-to-use-timespec64

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/ktime.h, include/linux/time64.h, kernel/time/time.c: 
	time-More-core-infrastructure-for-timespec64

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/time.h, include/linux/time64.h: 
	time64-Add-time64.h-header-and-define-struct-timespec

2017-04-02  robcore <robpatershuk@gmail.com>

	* robstuff/sdcard_cleaner-orig.sh, robstuff/sdcard_cleaner.sh: did
	some cleaning

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, include/linux/ktime.h, include/linux/time.h,
	kernel/time/Kconfig, kernel/time/hrtimer.c,
	kernel/time/timekeeping.c: ktime-kill-non-scalar-ktime_t.

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/power/wakeup_reason.c: more suspend time fixin

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: turn OFF tasks rcu this round

2017-04-02  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, include/linux/init_task.h,
	include/linux/rcupdate.h, include/linux/rcutiny.h,
	include/linux/sched.h, kernel/rcu/rcutorture.c, kernel/rcu/tiny.c,
	kernel/rcu/tree.c, kernel/rcu/tree.h, kernel/rcu/tree_plugin.h,
	kernel/rcu/update.c, kernel/softirq.c: rcu squash up to
	rcu-Per-CPU-operation-cleanups-to-rcu_-_qs-functions

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/update.c: rcu-Export-RCU-tasks-APIs-to-GPL-modules.

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, kernel/exit.c, kernel/rcu/update.c: 
	rcu-Make-TASKS_RCU-handle-tasks-that-are-almost-done

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, kernel/rcu/update.c: 
	rcu-Add-synchronous-grace-period-waiting-for-RCU.

2017-04-02  robcore <robpatershuk@gmail.com>

	* fs/file.c, include/linux/rcupdate.h, kernel/rcu/rcutorture.c,
	kernel/rcu/tree.c, kernel/rcu/tree_plugin.h, mm/mlock.c: 
	rcu-Provide-cond_resched_rcu_qs-to-force-quiescent-states

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/init_task.h, include/linux/rcupdate.h,
	include/linux/sched.h, init/Kconfig, kernel/rcu/tiny.c,
	kernel/rcu/tree.c, kernel/rcu/update.c: -rcu-Add-call_rcu_tasks;

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/power/wakeup_reason.c: wakeup reason - fixed time logging
	properly and removed suspend since boot as we dont even use it

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/hrtimer.h, include/linux/time.h,
	kernel/time/hrtimer.c, kernel/time/timekeeping.c: 
	hrtimer-Cleanup-hrtimer-accessors-to-timekeeping

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: I think it may be a good idea to remove
	get/put online cpus usage from core.c

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: cpus_active makes more sense from the
	scheduling code

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c, sop.sh: 
	timekeeping-Simplify-arch_gettimeoffset

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/rcu/rcutorture.c,
	kernel/rcu/tiny.c, kernel/rcu/tree.c, kernel/rcu/tree.h,
	kernel/rcu/tree_plugin.h, kernel/torture.c: rcu squash up to
	pr_foo-converts

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Use-bool-type-for-return-value-in-rcu_is_watchin.

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Fix-sparse-warning-about-rcu_batches_completed.

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree_plugin.h: 
	rcu-Remove-remaining-read-modify-write-ACCESS_ONCE.

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/ioport.h, kernel/resource.c: 
	resources-Add-device-managed-request-release_res

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/tick.h, kernel/time/tick-sched.c: 
	nohz-Restore-NMI-safe-local-irq-work-for-local-nohz

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c: reverted genirq stuff, i am happy with my irqs
	on suspend

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/locking/semaphore.c: 
	locking-semaphore-Resolve-some-shadow-warnings

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c: 
	genirq-Create-helper-for-flow-handler-entry-check;

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c: genirq-Distangle-edge-handler-entry-.

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/irq/devres.c: dox

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu-Make-nocb-leader-kthreads-process-pending-cbs

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/kernel_stat.h, kernel/events/callchain.c,
	kernel/events/core.c, kernel/taskstats.c, kernel/time/tick-sched.c,
	kernel/user-return-notifier.c, pos.sh: Revert the revert of get cpu
	var replacements

2017-04-02  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt,
	arch/alpha/include/asm/Kbuild, arch/arm/include/asm/Kbuild,
	arch/blackfin/include/asm/Kbuild, arch/openrisc/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, arch/x86/mm/fault.c,
	drivers/base/syscore.c, fs/file.c, include/asm-generic/irq_work.h,
	include/linux/init_task.h, include/linux/interrupt.h,
	include/linux/ioport.h, include/linux/irq.h,
	include/linux/irq_work.h, include/linux/irqdesc.h,
	include/linux/kernel_stat.h, include/linux/lockdep.h,
	include/linux/rcupdate.h, include/linux/rcutiny.h,
	include/linux/sched.h, include/linux/tick.h,
	include/linux/torture.h, init/Kconfig, init/main.c, kernel/cpu.c,
	kernel/events/callchain.c, kernel/events/core.c, kernel/exit.c,
	kernel/fork.c, kernel/irq/Kconfig, kernel/irq/chip.c,
	kernel/irq/devres.c, kernel/irq/internals.h, kernel/irq/irqdesc.c,
	kernel/irq/pm.c, kernel/irq_work.c, kernel/locking/locktorture.c,
	kernel/locking/rwsem-xadd.c, kernel/locking/semaphore.c,
	kernel/power/suspend_test.c, kernel/rcu/rcutorture.c,
	kernel/rcu/tiny.c, kernel/rcu/tree.c, kernel/rcu/tree.h,
	kernel/rcu/tree_plugin.h, kernel/rcu/update.c, kernel/resource.c,
	kernel/sched/core.c, kernel/sched/cputime.c, kernel/sched/fair.c,
	kernel/sched/sched.h, kernel/softirq.c, kernel/sys.c,
	kernel/sysctl.c, kernel/taskstats.c,
	kernel/time/posix-cpu-timers.c, kernel/time/tick-common.c,
	kernel/time/tick-internal.h, kernel/time/tick-sched.c,
	kernel/time/timer.c, kernel/torture.c,
	kernel/user-return-notifier.c, lib/Kconfig.debug, mm/mlock.c: there
	possed

2017-04-02  robcore <robpatershuk@gmail.com>

	* pos.sh: bigger pos for real

2017-04-02  robcore <robpatershuk@gmail.com>

	* pos.sh: bigger pos

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/alpha/include/asm/Kbuild, arch/arm/include/asm/Kbuild,
	arch/blackfin/include/asm/Kbuild, arch/openrisc/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, include/asm-generic/irq_work.h,
	include/linux/irq_work.h: bring back arch_irq_work_ahs_interrupt

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/alpha/include/asm/Kbuild, arch/arm/configs/canadefconfig,
	arch/arm/include/asm/Kbuild, arch/blackfin/include/asm/Kbuild,
	arch/openrisc/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild,
	drivers/cpufreq/cpufreq_stockdemand.c,
	drivers/cpufreq/cpufreq_yankdemand.c,
	include/asm-generic/irq_work.h, include/linux/irq_work.h,
	include/linux/kthread.h, include/linux/sched.h,
	include/linux/seqlock.h, init/main.c, kernel/kthread.c,
	kernel/sched/core.c, kernel/sched/cputime.c,
	kernel/time/posix-cpu-timers.c, kernel/workqueue.c: possed

2017-04-02  robcore <robpatershuk@gmail.com>

	* pos.sh: small possing

2017-04-02  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stockdemand.c,
	drivers/cpufreq/cpufreq_yankdemand.c: right, now that we are using
	the pointer directly, we need to call it properly

2017-04-02  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stockdemand.c,
	drivers/cpufreq/cpufreq_yankdemand.c: demand govs - set_cpus_allowed
	was only a call to set_cpus_allowed_ptr in the first place

2017-04-02  robcore <robpatershuk@gmail.com>

	* init/main.c: guess we dont have this?

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/cputime.c, kernel/time/posix-cpu-timers.c: there we
	go i was looking in the wrong place for thread_group_cputime

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/alpha/include/asm/Kbuild, arch/arm/include/asm/Kbuild,
	arch/blackfin/include/asm/Kbuild, arch/openrisc/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, include/asm-generic/irq_work.h,
	include/linux/irq_work.h: 
	irq_work-Introduce-arch_irq_work_has_interrupt.

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/seqlock.h: 
	seqlock-Add-irqsave-variant-of-read_seqbegin_or_lock

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: fixup my __migrate_tasks

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: updated config

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/kthread.h, include/linux/sched.h, kernel/kthread.c,
	kernel/sched/core.c, kernel/workqueue.c: 
	sched-Fix-a-race-between-__kthread_bind-and-sched - including fixes
	for core.c from my tinkering

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: some sched tinkering

2017-04-02  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, kernel/sched/idle.c,
	kernel/sched/sched.h: i think so

2017-04-02  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, kernel/sched/idle.c,
	kernel/sched/sched.h: did i have this? sched: Let the scheduler see
	CPU idle states

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: fix some typos/grammer

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Test-the-CPU-s-capacity-in-wake_affine

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, lib/Kconfig.debug: sched: Add
	default-disabled option to BUG() when stack end location is
	overwritten

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/x86/mm/fault.c, include/linux/sched.h: 
	sched-Add-helper-for-task-stack-page-overrun-check

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/x86/mm/fault.c, include/linux/sched.h, init/main.c,
	kernel/fork.c: init/main.c: Give init_task a canary

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Do-not-stop-cpu-in-set_cpus_allowed_ptr

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-core-Use-put_prev_task-accessor-where-possible.;

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-cleanup-Remove-useless-assignment

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/lockdep.h, kernel/cpu.c, kernel/rcu/tree.c: 
	rcu-Eliminate-deadlock-between-CPU-hotplug-and-expidited-rcu

2017-04-02  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, include/linux/rcupdate.h,
	include/linux/torture.h, kernel/locking/locktorture.c,
	kernel/rcu/rcutorture.c, kernel/sysctl.c, kernel/torture.c: torture
	squash

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/locking/locktorture.c: 
	locktorture-Rename-locktorture_runnable-parameter

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Don-t-track-sysidle-state-if-no-nohz_full-CPUs

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: replace sysidle_state with our new one

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Check-for-have_rcu_nocb_mask-instead-of-rcu_nocb

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu-Create-rcuo-kthreads-only-for-onlined-CPUs

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu-Rationalize-kthread-spawning.

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: more

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Use-false-for-return-in-__call_rcu_nocb.

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: use true and false for bools

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, init/Kconfig, init/main.c,
	kernel/rcu/tree_plugin.h: rcu: Fix attempt to avoid unsolicited
	offloading of callbacks (also some cosmetic fixes, and a safe check
	for zalloc try get cpus)

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/locking/rwsem-xadd.c: 
	locking-rwsem-Move-EXPORT_SYMBOL-lines-to-follow-functions

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/time/tick-sched.c: 
	nohz-nohz-full-depends-on-irq-work-self-IPI-support

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/time/tick-sched.c: nohz-Consolidate-nohz-full-init-code.

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/irq_work.h, kernel/irq_work.c, kernel/time/timer.c: 
	irq_work: Force raised irq work to run on irq work interrupt

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/tick.h, init/main.c, kernel/time/tick-common.c,
	kernel/time/tick-internal.h: 
	nohz-Move-nohz-full-init-call-to-tick-init

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Migrate-waking-tasks

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend_test.c: 
	PM-sleep-Support-freeze-as-test_suspend-option

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/cputime.c: 
	sched-time-Atomically-increment-stime-utime

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/exit.c, kernel/fork.c,
	kernel/sched/cputime.c, kernel/sys.c,
	kernel/time/posix-cpu-timers.c: 
	time-signal-Protect-resource-use-statistics-with-seqlocks

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: exit-Always-reap-resource-stats-in-__exit_signal

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, include/linux/rcutiny.h,
	kernel/rcu/tiny.c, kernel/rcu/tree.c, kernel/rcu/tree_plugin.h,
	kernel/softirq.c: rcu: Per-CPU operation cleanups to rcu_*_qs()
	functions

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/init_task.h, include/linux/sched.h,
	kernel/rcu/tree_plugin.h, kernel/rcu/update.c: 
	rcu-Remove-local_irq_disable-in-rcu_preempt_note_context

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/update.c: dox

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/update.c: 
	rcu-Make-rcu_tasks_kthread-s-GP-wait-loop-allow-preemption

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/init_task.h, include/linux/sched.h,
	kernel/rcu/tree.c, kernel/rcu/tree.h, kernel/rcu/tree_plugin.h,
	kernel/rcu/update.c: rcu-Make-TASKS_RCU-handle-nohz_full-CPUs

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/update.c: 
	rcu-Defer-rcu_tasks_kthread-creation-till-first-call

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/update.c: rcu-Improve-RCU-tasks-energy-efficiency

2017-04-02  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, kernel/rcu/update.c: 
	rcu-Add-stall-warning-checks-for-RCU-tasks;

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, kernel/rcu/rcutorture.c: 
	rcutorture-Add-torture-tests-for-RCU-tasks

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/update.c: rcu-Export-RCU-tasks-APIs-to-GPL-modules.;

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, kernel/exit.c, kernel/rcu/update.c: 
	rcu-Make-TASKS_RCU-handle-tasks-that-are-almost-done.;

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, kernel/rcu/update.c: 
	rcu-Add-synchronous-grace-period-waiting-for-RCU

2017-04-02  robcore <robpatershuk@gmail.com>

	* fs/file.c, include/linux/rcupdate.h, kernel/rcu/rcutorture.c,
	kernel/rcu/tree.c, kernel/rcu/tree_plugin.h, mm/mlock.c: rcu:
	Provide cond_resched_rcu_qs() to force quiescent states in long
	loops

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/init_task.h, include/linux/rcupdate.h,
	include/linux/sched.h, init/Kconfig, kernel/rcu/tiny.c,
	kernel/rcu/tree.c, kernel/rcu/update.c: rcu: Add call_rcu_tasks()

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/rcu/rcutorture.c,
	kernel/torture.c: pr_foo converts

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/rcutorture.c: rcutorture-Fix-a-sparse-warning;

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree_plugin.h: 
	rcu-Replace-flush_signals-with-WARN_ON-signal_pending

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Use-rcu_gp_kthread_wake-to-wake-up-grace-period

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu-Break-more-call_rcu-deadlock-involving-scheduler

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: dox

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tiny.c: rcu-Update-tiny.c-references-to-tree.c;

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, kernel/rcu/update.c: 
	rcu-Uninline-rcu_read_lock_held

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Use-true-false-instead-of-1-0-for-a-bool-type;

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Return-bool-type-for-rcu_try_advance_all_cbs

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Use-bool-type-for-return-value-in-rcu_is_watching

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Fix-sparse-warning-about-rcu_batches_completed

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree_plugin.h: 
	rcu-Remove-remaining-read-modify-write-ACCESS_ONCE

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/ioport.h, kernel/resource.c: 
	resources-Add-device-managed-request-release_res

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/tick.h, kernel/time/tick-sched.c: 
	nohz-Restore-NMI-safe-local-irq-work-for-local-nohz

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/locking/semaphore.c: 
	locking-semaphore-Resolve-some-shadow-warnings.

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/irqdesc.h, kernel/irq/Kconfig, kernel/irq/irqdesc.c: 
	genirq: Add irq_domain-aware core IRQ handler

2017-04-02  robcore <robpatershuk@gmail.com>

	* drivers/base/syscore.c, include/linux/interrupt.h,
	kernel/irq/chip.c, kernel/irq/internals.h: k there fixed the header
	too

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/irq/pm.c: alright changed irq pm...

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/irq/pm.c: reverted

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/irq/pm.c: hmmm

2017-04-02  robcore <robpatershuk@gmail.com>

	* drivers/base/syscore.c, include/linux/interrupt.h,
	kernel/irq/chip.c, kernel/irq/internals.h, kernel/irq/pm.c: revert
	that

2017-04-02  robcore <robpatershuk@gmail.com>

	* drivers/base/syscore.c, include/linux/interrupt.h,
	kernel/irq/chip.c, kernel/irq/internals.h, kernel/irq/pm.c: hold up
	again

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/pm.c: genirq: Mark wakeup sources
	as armed on suspend

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c: 
	genirq-Create-helper-for-flow-handler-entry-check

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c: genirq: Distangle edge handler entry .If the
	interrupt is disabled or has no action, then we should not call the
	poll check. Separate the checks.

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/irq/devres.c: dox

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu-Make-nocb-leader-kthreads-process-pending-cbs

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, arch/arm/kernel/update_vsyscall_arm.c,
	arch/arm/kernel/update_vsyscall_arm.h, arch/x86/kernel/tsc.c,
	drivers/input/evdev.c, drivers/misc/ioc4.c, fs/proc/uptime.c,
	fs/timerfd.c, fs/xattr.c, include/linux/clocksource.h,
	include/linux/hrtimer.h, include/linux/ktime.h,
	include/linux/seqlock.h, include/linux/time.h,
	include/linux/time64.h, include/linux/timekeeper_internal.h,
	include/linux/timekeeping.h, include/linux/wakeup_reason.h,
	kernel/fork.c, kernel/power/wakeup_reason.c, kernel/time/Kconfig,
	kernel/time/clocksource.c, kernel/time/hrtimer.c,
	kernel/time/ntp.c, kernel/time/ntp_internal.h,
	kernel/time/posix-timers.c, kernel/time/tick-internal.h,
	kernel/time/time.c, kernel/time/timekeeping.c,
	kernel/time/timekeeping.h, kernel/time/timekeeping_debug.c,
	kernel/time/timekeeping_internal.h, kernel/time/timer.c, patcher.sh: 
	nope time is a dud

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/cgroup.c: ohhh right that was
	thrown in the mix

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h: fix doubled

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/time.h, include/linux/timekeeping.h: header fixes

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/kernel_stat.h, include/linux/timekeeping.h,
	kernel/events/callchain.c, kernel/events/core.c,
	kernel/taskstats.c, kernel/time/tick-sched.c,
	kernel/user-return-notifier.c: brought back this_cpu_ptr

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c,
	arch/arm/kernel/update_vsyscall_arm.h, drivers/input/evdev.c,
	drivers/misc/ioc4.c, fs/proc/uptime.c, fs/timerfd.c, fs/xattr.c,
	include/linux/seqlock.h, include/linux/time.h,
	include/linux/timekeeper_internal.h, include/linux/wakeup_reason.h,
	kernel/cgroup.c, kernel/fork.c, kernel/power/wakeup_reason.c,
	kernel/time/ntp.c, kernel/time/timekeeping.c, kernel/time/timer.c: 
	the other time related necessities

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/ktime.h: 
	ktime-add-ms_to_ktime-and-ktime_add_ms-helpers

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/x86/kernel/tsc.c, include/linux/clocksource.h,
	include/linux/timekeeper_internal.h, include/linux/timekeeping.h,
	kernel/time/Kconfig, kernel/time/clocksource.c,
	kernel/time/timekeeping.c, kernel/time/timekeeping_internal.h,
	patcher.sh: part 2

2017-04-02  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, include/linux/hrtimer.h, include/linux/ktime.h,
	include/linux/time.h, include/linux/time64.h,
	include/linux/timekeeper_internal.h, include/linux/timekeeping.h,
	kernel/time/Kconfig, kernel/time/hrtimer.c, kernel/time/ntp.c,
	kernel/time/ntp_internal.h, kernel/time/posix-timers.c,
	kernel/time/tick-internal.h, kernel/time/time.c,
	kernel/time/timekeeping.c, kernel/time/timekeeping.h,
	kernel/time/timekeeping_debug.c,
	kernel/time/timekeeping_internal.h, patcher.sh: brought back my time
	changes from yesterday (gonna leave out the msm event_timer which i
	think was the cause of the failed boot

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/kernel_stat.h, kernel/events/callchain.c,
	kernel/events/core.c, kernel/taskstats.c, kernel/time/tick-sched.c,
	kernel/user-return-notifier.c: revert the get cpu var replacements
	for a moment while i try something out...bear with me

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: already had task on rq
	migrating

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/kernel_stat.h, kernel/events/callchain.c,
	kernel/events/core.c, kernel/taskstats.c, kernel/time/tick-sched.c,
	kernel/user-return-notifier.c: scheduler - a bunch of replacements
	of get cpu var with this cpu ptr

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: sched: Add function
	single_task_running to let a task check if it is the only task
	running on a cpu

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: teach scheduler to
	understand task on rq migrating

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: fixup my deadline select_task_rq with cpu
	included in function def

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: fixup

2017-04-02  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c,
	kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sched/stop_task.c: sched - add wrapper for cehcking task
	struct on rq

2017-04-02  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/idle_task.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sched/stop_task.c: sched/numa: Introduce migrate_swap()

2017-04-02  robcore <robpatershuk@gmail.com>

	* 09f6edd424218eb69078551b2ecfada1f2d098eb.patch.1, ref2.txt: ref

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c,
	kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sched/stop_task.c: reverted

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c,
	kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sched/stop_task.c: not yet

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: move group type enum

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched fair -fix doubled function in
	task_numa_compare

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: hold up

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Fix reschedule which is generated
	on throttled cfs_rq

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: sched: Match declaration with definition

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/lockdep.h, kernel/locking/lockdep.c: 
	locking-lockdep-Restrict-the-use-of-recursive-read

2017-04-01  robcore <robpatershuk@gmail.com>

	* Documentation/DocBook/kernel-locking.tmpl, Documentation/{ =>
	locking}/lockdep-design.txt, Documentation/{ =>
	locking}/lockstat.txt, Documentation/{ =>
	locking}/mutex-design.txt, Documentation/{ =>
	locking}/rt-mutex-design.txt, Documentation/{ =>
	locking}/rt-mutex.txt, Documentation/{ => locking}/spinlocks.txt,
	Documentation/{ => locking}/ww-mutex-design.txt, MAINTAINERS,
	include/linux/lockdep.h, include/linux/mutex.h,
	include/linux/rwsem.h, kernel/locking/mutex.c,
	kernel/locking/rtmutex.c, lib/Kconfig.debug: dox

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/mutex.h, kernel/locking/mutex.h: 
	locking-mutexes-Use-MUTEX_SPIN_ON_OWNER-when-appr

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c: 
	locking-mutexes-Refactor-optimistic-spinning-code

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/locking/mcs_spinlock.h: locking-mcs-Remove-obsolete-comment

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c: 
	locking-mutexes-Document-quick-lock-release

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c: 
	locking-mutexes-Standardize-arguments-in-lock-unlock

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/atomic.h, include/linux/bitops.h,
	kernel/sched/core.c: locking-Remove-deprecated-smp_mb__-barriers

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Rename-a-misleading-variable-in-build_overlap;

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Allow calculate_imbalance() to
	move idle cpus

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Make-update_sd_pick_busiest-return-true;

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Make calculate_imbalance()
	independent

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: kernel/exit.c: fix coding style

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/kallsyms.c: kernel-kallsyms.c-fix-pB-when-there-s-no-symbol

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/acct.c: acct-encode_comp_t-0-is0

2017-04-01  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, arch/arm/kernel/update_vsyscall_arm.c,
	arch/arm/kernel/update_vsyscall_arm.h,
	arch/arm/mach-msm/event_timer.c,
	arch/arm/mach-msm/include/mach/event_timer.h,
	arch/arm/mach-msm/pm-8x60.c, arch/arm/mach-msm/pm-data.c,
	arch/x86/kernel/tsc.c, drivers/input/evdev.c, drivers/misc/ioc4.c,
	drivers/video/msm/mdp.c, fs/lockd/mon.c, fs/proc/uptime.c,
	fs/timerfd.c, fs/xattr.c, include/linux/clocksource.h,
	include/linux/hrtimer.h, include/linux/ktime.h,
	include/linux/module.h, include/linux/sched.h,
	include/linux/seqlock.h, include/linux/time.h,
	include/linux/time64.h, include/linux/timekeeper_internal.h,
	include/linux/timekeeping.h, include/linux/wakeup_reason.h,
	kernel/delayacct.c, kernel/extable.c, kernel/fork.c,
	kernel/module.c, kernel/power/snapshot.c,
	kernel/power/wakeup_reason.c, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/time/Kconfig,
	kernel/time/clocksource.c, kernel/time/hrtimer.c,
	kernel/time/ntp.c, kernel/time/ntp_internal.h,
	kernel/time/posix-timers.c, kernel/time/tick-internal.h,
	kernel/time/time.c, kernel/time/timekeeping.c,
	kernel/time/timekeeping.h, kernel/time/timekeeping_debug.c,
	kernel/time/timekeeping_internal.h, kernel/time/timer.c,
	kernel/trace/ring_buffer.c: possed

2017-04-01  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-04-01  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdp.c: mdp.c - fix call to event_timer

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: oops fixup cgroup timespec_compare

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/fork.c: cheat and use get_monotonic_boottime with
	kernel/fork.c instead of monotonic_to_bootbased

2017-04-01  robcore <robpatershuk@gmail.com>

	* fs/proc/array.c, include/linux/sched.h, kernel/acct.c,
	kernel/fork.c, kernel/tsacct.c: REVERT - sched-task start_time and
	task real_start_time

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: reverted all the cgroupy shit

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: nope gonna do some work here

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: nope

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	-cgroup-rename-cgroup_subsys_state-dput_work

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/extable.c: kernel-extable-fix-address-checks

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cpuset.c,
	mm/memcontrol.c: actually reverted em all

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cpuset.c,
	mm/memcontrol.c: actually keeping those

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cpuset.c,
	mm/memcontrol.c: fuck em both too

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: fucked

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: fuck this one

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: reimplement cgroup_transfer_tasks()
	without using css_scan_tasks()

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cpuset.c,
	mm/memcontrol.c: cgroup-implement-cgroup_has_tasks

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-trivial-style-updates

2017-04-01  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c, kernel/cgroup.c: fixup my
	vsyscall to properly call the read clock function (represented as
	"c" in this implementation")

2017-04-01  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c: initializing tkr just in
	case

2017-04-01  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/update_vsyscall_arm.c,
	arch/arm/kernel/update_vsyscall_arm.h: update cycle_last usage in
	arm_vsyscall, and explicityly label it as old.

2017-04-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/pm-8x60.c, arch/arm/mach-msm/pm-data.c: msm
	event timer/pm-8x60: we are now tracking percpu

2017-04-01  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, fs/proc/proc_net.c, fs/proc_namespace.c,
	include/linux/nsproxy.h, ipc/namespace.c, kernel/nsproxy.c,
	kernel/utsname.c, net/core/net_namespace.c: fuck no fs update

2017-04-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/event_timer.c,
	arch/arm/mach-msm/include/mach/event_timer.h: this will probably
	require some modification else where, but import percpu hrtimer
	updates from @dorimanx

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/time.h, include/linux/timekeeper_internal.h,
	kernel/time/ntp.c, kernel/time/timekeeping.c: 
	time-settimeofday-Validate-the-values-of-tv

2017-04-01  robcore <robpatershuk@gmail.com>

	* fs/proc/uptime.c: 
	fs-proc-uptime.c-uptime_proc_show-use-get_monotonic_boottime

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/time/timer.c: timer/sysinfo - use get_monotonic_boottime
	instead of deprecated bootbased

2017-04-01  robcore <robpatershuk@gmail.com>

	* fs/xattr.c: simple_xattr-permit-0-size-extended-attributes.

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/seqlock.h: seqcount-Add-raw_write_seqcount_latch

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/seqlock.h: seqcount-Provide-raw_read_seqcount

2017-04-01  robcore <robpatershuk@gmail.com>

	* fs/lockd/mon.c: fs-lockd-Use-ktime_get_ns

2017-04-01  robcore <robpatershuk@gmail.com>

	* drivers/misc/ioc4.c: misc-ioc4-Use-ktime_get_ns

2017-04-01  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c: input: evdev: Use ktime_mono_to_real()

2017-04-01  robcore <robpatershuk@gmail.com>

	* fs/timerfd.c: timekeeping-Provide-ktime_mono_to_any

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h: reverted

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h: doubled

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/wakeup_reason.h, kernel/power/wakeup_reason.c: fixed
	wakeup reasons

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/power/wakeup_reason.c: fucking broke wakeup reasons

2017-04-01  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, fs/proc/proc_net.c, fs/proc_namespace.c,
	include/linux/nsproxy.h, ipc/namespace.c, kernel/nsproxy.c,
	kernel/utsname.c, net/core/net_namespace.c: 
	namespaces-Use-task_lock-and-not-rcu-to-protect

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/power/snapshot.c: 
	PM-Hibernate-Implement-position-keeping-in-radix

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/power/snapshot.c: 
	PM-Hibernate-Add-memory_rtree_find_bit-function.

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/power/snapshot.c: 
	PM-Hibernate-Create-a-Radix-Tree-to-store-memory-bit

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: dox

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Robustify topology setup

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/ktime.h: 
	ktime-add-ms_to_ktime-and-ktime_add_ms-helpers

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/module.h, kernel/module.c: 
	module-add-within_module-function

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/trace/ring_buffer.c: 
	ring-buffer-Use-rb_page_size-instead-of-open-coded

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping-Use-cached-ntp_tick_length-when-accumulating

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping-Rework-frequency-adjustments

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: 
	timekeeping-Minor-fixup-for-timespec64-timespec

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Provide-fast-and-NMI-safe-access

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: 
	timekeeping-Use-tk_read_base-as-argument-for-timekeeper

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping: Create struct tk_read_base and use it in struct
	timekeeper

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping-Restructure-the-timekeeper-some-more.

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/clocksource.h, include/linux/timekeeper_internal.h,
	kernel/time/timekeeping.c: clocksource - get rid of cycle last

2017-04-01  robcore <robpatershuk@gmail.com>

	* arch/x86/kernel/tsc.c, kernel/time/Kconfig,
	kernel/time/timekeeping_internal.h: 
	clocksource-Move-cycle_last-validation-to-core-code

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/time/clocksource.c, kernel/time/timekeeping.c,
	kernel/time/timekeeping_internal.h: 
	clocksource-Make-delta-calculation-a-function.

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, include/linux/timekeeping.h,
	kernel/time/timekeeping.c: timekeeping-Provide-ktime_get_raw.

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Simplify-timekeeping_clocktai

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping-Remove-timekeeper.total_sleep_time

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: timekeeping-Simplify-getboottime;

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Use-ktime_get_boottime-for-get_monotonic

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Remove-monotonic_to_bootbased

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/time.h, include/linux/timekeeping.h: some header
	fixes

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/delayacct.c: 
	-delayacct-Remove-braindamaged-type-conversions.

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/delayacct.c: 
	delayacct-Make-accounting-nanosecond-based

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/acct.c, kernel/fork.c,
	kernel/tsacct.c: sched-Make-task-start_time-nanoseconds-based;

2017-04-01  robcore <robpatershuk@gmail.com>

	* fs/proc/array.c, include/linux/sched.h, kernel/fork.c: 
	sched-Make-task-real_start_time-nanoseconds-based

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/time/time.c: time-Export-nsecs_to_jiffies

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Remove-ktime_get_monotonic_offset.

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Provide-ktime_mono_to_any

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: 
	timekeeping-Use-ktime-based-data-for-ktime_get_update

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Use-ktime_t-based-data-for-ktime_get_clock

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Use-ktime_t-based-data-for-ktime_get_boot

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Use-ktime_t-based-data-for-ktime_get_reason

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/timekeeping.c: 
	timekeeping-Provide-ktime_get_with_offset.;

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: timekeeping: Use ktime_t based data for
	ktime_get()

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping-Provide-internal-ktime_t-based-data;

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: 
	timekeeping-Use-timekeeping_update-instead-of-memcpy

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeping: Cache optimize struct timekeeper

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/ktime.h, include/linux/timekeeper_internal.h,
	kernel/time/timekeeping.c: 
	ktime-Change-ktime_set-to-take-64bit-seconds-value.

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	hold up

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/timekeeping.c: 
	timekeeper-Move-tk_xtime-to-core-code

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeping.h, kernel/time/ntp.c,
	kernel/time/timekeeping.c: timekeeping: Provide timespec64 based
	interfaces

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/hrtimer.h, include/linux/ktime.h,
	include/linux/time.h, include/linux/timekeeping.h,
	kernel/time/hrtimer.c, kernel/time/posix-timers.c,
	kernel/time/tick-internal.h, kernel/time/time.c,
	kernel/time/timekeeping.h: time - Consolidate the time accessor
	prototypes

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/timekeeper_internal.h, kernel/time/ntp.c,
	kernel/time/ntp_internal.h, kernel/time/timekeeping.c,
	kernel/time/timekeeping_debug.c, kernel/time/timekeeping_internal.h: 
	timekeeping: Convert timekeeping core to use timespec64s

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/ktime.h, include/linux/time64.h, kernel/time/time.c: 
	time-More-core-infrastructure-for-timespec64

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/time.h, include/linux/time64.h: time64: Add time64.h
	header and define struct timespec64

2017-04-01  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, include/linux/ktime.h, include/linux/time.h,
	kernel/time/Kconfig, kernel/time/hrtimer.c,
	kernel/time/timekeeping.c: ktime - kill non-scalar ktime_t

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/hrtimer.h, include/linux/time.h,
	kernel/time/hrtimer.c, kernel/time/timekeeping.c: 
	hrtimer-Cleanup-hrtimer-accessors-to-timekeeping

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: 
	timekeeping-Simplify-arch_gettimeoffset.

2017-04-01  robcore <robpatershuk@gmail.com>

	* drivers/pnp/pnpbios/bioscalls.c, init/main.c,
	kernel/context_tracking.c, kernel/locking/lockdep.c,
	kernel/power/snapshot.c, kernel/printk/printk.c,
	kernel/sched/core.c, kernel/softirq.c, lib/dump_stack.c: asmlinkage:
	Add explicit __visible to lots of stuff

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: wake regular worker if
	need_more_worker() when rescuer leave the pool

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/trace/ring_buffer.c: ring-buffer: Always run per-cpu ring
	buffer resize with schedule_work_on()

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/power/hibernate.c, kernel/power/suspend.c: PM / Sleep:
	Remove ftrace_stop/start() from suspend and hibernate.
	restore_processor_state() was the issue with tracing and we dont
	even use hibernate, so it really doesnt apply to us.

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/generic-chip.c: 
	genirq-generic-chip-Export-irq_map_generic_chip-func

2017-04-01  robcore <robpatershuk@gmail.com>

	* arch/alpha/include/asm/processor.h,
	arch/arm/include/asm/processor.h,
	arch/avr32/include/asm/processor.h,
	arch/blackfin/include/asm/processor.h,
	arch/m68k/include/asm/processor.h,
	arch/score/include/asm/processor.h,
	arch/unicore32/include/asm/processor.h,
	arch/x86/include/asm/processor.h, arch/x86/um/asm/processor.h,
	arch/xtensa/include/asm/processor.h, include/linux/mutex.h,
	kernel/locking/mcs_spinlock.c, kernel/locking/mcs_spinlock.h,
	kernel/locking/mutex.c, kernel/locking/qrwlock.c,
	kernel/locking/rwsem-xadd.c: arch - locking: rename
	arch_mutex_cpu_relax to cpu_relax_lowlatency --> TODO: NEED to find
	lib/lockref

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/locking/lockdep.c: locking/lockdep: Only ask for
	/proc/lock_stat output when available

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: rcu: Allow for NULL tick_nohz_full_mask
	when nohz_full= missing

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/rwsem-spinlock.h, kernel/locking/rwsem-spinlock.c: 
	locking-rwsem-Rename-activity-to-count

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/locking/mcs_spinlock.c: 
	locking-spinlocks-mcs-Micro-optimize-osq_unlock

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/osq_lock.h, include/linux/rwsem.h,
	kernel/locking/mutex.c, kernel/locking/rwsem-xadd.c: 
	locking-spinlocks-mcs-Introduce-and-use-init-macro

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/mutex.h, include/linux/osq_lock.h,
	include/linux/rwsem.h, kernel/locking/mcs_spinlock.c,
	kernel/locking/mcs_spinlock.h, kernel/locking/mutex.c,
	kernel/locking/rwsem-xadd.c: 
	locking-spinlocks-mcs-Convert-osq-lock-to-atomic_t

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/mutex.h, include/linux/rwsem.h,
	kernel/locking/mcs_spinlock.c, kernel/locking/mcs_spinlock.h: 
	locking/spinlocks/mcs: Rename optimistic_spin_queue() to
	optimistic_spin_node()

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/locking/rwsem-xadd.c: locking/rwsem: Allow conservative
	optimistic spinning when readers have lock

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/manage.c: genirq: Add
	IRQ_SET_MASK_OK_DONE to support stacked irqchip

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/irqdesc.h, kernel/irq/internals.h,
	kernel/irq/manage.c, kernel/irq/pm.c: genirq: Add sanity checks for
	PM options on shared interrupt lines Account the IRQF_NO_SUSPEND and
	IRQF_RESUME_EARLY actions on share interrupt lines and yell loudly
	if there is a mismatch.

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/irq/manage.c: Revert irq: Warn when shared interrupts do
	not match on NO_SUSPEND - Undo because it breaks working systems.

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Fix-a-sparse-warning-in-rcu_report_unblock_qs

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Fix-a-sparse-warning-in-rcu_initiate_boost

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/rcu/rcu.h: rcu-Fix-__rcu_reclaim-to-use-true-false-for-bool

2017-04-01  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: PROVE_RCU_DELAY removed from
	config

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/update.c, lib/Kconfig.debug: Remove
	CONFIG_PROVE_RCU_DELAY

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu-Use-__this_cpu_read-instead-of-per_cpu_ptr.

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu-Don-t-use-NMIs-to-dump-other-CPUs-stacks

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/tick.h, kernel/rcu/tree_plugin.h,
	kernel/time/tick-sched.c: 
	rcu-Bind-grace-period-kthreads-to-non-NO_HZ_FULL-CPU.

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/init_task.h, include/linux/sched.h,
	kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu-Simplify-priority-boosting

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu-Check-both-root-and-current-rcu_node

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu-Allow-post-unlock-reference-for-rt_mutex

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Loosen-__call_rcu-s-rcu_head-alignment-constraints

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/rcu/srcu.c, kernel/rcu/tree.c: 
	rcu-Eliminate-read-modify-write-ACCESS_ONCE-calls

2017-04-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: **TEST** - REVERT -msm:
	acpuclock-krait: Init to max speed

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: orkqueue-stronger-test-in-process_one_work.

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-clear-POOL_DISASSOCIATED-in-rebind_workers

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/signal.c: dox

2017-04-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/timer.c: msm timer - restore hz usage

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Remove-redundant-ACCESS_ONCE-from-tick_do_timer

2017-04-01  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Make-rcu-node-arrays-static-const-char-const.

2017-04-01  robcore <robpatershuk@gmail.com>

	* init/Kconfig, kernel/rcu/tree_plugin.h: 
	rcu-Don-t-offload-callbacks-unless-specifically-req

2017-04-01  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, kernel/rcu/tree.h,
	kernel/rcu/tree_plugin.h: 
	rcu-Parallelize-and-economize-NOCB-kthread-wakeups

2017-04-01  robcore <robpatershuk@gmail.com>

	* include/linux/kprobes.h, kernel/trace/ftrace.c,
	kernel/trace/trace.c: 
	tracing-Replace-__get_cpu_var-uses-with-this_cpu_ptr

2017-04-01  robcore <robpatershuk@gmail.com>

	* drivers/mmc/host/msm_sdcc.c: correct me if im wrong, but doesnt it
	make sense to order these instructions so that the potential quick
	return cases come first?

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: goddamn slow computer

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: oops forgot those spinlocks

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: REVERT - high and low
	performance sources to test

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: REVERT - msm:
	acpuclock-krait: Work-around retention corner-case - we dont use
	retention (in fact our cores dont support it consistently), and also
	this was in no way a future-proof method of performing the CPU MUX
	switch, as smp_call_function_single has evolved to a lockless
	function.

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: acpuclock-krait : program
	both the high and low performance switches

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/krait-regulator.c: acpuclock - nope that has to
	be a spinlock - also regulator add a missing barrier

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: oops wrong type

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: gonna try save/restore spins

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: that failed

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: this probably wont work, but
	I have attempted converting using smp_call_function_single to its
	async counterpart.  that said, we will still probably get warnings
	from smp because of the waiting involved in this driver, as well as
	from the driver itself which probably requires confirmation (havent
	looked into it yet, gonna do a blind test run).

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: perhaps quickly disabling and
	then re-enabling preemption at the actual callsite will work...but i
	doubt it.

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: TEST - acpuclock - I am
	disabling the spin lock held for for set_speed of the l2_freq_table
	with my fingers crossed.  as we have the mutex driver lock held, and
	smp_call_function_single cannot be called with interrupts disabled (
	we are getting warnings every time we put the cpus down during
	sleep).  Now this runs the risk of the computed level being set on
	the wrong cpu, so i am going to have to fix the logic soon, perhaps
	creating a safe version of pri_clk_set whatever

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/smp.c: minor, fix ordering of arm smp

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/hardirq.h, arch/arm/kernel/smp.c,
	include/linux/cpu.h: ARM: Remove IPI_CALL_FUNC_SINGLE

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/smp.c: remove traces from arm smp

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/tick.h, kernel/cpu.c, kernel/time/tick-broadcast.c: 
	fix hrtimer hotplug race

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h: add some cpu.h backup

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/tracepoint.h: do not trace cpus when cpu is offline

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/trace/events/ipi.h: add ipi trace header

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/smp.h, arch/arm/kernel/process.c,
	arch/arm/kernel/smp.c: ARM: collapse arch_cpu_idle_dead into cpu_die

2017-03-31  robcore <robpatershuk@gmail.com>

	* 09f6edd424218eb69078551b2ecfada1f2d098eb.patch.1,
	arch/arm/include/asm/irq_work.h, arch/arm/kernel/smp.c: arm: tell
	irq work about self ipi support

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/smp.c: ARM - add ipi tracepoints

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/hardirq.h, arch/arm/kernel/smp.c: ARM:
	7872/1: Support arch_irq_work_raise() via self IPIs

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/irq_work.h: eyp

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/irq_work.h: nope

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/smpboot.c: smpboot: make cleanup to mirror setup

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/smpboot.c: smpboot: fix memory leak on error handling

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/smpboot.h, kernel/smpboot.c: smpboot: allow
	excluding cpus from the smpboot threads

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, kernel/smpboot.c: smpboot: Add common code
	for notification from dying CPU

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: from Raphael - fix barrier on context switch

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/smp.h, kernel/sched/core.c,
	kernel/smp.c: bring back wake up if idle commits

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/smp.c: fix error case in handling smp_call_function - Linus
	stepped in and fixed these last two

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/smp.c: smp - fix call_function_single_async locking

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/smp.h, kernel/sched/core.c,
	kernel/smp.c: REVERT wake up if idle commits

2017-03-31  robcore <robpatershuk@gmail.com>

	* fs/btrfs/acl.c, fs/dlm/config.c, fs/dlm/lockspace.c,
	fs/eventfd.c, fs/file.c, fs/mount.h, fs/proc/task_mmu.c: REVERT -
	the majority of vfs/fs commits from the last couple days, something
	is erroring out here.

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/hrtimer.h, include/linux/time.h,
	kernel/sched/core.c, kernel/time/Makefile, kernel/time/hrtimer.c,
	kernel/time/timekeeping.c, kernel/time/udelay_test.c,
	lib/Kconfig.debug: REVERT the timer commits

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Remove a wake_affine() condition

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Fix imbalance flag reset

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: 
	sched-rt-Remove-useless-if-from-cleanup-pick_next

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/smp.h, kernel/smp.c: 
	smp-Add-new-wake_up_all_idle_cpus-function

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-Add-new-API-wake_up_if_idle-to-wake-up-the-idle-cpus

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-numa-Use-select_idle_sibling

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/module.c: ARM: avoid ARM binutils leaking ELF local symbols

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/irq/manage.c: oooh i like this, WARN when shared interrupts
	do not match on NO_SUSPEND

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, include/linux/ktime.h, include/linux/time.h,
	kernel/time/Kconfig, kernel/time/timekeeping.c: REVERT taht

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, include/linux/ktime.h, include/linux/time.h,
	kernel/time/Kconfig, kernel/time/timekeeping.c: FUCK THIS

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/hrtimer.h, include/linux/time.h,
	kernel/time/hrtimer.c, kernel/time/timekeeping.c: 
	hrtimer-Cleanup-hrtimer-accessors-to-the-timekepeing

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: timekeeping-Simplify-arch_gettimeoffset

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/time/Makefile, kernel/time/udelay_test.c,
	lib/Kconfig.debug: kernel-time-Add-udelay_test-module-to-validate

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/moduleparam.h, kernel/params.c: Add module param
	type ullong for 64 bit vars

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Fix-static_key-race-with-sched_feat

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: 
	sched-Remove-extra-static_key-function-indirection

2017-03-31  robcore <robpatershuk@gmail.com>

	* Documentation/trace/ftrace.txt, include/linux/sched.h,
	kernel/sched/core.c, kernel/sched/deadline.c, kernel/sched/fair.c,
	kernel/sched/idle_task.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	conversion to resched_cur WITHOUT fucking up preempt

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/fork.c, kernel/sched/core.c: 
	sched-deadline-Kill-task_struct-pi_top_task

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c: 
	sched-Fix-possible-divide-by-zero-in-avg_atom-calc

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/pm-8x60.c: disabled sync_timer again

2017-03-31  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt,
	Documentation/trace/ftrace.txt, arch/arm/Kconfig,
	arch/arm/include/asm/Kbuild, arch/arm/mach-msm/pm-8x60.c,
	arch/microblaze/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, arch/x86/include/asm/preempt.h,
	arch/x86/include/asm/thread_info.h, arch/x86/kernel/asm-offsets.c,
	arch/x86/kernel/cpu/common.c, arch/x86/kernel/entry_32.S,
	arch/x86/kernel/entry_64.S, arch/x86/kernel/irq_32.c,
	arch/x86/kernel/process_32.c, arch/x86/kernel/traps.c,
	drivers/base/platform.c, include/asm-generic/preempt.h,
	include/linux/hardirq.h, include/linux/init_task.h,
	include/linux/irq.h, include/linux/mutex.h,
	include/linux/osq_lock.h, include/linux/preempt.h,
	include/linux/preempt_mask.h, include/linux/rwlock_api_smp.h,
	include/linux/rwsem-spinlock.h, include/linux/rwsem.h,
	include/linux/sched.h, include/linux/spinlock_api_smp.h,
	include/linux/tick.h, include/linux/uaccess.h, init/Kconfig,
	kernel/Kconfig.locks, kernel/context_tracking.c, kernel/fork.c,
	kernel/irq/generic-chip.c, kernel/locking/lockdep.c,
	kernel/locking/mcs_spinlock.c, kernel/locking/mcs_spinlock.h,
	kernel/locking/mutex.c, kernel/locking/rwsem-spinlock.c,
	kernel/locking/rwsem-xadd.c, kernel/locking/rwsem.c,
	kernel/module.c, kernel/power/main.c, kernel/power/power.h,
	kernel/power/suspend.c, kernel/power/suspend_test.c,
	kernel/rcu/rcu.h, kernel/rcu/srcu.c, kernel/rcu/tree.c,
	kernel/rcu/tree.h, kernel/rcu/tree_plugin.h, kernel/rcu/update.c,
	kernel/sched/core.c, kernel/sched/deadline.c, kernel/sched/debug.c,
	kernel/sched/fair.c, kernel/sched/idle.c, kernel/sched/idle_task.c,
	kernel/sched/rt.c, kernel/sched/sched.h, kernel/signal.c,
	kernel/smp.c, kernel/softirq.c, kernel/time/tick-sched.c,
	kernel/workqueue.c, lib/Kconfig.debug: possed

2017-03-31  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/rwlock_api_smp.h, include/linux/spinlock_api_smp.h: 
	i am getting fucking pissed at this bullshit preemption

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/softirq.c: HOW ABOUT NOW FUCKER

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/bottom_half.h, kernel/softirq.c: THERE FUCK

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/x86/kernel/traps.c, include/asm-generic/preempt.h,
	include/linux/preempt.h, include/linux/sched.h,
	kernel/context_tracking.c, kernel/sched/core.c: think i might have
	finally fucking fixed it

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/bottom_half.h, include/linux/preempt.h,
	include/linux/spinlock_api_smp.h, kernel/sched/core.c,
	kernel/softirq.c: reverted preempt shit

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/bottom_half.h, include/linux/spinlock_api_smp.h: i
	swear i am going to punch a hole in my monitor

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/bottom_half.h, kernel/softirq.c: reverted AGAIN

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/bottom_half.h, kernel/softirq.c: FUCK

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/bottom_half.h, kernel/softirq.c: fuck me

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/power/main.c, kernel/power/power.h,
	kernel/power/suspend.c, kernel/power/suspend_test.c: PM sleep -
	Simplify sleep states sysfs interface code

2017-03-31  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/pm-8x60.c: turning off pm-8x60 sync timer again

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/preempt.h, include/linux/spinlock_api_smp.h: my
	modules still need access to preemption calls

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: dont need should_resched there anymore

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: No NOKPROBE yet

2017-03-31  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: core preempt

2017-03-31  robcore <robpatershuk@gmail.com>

	* include/linux/hardirq.h: hardirq

2017-03-31  robcore <robpatershuk@gmail.com>

	* drivers/base/platform.c: suck it, this may not work but
	regardless, i am calling resume if suspend fails form platform
	devices

2017-03-31  robcore <robpatershuk@gmail.com>

	* drivers/base/platform.c, include/linux/bottom_half.h,
	include/linux/hardirq.h, include/linux/preempt_mask.h,
	include/linux/uaccess.h, kernel/softirq.c: some conversions

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/Kbuild, arch/x86/include/asm/preempt.h,
	arch/x86/include/asm/thread_info.h, arch/x86/kernel/asm-offsets.c,
	arch/x86/kernel/cpu/common.c, arch/x86/kernel/entry_32.S,
	arch/x86/kernel/entry_64.S, arch/x86/kernel/irq_32.c,
	arch/x86/kernel/process_32.c, include/asm-generic/preempt.h,
	include/linux/preempt.h, include/linux/preempt_mask.h,
	include/linux/sched.h, kernel/sched/core.c, kernel/sched/idle.c: 
	just fuckin merging all the preempt shit

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/Kbuild, arch/microblaze/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, arch/x86/include/asm/Kbuild,
	include/asm-generic/preempt.h, include/linux/preempt.h: sched, arch:
	Create asm/preempt.h

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/preempt.h, include/linux/sched.h,
	kernel/sched/core.c: reverted

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/preempt.h, include/linux/sched.h,
	kernel/sched/core.c: the fuck?

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/generic-chip.c: genirq: generic
	chip: Export irq_map_generic_chip function

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/smp.c: smp: remove cpuinitdata

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/events/core.c: REVERT -
	perf-Add-vm_ops-name-call-for-mmap-event-name-retries

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/alpha/include/asm/processor.h,
	arch/arm/include/asm/processor.h,
	arch/avr32/include/asm/processor.h,
	arch/blackfin/include/asm/processor.h,
	arch/m68k/include/asm/processor.h,
	arch/score/include/asm/processor.h,
	arch/unicore32/include/asm/processor.h,
	arch/x86/include/asm/processor.h, arch/x86/um/asm/processor.h,
	arch/xtensa/include/asm/processor.h, include/linux/mutex.h,
	kernel/locking/mcs_spinlock.c, kernel/locking/mcs_spinlock.h,
	kernel/locking/mutex.c, kernel/locking/qrwlock.c,
	kernel/locking/rwsem-xadd.c: reverted

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/alpha/include/asm/processor.h,
	arch/arm/include/asm/processor.h,
	arch/avr32/include/asm/processor.h,
	arch/blackfin/include/asm/processor.h,
	arch/m68k/include/asm/processor.h,
	arch/score/include/asm/processor.h,
	arch/unicore32/include/asm/processor.h,
	arch/x86/include/asm/processor.h, arch/x86/um/asm/processor.h,
	arch/xtensa/include/asm/processor.h, include/linux/mutex.h,
	kernel/locking/mcs_spinlock.c, kernel/locking/mcs_spinlock.h,
	kernel/locking/mutex.c, kernel/locking/qrwlock.c,
	kernel/locking/rwsem-xadd.c: hmm maybe not yet

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/locking/lockdep.c: locking/lockdep: Only ask for
	/proc/lock_stat output when available

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Allow-for-NULL-tick_nohz_full_mask-when-nohz_full

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/rwsem.h, kernel/Kconfig.locks,
	kernel/locking/rwsem-xadd.c, kernel/locking/rwsem.c: 
	locking-rwsem-Add-CONFIG_RWSEM_SPIN_ON_OWNER

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/rwsem.h: 
	locking-rwsem-Reduce-the-size-of-struct-rw_semaphore

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/rwsem.h, kernel/Kconfig.locks,
	kernel/locking/rwsem-xadd.c, kernel/locking/rwsem.c: reverted

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/rwsem.h, kernel/Kconfig.locks,
	kernel/locking/rwsem-xadd.c, kernel/locking/rwsem.c: this is
	frustrating...

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, kernel/Kconfig.locks: locking - mutex: disable
	optimiztic spinning on some archs (enable for ours)

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/rwsem-spinlock.h, kernel/locking/rwsem-spinlock.c: 
	locking-rwsem-Rename-activity-to-count

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Fix static_key race with sched_feat()

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: 
	sched-Remove-extra-static_key-function-indirection

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: sched-rt-Fix-replenish_dl_entity-comments

2017-03-30  robcore <robpatershuk@gmail.com>

	* Documentation/trace/ftrace.txt, include/linux/sched.h,
	kernel/sched/core.c, kernel/sched/deadline.c, kernel/sched/fair.c,
	kernel/sched/idle_task.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	sched-Transform-resched_task-into-resched_curr

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/fork.c, kernel/sched/core.c: 
	sched-deadline-Kill-task_struct-pi_top_task.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c: 
	sched-Fix-possible-divide-by-zero-in-avg_atom-calc

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/events/core.c: perf: Add vm_ops->name call for mmap event
	name retrieval

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/locking/mcs_spinlock.c: 
	locking-spinlocks-mcs-Micro-optimize-osq_unlock

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/osq_lock.h, include/linux/rwsem.h,
	kernel/locking/mutex.c, kernel/locking/rwsem-xadd.c: 
	locking-spinlocks-mcs-Introduce-and-use-init-macro

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/mutex.h, include/linux/osq_lock.h,
	include/linux/rwsem.h, kernel/locking/mcs_spinlock.c,
	kernel/locking/mcs_spinlock.h, kernel/locking/mutex.c,
	kernel/locking/rwsem-xadd.c: 
	locking-spinlocks-mcs-Convert-osq-lock-to-atomic_t;;

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/mutex.h, include/linux/rwsem.h,
	kernel/locking/mcs_spinlock.c, kernel/locking/mcs_spinlock.h: 
	locking/spinlocks/mcs: Rename optimistic_spin_queue() to
	optimistic_spin_node()

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/locking/rwsem-xadd.c: 
	locking-rwsem-Allow-conservative-optimistic-spinning

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-reuse-the-already-calculated-pwq

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: revert those

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: 
	cpuset-update-cpuset-effective_-cpus-mems-at-hotplug

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: cpuset: add cs->effective_cpus and
	cs->effective_mems

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Fix-a-sparse-warning-in-rcu_report_unblock_qs

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Fix-a-sparse-warning-in-rcu_initiate_boost

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/rcu.h: rcu-Fix-__rcu_reclaim-to-use-true-false-for-bool

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/update.c, lib/Kconfig.debug: Remove
	CONFIG_RCU_PROVE_DELAY

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu-Use-__this_cpu_read-instead-of-per_cpu_ptr

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu-Don-t-use-NMIs-to-dump-other-CPUs-stacks

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/tick.h, kernel/rcu/tree_plugin.h,
	kernel/time/tick-sched.c: 
	rcu-Bind-grace-period-kthreads-to-non-NO_HZ_FULL-CPU.;

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/init_task.h, include/linux/sched.h,
	kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu-Simplify-priority-boosting

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu-Check-both-root-and-current-rcu_node

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu-Allow-post-unlock-reference-for-rt_mutex

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Loosen-__call_rcu-s-rcu_head-alignment-constraint

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/srcu.c, kernel/rcu/tree.c: 
	rcu-Eliminate-read-modify-write-ACCESS_ONCE-calls;

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Remove-redundant-ACCESS_ONCE-from-tick_do_timer

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Make-rcu-node-arrays-static-const-char-const

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/signal.c: dox

2017-03-30  robcore <robpatershuk@gmail.com>

	* init/Kconfig, kernel/rcu/tree_plugin.h: 
	rcu-Don-t-offload-callbacks-unless-specifically-requested

2017-03-30  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, kernel/rcu/tree.h,
	kernel/rcu/tree_plugin.h: rcu: Parallelize and economize NOCB
	kthread wakeups

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/module.c: modules: use raw_cpu_write for initialization of
	per cpu refcount.

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/pm-8x60.c: Disable ldo_retention

2017-03-30  robcore <robpatershuk@gmail.com>

	* .gitignore: updated gitignore

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/time/hz.bc: there no more bc

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/time/timeconst.h: goddamn have to update gitignore

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/smp.h, kernel/smp.c, kernel/time/hz.bc,
	kernel/time/timeconst.h: REVERT (for now) - smp add new
	wake_up_all_idle_cpus function

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/llist.h: add llist for each entry safe

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: holy shit got it

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: sched fair: implement
	fast idling of CPUs when the system isnt over load.  also some other
	bringup, including a regression in should_we_balance

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: fixup sched_fork type

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: whitespace

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/fork.c, kernel/sched/core.c: 
	sched/numa: Stay on the same node if CLONE_VM

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/torture.c: torture-Avoid-format-string-leak-to-thead-name

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/irq/irqdesc.c: 
	genirq-Fix-memory-leak-when-calling-irq_free_hwirqs.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: sched-Rework-check_for_tasks.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: sched-rt-Enqueue-just-unthrottled-rt_rq-back

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: 
	sched-fair-Disable-runtime_enabled-on-dying-rq

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/perf_event.h, kernel/fork.c: bring back two files
	that were magically deleted(?)

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/Kconfig, arch/alpha/Kconfig, arch/arm/Kconfig,
	arch/arm/configs/canadefconfig, arch/x86/Kconfig,
	block/blk-softirq.c, block/blk-sysfs.c, drivers/cpuidle/coupled.c,
	include/linux/perf_event.h, include/linux/smp.h, kernel/Kconfig.hz,
	kernel/fork.c, kernel/printk/printk.c, kernel/sched/core.c,
	kernel/smp.c, kernel/softirq.c, kernel/up.c, net/Kconfig,
	net/core/dev.c, ref2.txt: SMP - MASS SQUASH back to 3.18

2017-03-30  robcore <robpatershuk@gmail.com>

	* drivers/tty/sysrq.c: sysrq,rcu: suppress RCU stall warnings while
	sysrq runs

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, kernel/rcu/update.c: 
	rcu-Provide-API-to-suppress-stall-warnings

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/smp.c: smp - revert back to mainline

2017-03-30  robcore <robpatershuk@gmail.com>

	* drivers/tty/sysrq.c: REVERT -
	sysrq-rcu-suppress-RCU-stall-warnings-while-sysrq.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: FUCK OFF

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: guess i dont need you either

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: fuck you tracer!!!

2017-03-30  robcore <robpatershuk@gmail.com>

	* net/bridge/br_multicast.c: REVERT -
	bridge-fix-smatch-warning-potential-null-pointer

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/machinex_defines.h: oh sweet dont need my fake
	tracer (will be used for others tho)

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/time/tick-internal.h: oops another

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/time/tick-internal.h, kernel/time/timer.c: time: fix header
	from move

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/dcache.c: REVERT -
	vfs-Remove-second-variable-named-error-in-__dentry_p

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Fix-potential-near-infinite-distribute_cfs_run

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/irq_work.c: irq_work: Remove BUG_ON in irq_work_run()

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: kernel/printk/printk.c: revert "printk:
	enable interrupts before calling console_trylock_for_printk(

2017-03-30  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/vm.txt, kernel/sysctl.c, mm/page_alloc.c: 
	reverted

2017-03-30  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/vm.txt, kernel/sysctl.c, mm/page_alloc.c: nvm

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/page-flags.h, kernel/kexec.c: 
	kexec-save-PG_head_mask-in-VMCOREINFO

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/smp.c: smp hotplug, think i found the commit:

	/media/root/robcore/android/linaro-8064-lt/3.18/patches/3patches/0724-CPU-hotplug-smp-flush-any-pending-IPI-callbacks-befo.patch

2017-03-30  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, include/linux/rcupdate.h,
	kernel/rcu/tree.c, kernel/rcu/tree.h, kernel/rcu/tree_plugin.h,
	kernel/rcu/update.c, kernel/sched/core.c: rcu: Reduce overhead of
	cond_resched() checks

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, kernel/rcu/update.c: 
	rcu-Export-debug_init_rcu_head-and-and-debug_init_rc

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/time/hrtimer.c: hrtimer-Remove-hrtimer_enqueue_reprogram.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/time/hrtimer.c: 
	hrtimer-Kick-lowres-dynticks-targets-on-timer-enqueue

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/hrtimer.h, kernel/time/hrtimer.c: 
	hrtimer-Store-cpu-number-in-struct-hrtimer_cpu_base.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/time/timer.c: 
	timer-Kick-dynticks-targets-on-mod_timer-calls

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/time/timer.c: timer: Store cpu-number in struct tvec_base

2017-03-30  robcore <robpatershuk@gmail.com>

	* MAINTAINERS, kernel/Makefile, kernel/time/Makefile, kernel/{ =>
	time}/hrtimer.c, kernel/{ => time}/itimer.c, kernel/{ =>
	time}/posix-cpu-timers.c, kernel/{ => time}/posix-timers.c,
	kernel/{ => time}/time.c, kernel/{ => time}/timeconst.bc, kernel/{
	=> time}/timer.c: time/timers: Move all time(r) related files int
	Except for Kconfig.HZ. That needs a separate treatment.

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/irqdomain.h, kernel/irq/irqdomain.c: 
	genirq-Export-irq_domain_disassociate-to-archs

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: reverted

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: futex-Make-unlock_pi-more-robust

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: remove
	(void)cmpxchg(&sd->groups->balance_cpu,

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/x86/kernel/apic/x2apic_cluster.c: bs

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/perf_event_p4.h,
	arch/x86/kernel/apic/x2apic_cluster.c,
	arch/x86/oprofile/op_model_p4.c, include/linux/cpumask.h,
	kernel/sched/deadline.c, kernel/sched/fair.c, kernel/sched/rt.c: 
	percpu-Resolve-ambiguities-in-__get_cpu_var-cpumask

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: grrr preempt_set_need_resched shit needs a
	fixin

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: temp fix

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fix some more annoying naming conventions

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: i need to find
	preempt_fold_need_resched

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/preempt.h: shit is busted up yo

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c: fixup position of
	clr_polling in linux/sched.h

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/preempt.h, include/linux/sched.h,
	kernel/sched/core.c, kernel/sched/idle.c: fix up missing
	preempt_fold_need_resched

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fixed a thing

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, arch/arm/configs/canadefconfig: bring back
	ARCH_HAS_CPUFREQ - it does nothing but i am too lazy to hunt for the
	endif

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-use-schedule_timeout_interruptible-instead

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, arch/arm/configs/canadefconfig,
	kernel/sched/fair.c: sched: Fix CACHE_HOT_BUDY condition

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/thread_info.h: ARM: 8069/1: Make
	thread_save_fp macro aware of THUMB2 mode

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/arm/common/scoop.c: ARM-8068-1-scoop-Remove-unused-variable

2017-03-30  robcore <robpatershuk@gmail.com>

	* drivers/acpi/battery.c, drivers/acpi/osl.c, drivers/acpi/tables.c: 
	vs

2017-03-30  robcore <robpatershuk@gmail.com>

	* Documentation/ptp/testptp.c: dox

2017-03-30  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, include/linux/suspend.h,
	kernel/power/hibernate.c, kernel/power/main.c, kernel/power/user.c: 
	PM / hibernate: introduce "nohibernate" boot parameter

2017-03-30  robcore <robpatershuk@gmail.com>

	* init/calibrate.c: kernel-add-calibration_delay_done

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: nohz: Use IPI implicit full barrier against
	rq->nr_running r/w (for our source inc_nr_running is
	add_nr_running...ish?

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: nohz: Use nohz own full
	kick on 2nd task enqueue

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	nohz-Switch-to-nohz-full-remote-kick-on-timer-enqueue

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/tick.h, kernel/time/tick-sched.c: 
	nohz-Support-nohz-full-remote-kick.

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/irq_work.h, kernel/irq_work.c, kernel/smp.c: 
	irq_work-Implement-remote-queueing.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/irq_work.c: irq_work-Split-raised-and-lazy-lists

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/irq_work.h, kernel/events/core.c, kernel/irq_work.c: 
	this is the commit for changing irq_work to a bool function

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/dcache.c: vfs: Remove second variable named error in
	__dentry_path

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/mount.h: vfs: Is mounted should be testing mnt_ns for NULL or
	error.

2017-03-30  robcore <robpatershuk@gmail.com>

	* net/rxrpc/ar-recvmsg.c: af_rxrpc: Handle frames delivered from
	another VM

2017-03-30  robcore <robpatershuk@gmail.com>

	* net/rxrpc/ar-recvmsg.c: 
	af_rxrpc-Avoid-setting-up-double-free-on-checksum-error

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/file.c: fs-__fget_light-can-use-__fget-in-slow-path

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/file.c: fs-factor-out-common-code-in-fget_light-and-fget_raw

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/file.c: fs: factor out common code in fget() and fget_raw()

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/file.c:  change close_files() to use rcu_dereference_raw(files->fdt)

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/eventfd.c:  eventfd_ctx_fdget(): use fdget() instead of fget()

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sysctl.c: sysctl-Add-neg_one-as-a-standard-constraint.

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/tick.h, kernel/time/tick-sched.c: REVERT

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/tick.h, kernel/time/tick-sched.c: 
	nohz-Support-nohz-full-remote-kick

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/irq_work.c: revert em both

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/irq_work.c: nope need prereq

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/irq_work.c: irq_work: Split raised and lazy lists

2017-03-30  robcore <robpatershuk@gmail.com>

	* net/core/rtnetlink.c: 
	rtnetlink-fix-userspace-API-breakage-for-iproute2-v3.

2017-03-30  robcore <robpatershuk@gmail.com>

	* net/bridge/br_multicast.c:  bridge: fix smatch warning / potential null pointer dereference

2017-03-30  robcore <robpatershuk@gmail.com>

	* drivers/firewire/core-cdev.c, kernel/debug/kdb/kdb_main.c,
	kernel/delayacct.c, kernel/fork.c, kernel/tsacct.c,
	security/tomoyo/audit.c, security/tomoyo/common.c: mass conversion
	to ktime_get_ts

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/acct.c: acct: Use ktime_get_ts()

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/cpumask.h, lib/cpumask.c: 
	cpumask-Utility-function-to-set-n-th-cpu-local-cpu-first

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/ktime.h: ktime: add ktime_after and ktime_before
	helper

2017-03-30  robcore <robpatershuk@gmail.com>

	* net/ipv4/ip_gre.c: gre: allow changing mac address when device is
	up

2017-03-30  robcore <robpatershuk@gmail.com>

	* block/elevator.c, include/linux/elevator.h: 
	block-add-__init-to-elv_register

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/fs.h: locks: add missing memory barrier in
	break_deleg

2017-03-30  robcore <robpatershuk@gmail.com>

	* tools/perf/util/probe-event.c: 
	perf-probe-Improve-error-messages-in-line-option.

2017-03-30  robcore <robpatershuk@gmail.com>

	* Documentation/kbuild/modules.txt: dox

2017-03-30  robcore <robpatershuk@gmail.com>

	* scripts/docproc.c, scripts/kconfig/conf.c,
	scripts/kconfig/gconf.c, scripts/kconfig/lxdialog/checklist.c,
	scripts/kconfig/lxdialog/inputbox.c,
	scripts/kconfig/lxdialog/menubox.c,
	scripts/kconfig/lxdialog/util.c, scripts/kconfig/mconf.c,
	scripts/kconfig/menu.c, scripts/kconfig/zconf.l,
	scripts/kconfig/zconf.lex.c_shipped,
	scripts/kconfig/zconf.tab.c_shipped, scripts/kconfig/zconf.y,
	scripts/mod/modpost.c, scripts/mod/sumversion.c, scripts/tags.sh: 
	kbuild-trivial-use-tabs-for-code-indent

2017-03-30  robcore <robpatershuk@gmail.com>

	* scripts/coccinelle/misc/returnvar.cocci: coccicheck - add unneeded
	return variable test

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/btrfs/acl.c: btrfs-remove-useless-ACL-check

2017-03-30  robcore <robpatershuk@gmail.com>

	* Makefile, scripts/kconfig/Makefile: kbuild: create include/config
	directory in scripts/kconfig/Makefile

2017-03-30  robcore <robpatershuk@gmail.com>

	* Makefile: kbuild: do not create include/linux directory. There are
	no generated files under include/linux directory.

2017-03-30  robcore <robpatershuk@gmail.com>

	* scripts/Makefile.asm-generic, scripts/Makefile.host,
	scripts/checkstack.pl, scripts/config, scripts/dtc/fstree.c,
	scripts/dtc/libfdt/fdt_empty_tree.c, scripts/dtc/treesource.c,
	scripts/headers.sh, scripts/kconfig/Makefile,
	scripts/kconfig/check.sh, scripts/kconfig/mconf.c,
	scripts/kconfig/nconf.c, scripts/markup_oops.pl, scripts/mksysmap,
	scripts/mod/mk_elfconfig.c, scripts/package/Makefile,
	scripts/package/buildtar, scripts/pnmtologo.c,
	scripts/recordmcount.c, scripts/rt-tester/check-all.sh,
	scripts/rt-tester/rt-tester.py, scripts/selinux/install_policy.sh,
	scripts/show_delta: kbuild-trivial-remove-trailing-empty-lines

2017-03-30  robcore <robpatershuk@gmail.com>

	* scripts/coccinelle/misc/of_table.cocci: 
	coccinelle-Check-for-missing-NULL-terminators

2017-03-30  robcore <robpatershuk@gmail.com>

	* Makefile: Makefile: Fix unrecognized cross-compiler command line
	options by moving all logic using cc-option or cc-disable-warning
	below the inclusion

2017-03-30  robcore <robpatershuk@gmail.com>

	* Documentation/power/suspend-and-cpuhotplug.txt: pm/cpu dox

2017-03-30  robcore <robpatershuk@gmail.com>

	* tools/perf/util/scripting-engines/trace-event-python.c: 
	perf-script-python-Print-array-argument-as-string

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/f2fs/data.c, fs/f2fs/f2fs.h, fs/f2fs/file.c: 
	f2fs-support-f2fs_fiemap

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/unwind.c: 
	arm-unwind-LLVMLinux-Enable-clang-to-be-used-for-unwind-tables

2017-03-30  robcore <robpatershuk@gmail.com>

	* crypto/shash.c: crypto-LLVMLinux-aligned-attribute

2017-03-30  robcore <robpatershuk@gmail.com>

	* MAINTAINERS: MAINTAINERS: add linux-api for review of API/ABI
	changes

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/dlm/lockspace.c: fs-dlm-lockspace.c-convert-simple_str-to-kstr

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/dlm/config.c: fs-dlm-config.c-convert-simple_str-to-kstr

2017-03-30  robcore <robpatershuk@gmail.com>

	* mm/kmemleak.c: mm-kmemleak.c-use-u-to-print-checksum(unsigned)

2017-03-30  robcore <robpatershuk@gmail.com>

	* drivers/tty/sysrq.c: 
	sysrq-rcu-suppress-RCU-stall-warnings-while-sysrq;

2017-03-30  robcore <robpatershuk@gmail.com>

	* drivers/tty/sysrq.c: sysrq-rcu-ify-__handle_sysrq;

2017-03-30  robcore <robpatershuk@gmail.com>

	* mm/page-writeback.c, mm/page_alloc.c: 
	mm-convert-use-of-typedef-ctl_table-to-struct

2017-03-30  robcore <robpatershuk@gmail.com>

	* ipc/ipc_sysctl.c, ipc/mq_sysctl.c: 
	ipc-convert-use-of-typedef-ctl_table-to-struct-ctl_t

2017-03-30  robcore <robpatershuk@gmail.com>

	* drivers/scsi/scsi_sysctl.c, fs/coda/sysctl.c, fs/fscache/main.c,
	fs/lockd/svc.c, fs/nfs/nfs4sysctl.c, fs/nfs/sysctl.c,
	fs/notify/inotify/inotify_user.c, fs/ntfs/sysctl.c,
	include/linux/key.h, kernel/sysctl.c, kernel/utsname_sysctl.c: 
	squash of typedef ctl_table to struct

2017-03-30  robcore <robpatershuk@gmail.com>

	* drivers/parport/procfs.c: 
	parport-convert-use-of-typedef-ctl_table-to-struct

2017-03-30  robcore <robpatershuk@gmail.com>

	* drivers/cdrom/cdrom.c: 
	cdrom-convert-use-of-typedef-ctl_table-to-struct-ctl.;

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/isa.c: arm: convert use of typedef ctl_table to
	struct ctl_table

2017-03-30  robcore <robpatershuk@gmail.com>

	* ipc/sem.c: ipc-sem.c-bugfix-for-semctl-GETZCNT.

2017-03-30  robcore <robpatershuk@gmail.com>

	* ipc/msg.c: dox

2017-03-30  robcore <robpatershuk@gmail.com>

	* ipc/msg.c: ipc-msg-use-current-state-helpers;

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/uapi/linux/shm.h: 
	ipc-shm-document-new-limits-in-the-uapi-header

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/shm.h, include/uapi/linux/shm.h: 
	ipc-shm.c-increase-the-defaults-for-SHMALL-SHMMAX

2017-03-30  robcore <robpatershuk@gmail.com>

	* ipc/shm.c: ipc-shm.c-check-for-integer-overflow-during-shmget

2017-03-30  robcore <robpatershuk@gmail.com>

	* ipc/shm.c: ipc-shm.c-check-for-overflows-of-shm_tot

2017-03-30  robcore <robpatershuk@gmail.com>

	* ipc/shm.c: ipc-shm.c-check-for-ulong-overflows-in-shmat

2017-03-30  robcore <robpatershuk@gmail.com>

	* ipc/compat.c, ipc/compat_mq.c, ipc/msg.c, ipc/sem.c, ipc/shm.c,
	kernel/acct.c, kernel/audit.c: ipc-kernel-use-Linux-headers.

2017-03-30  robcore <robpatershuk@gmail.com>

	* ipc/msg.c, ipc/sem.c, ipc/shm.c, ipc/util.c, ipc/util.h: 
	ipc-constify-ipc_ops

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/cachefiles/bind.c, fs/cachefiles/daemon.c,
	fs/cachefiles/interface.c, fs/cachefiles/internal.h,
	fs/cachefiles/main.c, fs/cachefiles/namei.c,
	fs/cachefiles/security.c, fs/cachefiles/xattr.c: 
	fs-cachefiles-replace-kerror-by-pr_err

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/cachefiles/bind.c, fs/cachefiles/interface.c,
	fs/cachefiles/internal.h, fs/cachefiles/main.c,
	fs/cachefiles/namei.c, fs/cachefiles/security.c: 
	FS-CACHEFILES-convert-printk-to-pr_foo.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/profile.c: kernel-profile.c-use-static-const-char

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/profile.c: kernel-profile.c-convert-printk-to-pr_foo

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/affs/file.c: 
	fs-affs-file.c-remove-unnecessary-function-parameter

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/asm-generic/ioctl.h: 
	include-asm-generic-ioctl.h-fix-_IOC_TYPECHECK

2017-03-30  robcore <robpatershuk@gmail.com>

	* tools/testing/selftests/sysctl/Makefile,
	tools/testing/selftests/sysctl/common_tests,
	tools/testing/selftests/sysctl/run_numerictests,
	tools/testing/selftests/sysctl/run_stringtests: bs

2017-03-30  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/kernel.txt, kernel/sysctl.c: 
	sysctl-allow-for-strict-write-position-handling.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sysctl.c: sysctl-refactor-sysctl-string-writing-logic

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sysctl.c: sysctl-clean-up-char-buffer-arguments.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/kexec.c: kernel-kexec.c-convert-printk-to-pr_foo

2017-03-30  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, kernel/panic.c: 
	kernel-panic.c-add-crash_kexec_post_notifiers-option

2017-03-30  robcore <robpatershuk@gmail.com>

	* fs/proc/task_mmu.c: 
	fs-proc-task_mmu.c-replace-seq_printf-by-seq_puts.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/kmod.c: 
	signals-change-wait_for_helper-to-use-kernel_sigaction

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/signal.h, kernel/signal.c: 
	signals-introduce-kernel_sigaction

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/signal.c: signals: disallow_signal() should flush the
	potentially pending signal

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/signal.c: 
	signals-kill-the-obsolete-sigdelset-and-recalc_sigpending

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/signal.h, kernel/exit.c,
	kernel/signal.c: 
	signals-mv-dis-allow_signal-from-sched.h-exit.c-tosignal-related
	files

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/signal.c: 
	signals-cleanup-the-usage-of-t-current-in-do_sigaction

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/signal.c: signals: rename rm_from_queue_full() to
	flush_sigqueue_mask()

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/signal.c: signals: kill rm_from_queue(), change
	prepare_signal() to use for_each_thread()

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/m68k/include/asm/signal.h, arch/x86/include/asm/signal.h,
	include/linux/signal.h: signals-kill-sigfindinword

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/signal.c: signals: s/siginitset/sigemptyset/ in
	do_sigtimedwait()

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/asm-generic/qrwlock.h,
	include/asm-generic/qrwlock_types.h, kernel/Kconfig.locks,
	kernel/locking/Makefile, kernel/locking/qrwlock.c: 
	locking-rwlocks-Introduce-qrwlocks-fair-queued-rwlocking

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/idle.c, kernel/sched/sched.h: 
	sched-idle-Optimize-try-to-wake-up-IPI

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/machinex_defines.h, kernel/sched/core.c: add (fake)
	tracepoint for IPI in sched

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: sched: Remove redundant assignment to "rt_rq"
	in update_curr_rt(...)

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/powerpc/kernel/smp.c, include/linux/sched.h,
	kernel/sched/core.c, kernel/sched/features.h: flag conversions

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/topology.c, include/linux/sched.h,
	kernel/sched/core.c: more power vs capacity cleanups

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: 
	sched-Remove-remaining-dubious-usage-of-power

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: 
	sched-Let-struct-sched_group_power-care-about-CPU ...this may (will)
	have some fuckups

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/Kconfig, kernel/irq/chip.c,
	kernel/irq/internals.h, kernel/irq/irqdesc.c: may as well try out
	irq commits again then.

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: Thunderplug - something must be
	wrong with the init/probe, causing no boot.  weird

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/thunderplug.c: thunderplug - queueing the work
	is fine

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/Kconfig, kernel/irq/chip.c,
	kernel/irq/internals.h, kernel/irq/irqdesc.c: genirq - i am guessing
	those dynamic_irq routines are crucial for our hardware...suppose i
	should have chosen "legacy_irq" but fuck it without these they work
	fine

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/thunderplug.c: what did i do?

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, arch/arm/mach-msm/Makefile,
	arch/arm/mach-msm/thunderplug.c: thunderplug - make enabled/disabled
	ksysfs way more generic

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/irqdesc.c: genirq: Remove
	dynamic_irq mess. No more users.

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/Kconfig, kernel/irq/irqdesc.c: 
	genirq-Replace-dynamic_irq_init-cleanup

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/irqdesc.c: 
	genirq-Remove-irq_reserve_irq-s

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c, kernel/irq/internals.h, kernel/irq/irqdesc.c: 
	genirq-Replace-reserve_irqs-in-core-code

2017-03-30  robcore <robpatershuk@gmail.com>

	* ref2.txt: ref2

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: printk, fix shitty bracket placement

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fixups from that last one

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Disambiguate existing/remaining
	"capacity" usage

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-Fix-signedness-bug-in-yield_to.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Use-time_after-in-record_wakee

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/balancing: Reduce the rate of needless
	idle load balancing

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Fix unlocked reads of some
	cfs_b->quota/period

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/locking/rwsem-xadd.c: 
	locking-rwsem-Fix-checkpatch.pl-warnings

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/rwsem.h, kernel/locking/rwsem-xadd.c,
	kernel/locking/rwsem.c: locking-rwsem-Support-optimistic-spinning

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/compat.c: kernel/compat.c: use sizeof() instead of sizeof

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/x86/kernel/head64.c, drivers/nubus/nubus.c,
	drivers/tty/sysrq.c, include/linux/printk.h, init/main.c,
	kernel/debug/kdb/kdb_bt.c, kernel/debug/kdb/kdb_io.c,
	kernel/debug/kdb/kdb_main.c, kernel/printk/printk.c: 
	kernel-printk-use-symbolic-defines-for-console-loglevel

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: 
	printk-report-dropping-of-messages-from-logbuf;

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/time/ntp.c, kernel/time/timekeeping.c: timekeeping: use
	printk_deferred when holding timekeeping seqlock

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: printk-disable-preemption-for-printk_sched

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: printk: remove separate printk_sched
	buffers and use printk buf instead

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: 
	printk-enable-interrupts-before-calling-console_trylock

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: printk: release lockbuf_lock before
	calling console_trylock_for_printk()

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: printk-remove-outdated-comment

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: printk-return-really-stored-message-length

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: printk-shrink-too-long-messages;

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: printk-split-message-size-computation.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: printk-ignore-too-long-messages

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: 
	printk-split-code-for-making-free-space-in-the-log-buffer

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/capability.c, kernel/hung_task.c,
	kernel/latencytop.c, kernel/stop_machine.c, kernel/tracepoint.c,
	kernel/user.c, kernel/utsname_sysctl.c: misc kernel-related cleanups
	and minor bugfixes

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/backtracetest.c: pr_info()

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/cpuset.h, kernel/cpuset.c, mm/page_alloc.c: mm:
	page_alloc: use jump labels to avoid checking number_of_cpusets

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: memcg: mm_update_next_owner() should skip kthreads
	While at it, change this code to use for_each_process_thread()

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/power/swap.c: dox

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: guess that < 0 check in
	do_sched_setscheduler is unneccessary

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: fixup unneeded brackets from rcu/tree.c (we
	dont use tracing here)

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: pulling a dorimanx with the nr running stuff

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c, kernel/sched/fair.c, kernel/sched/rt.c,
	kernel/sched/sched.h, kernel/sched/stop_task.c: REVERT -
	sched-nohz-Change-rq-nr_running-to-always-use-wrapper

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: reverted

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: that didnt work

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/resource.c: resources-Clarify-sanity-check-message

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Decay-wakee_flips-instead-of-zeroing

2017-03-30  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/binder.c, include/linux/sched/prio.h,
	kernel/sched/core.c, kernel/sys.c: sched: Consolidate open coded
	implementations of nice level frobbing into nice_to_rlimit() and
	rlimit_to_nice()

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	-sched-Initialize-rq-age_stamp-on-processor-start

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c, kernel/sched/fair.c, kernel/sched/rt.c,
	kernel/sched/sched.h, kernel/sched/stop_task.c: 
	sched-nohz-Change-rq-nr_running-to-always-use-wrapper

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Fix-the-rq-next_balance-logic-in-rebalance_domains

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Use clamp() and clamp_val() to make
	sys_nice() more readable

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Do-not-zero-sg-cpumask-and-sg-sgp-power

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched/numa: Fix initialization of
	sched_domain_topology for NUMA

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Call select_idle_sibling() when not
	affine_sd

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Fix exec_start/task_hot on migrated
	tasks

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpupri.c, kernel/sched/cpupri.h: sched/cpupri:
	Replace NR_CPUS arrays

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched/deadline: Change sched_getparam()
	behaviour vs SCHED_DEADLINE

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Disallow sched_attr::sched_policy < 0

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/power/Kconfig: 
	-PM-OPP-Make-OPP-invisible-to-users-in-Kconfig

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/power/hibernate.c: PM / hibernate: Fix memory corruption in
	resumedelay_setup()

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/Kconfig, kernel/irq/irqdesc.c: 
	genirq-Provide-generic-hwirq-allocation-facility

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree_plugin.h:  rcu: Variable name changed in tree_plugin.h and used in tree.c

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/locking/locktorture.c,
	kernel/rcu/rcutorture.c, kernel/torture.c: another rcu torture
	squash

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/rcutorture.c: 
	rcutorture-Explicitly-test-synchronous-grace-period

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/rcutorture.c: 
	rcutorture-Add-tests-for-get_state_synchronize_rcu.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/rcutorture.c: 
	rcutorture-Check-for-rcu_torture_fqs-creation-errors.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/torture.c: torture-Notice-if-an-all-zero-cpumask-is-passed

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/rcutorture.c: 
	rcutorture-Make-rcu_torture_reader-use-cond_resched

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, kernel/rcu/update.c,
	kernel/sched/core.c: 
	sched-rcu-Make-cond_resched-report-RCU-quiescent-state

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/rcutiny.h, include/linux/rcutree.h,
	kernel/rcu/rcutorture.c, kernel/rcu/tree.c, kernel/rcu/tree.h: 
	rcutorture: Export RCU grace-period kthread wait state to rcutorture

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/rcutorture.c: 
	torture-Dump-ftrace-buffer-when-the-RCU-grace-period-ends

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/torture.c: torture-Increase-stutter-end-intensity.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/torture.c: 
	torture-Include-Stopping-string-to-torture_kthread

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/rcutorture.c: 
	rcutorture-Print-negatives-for-SRCU-counter-wrap

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/rcutorture.c: 
	rcutorture-Mark-function-as-static-in-kernel-rcu

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/module.c: fuck it
	module-set-nx-before-marking-module-MODULE_STATE_COMING

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/x86/kernel/apic/io_apic.c, include/linux/irq.h,
	kernel/irq/irqdesc.c, kernel/softirq.c: genirq: x86: Ensure that
	dynamic irq allocation does not conflict

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/moduleparam.h, init/main.c, kernel/module.c,
	kernel/params.c: param: hand arguments after -- straight to init

2017-03-30  robcore <robpatershuk@gmail.com>

	* Makefile: disable frame-address warning

2017-03-30  robcore <robpatershuk@gmail.com>

	* drivers/mmc/host/msm_sdcc.c, kernel/panic.c: added a debugging
	helper for myself regarding msm_sdcc

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/watchdog.c: 
	kernel-watchdog.c-touch_softlockup_watchdog-use-raw_cpu_ptr

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/module.c: REVERT that for a quick build test

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/module.c: MAY BREAK MODULES - module: set nx before marking
	module MODULE_STATE_COMING.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/locking/locktorture.c: torture-Intensify-locking-test

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, kernel/rcu/rcutorture.c,
	kernel/rcu/tree.c: 
	rcutorture-Add-forward-progress-checking-for-writer

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: other half of a pulled_task commit i mustve
	cheated on

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-Add-a-new-SD_SHARE_POWERDOMAIN

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/powerpc/kernel/smp.c, include/linux/sched.h,
	kernel/sched/core.c: and that was powerpc

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: that was an s390 addon

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: reverted

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: revert this i do not care

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/softirq.c: softirq: A single rcu_bh_qs() call per softirq
	set is enough

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree_plugin.h: 
	rcu-Replace-__this_cpu_ptr-uses-with-raw_cpu_ptr

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: rcu: Make large and small sysidle
	systems use same state machine

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Bind-RCU-grace-period-kthreads-if-NO_HZ_FULL

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree_plugin.h: rcu: Merge
	rcu_sched_force_quiescent_state() with rcu_force_quiescent_state()

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree_plugin.h: 
	rcu-Consolidate-kfree_call_rcu-to-use-rcu_state-point

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu-Replace-NR_CPUS-with-nr_cpu_ids.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Add-event-tracing-to-dyntick_save_progress_count.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tiny_plugin.h: 
	rcu-Protect-uses-of-jiffies_stall-with-ACCESS_ONCE.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu: Make callers awaken grace-period kthread

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Protect-uses-of-jiffies_stall-field-with-ACCESS_ONCE

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree.h: 
	rcu-Remove-unused-rcu_data-structure-field.

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu: Update cpu_needs_another_gp() for futures from non-NOCB CPUs

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Print-negatives-for-stall-warning-counter-wrap

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/asm-generic/vmlinux.lds.h, include/linux/percpu-defs.h: 
	core-fix-typo-in-percpu-read_mostly-section.

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/percpu.h, include/linux/percpu-defs.h: 
	percpu-invoke-__verify_pcpu_ptr-from-the-generic

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/asm-generic/percpu.h, include/linux/percpu-defs.h: 
	percpu-preffity-percpu-header-files

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/percpu-defs.h: 
	percpu-use-raw_cpu_-to-define-__this_cpu_

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/asm-generic/percpu.h, include/linux/percpu-defs.h: 
	percpu-reorder-macros-in-percpu-header-files.

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/percpu-defs.h, include/linux/percpu.h: 
	percpu-move-raw-this-_cpu_-definitions

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/asm-generic/percpu.h, include/linux/percpu.h: 
	percpu-move-generic-raw-this-_cpu_-_N-definitions

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/percpu.h: 
	percpu-only-allow-sized-arch-overrides-for-raw-this_cpu_ptr

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/percpu-defs.h: 
	percpu-reorganize-include-linux-percpu-defs.h.

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/percpu-defs.h, include/linux/percpu.h: 
	percpu-move-accessors

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/asm-generic/percpu.h, include/linux/percpu-defs.h: percpu:
	include/asm-generic/percpu.h should contain only arch-overridable
	parts

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/percpu.h, include/asm-generic/percpu.h: 
	percpu-introduce-arch_raw_cpu_ptr

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/asm-generic/percpu.h: percpu: disallow archs from
	overriding SHIFT_PERCPU_PTR()

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/percpu-defs.h: 
	percpu-Make-__verify_pcu_ptr-handle-per-cpu-pointers

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/percpu-defs.h: percpu-fix-spurious-sparse-warnings

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, mm/memory.c: a little NUMA fallout fixup
	(number of arguements for a function that does nothing. go figure.

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/percpu.h: percpu-Fix-raw_cpu_inc_return

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/percpu.h, lib/smp_processor_id.c: 
	percpu-add-preemption-checks-to-__this_cpu-ops

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/percpu.h, include/asm-generic/percpu.h,
	include/linux/percpu.h: percpu-add-raw_cpu_ops.

2017-03-30  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/percpu.h, include/linux/percpu.h: 
	percpu-fix-this_cpu_sub-subtrahend-casting-for-unsigned-vars

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/percpu.h: percpu: remove this_cpu_xor()
	implementation

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu: Protect ->gp_flags accesses with
	ACCESS_ONCE()

2017-03-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: Aaaand finally am able to put defines for
	sd_asym and sd_busy where they belong

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h: doubled shit

2017-03-30  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/topology.h,
	kernel/sched/core.c, kernel/sched/sched.h: there you are

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Assign-correct-scheduling-domain-to-sd_llc

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: and more

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/fork.c, kernel/sched/features.h: and more

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	more

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: some more NUMA/other inaccplicable cheats

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-numa-Use-a-system-wide-search-to-find-swap-migration

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: a ton of NUMA bullshit we will never need but
	will help with its dummy defines for non-NUMA systems like ours.
	Also a couple of cheats in the process.

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	reverted for a sec

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	GODDAMNED NUMA

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: cosmetic

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: {fix}

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-Rework-sched_domain-topology-definition

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Skip double execution of
	pick_next_task_fair()

2017-03-29  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, include/linux/cpuidle.h,
	kernel/power/suspend.c: 
	PM-suspend-Always-use-deepest-C-state-in-the-freeze

2017-03-29  robcore <robpatershuk@gmail.com>

	* drivers/usb/serial/pl2303.c: haxxors - time to test

2017-03-29  robcore <robpatershuk@gmail.com>

	* drivers/usb/serial/generic.c: USB: serial: fix infinite
	wait_until_sent timeout

2017-03-29  robcore <robpatershuk@gmail.com>

	* drivers/usb/serial/generic.c, drivers/usb/serial/usb-serial.c,
	include/linux/usb/serial.h: usb serial - add generic wait until sent
	operation

2017-03-29  robcore <robpatershuk@gmail.com>

	* drivers/usb/serial/usb-serial.c, include/linux/usb/serial.h: usb -
	serial - add wait_until_sent ops

2017-03-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/timer.c: timer - we use 100 HZ, so
	msecs_per_jiffies should be 100 right?

2017-03-29  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/irq.c: migrate_one_irq - fix
	irq_set_affinity_locked

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: dox

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	sched: Revert commit 4c6c4e38c4e9 ("sched/core: Fix endless loop in
	pick_next_task()")

2017-03-29  robcore <robpatershuk@gmail.com>

	* drivers/block/nbd.c, drivers/block/pktcdvd.c,
	drivers/char/ipmi/ipmi_si_intf.c, drivers/s390/crypto/ap_bus.c,
	drivers/scsi/bnx2fc/bnx2fc_fcoe.c, drivers/scsi/bnx2i/bnx2i_hwi.c,
	drivers/scsi/fcoe/fcoe.c, drivers/scsi/ibmvscsi/ibmvfc.c,
	drivers/scsi/ibmvscsi/ibmvscsi.c, drivers/scsi/qla2xxx/qla_os.c,
	fs/ocfs2/cluster/heartbeat.c, kernel/locking/locktorture.c,
	mm/huge_memory.c: treewide conversions to MIN/MAX NICE

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/interrupt.h, include/linux/irq.h,
	kernel/irq/manage.c: genirq - allow forcing of cpu affinity of
	interrupts

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c, kernel/sched/fair.c, kernel/sched/rt.c: 
	sched-Check-for-stop-task-appearance-when-balancing

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/user_namespace.c: userns - smp_read_barrier_depends
	switched to smp_mb

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/time/tick-sched.c: tick-sched: Check tick_nohz_enabled in
	tick_nohz_switch_to_nohz()

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/uapi/linux/prctl.h, kernel/relay.c, kernel/sys.c,
	kernel/trace/trace.c, mm/shmem.c: fix a splice thing, also fixed up
	some userns stuff in kernel/sys.c and prettified its formatting

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: wait: WSTOPPED|WCONTINUED doesnt work if a zombie
	leader is traced by another process

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: wait: WSTOPPED|WCONTINUED hangs if a zombie child
	is traced by real_parent

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: wait-completely-ignore-the-EXIT_DEAD-tasks

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: wait: use EXIT_TRACE only if
	thread_group_leader(zombie)

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/exit.c: wait: introduce EXIT_TRACE
	to avoid the racy EXIT_DEAD->EXIT_ZOMBIE transition

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: wait: fix reparent_leader() vs
	EXIT_DEAD->EXIT_ZOMBIE race

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: kernel/exit.c: call proc_exit_connector() after
	exit_state is se

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, include/uapi/linux/prctl.h, kernel/fork.c,
	kernel/sys.c: mm-thp-add-VM_INIT_DEF_MASK-and-PRCTL_THP_DISABLE.

2017-03-29  robcore <robpatershuk@gmail.com>

	* Documentation/DocBook/kernel-hacking.tmpl, include/linux/wait.h,
	kernel/sched/core.c: sched - remove sleep_on and friends

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: cheating a bit

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: fixup my rt.c

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: cosmetic move

2017-03-29  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/rcu/tree.c: wtf mate?

2017-03-29  robcore <robpatershuk@gmail.com>

	* Documentation/ABI/testing/sysfs-module,
	Documentation/oops-tracing.txt, kernel/module.c, kernel/panic.c: 
	Use-E-instead-of-X-for-unsigned-module-taint-flag

2017-03-29  robcore <robpatershuk@gmail.com>

	* lib/Kconfig.debug: derp

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/time/tick-common.c: 
	tick-Fix-spelling-mistake-in-tick_handle_periodic

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/rcu/rcu.h, kernel/rcu/srcu.c, kernel/rcu/tiny.c,
	kernel/rcu/tree.c, kernel/rcu/update.c:  rcu: Ensure kernel/rcu/rcu.h can be sourced/used stand-alone

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, kernel/ksysfs.c, kernel/rcu/rcu.h: 
	rcu-Fix-sparse-warning-for-rcu_expedited-from-kernel

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/rcutiny.h, include/linux/rcutree.h,
	kernel/rcu/tree.c: rcu: Provide grace-period piggybacking API

2017-03-29  robcore <robpatershuk@gmail.com>

	* Documentation/ABI/testing/sysfs-module,
	Documentation/oops-tracing.txt, Documentation/sysctl/kernel.txt,
	include/linux/kernel.h, include/trace/events/module.h,
	kernel/module.c, kernel/panic.c, kernel/tracepoint.c: 
	-Fix-module-signature-vs-tracepoints-add-new-TAINT

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/module.c: module - use pr_cont

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Clean-up-the-task_hot-function

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Remove-double-calculation-in-fix_small_imbalan

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Fix-broken-setscheduler.

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	sched-fair-Fix-endless-loop-in-idle_balance

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/idle_task.c: 
	ched-fair-Push-down-check-for-high-priority-class

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/trace/ring_buffer_benchmark.c: 
	trace-Replace-hardcoding-of-19-with-MAX_NICE.

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/locking/Makefile,
	kernel/locking/locktorture.c, kernel/rcu/rcutorture.c,
	kernel/torture.c, lib/Kconfig.debug: rcutorture-squash part 2
	(final)

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/rcu/rcutorture.c,
	kernel/torture.c: squash rcutorture part 1

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/rcu/rcutorture.c,
	kernel/torture.c: rcutorture-Privatize-fullstop

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/rcu/rcutorture.c,
	kernel/torture.c: rcutorture-Abstract-torture_shutdown_notify.

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/rcu/rcutorture.c,
	kernel/torture.c: rcutorture-Abstract-torture-test-cleanup

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/rcu/rcutorture.c,
	kernel/torture.c: rcutorture-Abstract-torture-test-initialization

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/rcu/rcutorture.c,
	kernel/torture.c: rcutorture-Abstract-torture_onoff

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/rcu/rcutorture.c,
	kernel/torture.c: rcutorture-Abstract-torture_shuffle

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/rcu/rcutorture.c,
	kernel/torture.c: rcutorture-Abstract-torture_shutdown_absorb

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/rcu/rcutorture.c: 
	rcutorture-Abstract-TOROUT_STRING-and-friends

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/rcu/rcutorture.c: rcutorture-Rename-PRINTK-to-TOROUT

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/rcu/rcutorture.c: 
	rcutorture-Abstract-torture_param

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/Makefile, kernel/rcu/Makefile,
	kernel/rcu/{torture.c => rcutorture.c}, kernel/torture.c,
	lib/Kconfig.debug: rcutorture: Abstract rcu_torture_random()

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/rcu/torture.c: rcutorture-Fix-checkpatch-complaint.

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue - replace -20 with MIN_NICE

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sys.c: sys-Replace-hardcoding-of-20-and-19-with-MIN_NICE

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/auto_group.c, kernel/sched/core.c: 
	sched-Replace-hardcoding-of-20-and-19-with-MIN_NICE

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/rcu/torture.c: 
	rcu-Use-MAX_NICE-to-replace-hardcoding-of-19.

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/sched/prio.h: sched-prio-Add 3 NICE Macros

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c, kernel/sched/rt.c: sched/rt: Fix picking
	RT and DL tasks from empty queue

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/rt.c,
	kernel/sched/sched.h: sched: Guarantee task priority in
	pick_next_task()

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c,
	kernel/sched/fair.c, kernel/sched/idle_task.c, kernel/sched/rt.c,
	kernel/sched/sched.h: 
	sigh..sched-Push-down-pre_schedule-and-idle_balance.

2017-03-29  robcore <robpatershuk@gmail.com>

	* ref2.txt: ref

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c, kernel/sched/idle_task.c,
	kernel/sched/rt.c, kernel/sched/sched.h: 
	sched-Remove-some-ifdeffery.

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c, kernel/sched/rt.c: right gotta find that

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/stop_machine.c: 
	top_machine-Fix-2-race-between-stop_two_cpus

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/interrupt.h, kernel/softirq.c: softirq: use const
	char * const for softirq_to_name, whitespace neatening

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/softirq.c: softirq-convert-printks-to-pr_-level

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/softirq.c: softirq: use ffs() in __do_softirq()

2017-03-29  robcore <robpatershuk@gmail.com>

	* fs/file.c, include/linux/fdtable.h, include/linux/rcupdate.h,
	kernel/rcu/update.c: 
	introduce-__fcheck_files-to-fix-rcu_dereference_check

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/reboot.h, kernel/kexec.c, kernel/reboot.c: 
	kexec-migrate-to-reboot-cpu.

2017-03-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_show_resume_irq.c,
	arch/arm/mach-msm/timer.c: msm timer - make it more accessible for
	nohz

2017-03-29  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c: machinex-gpio_keys - added a 1
	ms wakelock for wakeup events to help recover from deep sleep.

2017-03-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c, arch/arm/mach-msm/pm-8x60.c,
	drivers/input/keyboard/gpio_keys_msm8960.c: machinex gpio keys,
	experiment, put the work on a freezable work queue, and queue it
	explicitly on cpu0

2017-03-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c: except the intelli experiment

2017-03-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpuidle.c,
	arch/arm/mach-msm/include/mach/cpuidle.h,
	arch/arm/mach-msm/intelli_hotplug.c, arch/arm/mach-msm/pm-8x60.c,
	arch/arm/mach-msm/pm.h: Revert that last one for now

2017-03-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpuidle.c,
	arch/arm/mach-msm/include/mach/cpuidle.h,
	arch/arm/mach-msm/intelli_hotplug.c, arch/arm/mach-msm/pm-8x60.c,
	arch/arm/mach-msm/pm.h: intelliplug - bringing the cpus down on init
	seems crucial, but bringing them back up to "boost performance"
	seems to do a number on our suspend resume.  Also, manually combined
	our cpuidle/pm8x60 prepare/enter idle

2017-03-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_hotplug.c: fixup brackets in msm hotplug

2017-03-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpuidle.c: that fixes it, but it may be time to
	update my msm pm, time will tell

2017-03-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpuidle.c: i believe that is still supposed to
	be dev

2017-03-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpuidle.c: msm cpuidle state_count fixup

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: final fixup

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, kernel/sched/idle.c: idle: Implement a
	per-cpu idle-polling mode

2017-03-29  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: some fixup for sched idle

2017-03-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/pm-8x60.c: fix msm pm

2017-03-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/intelli_hotplug.c,
	arch/arm/mach-msm/msm_hotplug.c: a shit ton of hotplug fixer-uppers

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/page_alloc.c: REVERT -
	mm-page_alloc-catch-out-of-date-list-of-page-flag

2017-03-29  robcore <robpatershuk@gmail.com>

	* include/linux/cpumask.h: REVERT - cpumask parse have it

2017-03-29  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: mm-page_alloc-add-a-VM_BUG-in-__free_one_page

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/block/aoe/aoecmd.c, fs/proc/page.c,
	include/linux/huge_mm.h, include/linux/mm.h, mm/ksm.c,
	mm/memory-failure.c, mm/page_alloc.c, mm/swap.c,
	virt/kvm/kvm_main.c: mm: close PageTail race;

2017-03-28  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: 
	mm-page_alloc.c-use-__paginginit-instead-of-__init

2017-03-28  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: 
	mm-page_alloc-catch-out-of-date-list-of-page-flag-names

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/vmstat.h, mm/page_alloc.c, mm/vmstat.c: 
	memory-hotplug-fix-zone-stat-mismatch

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/x86/mm/highmem_32.c, include/linux/bootmem.h, mm/bootmem.c,
	mm/nobootmem.c, mm/page_alloc.c: 
	-mm-accurately-calculate-zone-managed_pages-for-highmem

2017-03-28  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: mm-Fix-virt_to_page-warn

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, include/linux/mmzone.h, mm/page_alloc.c: 
	mm-use-a-dedicated-lock-to-protect-totalram_pages

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/page_alloc.c: 
	mm-introduce-common-help-functions-to-deal-with-reserved

2017-03-28  robcore <robpatershuk@gmail.com>

	* block/cfq-iosched.c: though we are going to make slice idle a
	constant

2017-03-28  robcore <robpatershuk@gmail.com>

	* block/cfq-iosched.c: reverted

2017-03-28  robcore <robpatershuk@gmail.com>

	* block/cfq-iosched.c: fuck me

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/cpumask.h: cpumask: implement cpumask_parse()

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/cpumask.h: cpumask-cpulist_parse-comments-correction

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/cpumask.h: 
	cpumask-add-a-few-comments-of-cpumask-functions

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c: 
	cpuidle-Do-not-use-CPUIDLE_DRIVER_STATE_START-in-cpu.

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c: dox

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/governors/ladder.c,
	drivers/cpuidle/governors/menu.c: 
	drivers-cpuidle-Replace-__get_cpu_var-uses

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, drivers/cpuidle/sysfs.c,
	include/linux/cpuidle.h: 
	cpuidle-remove-state_count-field-from-struct-cpuidle

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: sched / idle: Move the default idle call code
	to a separate function

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, kernel/sched/idle.c: cpuidle: Run
	tick_broadcast_exit() with disabled interrupts

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, include/linux/tick.h,
	kernel/sched/idle.c, kernel/time/clockevents.c,
	kernel/time/tick-broadcast.c, kernel/time/tick-internal.h: 
	clockevents: Provide explicit broadcast oneshot control functions

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, fs/jbd2/commit.c, fs/nfs/pagelist.c,
	net/sunrpc/xprt.c: a few more smp_mb fixups, and got rid of useless
	traces in cpuidle

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/compiler.h: dox

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/compiler.h: 
	kernel-Fix-sparse-warning-for-ACCESS_ONCE

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/compiler.h: kernel-tighten-rules-for-ACCESS-ONCE

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/asm-generic/barrier.h: conditional defines

2017-03-28  robcore <robpatershuk@gmail.com>

	* Documentation/memory-barriers.txt,
	arch/arm/include/asm/barrier.h, arch/x86/include/asm/barrier.h,
	arch/x86/um/asm/barrier.h, fs/select.c,
	include/asm-generic/barrier.h, include/linux/sched.h,
	kernel/futex.c: locking - arch - Rename set_mb to smp_store_mb

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/barrier.h, arch/x86/include/asm/barrier.h,
	arch/x86/um/asm/barrier.h, include/asm-generic/barrier.h,
	include/linux/compiler.h: locking - arch: Add WRITE_ONCE to set_mb

2017-03-28  robcore <robpatershuk@gmail.com>

	* Documentation/memory-barriers.txt,
	arch/arm/include/asm/barrier.h, arch/x86/include/asm/barrier.h,
	arch/x86/um/asm/barrier.h, include/asm-generic/barrier.h: arch - Add
	lightweight memory barriers dma_rmb and such

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/atomic.h, arch/arm/include/asm/barrier.h,
	arch/arm/include/asm/bitops.h: arch-arm-Convert-smp_mb__.

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/asm-generic/atomic.h, include/asm-generic/barrier.h,
	include/asm-generic/bitops.h, include/linux/atomic.h,
	include/linux/bitops.h, kernel/sched/core.c: 
	arch-Prepare-for-smp_mb__-before-after-_atomic

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/barrier.h: bs

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/alpha/include/asm/barrier.h,
	arch/avr32/include/asm/barrier.h,
	arch/blackfin/include/asm/barrier.h,
	arch/frv/include/asm/barrier.h, arch/m68k/include/asm/barrier.h,
	arch/microblaze/include/asm/barrier.h,
	arch/score/include/asm/barrier.h,
	arch/unicore32/include/asm/barrier.h, include/asm-generic/barrier.h: 
	arch-Clean up asm barrier.h implementations using asm-generic

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/barrier.h, arch/x86/um/asm/barrier.h,
	include/linux/compiler.h: unfuck

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/barrier.h, arch/x86/um/asm/barrier.h,
	include/linux/compiler.h: fuck

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/smp.c, block/blk-iopoll.c, crypto/chainiv.c,
	drivers/base/power/domain.c, drivers/block/mtip32xx/mtip32xx.c,
	drivers/cpuidle/coupled.c, drivers/firewire/ohci.c,
	drivers/md/dm-bufio.c, drivers/md/dm-snap.c, drivers/md/dm-table.c,
	drivers/md/dm.c, drivers/net/ethernet/broadcom/bnx2x/bnx2x_sp.c,
	drivers/net/ethernet/broadcom/cnic.c,
	drivers/net/ethernet/chelsio/cxgb/cxgb2.c,
	drivers/net/ethernet/chelsio/cxgb3/sge.c,
	drivers/net/ethernet/chelsio/cxgb4/sge.c,
	drivers/net/ethernet/chelsio/cxgb4vf/sge.c,
	drivers/pci/xen-pcifront.c, drivers/scsi/isci/remote_device.c,
	drivers/target/loopback/tcm_loop.c,
	drivers/target/target_core_device.c,
	drivers/target/target_core_ua.c, drivers/usb/serial/usb_wwan.c,
	drivers/w1/w1_family.c, drivers/xen/xen-pciback/pciback_ops.c,
	fs/btrfs/extent_io.c, fs/buffer.c, fs/ext4/resize.c,
	fs/gfs2/glops.c, fs/gfs2/lock_dlm.c, fs/gfs2/recovery.c,
	fs/gfs2/sys.c, fs/jbd2/commit.c, fs/nfs/dir.c, fs/nfs/nfs4state.c,
	fs/nfs/pnfs.h, fs/nfs/write.c, fs/ubifs/lpt_commit.c,
	fs/ubifs/tnc_commit.c, include/asm-generic/bitops/atomic.h,
	include/asm-generic/bitops/lock.h, include/linux/buffer_head.h,
	include/linux/genhd.h, include/linux/interrupt.h,
	include/linux/netdevice.h, include/linux/sched.h,
	include/linux/sunrpc/sched.h, include/linux/sunrpc/xprt.h,
	include/linux/tracehook.h, kernel/debug/debug_core.c,
	kernel/futex.c, kernel/kmod.c, kernel/rcu/tree.c,
	kernel/sched/cpupri.c, mm/backing-dev.c, mm/filemap.c,
	net/core/dev.c, net/core/link_watch.c, net/ipv4/inetpeer.c,
	net/netfilter/nf_conntrack_core.c, net/rds/ib_recv.c,
	net/rds/iw_recv.c, net/rds/send.c, net/rds/tcp_send.c,
	net/sunrpc/auth.c, net/sunrpc/auth_gss/auth_gss.c,
	net/sunrpc/xprtsock.c, net/unix/af_unix.c, sound/pci/bt87x.c: mass
	conversion of smp_mb part 1

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: SCHED-IDLE-add-missing-define

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: 
	cpuidle-Clean-up-fallback-handling-in-cpuidle_idle_c

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: 
	sched-idle-Add-missing-checks-to-the-exit-condition

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, kernel/sched/idle.c,
	kernel/sched/sched.h: sched-Let-the-scheduler-see-CPU-idle-states

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, kernel/sched/idle.c: 
	cpuidle-move-idle-traces-to-cpuidle_enter_state.

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: sched-idle-Drop-while-calculating-broadcast.

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: sched-idle-Clear-polling-before-descheduling
	(time for atomic smp_mb)

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: sched-idle-Make-cpuidle_idle_call-void.

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: sched/idle: Reflow cpuidle_idle_call() Apply
	goto to reduce lines and nesting levels.

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: sched/idle: Delay clearing the polling bit

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, include/linux/cpuidle.h,
	kernel/sched/idle.c: cpuidle: Combine cpuidle_enabled() with
	cpuidle_select()

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/process.c: 
	sched-idle-ARM-Remove-redundant-cpuidle_idle_call

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: sched/idle: Add more comments to the code

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: sched/idle: Move idle conditions in
	cpuidle_idle main function

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/cpuidle.h, kernel/sched/idle.c: 
	sched-idle-Reorganize-the-idle-loop

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/cp15.h: oops have those

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, include/linux/cpuidle.h,
	kernel/sched/idle.c: Success!?! move cpuidle_idle_call to sched/idle

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, include/linux/cpuidle.h: idle/cpuidle:
	Split cpuidle_idle_call main function into smaller functions

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/cp15.h: 
	ARM-introduce-common-set_auxcr-get_auxcr-functions

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c: cpuidle: delay enabling interrupts
	until all coupled CPUs leave idle

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_fuelgauge.c: >= <= (fuelguage)

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: reverted everything vgroup except for the
	dedicated workqueue

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-remove-cgroup_pidlist-rwsem

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-refactor-cgroup_pidlist_find

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-implement-delayed-destruction-for-cgroup_pidlist

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-don-t-skip-seq_open-on-write-only-opens-on-pidlist

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: remove build bug on

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: use a dedicated workqueue for cgroup
	destruction

2017-03-28  robcore <robpatershuk@gmail.com>

	* block/blk-core.c, block/blk-map.c, drivers/ata/libata-core.c,
	drivers/base/bus.c, drivers/input/sparse-keymap.c,
	drivers/regulator/core.c, drivers/usb/core/urb.c,
	fs/debugfs/inode.c, include/linux/hsi/hsi.h, include/linux/kfifo.h,
	include/linux/skbuff.h, include/linux/usb/composite.h,
	include/net/mac80211.h, kernel/signal.c, net/core/dev.c: some dox

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-update-cgroup_enable_task_cg_lists-to-use-lock

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h:  rcu: Optimize RCU_FAST_NO_HZ for RCU_NOCB_CPU_ALL

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, include/linux/rcutiny.h,
	include/linux/rcutree.h, kernel/rcu/tree.c,
	kernel/rcu/tree_plugin.h: 
	rcu-Optimize-rcu_needs_cpu-for-RCU_NOCB_CPU_ALL

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree_plugin.h: unfuck

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree_plugin.h: FUCK

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: verted

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: done fucked up

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/power/hibernate.c: 
	PM-hibernate-convert-simple_strtoul-to-kstrtoul.

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/time/ntp.c: ntp-Make-is_error_status-use-its-argument.

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/power/qos.c: jesus christ

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/pm_qos.h: ,

2017-03-28  robcore <robpatershuk@gmail.com>

	* Documentation/power/pm_qos_interface.txt, include/linux/pm_qos.h,
	kernel/power/qos.c: PM-QoS-Add-PM_QOS_MEMORY_BANDWIDTH-class

2017-03-28  robcore <robpatershuk@gmail.com>

	* Documentation/devicetree/bindings/power/power_domain.txt,
	drivers/base/power/domain.c, include/linux/pm_domain.h,
	kernel/power/Kconfig: 
	PM-Domains-Add-generic-OF-based-PM-domain-look-up

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/base/power/domain.c: PM / domains: Add late_initcall to
	disable unused PM domains

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/base/power/domain.c, include/linux/pm_domain.h: 
	PM-domains-Remove-genpd_queue_power_off_work-API

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/base/power/sysfs.c: PM / sysfs: avoid shadowing variables

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/asm-generic/bug.h: bug - Make BUG stop the machine
	unconditionally

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/governors/menu.c: 
	-cpuidle-Move-perf-multiplier-calculation-out-of-the-loop

2017-03-28  robcore <robpatershuk@gmail.com>

	* Documentation/power/pm_qos_interface.txt,
	drivers/base/power/qos.c, drivers/input/touchscreen/st1232.c,
	include/linux/pm_qos.h: PM / QoS: Add type to
	dev_pm_qos_add_ancestor_request() arguments

2017-03-28  robcore <robpatershuk@gmail.com>

	* Documentation/ABI/testing/sysfs-devices-power,
	Documentation/power/pm_qos_interface.txt, drivers/base/power/qos.c,
	drivers/base/power/sysfs.c, include/linux/pm.h,
	include/linux/pm_qos.h, kernel/power/qos.c:  PM / QoS: Introcuce latency tolerance device PM QoS type

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/base/power/qos.c, include/linux/pm_qos.h,
	kernel/power/qos.c: 
	PM-QoS-Add-no_constraints_value-field-to-struct-pm_qos

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/Makefile,
	drivers/net/wireless/bcmdhd/dhd_linux.c: got rid of unneeded dhd
	frame flag, and tested changing the custom cpufreq thresh to 1026000

2017-03-28  robcore <robpatershuk@gmail.com>

	* ref2.txt: add my qos research

2017-03-28  robcore <robpatershuk@gmail.com>

	* ref2.txt: ref2

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: wtf?

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: gonna try stockdemand as default

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: there

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: improved ondemand based on
	stockdemand, barring a couple of atomic sets i have to revert

2017-03-28  robcore <robpatershuk@gmail.com>

	* Documentation/power/pm_qos_interface.txt,
	Documentation/trace/events-power.txt, drivers/base/power/power.h,
	drivers/base/power/qos.c, drivers/base/power/sysfs.c,
	drivers/mtd/nand/sh_flctl.c, include/linux/pm_qos.h,
	include/trace/events/power.h: changed the name of QOS Latency again

2017-03-28  robcore <robpatershuk@gmail.com>

	* Documentation/power/pm_qos_interface.txt: dox

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	again...sched-nohz-Exclude-isolated-cores-from-load-balancing

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: dox

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/alucard_hotplug.c: more alucard fix up, use CPU
	UTIL and take advantage of the fact that we ALWAYS use powersuspend

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/alucard_hotplug.c: fixup alucard

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/boot/dts/{qcom-apq8064.dtsi => qcom-apq8064-dt.txt},
	arch/arm/boot/dts/{qcom-ipq8064.dtsi => qcom-ipq8064-dt.txt},
	arch/arm/mach-msm/alucard_hotplug.c, drivers/usb/core/hcd.c: REVERT
	- EXPERIMENT-usb-rh_call_control-tbuf-overflow-fix

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: brought back alucard

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: disabled yankdemand

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_ondemand.c: ondemand: remove stupid
	bullshit optimal frequency disallowal of anything smaller than
	810000

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/sched/prio.h, kernel/sched/sched.h: sched-Expose
	some macros related to prio

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: reverted

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: fuck

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/bounds.c: include spinlock_types in kernel/bounds.c

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/kmod.c: revert that

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/kmod.c: 
	-kernel-kmod.c-check-for-NULL-in-call_usermodehelper

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/vfp/vfpdouble.c, arch/arm/vfp/vfpsingle.c,
	drivers/input/touchscreen/cyttsp_core.c,
	drivers/input/touchscreen/cyttsp_core.h, drivers/irqchip/irq-vic.c,
	drivers/md/md.c, include/linux/irq.h, include/linux/moduleparam.h,
	init/main.c, kernel/irq/chip.c, kernel/irq/internals.h,
	kernel/irq/manage.c, kernel/module.c, kernel/params.c,
	kernel/workqueue.c: REVERT irqs, params, workqueues, vfp

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c, include/linux/cpu.h,
	kernel/cpu.c: REVERT - msm thermal commits

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: disabled Alucard hotplug

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: change the name of core control in cpu.c and declare
	it.

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: bring back adaptive tuning

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/Kbuild,
	arch/arm/include/asm/entry-macro-multi.S,
	arch/arm/include/asm/processor.h, arch/arm/include/asm/system.h: 
	revert my changes to arm stuff

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: REVERT - removal of cpuidle from freeze
	enter/exit

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: turn adaptive tuning back off

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: fixup core_control hook

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/entry-macro-multi.S,
	arch/arm/include/asm/system.h: couple little cleanups/fun times

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/processor.h: arm asm processor, add define
	for cpu_relax_lowlatency

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c, include/linux/cpu.h,
	kernel/cpu.c: msm thermal - as per Dorimanx, only warn on smp
	failing to bring up cpus if it is not core control related.

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: msm thermal core control:
	fix cores getting stuck when the temperature reaches the exact core
	limit set in place, due to both online/offling procedures being
	activated when <= >=. Just like frequency control, only greator than
	or equal should put cores offline, and only less than should bring
	them back up.

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/md/md.c: REVERT -
	md-md_stop_writes-should-always-freeze-recovery

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/input/touchscreen/cyttsp_core.c,
	drivers/input/touchscreen/cyttsp_core.h, drivers/irqchip/irq-vic.c: 
	REVERT - irqchip returning EPERM for reserved irqs, and both
	input-cyttsp commits that i was testing

2017-03-28  robcore <robpatershuk@gmail.com>

	* Makefile: have it

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mipi_samsung_octa.c,
	drivers/video/msm/smart_mtp_se6e8fa.c: removed faux panel colors,
	which only half-worked with our brightness hacks and are causing
	null pointer dereferences with the updated source, i do not care to
	investigate further

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/Kbuild: ARM - use generic mcs_spinlock and
	preempt

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/Makefile, kernel/reboot.c, kernel/sys.c: reboot move to
	reboot.c

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/kprobes.h, kernel/trace/ftrace.c,
	kernel/trace/trace.c: REVERT -

	patches/0008-tracing-Replace-__get_cpu_var-uses-with-this_cpu_ptr.patch

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Fix updating rq->max_idle_balance_cost
	and rq->next_balance in idle_balance()

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/cputime.c: sched-Sanitize-irq-accounting-madness

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/kprobes.h, kernel/trace/ftrace.c,
	kernel/trace/trace.c: 
	tracing-Replace-__get_cpu_var-uses-with-this_cpu_ptr

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/locking/rwsem-xadd.c: dox

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/power/hibernate.c: 
	PM-hibernate-no-kernel_power_off-when-pm_power_off

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/power/hibernate.c: 
	PM-hibernate-use-unsigned-local-variables-in-swsusp

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/moduleparam.h, init/main.c, kernel/module.c,
	kernel/params.c: param-hand arguements after . straight to init

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: REMOVE cpuidle resume/pause in freeze
	enter

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/vfp/vfpdouble.c, arch/arm/vfp/vfpsingle.c: 
	ARM-8026-1-Fix-emulation-of-multiply-accumulate

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/chip.c, kernel/irq/internals.h,
	kernel/irq/manage.c: REVERT - irq commits

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue-fix-a-possible-race-condition

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-make-rescuer_thread-empty-wq-maydays-list

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/locking/lockdep_internals.h: 
	lockdep-Increase-static-allocations

2017-03-28  robcore <robpatershuk@gmail.com>

	* Documentation/atomic_ops.txt, Documentation/memory-barriers.txt,
	arch/alpha/include/asm/barrier.h, arch/arm/include/asm/atomic.h,
	arch/arm/include/asm/barrier.h, arch/arm/include/asm/bitops.h,
	arch/arm/kernel/smp.c, arch/avr32/include/asm/barrier.h,
	arch/blackfin/include/asm/barrier.h,
	arch/frv/include/asm/barrier.h, arch/m68k/include/asm/barrier.h,
	arch/microblaze/include/asm/barrier.h,
	arch/score/include/asm/barrier.h,
	arch/unicore32/include/asm/barrier.h,
	arch/x86/include/asm/barrier.h, arch/x86/kernel/cpu/perf_event.c,
	arch/x86/um/asm/barrier.h, block/blk-iopoll.c, crypto/chainiv.c,
	drivers/base/power/domain.c, drivers/block/mtip32xx/mtip32xx.c,
	drivers/cpuidle/coupled.c, drivers/cpuidle/cpuidle.c,
	drivers/firewire/ohci.c, drivers/md/bcache/bcache.h,
	drivers/md/bcache/closure.h, drivers/md/dm-bufio.c,
	drivers/md/dm-snap.c, drivers/md/dm-table.c, drivers/md/dm.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_sp.c,
	drivers/net/ethernet/broadcom/cnic.c,
	drivers/net/ethernet/brocade/bna/bnad.c,
	drivers/net/ethernet/chelsio/cxgb/cxgb2.c,
	drivers/net/ethernet/chelsio/cxgb3/sge.c,
	drivers/net/ethernet/chelsio/cxgb4/sge.c,
	drivers/net/ethernet/chelsio/cxgb4vf/sge.c,
	drivers/net/ethernet/intel/ixgbe/ixgbe_main.c,
	drivers/pci/xen-pcifront.c, drivers/scsi/isci/remote_device.c,
	drivers/target/loopback/tcm_loop.c,
	drivers/target/target_core_alua.c,
	drivers/target/target_core_device.c,
	drivers/target/target_core_iblock.c,
	drivers/target/target_core_pr.c,
	drivers/target/target_core_transport.c,
	drivers/target/target_core_ua.c, drivers/usb/serial/usb_wwan.c,
	drivers/w1/w1_family.c, drivers/xen/xen-pciback/pciback_ops.c,
	fs/btrfs/extent_io.c, fs/btrfs/inode.c, fs/buffer.c,
	fs/ext4/resize.c, fs/gfs2/glock.c, fs/gfs2/glops.c,
	fs/gfs2/lock_dlm.c, fs/gfs2/recovery.c, fs/gfs2/sys.c,
	fs/jbd2/commit.c, fs/nfs/dir.c, fs/nfs/nfs4state.c,
	fs/nfs/pagelist.c, fs/nfs/pnfs.c, fs/nfs/pnfs.h, fs/nfs/write.c,
	fs/select.c, fs/ubifs/lpt_commit.c, fs/ubifs/tnc_commit.c,
	include/asm-generic/atomic.h, include/asm-generic/barrier.h,
	include/asm-generic/bitops.h, include/asm-generic/bitops/atomic.h,
	include/asm-generic/bitops/lock.h, include/linux/atomic.h,
	include/linux/bitops.h, include/linux/buffer_head.h,
	include/linux/compiler.h, include/linux/genhd.h,
	include/linux/interrupt.h, include/linux/netdevice.h,
	include/linux/of.h, include/linux/sched.h,
	include/linux/sunrpc/sched.h, include/linux/sunrpc/xprt.h,
	include/linux/tick.h, include/linux/tracehook.h,
	kernel/debug/debug_core.c, kernel/futex.c, kernel/kmod.c,
	kernel/locking/lockdep_internals.h, kernel/rcu/tree.c,
	kernel/rcu/tree_plugin.h, kernel/sched/core.c,
	kernel/sched/cpupri.c, kernel/sched/wait.c,
	kernel/time/clockevents.c, kernel/time/tick-broadcast.c,
	mm/backing-dev.c, mm/filemap.c, net/core/dev.c,
	net/core/link_watch.c, net/ipv4/inetpeer.c,
	net/netfilter/nf_conntrack_core.c, net/rds/ib_recv.c,
	net/rds/iw_recv.c, net/rds/send.c, net/rds/tcp_send.c,
	net/sunrpc/auth.c, net/sunrpc/auth_gss/auth_gss.c,
	net/sunrpc/xprt.c, net/sunrpc/xprtsock.c, net/unix/af_unix.c,
	sound/pci/bt87x.c: revert to before that

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, include/linux/tick.h,
	kernel/time/clockevents.c, kernel/time/tick-broadcast.c,
	kernel/time/tick-internal.h: fixed

2017-03-28  robcore <robpatershuk@gmail.com>

	* Documentation/atomic_ops.txt, Documentation/memory-barriers.txt,
	arch/alpha/include/asm/barrier.h, arch/arm/include/asm/atomic.h,
	arch/arm/include/asm/barrier.h, arch/arm/include/asm/bitops.h,
	arch/arm/kernel/smp.c, arch/avr32/include/asm/barrier.h,
	arch/blackfin/include/asm/barrier.h,
	arch/frv/include/asm/barrier.h, arch/m68k/include/asm/barrier.h,
	arch/microblaze/include/asm/barrier.h,
	arch/score/include/asm/barrier.h,
	arch/unicore32/include/asm/barrier.h,
	arch/x86/include/asm/barrier.h, arch/x86/um/asm/barrier.h,
	block/blk-iopoll.c, crypto/chainiv.c, drivers/base/power/domain.c,
	drivers/block/mtip32xx/mtip32xx.c, drivers/cpuidle/coupled.c,
	drivers/cpuidle/cpuidle.c, drivers/firewire/ohci.c,
	drivers/md/bcache/bcache.h, drivers/md/bcache/closure.h,
	drivers/md/dm-bufio.c, drivers/md/dm-snap.c, drivers/md/dm-table.c,
	drivers/md/dm.c, drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_sp.c,
	drivers/net/ethernet/broadcom/cnic.c,
	drivers/net/ethernet/brocade/bna/bnad.c,
	drivers/net/ethernet/chelsio/cxgb/cxgb2.c,
	drivers/net/ethernet/chelsio/cxgb3/sge.c,
	drivers/net/ethernet/chelsio/cxgb4/sge.c,
	drivers/net/ethernet/chelsio/cxgb4vf/sge.c,
	drivers/net/ethernet/intel/ixgbe/ixgbe_main.c,
	drivers/pci/xen-pcifront.c, drivers/scsi/isci/remote_device.c,
	drivers/target/loopback/tcm_loop.c,
	drivers/target/target_core_alua.c,
	drivers/target/target_core_device.c,
	drivers/target/target_core_iblock.c,
	drivers/target/target_core_pr.c,
	drivers/target/target_core_transport.c,
	drivers/target/target_core_ua.c, drivers/usb/serial/usb_wwan.c,
	drivers/w1/w1_family.c, drivers/xen/xen-pciback/pciback_ops.c,
	fs/btrfs/extent_io.c, fs/btrfs/inode.c, fs/buffer.c,
	fs/ext4/resize.c, fs/gfs2/glock.c, fs/gfs2/glops.c,
	fs/gfs2/lock_dlm.c, fs/gfs2/recovery.c, fs/gfs2/sys.c,
	fs/jbd2/commit.c, fs/nfs/dir.c, fs/nfs/nfs4state.c,
	fs/nfs/pagelist.c, fs/nfs/pnfs.c, fs/nfs/pnfs.h, fs/nfs/write.c,
	fs/select.c, fs/ubifs/lpt_commit.c, fs/ubifs/tnc_commit.c,
	include/asm-generic/barrier.h, include/asm-generic/bitops/atomic.h,
	include/asm-generic/bitops/lock.h, include/linux/buffer_head.h,
	include/linux/compiler.h, include/linux/genhd.h,
	include/linux/interrupt.h, include/linux/netdevice.h,
	include/linux/of.h, include/linux/sched.h,
	include/linux/sunrpc/sched.h, include/linux/sunrpc/xprt.h,
	include/linux/tick.h, include/linux/tracehook.h,
	kernel/debug/debug_core.c, kernel/futex.c, kernel/kmod.c,
	kernel/locking/lockdep_internals.h, kernel/rcu/tree.c,
	kernel/rcu/tree_plugin.h, kernel/sched/cpupri.c,
	kernel/sched/wait.c, kernel/time/clockevents.c,
	kernel/time/tick-broadcast.c, kernel/time/tick-internal.h,
	mm/backing-dev.c, mm/filemap.c, net/core/dev.c,
	net/core/link_watch.c, net/ipv4/inetpeer.c,
	net/netfilter/nf_conntrack_core.c, net/rds/ib_recv.c,
	net/rds/iw_recv.c, net/rds/send.c, net/rds/tcp_send.c,
	net/sunrpc/auth.c, net/sunrpc/auth_gss/auth_gss.c,
	net/sunrpc/xprt.c, net/sunrpc/xprtsock.c, net/unix/af_unix.c,
	sound/pci/bt87x.c: MASS converison to smp_mb_before/after_atomic

2017-03-28  robcore <robpatershuk@gmail.com>

	* Documentation/atomic_ops.txt, Documentation/memory-barriers.txt,
	arch/alpha/include/asm/barrier.h, arch/arm/include/asm/atomic.h,
	arch/arm/include/asm/barrier.h, arch/arm/include/asm/bitops.h,
	arch/arm/kernel/smp.c, arch/avr32/include/asm/barrier.h,
	arch/blackfin/include/asm/barrier.h,
	arch/frv/include/asm/barrier.h, arch/m68k/include/asm/barrier.h,
	arch/microblaze/include/asm/barrier.h,
	arch/score/include/asm/barrier.h,
	arch/unicore32/include/asm/barrier.h,
	arch/x86/include/asm/barrier.h, arch/x86/um/asm/barrier.h,
	block/blk-iopoll.c, crypto/chainiv.c, drivers/base/power/domain.c,
	drivers/block/mtip32xx/mtip32xx.c, drivers/cpuidle/coupled.c,
	drivers/cpuidle/cpuidle.c, drivers/firewire/ohci.c,
	drivers/md/bcache/bcache.h, drivers/md/bcache/closure.h,
	drivers/md/dm-bufio.c, drivers/md/dm-snap.c, drivers/md/dm-table.c,
	drivers/md/dm.c, drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_sp.c,
	drivers/net/ethernet/broadcom/cnic.c,
	drivers/net/ethernet/brocade/bna/bnad.c,
	drivers/net/ethernet/chelsio/cxgb/cxgb2.c,
	drivers/net/ethernet/chelsio/cxgb3/sge.c,
	drivers/net/ethernet/chelsio/cxgb4/sge.c,
	drivers/net/ethernet/chelsio/cxgb4vf/sge.c,
	drivers/net/ethernet/intel/ixgbe/ixgbe_main.c,
	drivers/pci/xen-pcifront.c, drivers/scsi/isci/remote_device.c,
	drivers/target/loopback/tcm_loop.c,
	drivers/target/target_core_alua.c,
	drivers/target/target_core_device.c,
	drivers/target/target_core_iblock.c,
	drivers/target/target_core_pr.c,
	drivers/target/target_core_transport.c,
	drivers/target/target_core_ua.c, drivers/usb/serial/usb_wwan.c,
	drivers/w1/w1_family.c, drivers/xen/xen-pciback/pciback_ops.c,
	fs/btrfs/extent_io.c, fs/btrfs/inode.c, fs/buffer.c,
	fs/ext4/resize.c, fs/gfs2/glock.c, fs/gfs2/glops.c,
	fs/gfs2/lock_dlm.c, fs/gfs2/recovery.c, fs/gfs2/sys.c,
	fs/jbd2/commit.c, fs/nfs/dir.c, fs/nfs/nfs4state.c,
	fs/nfs/pagelist.c, fs/nfs/pnfs.c, fs/nfs/pnfs.h, fs/nfs/write.c,
	fs/select.c, fs/ubifs/lpt_commit.c, fs/ubifs/tnc_commit.c,
	include/asm-generic/barrier.h, include/asm-generic/bitops/atomic.h,
	include/asm-generic/bitops/lock.h, include/linux/buffer_head.h,
	include/linux/compiler.h, include/linux/genhd.h,
	include/linux/interrupt.h, include/linux/netdevice.h,
	include/linux/of.h, include/linux/sched.h,
	include/linux/sunrpc/sched.h, include/linux/sunrpc/xprt.h,
	include/linux/tick.h, include/linux/tracehook.h,
	kernel/debug/debug_core.c, kernel/futex.c, kernel/kmod.c,
	kernel/locking/lockdep_internals.h, kernel/rcu/tree.c,
	kernel/rcu/tree_plugin.h, kernel/sched/cpupri.c,
	kernel/sched/wait.c, kernel/time/clockevents.c,
	kernel/time/tick-broadcast.c, kernel/time/tick-internal.h,
	mm/backing-dev.c, mm/filemap.c, net/core/dev.c,
	net/core/link_watch.c, net/ipv4/inetpeer.c,
	net/netfilter/nf_conntrack_core.c, net/rds/ib_recv.c,
	net/rds/iw_recv.c, net/rds/send.c, net/rds/tcp_send.c,
	net/sunrpc/auth.c, net/sunrpc/auth_gss/auth_gss.c,
	net/sunrpc/xprt.c, net/sunrpc/xprtsock.c, net/unix/af_unix.c,
	sound/pci/bt87x.c: fuck

2017-03-28  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c: adapt cpuidle

2017-03-28  robcore <robpatershuk@gmail.com>

	* Documentation/atomic_ops.txt, Documentation/memory-barriers.txt,
	arch/alpha/include/asm/barrier.h, arch/arm/include/asm/atomic.h,
	arch/arm/include/asm/barrier.h, arch/arm/include/asm/bitops.h,
	arch/arm/kernel/smp.c, arch/avr32/include/asm/barrier.h,
	arch/blackfin/include/asm/barrier.h,
	arch/frv/include/asm/barrier.h, arch/m68k/include/asm/barrier.h,
	arch/microblaze/include/asm/barrier.h,
	arch/score/include/asm/barrier.h,
	arch/unicore32/include/asm/barrier.h,
	arch/x86/include/asm/barrier.h, arch/x86/um/asm/barrier.h,
	block/blk-iopoll.c, crypto/chainiv.c, drivers/base/power/domain.c,
	drivers/block/mtip32xx/mtip32xx.c, drivers/cpuidle/coupled.c,
	drivers/cpuidle/cpuidle.c, drivers/firewire/ohci.c,
	drivers/md/bcache/bcache.h, drivers/md/bcache/closure.h,
	drivers/md/dm-bufio.c, drivers/md/dm-snap.c, drivers/md/dm-table.c,
	drivers/md/dm.c, drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_sp.c,
	drivers/net/ethernet/broadcom/cnic.c,
	drivers/net/ethernet/brocade/bna/bnad.c,
	drivers/net/ethernet/chelsio/cxgb/cxgb2.c,
	drivers/net/ethernet/chelsio/cxgb3/sge.c,
	drivers/net/ethernet/chelsio/cxgb4/sge.c,
	drivers/net/ethernet/chelsio/cxgb4vf/sge.c,
	drivers/net/ethernet/intel/ixgbe/ixgbe_main.c,
	drivers/pci/xen-pcifront.c, drivers/scsi/isci/remote_device.c,
	drivers/target/loopback/tcm_loop.c,
	drivers/target/target_core_alua.c,
	drivers/target/target_core_device.c,
	drivers/target/target_core_iblock.c,
	drivers/target/target_core_pr.c,
	drivers/target/target_core_transport.c,
	drivers/target/target_core_ua.c, drivers/usb/serial/usb_wwan.c,
	drivers/w1/w1_family.c, drivers/xen/xen-pciback/pciback_ops.c,
	fs/btrfs/extent_io.c, fs/btrfs/inode.c, fs/buffer.c,
	fs/ext4/resize.c, fs/gfs2/glock.c, fs/gfs2/glops.c,
	fs/gfs2/lock_dlm.c, fs/gfs2/recovery.c, fs/gfs2/sys.c,
	fs/jbd2/commit.c, fs/nfs/dir.c, fs/nfs/nfs4state.c,
	fs/nfs/pagelist.c, fs/nfs/pnfs.c, fs/nfs/pnfs.h, fs/nfs/write.c,
	fs/select.c, fs/ubifs/lpt_commit.c, fs/ubifs/tnc_commit.c,
	include/asm-generic/barrier.h, include/asm-generic/bitops/atomic.h,
	include/asm-generic/bitops/lock.h, include/linux/buffer_head.h,
	include/linux/compiler.h, include/linux/genhd.h,
	include/linux/interrupt.h, include/linux/netdevice.h,
	include/linux/of.h, include/linux/sched.h,
	include/linux/sunrpc/sched.h, include/linux/sunrpc/xprt.h,
	include/linux/tick.h, include/linux/tracehook.h,
	kernel/debug/debug_core.c, kernel/futex.c, kernel/kmod.c,
	kernel/locking/lockdep_internals.h, kernel/rcu/tree.c,
	kernel/rcu/tree_plugin.h, kernel/sched/cpupri.c,
	kernel/sched/wait.c, kernel/time/clockevents.c,
	kernel/time/tick-broadcast.c, kernel/time/tick-internal.h,
	mm/backing-dev.c, mm/filemap.c, net/core/dev.c,
	net/core/link_watch.c, net/ipv4/inetpeer.c,
	net/netfilter/nf_conntrack_core.c, net/rds/ib_recv.c,
	net/rds/iw_recv.c, net/rds/send.c, net/rds/tcp_send.c,
	net/sunrpc/auth.c, net/sunrpc/auth_gss/auth_gss.c,
	net/sunrpc/xprt.c, net/sunrpc/xprtsock.c, net/unix/af_unix.c,
	sound/pci/bt87x.c: clockevents-Provide-explicit-broadcast-oneshot

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/x86/kernel/cpu/perf_event.c: bs

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/asm-generic/atomic.h, include/asm-generic/barrier.h,
	include/asm-generic/bitops.h, include/linux/atomic.h,
	include/linux/bitops.h, kernel/sched/core.c: 
	arch-Prepare-for-smp_mb__-before-after-_atomic

2017-03-28  robcore <robpatershuk@gmail.com>

	* block/blk-iopoll.c, crypto/chainiv.c,
	drivers/base/power/domain.c, drivers/block/mtip32xx/mtip32xx.c,
	drivers/cpuidle/coupled.c, drivers/firewire/ohci.c,
	drivers/md/bcache/bcache.h, drivers/md/bcache/closure.h,
	drivers/md/dm-bufio.c, drivers/md/dm-snap.c, drivers/md/dm.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_sp.c,
	drivers/net/ethernet/broadcom/cnic.c,
	drivers/net/ethernet/brocade/bna/bnad.c,
	drivers/net/ethernet/chelsio/cxgb/cxgb2.c,
	drivers/net/ethernet/chelsio/cxgb3/sge.c,
	drivers/net/ethernet/chelsio/cxgb4/sge.c,
	drivers/net/ethernet/chelsio/cxgb4vf/sge.c,
	drivers/net/ethernet/intel/ixgbe/ixgbe_main.c,
	drivers/pci/xen-pcifront.c, drivers/scsi/isci/remote_device.c,
	drivers/target/loopback/tcm_loop.c,
	drivers/target/target_core_alua.c,
	drivers/target/target_core_device.c,
	drivers/target/target_core_iblock.c,
	drivers/target/target_core_pr.c,
	drivers/target/target_core_transport.c,
	drivers/target/target_core_ua.c, drivers/usb/serial/usb_wwan.c,
	drivers/w1/w1_family.c, drivers/xen/xen-pciback/pciback_ops.c,
	fs/btrfs/extent_io.c, fs/btrfs/inode.c, fs/buffer.c,
	fs/ext4/resize.c, fs/gfs2/glock.c, fs/gfs2/glops.c,
	fs/gfs2/lock_dlm.c, fs/gfs2/recovery.c, fs/gfs2/sys.c,
	fs/jbd2/commit.c, fs/nfs/dir.c, fs/nfs/nfs4state.c,
	fs/nfs/pagelist.c, fs/nfs/pnfs.c, fs/nfs/pnfs.h, fs/nfs/write.c,
	fs/ubifs/lpt_commit.c, fs/ubifs/tnc_commit.c,
	include/asm-generic/atomic.h, include/asm-generic/barrier.h,
	include/asm-generic/bitops.h, include/asm-generic/bitops/atomic.h,
	include/asm-generic/bitops/lock.h, include/linux/atomic.h,
	include/linux/bitops.h, include/linux/buffer_head.h,
	include/linux/genhd.h, include/linux/interrupt.h,
	include/linux/netdevice.h, include/linux/sched.h,
	include/linux/sunrpc/sched.h, include/linux/sunrpc/xprt.h,
	include/linux/tracehook.h, kernel/debug/debug_core.c,
	kernel/futex.c, kernel/kmod.c, kernel/rcu/tree.c,
	kernel/rcu/tree_plugin.h, kernel/sched/core.c,
	kernel/sched/cpupri.c, kernel/sched/wait.c, mm/backing-dev.c,
	mm/filemap.c, net/core/dev.c, net/core/link_watch.c,
	net/ipv4/inetpeer.c, net/netfilter/nf_conntrack_core.c,
	net/rds/ib_recv.c, net/rds/iw_recv.c, net/rds/send.c,
	net/rds/tcp_send.c, net/sunrpc/auth.c,
	net/sunrpc/auth_gss/auth_gss.c, net/sunrpc/xprt.c,
	net/sunrpc/xprtsock.c, net/unix/af_unix.c, sound/pci/bt87x.c: 
	reverted

2017-03-28  robcore <robpatershuk@gmail.com>

	* block/blk-iopoll.c, crypto/chainiv.c,
	drivers/base/power/domain.c, drivers/block/mtip32xx/mtip32xx.c,
	drivers/cpuidle/coupled.c, drivers/firewire/ohci.c,
	drivers/md/bcache/bcache.h, drivers/md/bcache/closure.h,
	drivers/md/dm-bufio.c, drivers/md/dm-snap.c, drivers/md/dm.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_sp.c,
	drivers/net/ethernet/broadcom/cnic.c,
	drivers/net/ethernet/brocade/bna/bnad.c,
	drivers/net/ethernet/chelsio/cxgb/cxgb2.c,
	drivers/net/ethernet/chelsio/cxgb3/sge.c,
	drivers/net/ethernet/chelsio/cxgb4/sge.c,
	drivers/net/ethernet/chelsio/cxgb4vf/sge.c,
	drivers/net/ethernet/intel/ixgbe/ixgbe_main.c,
	drivers/pci/xen-pcifront.c, drivers/scsi/isci/remote_device.c,
	drivers/target/loopback/tcm_loop.c,
	drivers/target/target_core_alua.c,
	drivers/target/target_core_device.c,
	drivers/target/target_core_iblock.c,
	drivers/target/target_core_pr.c,
	drivers/target/target_core_transport.c,
	drivers/target/target_core_ua.c, drivers/usb/serial/usb_wwan.c,
	drivers/w1/w1_family.c, drivers/xen/xen-pciback/pciback_ops.c,
	fs/btrfs/extent_io.c, fs/btrfs/inode.c, fs/buffer.c,
	fs/ext4/resize.c, fs/gfs2/glock.c, fs/gfs2/glops.c,
	fs/gfs2/lock_dlm.c, fs/gfs2/recovery.c, fs/gfs2/sys.c,
	fs/jbd2/commit.c, fs/nfs/dir.c, fs/nfs/nfs4state.c,
	fs/nfs/pagelist.c, fs/nfs/pnfs.c, fs/nfs/pnfs.h, fs/nfs/write.c,
	fs/ubifs/lpt_commit.c, fs/ubifs/tnc_commit.c,
	include/asm-generic/bitops/atomic.h,
	include/asm-generic/bitops/lock.h, include/linux/buffer_head.h,
	include/linux/genhd.h, include/linux/interrupt.h,
	include/linux/netdevice.h, include/linux/sched.h,
	include/linux/sunrpc/sched.h, include/linux/sunrpc/xprt.h,
	include/linux/tracehook.h, kernel/debug/debug_core.c,
	kernel/futex.c, kernel/kmod.c, kernel/rcu/tree.c,
	kernel/rcu/tree_plugin.h, kernel/sched/cpupri.c,
	kernel/sched/wait.c, mm/backing-dev.c, mm/filemap.c,
	net/core/dev.c, net/core/link_watch.c, net/ipv4/inetpeer.c,
	net/netfilter/nf_conntrack_core.c, net/rds/ib_recv.c,
	net/rds/iw_recv.c, net/rds/send.c, net/rds/tcp_send.c,
	net/sunrpc/auth.c, net/sunrpc/auth_gss/auth_gss.c,
	net/sunrpc/xprt.c, net/sunrpc/xprtsock.c, net/unix/af_unix.c,
	sound/pci/bt87x.c: not yet

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/asm-generic/atomic.h, include/asm-generic/barrier.h,
	include/asm-generic/bitops.h, include/linux/atomic.h,
	include/linux/bitops.h, kernel/sched/core.c: 
	arch-Prepare-for-smp_mb__-before-after-_atomic.

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/perf_event.h, kernel/events/core.c: 
	-perf-Allow-building-PMU-drivers-as-modules.

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c, kernel/sched/sched.h: sched/rt: Substract
	number of tasks of throttled queues from rq->nr_running

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: sched-rt-Add-accessors-rq_of_rt_se

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: sched rt: sum number of all child tasks in
	hierarchial order

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: 
	sched-rt-Do-not-try-to-push-tasks-if-pinned-task-switch

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Make-scale_rt_power-deal-with-backward-clocks

2017-03-28  robcore <robpatershuk@gmail.com>

	* ref.txt: just a ref

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/auditfilter.c: REVERT audit_rule_data pointers

2017-03-28  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, include/linux/interrupt.h,
	include/linux/irq.h, kernel/irq/manage.c, kernel/module.c: REVERT
	raw_cpu_write and forcing cpu affinity, hunting prereqs now

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/interrupt.h, include/linux/irq.h,
	kernel/irq/manage.c: genirq - allow forcing cpu affinity of
	interrupts

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/user_namespace.c: user namespaces - fix up barriers

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex-debug.c: locking-mutex-Fix-debug_mutexes

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/lglock.h, kernel/locking/Makefile: 
	lglock-map-to-spinlock-when-CONFIG_SMP

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/module.c: modules: use raw_cpu_write for initialization of
	per cpu refcount.

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/fork.c, kernel/kallsyms.c, kernel/kexec.c,
	kernel/ksysfs.c, kernel/power/power.h, kernel/power/snapshot.c,
	kernel/power/suspend.c, kernel/power/swap.c, kernel/sched/clock.c,
	kernel/sched/core.c, kernel/signal.c, kernel/time/timekeeping.c,
	kernel/trace/trace.h: kernel-use-macros-from-compiler.h

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/panic.c: kernel/panic.c: display reason at end +
	pr_emerg+use pr_warn not printk(WARNING)

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: exit-move-check_stack_usage-to-the-end-of-do_exit

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/mempolicy.h, include/linux/sched.h, kernel/fork.c,
	mm/mempolicy.c, mm/slab.c:  mm, mempolicy: remove per-process flag

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: 
	printk-fix-one-circular-lockdep-warning-about-console

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: 
	printk-do-not-compute-the-size-of-the-message-twice.

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: 
	printk-use-also-the-last-bytes-in-the-ring-buffer

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: dox

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: 
	printk-remove-obsolete-check-for-log-level-c.

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/resource.c: 
	kernel-resource.c-make-reallocate_resource-static

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/hung_task.c, kernel/kexec.c, kernel/profile.c,
	kernel/sched/stats.c, kernel/user.c, kernel/user_namespace.c: 
	kernel-audit-fix-non-modular-users-of-module_init

2017-03-28  robcore <robpatershuk@gmail.com>

	* fs/binfmt_elf.c, fs/exec.c, init/Kconfig, kernel/sys_ni.c: 
	fs-kernel-permit-disabling-the-uselib-syscall

2017-03-28  robcore <robpatershuk@gmail.com>

	* fs/filesystems.c, init/Kconfig, kernel/sys_ni.c: 
	sys_sysfs-Add-CONFIG_SYSFS_SYSCALL

2017-03-28  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/vm.txt, fs/drop_caches.c,
	include/linux/vm_event_item.h, kernel/sysctl.c, mm/vmstat.c: dox

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/cpuset.h, kernel/cpuset.c, mm/filemap.c,
	mm/hugetlb.c, mm/mempolicy.c, mm/page_alloc.c, mm/slab.c, mm/slub.c: 
	mm-optimize-put_mems_allowed-usage

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/auditfilter.c: audit: do not cast audit_rule_data pointers
	pointlesly

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/audit.c: AUDIT-Allow-login-in-non-init-namespaces

2017-03-28  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/exit.c: 
	cgroup-remove-useless-argument-from-cgroup_exit

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/fork.c: cgroup-fix-spurious-lockdep-warning-in-cgroup_exit.

2017-03-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: those sched patches are
	cancerous

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_event_perf.c: REVERT perf

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h, kernel/workqueue.c: REVERT -wq

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/time/tick-common.c: 
	tick-Remove-code-duplication-in-tick_handle_periodic

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h, kernel/workqueue.c: 
	workqueue-Provide-destroy_delayed_work_on_stack.;

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/resource.c: resources: Set type in __request_region()

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Clean-up-the-task_hot-function

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Fix-broken-setscheduler

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: verted

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: hmm nope

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_event_perf.c: 
	perf-Disallow-user-space-stack-dumps-for-ftrace

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_event_perf.c: 
	perf-Disallow-user-space-callchains-for-function-tracing

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/irq/irqdesc.c: dont like that forward declaration

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/irq/chip.c: fixup last commit to work with partialsuspend
	framework

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/chip.c, kernel/irq/internals.h,
	kernel/irq/manage.c: genirq: Add a new IRQCHIP_EOI_THREADED flag

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: 
	sched-Remove-needless-round-trip-nsecs-tick-conver

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/manage.c: trying out
	cpuidle/irq_request commits

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, include/linux/irq.h, kernel/cpuset.c,
	kernel/events/core.c, kernel/irq/manage.c,
	kernel/power/hibernate.c, kernel/power/snapshot.c,
	kernel/sched/core.c, kernel/sched/deadline.c, kernel/sched/fair.c,
	kernel/sched/idle.c, kernel/sched/rt.c, kernel/sched/sched.h: possed

2017-03-27  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/manage.c: genirq: Provide
	irq_request/release_resources chip callbacks

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: im guessing the smp_processor_id is used this
	way due to potential dereference

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c: throw arch_cpu_idle back into cpuidle

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: -sched-Clean-up-the-task_hot-function

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Fix-broken-setscheduler

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/power/snapshot.c: dox

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Fix-endless-loop-in-idle_balance

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	sched/core: Fix endless loop in pick_next_task()

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c, kernel/sched/rt.c: deadline -
	sched-rt-Fix-picking-RT-and-DL-tasks-from-empty-queue

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, drivers/cpuidle/cpuidle.h,
	include/linux/cpuidle.h, kernel/sched/idle.c: reverted it all

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.h, include/linux/cpuidle.h: did something
	because im lazy but there is still too much static stuff in cpuidle
	fuckit

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: some cpuidle updates

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, include/linux/cpuidle.h,
	kernel/sched/idle.c: cpuidle - move into sched/idle.c

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: cpuset: use rcu_read_lock() to protect task_cs()

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/power/hibernate.c: 
	PM-hibernate-use-name_to_dev_t-to-parse-resume

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/binder.c, include/linux/irq_work.h,
	include/linux/rcupdate.h, include/linux/sched/prio.h,
	include/linux/torture.h, kernel/Makefile,
	kernel/debug/debug_core.c, kernel/events/core.c, kernel/irq_work.c,
	kernel/ksysfs.c, kernel/notifier.c, kernel/rcu/Makefile,
	kernel/rcu/rcu.h, kernel/rcu/srcu.c, kernel/rcu/tiny.c,
	kernel/rcu/{rcutorture.c => torture.c}, kernel/rcu/tree.c,
	kernel/rcu/update.c, kernel/sched/auto_group.c,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sys.c, kernel/torture.c, lib/Kconfig.debug: REVERT to P89

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/events/core.c: perf-Remove-redundant-PMU-assignment

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: fixup some {}{}{}{}{}{}{}{}{}{}

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/events/core.c: i care very little about printing that

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/events/core.c: perf-Fix-prototype-of-find_pmu_context

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: will ned to find that

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched/prio.h: fix up my prio.h

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/rt.c,
	kernel/sched/sched.h: 
	sched-Guarantee-task-priority-in-pick_next_task

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: sched: Put rqs
	sched_avg under CONFIG_FAIR_GROUP_SCHED

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/rcu/rcu.h, kernel/rcu/srcu.c, kernel/rcu/tiny.c,
	kernel/rcu/tree.c, kernel/rcu/update.c: 
	rcu-Ensure-kernel-rcu-rcu.h-can-be-sourced

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, kernel/ksysfs.c, kernel/rcu/rcu.h: 
	rcu-Fix-sparse-warning-for-rcu_expedited-from-kernel

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/notifier.c: 
	notifier-Substitute-rcu_access_pointer-for-rcu_deref

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/debug/debug_core.c: KGDB-make-kgdb_breakpoint-as-noinline

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/rcu/rcutorture.c: 
	rcutorture-Abstract-torture_params

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/torture.h, kernel/Makefile, kernel/rcu/Makefile,
	kernel/rcu/{torture.c => rcutorture.c}, kernel/torture.c,
	lib/Kconfig.debug:  rcutorture: Abstract rcu_torture_random()

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-nohz-Exclude-isolated-cores-from-load-balancing

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: dox

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sys.c: sys-Replace-hardcoding-of-20-and-19-with-MIN_NICE

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/auto_group.c, kernel/sched/core.c: 
	sched-Replace-hardcoding-of-20-and-19-with-MIN_NICE

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/rcu/torture.c: rcu-Use-MAX_NICE-to-replace-hardcoding-of-19

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/irq_work.h, kernel/events/core.c, kernel/irq_work.c: 
	perf-x86-Warn-to-early_printk

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-numa-add-cond_resched-to-task_numa_work

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/binder.c, include/linux/sched/prio.h,
	kernel/sched/core.c, kernel/sys.c: 
	sched-Consolidate-open-coded-implementations-of-nice

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched/prio.h: sched-prio-Add-3-macros-for-NICE

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched/prio.h: sched/prio: Use DEFAULT_PRIO to define
	NICE_TO_PRIO() and PRIO_TO_NICE()

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched/prio.h, kernel/sched/sched.h: 
	sched-Expose-some-macros-related-to-priority

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: more 3.17 hax (fixes) for fair.c

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c: more bringup

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: a little more fair cleanup/bringup

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: sched rt : Make init_sched_rt_class __init

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: 
	sched-rt-Remove-leaf_rt_rq_list-from-struct-rq

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched/rt.h, kernel/locking/rtmutex.c,
	kernel/sched/core.c: sched: Consider pi boosting in setscheduler()

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Adjust p->sched_reset_on_fork when
	nothing else changes

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-Add-better-debug-output-for-might_sleep

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: Check for idle task in might_sleep()

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Init-idle-on_rq-in-init_idle.

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: fixup my fixup

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: idle - put arch cpu idle indicator back in a
	sane place

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c,
	kernel/sched/fair.c, kernel/sched/idle_task.c, kernel/sched/rt.c,
	kernel/sched/sched.h, kernel/sched/stop_task.c: a little idle
	balance fixup

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: sched/fair: Remove
	idle_balance() declaration in sched.h. Remove idle_balance() from
	the public life; also reduce some #ifdef clutter by folding the
	pick_next_task_fair() idle path into idle_balance().

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Reset-se-depth-when-task-switched-to-FAIR.

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: fixup my initialization

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched core: make my task dead compatible
	again

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/linux/suspend.h: my def for freezing in progress from
	suspend has become irrelevant...though I suppose i could have just
	implemented it here but whatever a new header is fine

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c, include/linux/mx_freeze.h,
	kernel/power/process.c, kernel/power/suspend.c: convert my custom
	freezing_in_progress bool to a small function returning the value of
	mx_freezing_in_progress (no functional change, just optimized method
	thx to francos ingenius display_state hook

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: relocate init_task_load again

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: check for task dead in sched fork again

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: cpufreq - always allow update of user
	policy

2017-03-27  robcore <robpatershuk@gmail.com>

	* mm/zswap.c: nothin

2017-03-27  robcore <robpatershuk@gmail.com>

	* mm/zswap.c: Free the memory of zswap_tree in
	zswap_frontswap_invalidate_area().

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/events/core.c: 
	perf-don-t-leave-group_entry-on-sibling-list-(use-after-free)

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/platform/msm/sps/sps_bam.c: 
	sps-add-spinlock-protection-for-pipes_q-being-tainted

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/binder.c: 
	binder-prevent-kptr-leak-by-using-pK-format

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/wl_cfgp2p.c: 
	net-wireless-bcmdhd-fix-kernel-panic-during-p2p-exit

2017-03-27  robcore <robpatershuk@gmail.com>

	* include/trace/events/net.h: trace-net-use-pK-for-kernel-pointers

2017-03-27  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event.c,
	arch/arm/mach-msm/perf_event_msm_krait_l2.c: 
	msm-perf-Do-not-allocate-new-hw_event-if-event-is-duplicated

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/char/random.c, include/linux/random.h: 
	FROMLIST-drivers-char-random-add-get_random_long

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c, include/linux/cpufreq.h,
	include/linux/sched.h, kernel/fork.c, kernel/sched/cputime.c: 
	reverted cpupower commit for now, need a prereq

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c, include/linux/cpufreq.h,
	include/linux/sched.h, kernel/fork.c, kernel/sched/cputime.c: sched:
	cpufreq: Adds a field cpu_power

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/platform/msm/ipa/ipa.c: 
	msm-ipa-add-null-check-and-initialize-the-variable

2017-03-27  robcore <robpatershuk@gmail.com>

	* mm/vmalloc.c: mm/vmalloc.c: fix an overflow bug in
	alloc_vmap_area()

2017-03-27  robcore <robpatershuk@gmail.com>

	* mm/pagewalk.c: 
	mm-pagewalk.c-fix-walk_page_range-access-of-wrong-PTEs

2017-03-27  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/smp.c: nevermind thinking about it we NEED ipi
	wakeup so this will be false positive central

2017-03-27  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/smp.c: 
	ARM-smp-BUG-if-smp_send_reschedule-is-called-for-an-offline-cpu

2017-03-27  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-numa-skip-inaccessible-VMAs.

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/net/ethernet/brocade/bna/bnad_debugfs.c,
	drivers/scsi/bfa/bfad_debugfs.c, drivers/scsi/lpfc/lpfc_debugfs.c: 
	-lseek-fd-n-SEEK_END-does-not-go-to-eof

2017-03-27  robcore <robpatershuk@gmail.com>

	* fs/namei.c: use-can_lookup-instead-of-direct-checks-of-i_op-look;

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/md/md.c: md-md_stop_writes-should-always-freeze-recovery.

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/irqchip/irq-vic.c: irqchip: Return -EPERM for reserved
	IRQs

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/input/touchscreen/cyttsp_core.h: 
	Input-cyttsp-fix-swapped-mfg_stat-and-mfg_cmd-reg

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/input/touchscreen/cyttsp_core.c: 
	Input-cyttsp-add-missing-handshake

2017-03-27  robcore <robpatershuk@gmail.com>

	* arch/arm/boot/compressed/head.S: ARM: 7743/1: compressed/head.S:
	work around new binutils warning

2017-03-27  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: dont need this

2017-03-26  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c,
	kernel/sched/cpupri.c, kernel/sched/cputime.c,
	kernel/sched/deadline.c, kernel/sched/debug.c, kernel/sched/fair.c,
	kernel/sched/proc.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sched/stats.h, kernel/sched/stop_task.c: there

2017-03-26  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c,
	kernel/sched/cpupri.c, kernel/sched/cputime.c,
	kernel/sched/deadline.c, kernel/sched/debug.c, kernel/sched/fair.c,
	kernel/sched/proc.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sched/stats.h, kernel/sched/stop_task.c: possing again

2017-03-26  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c,
	kernel/sched/cpupri.c, kernel/sched/cputime.c,
	kernel/sched/deadline.c, kernel/sched/debug.c, kernel/sched/fair.c,
	kernel/sched/proc.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sched/stats.h, kernel/sched/stop_task.c: oops

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, pos.sh: possing

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: nope

2017-03-26  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/proc.c,
	kernel/sched/sched.h: cleaned up the aftermath

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: Intelli_plug: kernel sched/core: add per cpu
	nr_running stats

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: 
	intelli_plug-refactor-stats-calculation-code-to-be-less-intrusive

2017-03-26  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/debug.c, kernel/sched/sched.h: 
	REVERT - sched computer time agverage nrJ_running

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: Revert "scheduler:
	Re-compute time-average nr_running on read"

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c,
	kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sched/stop_task.c: create wrapper for on rq and some other
	hax

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpupri.c, kernel/sched/cputime.c,
	kernel/sched/fair.c, kernel/sched/stats.h, kernel/sched/stop_task.c: 
	some cleanup in cpu accounting

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: change task_next_fair to use h_nr_running

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: added NICE TO PRIO macros

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c, kernel/sched/sched.h: it was only
	needed in the pm driver

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c, kernel/sched/rt.c,
	kernel/sched/sched.h: sched/core: Remove unused argument from
	init_[rt|dl]_rq()

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, drivers/cpuidle/cpuidle.c: reapply pm
	suspend/cpuidle workaround to see if it helps

2017-03-26  robcore <robpatershuk@gmail.com>

	* fsplit.sh: gave myself a present

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/base/class.c, drivers/base/core.c,
	drivers/gpio/gpiolib.c, drivers/isdn/mISDN/core.c,
	drivers/power/power_supply_core.c, drivers/rtc/interface.c,
	drivers/scsi/hosts.c, drivers/scsi/osd/osd_uld.c,
	drivers/scsi/scsi_transport_iscsi.c, drivers/spi/spi.c,
	drivers/uwb/lc-rc.c, fsplit.sh, include/linux/device.h,
	include/linux/power_supply.h, include/linux/rtc.h,
	init/do_mounts.c, kernel/power/suspend_test.c,
	net/ieee802154/wpan-class.c, net/nfc/core.c: fuck the constify

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/uaccess.h: revert uaccess

2017-03-26  robcore <robpatershuk@gmail.com>

	* fs/proc/inode.c: fs-proc-clean-up-printks.

2017-03-26  robcore <robpatershuk@gmail.com>

	* fs/proc/generic.c, fs/proc/inode.c: 
	saner-proc_get_inode-calling-conventions.

2017-03-26  robcore <robpatershuk@gmail.com>

	* mm/filemap.c: block-remove-plugging-at-buffered-write-time

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/x86/platform/efi/efi.c, arch/x86/platform/efi/efi_64.c,
	drivers/mtd/mtdcore.c, drivers/pps/clients/pps_parport.c,
	fs/proc/self.c: fix missing slab.h includes

2017-03-26  robcore <robpatershuk@gmail.com>

	* fs/proc/generic.c: 
	procfs-Clean-up-huge-if-statement-in-__proc_file

2017-03-26  robcore <robpatershuk@gmail.com>

	* fs/proc/self.c: FS-set-fs-proc-self.c-for-my-tree

2017-03-26  robcore <robpatershuk@gmail.com>

	* fs/proc/base.c, fs/proc/inode.c, fs/proc/internal.h,
	fs/proc/root.c, fs/proc/self.c, include/linux/pid_namespace.h: 
	procfs: switch /proc/self away from proc_dir_entry

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/base/class.c, drivers/base/core.c,
	drivers/gpio/gpiolib.c, drivers/isdn/mISDN/core.c,
	drivers/power/power_supply_core.c, drivers/rtc/interface.c,
	drivers/scsi/hosts.c, drivers/scsi/osd/osd_uld.c,
	drivers/scsi/scsi_transport_iscsi.c, drivers/spi/spi.c,
	drivers/uwb/lc-rc.c, include/linux/device.h,
	include/linux/power_supply.h, include/linux/rtc.h,
	init/do_mounts.c, kernel/power/suspend_test.c,
	net/ieee802154/wpan-class.c, net/nfc/core.c: driver-core: constify
	data for class_find_device()

2017-03-26  robcore <robpatershuk@gmail.com>

	* fs/ioprio.c: UPSTREAM: block: fix use-after-free in
	sys_ioprio_get()

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/uaccess.h: 
	uaccess-annotate-__-get-put-_user-funct

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c, drivers/cpufreq/cpufreq.c: msm
	cpufreq was a dud

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c: bring back msm cpufreq changes to
	test

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c: 
	msm-cpufreq-Remove-acpuclock-calls-from-cpufreq

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: REVERT - except-for-sysfs_notify

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c: REVERT -
	cpufreq-stats-Get-rid-of-CPUFREQ_STATDEVICE_ATTR

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: REVERT
	turned-off-schedulers-cpu-min-max-function-to-test

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: REVERT sched polling clear

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: except for sysfs_notify

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: REVERT cpufreq changes

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: fuck

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: oops fix sysfs kobject shit too

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: oops those are write locks now

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: disable msm rq stats hotplug
	again (mp decision?)

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: smp_mb__after_atomic adapt idle to use after
	clearbit till i do the rename

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: 
	sched-idle-Clear-polling-before-descheduling-the-idle

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c: but make it device initcall

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c: revert msm cpufreq commits

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: Revert "cpufreq: make the
	"scaling_cur_freq" sysfs entry pollable"

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c: 
	missing-parts-for-commit-msm-cpufreq-Add-pm-notifier

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c: 
	msm-cpufreq-Remove-redundant-check-in-cpu_set_freq

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c:  qcom-cpufreq: Fix hotplug blocking logic

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c: qcom-cpufreq: Block hotplug until
	cpufreq is ready

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c: msm: cpufreq: Remove acpuclock calls
	from cpufreq

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/Makefile: interesting: fix Wframe
	larger than warning in WiFi

2017-03-26  robcore <robpatershuk@gmail.com>

	* Makefile: Makefile: tell gcc optimizer to never introduce new data
	races (prob already have it

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: update io_is_busy for
	arch/arm/mach-msm/msm_rq_stats.c

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_stats.c: 
	cpufreq-stats-Get-rid-of-CPUFREQ_STATDEVICE_ATTR

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: TEST - cpufreq-Simplify-cpufreq_add_dev

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c: REVERT -
	cpuidle-remove-cross-cpu-IPI-by-new-latency-request;

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: turned off schedulers cpu min/max function to
	test

2017-03-26  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/cpuidle.c: 
	cpuidle-remove-cross-cpu-IPI-by-new-latency-request

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/locking/rtmutex.c: 
	locking-rtmutex-Avoid-a-NULL-pointer-dereference

2017-03-26  robcore <robpatershuk@gmail.com>

	* include/linux/zlib.h, lib/zlib_deflate/deflate.c,
	lib/zlib_inflate/inflate.c: -zlib-clean-up-some-dead-code

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/locking/spinlock_debug.c: 
	spinlock-Indicate-that-a-lockup-is-only-suspected

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Use-rq-rd-in-sched_setaffinity-under-RCU-read

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-cleanup-Rename-out_unlock-to-out_free_new_mask

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-dl-Use-dl_bw_of-under-rcu_read_lock_sched

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Use-dl_bw_of-under-RCU-read-lock

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c, kernel/sched/core.c: Revert "sched: Remove
	get_online_cpus() usage" (also changed zalloc to alloc for
	rt/dl/fair allocations for testing)

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/power/qos.c: pm qos - replace spinlock with mutex for
	pm_qos_lock

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: reverted

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: futex-Make-unlock_pi-more-robust

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/mcs_spinlock.h,
	arch/openrisc/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild,
	include/asm-generic/mcs_spinlock.h: asm mcs_spinlock bringup

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c: 
	-locking-mutexes-Optimize-mutex-trylock-slowpath

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c: 
	locking-mutexes-Try-to-acquire-mutex-only-if-it-is-unlocked

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c: 
	locking-mutexes-Delete-the-MUTEX_SHOW_NO_WAITER-macro

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c: dox

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex-debug.c, kernel/locking/mutex.c: 
	locking-mutex-Fix-debug-checks

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c: locking-mutexes-Add-extra-reschedule-point

2017-03-26  robcore <robpatershuk@gmail.com>

	* include/linux/mutex.h, kernel/locking/Makefile,
	kernel/locking/mcs_spinlock.c, kernel/locking/mcs_spinlock.h,
	kernel/locking/mutex.c: 
	-locking-mutexes-Introduce-cancelable-MCS-lock

2017-03-26  robcore <robpatershuk@gmail.com>

	* include/linux/mcs_spinlock.h, kernel/locking/mcs_spinlock.h,
	kernel/locking/mutex.c: moved mcs spinlock to kernel locking

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c: 
	locking-mutexes-Modify-the-way-optimistic-spinners-are-queued

2017-03-26  robcore <robpatershuk@gmail.com>

	* include/linux/mcs_spinlock.h, include/linux/mutex.h,
	kernel/locking/mutex.c: changed mspinlock to mcs spinlock

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c: 
	locking-mutexes-Unlock-the-mutex-without-the-wait

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c: 
	locking-mutexes-Return-false-if-task-need_resched

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/locking/rtmutex.c: 
	locking-rtmutex-Optimize-setting-task-running

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c, kernel/mutex.c: moved back

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/mutex.c: mutex-Avoid-label-warning-when-CONFIG option not
	selected

2017-03-26  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: got rid of the
	migration notifier

2017-03-26  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: brought back the
	migration notifier

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/features.h: bring back ttwu again

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	REVERT-sched-Calculate-max_possible_freq-based

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: od

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/Makefile: put cpupower and cpufreq ahead of idle
	shit

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/Kconfig, arch/alpha/Kconfig, arch/arm/Kconfig,
	arch/arm/configs/canadefconfig, arch/arm/include/asm/hardirq.h,
	arch/arm/kernel/smp.c, block/blk-softirq.c, block/blk-sysfs.c,
	include/linux/llist.h, include/linux/sched.h,
	include/linux/sched/rt.h, include/linux/smp.h, kernel/Kconfig.hz,
	kernel/locking/rtmutex.c, kernel/power/main.c,
	kernel/power/power.h, kernel/power/suspend.c, kernel/power/swap.c,
	kernel/sched/core.c, kernel/sched/features.h, kernel/sched/rt.c,
	kernel/smp.c, kernel/softirq.c: possed

2017-03-26  robcore <robpatershuk@gmail.com>

	* pos.sh: possing AGAIN fuck this

2017-03-26  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: changing gov default to ondemand

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/features.h: we NEED ttwhatever

2017-03-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: added another sched_rt_rq_enqueue to rt
	scheduling

2017-03-25  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: turning multiple cpu idle drivers
	back on

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: k we will see how this performs

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: added back task
	migration notifier

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/sched/rt.h, kernel/locking/rtmutex.c,
	kernel/sched/core.c: sched-Consider-pi-boosting-in-setscheduler

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Calculate-max_possible_freq-based-on-cu

2017-03-25  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, arch/arm/mach-msm/msm_rq_stats.c,
	block/blk-softirq.c, drivers/cpuidle/coupled.c,
	drivers/cpuidle/driver.c, drivers/cpuidle/governors/menu.c,
	include/linux/cpu.h, include/linux/llist.h, include/linux/sched.h,
	include/linux/sched/rt.h, include/linux/sched/sysctl.h,
	include/linux/smp.h, init/Kconfig, kernel/locking/rtmutex.c,
	kernel/sched/core.c, kernel/sched/debug.c, kernel/sched/fair.c,
	kernel/sched/rt.c, kernel/sched/sched.h, kernel/smp.c,
	kernel/softirq.c, kernel/sysctl.c, kernel/up.c, net/core/dev.c: 
	remove generic helpers config option again

2017-03-25  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-03-25  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/sched/core.c: fuck me

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sysctl.c: sched: add migration load change notifier for
	frequency guidance

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Limit-MAX_PINNED_INTERVAL

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Help-out-higher-capacity-CPUs

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	sched-rt-Introduce-power-aware-scheduling

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: there it is

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-check-for-power-inefficient-task-placement

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/softirq.c: 
	sched-do-nohz-load-balancing-in-order-of-power-efficient cpus

2017-03-25  robcore <robpatershuk@gmail.com>

	* block/blk-softirq.c, drivers/cpuidle/coupled.c,
	include/linux/smp.h, kernel/sched/core.c, kernel/smp.c,
	kernel/up.c, net/core/dev.c: smp: Rename
	__smp_call_function_single() to smp_call_function_single_async()

2017-03-25  robcore <robpatershuk@gmail.com>

	* block/blk-softirq.c, drivers/cpuidle/coupled.c,
	include/linux/smp.h, kernel/sched/core.c, kernel/smp.c,
	kernel/up.c, net/core/dev.c: smp: Remove wait argument from
	__smp_call_function_single()

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/smp.c: smp - move __smp_call_function_single under its safe
	version

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: some fixes

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Tighten-controls-for-tasks-spillover-to-idle

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: reverted last two

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-check-for-power-inefficient-task-placement

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-do-nohz-load-balancing-in-order-of-power-efficient-cpus

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: added the SOME PINNED shit myself;

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: reverted em both

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fuckin thing sup

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: some broken bringup

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: reverted

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: oopsy poopsy

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, kernel/sched/fair.c: 
	sched-add-hook-for-platform-specific-CPU-power-info

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sysctl.c: -sched-add-power-aware-scheduling-sysctl.

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Extend update_task_ravg() to accept
	wallclock as argument

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: sched-add-sched_get_busy-sched_set_window-APIs

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-window-stats-adjust-RQ-curr-prev-sums-on-task

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: 
	sched-window-stats-Add-aggregated-runqueue-windowed

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: sched: window-stats: synchronize windows
	across cpus

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 

	/media/root/robcore/android/DORIMANX_MARCH_7/patches/0484-sched-window-stats-Do-not-account-wait-time.patch

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: window-stats: update during migration
	and earlier at wakeup

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: re-add sched: add
	notifier for cross-cpu migrations

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Switch-to-windows-based-load-stats-by-default.

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Provide-tunable-to-switch-between-PELT-and-window

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c: 
	sched-Provide-scaled-load-information-for-tasks

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c: 
	sched-Extend-proc-sched_debug-with-additional-info

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: fixup my check for migration as task_struct
	is a member of struct rq

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h:  sched: Track number of big and small tasks on a cpu

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Handle cpu-bound tasks stuck on wrong
	cpu

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Handle-cpu-bound-tasks-stuck-on-wrong-cpu

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Send-NOHZ-kick-to-idle-cpu-in-same-cluster

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: sched:
	Basic task placement support for HMP systems

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: 
	sched-Use-rq-efficiency-in-scaling-load-stats.

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched: Introduce
	efficiency, load_scale_factor and capacity

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, init/Kconfig, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: 
	sched-Add-CONFIG_SCHED_HMP-Kconfig-option

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: nevermind i had already fixed it

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Disallow-sched_attr-sched_policy-0.

2017-03-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: missing header

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/sched/rt.h, kernel/locking/rtmutex.c,
	kernel/sched/core.c: actually im gonna test it

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/sched/rt.h, kernel/locking/rtmutex.c,
	kernel/sched/core.c: 
	Revert-sched-Consider-pi-boosting-in-setscheduler

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/locking/rtmutex.c: rtmutex nevermind that was right too

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: revert that it was already good

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: change the order of idle task detection in
	core

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/locking/rtmutex.c: rtmutex - fix deadlock detector for
	realX2

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/sched/rt.h, kernel/locking/rtmutex.c,
	kernel/sched/core.c: sched: Consider pi boosting in setscheduler()

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: REVERT - sched-Calculate max_possible_freq
	based on current policy->max

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sysctl.c: minor spacing

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/llist.h: actually fixed it

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/smp.c: fix up single_interrupt

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/smp.h, kernel/smp.c, kernel/up.c: 
	smp-Teach-__smp_call_function_single-to-check-for-offline cpus

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/smp.c: 
	smp-Iterate-functions-through-llist_for_each_entry_safe

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/smp.c: kernel-smp.c-remove-cpumask_ipi

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/smp.h, kernel/smp.c:  kernel: use lockless list for smp_call_function_single

2017-03-25  robcore <robpatershuk@gmail.com>

	* arch/Kconfig, arch/alpha/Kconfig, arch/arm/Kconfig,
	arch/arm/configs/canadefconfig, block/blk-softirq.c,
	block/blk-sysfs.c, include/linux/smp.h, kernel/Kconfig.hz,
	kernel/smp.c, kernel/softirq.c: remove generic smp helpers config
	option

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/smp.c: smp - further compress nr cpus announcement at
	bootup

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/driver.c: 
	cpuidle-poll-state-can-measure-residency.

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/governors/menu.c: 
	cpuidle-Move-perf-multiplier-calculation

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/governors/menu.c: cpuidle: Do not substract exit
	latency from assumed sleep length

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/governors/menu.c: 
	cpuidle-Ensure-menu-coefficients-stay-within-domain

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/governors/menu.c: 
	cpuidle-Use-actual-state-latency-in-menu-governor

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpuidle/governors/menu.c: cpuidle: rename expected_us to
	next_timer_us in menu governor

2017-03-25  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/hardirq.h, arch/arm/kernel/smp.c: 
	ARM-7872-1-Support-arch_irq_work_raise-via-self-IPIs

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/power/main.c, kernel/power/power.h, kernel/power/suspend.c: 
	some tiny fixups for relative states

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/llist.h: introduce llist_for_each_entry_safe
	(originally brought in for some stupid xen driver, jacked)

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/smp.h, kernel/smp.c: reverted smp for now...i gotta
	fix this shit

2017-03-25  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/smp.c, include/linux/smp.h, kernel/power/swap.c,
	kernel/smp.c, kernel/softirq.c: fixits, one breakage

2017-03-25  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/power/main.c,
	kernel/power/power.h, kernel/power/suspend.c: relative sleep states
	- convert to ksysfs interface accessible variable and disable by
	default

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: sched-dl-Fix-preemption-checks

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: sched-deadline-Fix-races

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/deadline.c: 
	-sched-rt-Fix-struct-sched_dl_entity-and-dl_task_time

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c,
	kernel/sched/sched.h: sched/deadline: Clear dl_entity params when
	setscheduling to different class

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: sched-dl-Simplify-pick_dl_task.

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: 
	sched-deadline-Don-t-replenish-from-a-SCHED_DEADLINE.

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: already applied everywhere else -
	sched-deadline - fix a precision problem in the microseconds

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/printk.h, kernel/sched/deadline.c: sched deadline -
	add printk_deferred_once

2017-03-25  robcore <robpatershuk@gmail.com>

	* include/linux/sched/deadline.h, kernel/sched/cpudeadline.c,
	kernel/sched/cpudeadline.h, kernel/sched/sched.h: 
	sched-deadline-Unify-dl_time_before-usage.

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpudeadline.c: 
	sched-deadline-Remove-cpu_active_mask-from-cpudl_find

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpudeadline.c, kernel/sched/cpudeadline.h,
	kernel/sched/deadline.c: 
	-sched-deadline-Modify-cpudl-free_cpus-to-reflect-rd

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpudeadline.h: 
	sched-deadline-Remove-unnecessary-definitions-in-header

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpudeadline.c: actually fix NR_CPUS arrays with idx
	replacement

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpudeadline.c: sched-deadline-Fix-memory-leak

2017-03-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpudeadline.c, kernel/sched/cpudeadline.h,
	kernel/sched/deadline.c: 
	sched-deadline-Fix-inter-exclusive-cpusets-migration.

2017-03-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c, drivers/cpufreq/Makefile,
	drivers/cpufreq/cpu-boost.c, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_stats.c: fixup cpufreq/boost/stats/msm

2017-03-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c: fixup my hardlimit adaptation in msm
	cpufreq

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: fix a derp

2017-03-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c, drivers/cpufreq/cpu-boost.c,
	drivers/cpufreq/cpufreq_stats.c, kernel/sched/features.h: more
	cpufreq/cpuboost/cpustats fixes, and am testing out disabling of
	TTWU_QUEUE

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: add sweet-ass helper to perform
	alloc/free of policy structure

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_stats.c,
	include/linux/cpumask.h: 
	cpufreq-Fix-misplaced-call-to-cpufreq_update_policy

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: cpu boost - lets make that shit
	freezable

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: oops that is supposed to be "sync"

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: fix my input work queue

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_stats.c: some more cpuboost/cpufreq logic
	fixing (the removal of checking for cpu_disabled in cpufreq is
	adapted from upstream), though in cpu boost i HATE HATE HATE using
	work pending :/

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: cpufreq minor cleanups

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: i knew those werent pointers for a
	reason

2017-03-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: some cpufreq tinkering, some i may keep
	some will go

2017-03-25  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, arch/arm/kernel/entry-header.S,
	arch/arm/mach-msm/acpuclock-krait.c,
	arch/arm/mach-msm/board-8064.c, arch/arm/mach-msm/board-8960.c,
	drivers/cpufreq/cpufreq.c, include/linux/module.h,
	kernel/context_tracking.c, kernel/module.c, kernel/sched/fair.c: 
	didnt even boot

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: fix a derp

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/entry-header.S, kernel/context_tracking.c: 
	arm-Fix-build-error-with-context-tracking-calls.

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/module.h, kernel/module.c: 
	module-remove-rmmod-wait-option

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: adapt to my codebase

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Reduce local_group logic

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: some config experiments

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c,
	arch/arm/mach-msm/board-8064.c, arch/arm/mach-msm/board-8960.c,
	drivers/cpufreq/cpufreq.c: cpufreq related changes, trying out
	original acpuclock-krait routines

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: k ready

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: dix ferpiness

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c: fix derpiness

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_hardlimit.c,
	drivers/cpufreq/cpufreq_stats.c, include/linux/cpufreq_hardlimit.h: 
	more fixin - brought back cpuboost but did some logicating to make
	it work more better. reverted hardlimit to previous glory.

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/cpufreq_stats.c: 
	SHIT i still had cpu stats open, also im gonna bring back cpuboost
	and revert hardlimit

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_stats.c,
	include/linux/cpufreq.h: cpufreq overhaul - use updated consistent
	naming scheme for policy/data/new_policy garbage so everything flows
	better. also fixed utilization being set improperly to cpu0s from my
	idiot past self poorly implementing imoysens cool idea

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: some cpufreq changes im not sure i
	trust

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/irq/handle.c: unexport no_action, i think irqreturn_ts have
	to be handled from a header def

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: cpufreq: Dont pass CPU to
	cpufreq_add_dev_{symlink|interface}()

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_stats.c: 
	cpufreq-Fix-misplaced-call-to-cpufreq_update_policy

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: fuck it for now

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: cpufreq -
	reorder policy macro slightly (to match a previous commit that with
	my luck was probably fucking reverted but whatever) and add get
	governor kobject

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq-cpu0.c: bs

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: another derp

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: write_UNlock

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/preempt_mask.h, include/linux/rwlock_api_smp.h,
	include/linux/spinlock_api_smp.h, include/linux/spinlock_api_up.h,
	kernel/softirq.c: REVERT TEMPORARILY - optimize-locking-again

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/bottom_half.h, include/linux/hardirq.h,
	include/linux/preempt_mask.h, kernel/softirq.c: REVERT TEMPORARILY -
	sched-preempt-locking-Rework-local_bh_-dis-en-able

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/x86/kernel/traps.c, include/linux/hardirq.h,
	include/linux/preempt.h, include/linux/uaccess.h,
	kernel/context_tracking.c, kernel/sched/core.c, kernel/softirq.c: 
	revert that

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/x86/kernel/traps.c, include/linux/hardirq.h,
	include/linux/preempt.h, include/linux/uaccess.h,
	kernel/context_tracking.c, kernel/sched/core.c, kernel/softirq.c: 
	goddamn little prereqs everywhere!

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: cpufreq - convert the
	cpufreq_driver_lock to a rwlock

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/irq/handle.c: genirq-Export-symbol-no_action

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/kernel.h, kernel/module.c, kernel/panic.c: 
	Rename-TAINT_UNSAFE_SMP-to-TAINT_CPU_OUT_OF_SPEC

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/hrtimer.c, kernel/sched/core.c,
	kernel/timer.c: timer: Remove code redundancy while calling
	get_nohz_timer_target()

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/timer.c: timer-Use-variable-head-instead-of-work_list

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/irq/proc.c: genirq: procfs: Make smp_affinity values go+r

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/softirq.c:  softirq: Add linux/irq.h to make it compile again

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/manage.c: reverted

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/manage.c: this wont work

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/clock.c: 
	sched-clock-Prevent-tracing-recursion-in-sched_clock.

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/misc/sgi-xp/xpc_uv.c, include/linux/gfp.h,
	include/linux/mmzone.h, include/linux/slab.h, kernel/profile.c,
	mm/migrate.c: mm: fix GFP_THISNODE callers

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/auditfilter.c, kernel/auditsc.c: 
	audit-Use-more-current-logging-style-again

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/compat.h, kernel/compat.c, mm/process_vm_access.c: 
	mm-compat-convert-to-COMPAT_SYSCALL_DEFINE

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/compat.h, include/linux/kexec.h, kernel/kexec.c: 
	kexec-compat-convert-to-COMPAT_SYSCALL_DEFINE

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/compat.c, kernel/ptrace.c: 
	kernel-compat-convert-to-COMPAT_SYSCALL_DEFINE

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/kernel_stat.h, kernel/irq/internals.h: 
	genirq-Move-kstat_incr_irqs_this_cpu-to-core.

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/kernel_stat.h, kernel/irq/irqdesc.c: genirq: Add a
	kstat helper to increment irq stats

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/timer.c: timer: Make sure TIMER_FLAG_MASK bits are free in
	allocated base

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/timer.c: timer: Check failure of timer_cpu_notify() before
	calling init_timer_stats()

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping_debug.c: 
	kernel-Include-appropriate-header-file-in-timekeeping debug

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: cpuset-fix-a-locking-issue-in-cpuset_migrate_mm

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/ioport.h, kernel/resource.c: resource: Add
	resource_contains()

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/timer.c: timers-Make-internal_add_timer-update-next_timer

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/timer.c: 
	timers-Reduce-future-__run_timers-latency-for-first

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/timer.c: timers-Reduce-future-__run_timers-latency

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/timer.c: 
	-timers-Reduce-__run_timers-latency-for-empty-list.

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/timer.c: timers - track total number of timers in list

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/time/ntp.c: -ntp-Convert-simple_strtol-to-kstrtol

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/bottom_half.h, include/linux/hardirq.h,
	include/linux/preempt_mask.h, kernel/softirq.c: sched/preempt,
	locking: Rework local_bh_{dis,en}able()

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/preempt_mask.h, include/linux/rwlock_api_smp.h,
	include/linux/spinlock_api_smp.h, include/linux/spinlock_api_up.h,
	kernel/softirq.c: optimize locking again

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/preempt_mask.h, include/linux/rwlock_api_smp.h,
	include/linux/spinlock_api_smp.h, include/linux/spinlock_api_up.h,
	kernel/softirq.c: revert lock bh funcs

2017-03-24  robcore <robpatershuk@gmail.com>

	* block/blk-softirq.c, drivers/cpuidle/coupled.c,
	include/linux/smp.h, kernel/sched/core.c, kernel/smp.c,
	net/core/dev.c: revert both of those

2017-03-24  robcore <robpatershuk@gmail.com>

	* block/blk-softirq.c, drivers/cpuidle/coupled.c,
	kernel/sched/core.c, net/core/dev.c: nope fuck these

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/smp.h, kernel/smp.c: smp - use lockless list

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/blackfin/kernel/kgdb.c: bs

2017-03-24  robcore <robpatershuk@gmail.com>

	* tools/perf/scripts/python/event_analyzing_sample.py: 
	perf-scripts-python-Add-event_analyzing_sample.py

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/preempt_mask.h, include/linux/rwlock_api_smp.h,
	include/linux/spinlock_api_smp.h, include/linux/spinlock_api_up.h,
	kernel/softirq.c: locking-Optimize-lock_bh-functions

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/time/tick-sched.c: 
	nohz-Fix-another-inconsistency-between-CONFIG_NO_HZ

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/locking/lockdep.c: 
	lockdep-Be-nice-about-building-from-userspace

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: dox

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: TEST -
	workqueue-swap-set_cpus_allowed_ptr-and-PF_NO_SETAFFINITY

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/up.c: 
	kernel-provide-a-__smp_call_function_single-stub-for-up

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/Kconfig: removed another useless config option

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/Kconfig: get rid
	of unneeded CONFIG vals

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: i will get this...so far it just
	panics tho

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_cafactive.c: adapted cafactive and hacked in
	a dummy have_governor_per_policy function

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c, drivers/cpufreq/cpufreq_gov_msm.c,
	kernel/cpu.c, kernel/panic.c: bring back some of the good stuff from
	the failure (namely francos newer ws idea and a bunch of my doubled
	bullshit

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: power main - remove doubled pm_put

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/process.c, drivers/base/core.c,
	drivers/base/memory.c, drivers/base/power/main.c,
	drivers/base/power/sysfs.c, drivers/base/power/wakeup.c,
	drivers/base/regmap/regmap-debugfs.c, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_gov_msm.c, drivers/pnp/pnpbios/bioscalls.c,
	drivers/video/msm/mipi_samsung_octa.c,
	drivers/video/msm/smart_mtp_se6e8fa.c, include/linux/pm.h,
	include/linux/pm_runtime.h, include/linux/sched.h,
	include/linux/sched/prio.h, include/linux/sched/rt.h,
	include/linux/smp.h, include/linux/suspend.h,
	include/trace/events/power.h, include/uapi/asm-generic/unistd.h,
	init/main.c, kernel/context_tracking.c, kernel/cpu.c,
	kernel/fork.c, kernel/hrtimer.c, kernel/hung_task.c,
	kernel/kallsyms.c, kernel/kexec.c, kernel/ksysfs.c,
	kernel/locking/lockdep.c, kernel/locking/rtmutex.c, kernel/panic.c,
	kernel/power/hibernate.c, kernel/power/main.c,
	kernel/power/power.h, kernel/power/snapshot.c,
	kernel/power/suspend.c, kernel/power/suspend_test.c,
	kernel/power/swap.c, kernel/printk/printk.c, kernel/profile.c,
	kernel/rcu/torture.c, kernel/sched/auto_group.c,
	kernel/sched/clock.c, kernel/sched/core.c, kernel/sched/deadline.c,
	kernel/sched/debug.c, kernel/sched/fair.c,
	kernel/sched/idle_task.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sched/stats.c, kernel/sched/stop_task.c, kernel/signal.c,
	kernel/softirq.c, kernel/stop_machine.c, kernel/sys.c,
	kernel/time/timekeeping.c, kernel/timer.c, kernel/trace/trace.h,
	kernel/user.c, kernel/user_namespace.c, kernel/workqueue.c,
	lib/dump_stack.c, refMar24.txt: possed

2017-03-24  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-03-24  robcore <robpatershuk@gmail.com>

	* Documentation/DocBook/kernel-hacking.tmpl, kernel/sched/core.c: 
	REVERT - sched-remove-sleep_on-and-friends

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fix my update_rq_runnable_avg for real

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mipi_samsung_octa.c,
	drivers/video/msm/smart_mtp_se6e8fa.c: fix my update_rq_runnable_avg

2017-03-24  robcore <robpatershuk@gmail.com>

	* block/blk-iopoll.c, crypto/chainiv.c,
	drivers/base/power/domain.c, drivers/block/mtip32xx/mtip32xx.c,
	drivers/cpuidle/coupled.c, drivers/firewire/ohci.c,
	drivers/md/bcache/bcache.h, drivers/md/bcache/closure.h,
	drivers/md/dm-bufio.c, drivers/md/dm-snap.c, drivers/md/dm.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_sp.c,
	drivers/net/ethernet/broadcom/cnic.c,
	drivers/net/ethernet/brocade/bna/bnad.c,
	drivers/net/ethernet/chelsio/cxgb/cxgb2.c,
	drivers/net/ethernet/chelsio/cxgb3/sge.c,
	drivers/net/ethernet/chelsio/cxgb4/sge.c,
	drivers/net/ethernet/chelsio/cxgb4vf/sge.c,
	drivers/net/ethernet/intel/ixgbe/ixgbe_main.c,
	drivers/pci/xen-pcifront.c, drivers/scsi/isci/remote_device.c,
	drivers/target/loopback/tcm_loop.c,
	drivers/target/target_core_alua.c,
	drivers/target/target_core_device.c,
	drivers/target/target_core_iblock.c,
	drivers/target/target_core_pr.c,
	drivers/target/target_core_transport.c,
	drivers/target/target_core_ua.c, drivers/usb/serial/usb_wwan.c,
	drivers/w1/w1_family.c, drivers/xen/xen-pciback/pciback_ops.c,
	fs/btrfs/extent_io.c, fs/btrfs/inode.c, fs/buffer.c,
	fs/ext4/resize.c, fs/gfs2/glock.c, fs/gfs2/glops.c,
	fs/gfs2/lock_dlm.c, fs/gfs2/recovery.c, fs/gfs2/sys.c,
	fs/jbd2/commit.c, fs/nfs/dir.c, fs/nfs/nfs4state.c,
	fs/nfs/pagelist.c, fs/nfs/pnfs.c, fs/nfs/pnfs.h, fs/nfs/write.c,
	fs/ubifs/lpt_commit.c, fs/ubifs/tnc_commit.c,
	include/asm-generic/atomic.h, include/asm-generic/barrier.h,
	include/asm-generic/bitops.h, include/asm-generic/bitops/atomic.h,
	include/asm-generic/bitops/lock.h, include/linux/atomic.h,
	include/linux/bitops.h, include/linux/buffer_head.h,
	include/linux/genhd.h, include/linux/interrupt.h,
	include/linux/netdevice.h, include/linux/sched.h,
	include/linux/sunrpc/sched.h, include/linux/sunrpc/xprt.h,
	include/linux/tracehook.h, kernel/debug/debug_core.c,
	kernel/futex.c, kernel/kmod.c, kernel/rcu/tree.c,
	kernel/rcu/tree_plugin.h, kernel/sched/core.c,
	kernel/sched/cpupri.c, kernel/sched/wait.c, mm/backing-dev.c,
	mm/filemap.c, net/core/dev.c, net/core/link_watch.c,
	net/ipv4/inetpeer.c, net/netfilter/nf_conntrack_core.c,
	net/rds/ib_recv.c, net/rds/iw_recv.c, net/rds/send.c,
	net/rds/tcp_send.c, net/sunrpc/auth.c,
	net/sunrpc/auth_gss/auth_gss.c, net/sunrpc/xprt.c,
	net/sunrpc/xprtsock.c, net/unix/af_unix.c, sound/pci/bt87x.c: 
	reverted both of those for now

2017-03-24  robcore <robpatershuk@gmail.com>

	* block/blk-iopoll.c, crypto/chainiv.c,
	drivers/base/power/domain.c, drivers/block/mtip32xx/mtip32xx.c,
	drivers/cpuidle/coupled.c, drivers/firewire/ohci.c,
	drivers/md/bcache/bcache.h, drivers/md/bcache/closure.h,
	drivers/md/dm-bufio.c, drivers/md/dm-snap.c, drivers/md/dm.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c,
	drivers/net/ethernet/broadcom/bnx2x/bnx2x_sp.c,
	drivers/net/ethernet/broadcom/cnic.c,
	drivers/net/ethernet/brocade/bna/bnad.c,
	drivers/net/ethernet/chelsio/cxgb/cxgb2.c,
	drivers/net/ethernet/chelsio/cxgb3/sge.c,
	drivers/net/ethernet/chelsio/cxgb4/sge.c,
	drivers/net/ethernet/chelsio/cxgb4vf/sge.c,
	drivers/net/ethernet/intel/ixgbe/ixgbe_main.c,
	drivers/pci/xen-pcifront.c, drivers/scsi/isci/remote_device.c,
	drivers/target/loopback/tcm_loop.c,
	drivers/target/target_core_alua.c,
	drivers/target/target_core_device.c,
	drivers/target/target_core_iblock.c,
	drivers/target/target_core_pr.c,
	drivers/target/target_core_transport.c,
	drivers/target/target_core_ua.c, drivers/usb/serial/usb_wwan.c,
	drivers/w1/w1_family.c, drivers/xen/xen-pciback/pciback_ops.c,
	fs/btrfs/extent_io.c, fs/btrfs/inode.c, fs/buffer.c,
	fs/ext4/resize.c, fs/gfs2/glock.c, fs/gfs2/glops.c,
	fs/gfs2/lock_dlm.c, fs/gfs2/recovery.c, fs/gfs2/sys.c,
	fs/jbd2/commit.c, fs/nfs/dir.c, fs/nfs/nfs4state.c,
	fs/nfs/pagelist.c, fs/nfs/pnfs.c, fs/nfs/pnfs.h, fs/nfs/write.c,
	fs/ubifs/lpt_commit.c, fs/ubifs/tnc_commit.c,
	include/asm-generic/bitops/atomic.h,
	include/asm-generic/bitops/lock.h, include/linux/buffer_head.h,
	include/linux/genhd.h, include/linux/interrupt.h,
	include/linux/netdevice.h, include/linux/sched.h,
	include/linux/sunrpc/sched.h, include/linux/sunrpc/xprt.h,
	include/linux/tracehook.h, kernel/debug/debug_core.c,
	kernel/futex.c, kernel/kmod.c, kernel/rcu/tree.c,
	kernel/rcu/tree_plugin.h, kernel/sched/cpupri.c,
	kernel/sched/wait.c, mm/backing-dev.c, mm/filemap.c,
	net/core/dev.c, net/core/link_watch.c, net/ipv4/inetpeer.c,
	net/netfilter/nf_conntrack_core.c, net/rds/ib_recv.c,
	net/rds/iw_recv.c, net/rds/send.c, net/rds/tcp_send.c,
	net/sunrpc/auth.c, net/sunrpc/auth_gss/auth_gss.c,
	net/sunrpc/xprt.c, net/sunrpc/xprtsock.c, net/unix/af_unix.c,
	sound/pci/bt87x.c: oops not ready

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/asm-generic/atomic.h, include/asm-generic/barrier.h,
	include/asm-generic/bitops.h, include/linux/atomic.h,
	include/linux/bitops.h, kernel/sched/core.c: 
	-arch-Prepare-for-smp_mb__-before-after-_atomic

2017-03-24  robcore <robpatershuk@gmail.com>

	* Documentation/DocBook/kernel-hacking.tmpl, kernel/sched/core.c: 
	sched-remove-sleep_on-and-friends

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	sched-Revert-commit-4c6c4e38c4e9-sched-core-Fix-endless blah blah

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c, kernel/sched/sched.h: 
	sched-rt-Substract-number-of-tasks-of-throttled-queue

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: sched-rt-Add-accessors-rq_of_rt_se.

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: 
	sched-rt-Sum-number-of-all-children-tasks-in-hierarchy

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: 
	-sched-rt-Do-not-try-to-push-tasks-if-pinned-task-switched

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Make-scale_rt_power-deal-with-backward-clocks

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c, kernel/sched/fair.c, kernel/sched/rt.c: 
	sched-Check-for-stop-task-appearance-when-balancing

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/hung_task.c, kernel/kexec.c, kernel/profile.c,
	kernel/sched/stats.c, kernel/user.c, kernel/user_namespace.c: 
	kernel: audit/fix non-modular users of module_init in core code

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/hrtimer.c, kernel/sched/core.c,
	kernel/timer.c: timer-Remove-code-redundancy-while-calling-get_nohz

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: 
	sched-Remove-needless-round-trip-nsecs-tick-conversion

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Fix-broken-setscheduler

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Fix-endless-loop-in-idle_balance

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	sched-core-Fix-endless-loop-in-pick_next_task

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/idle_task.c: 
	sched-fair-Push-down-check-for-high-priority-class

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c, kernel/sched/rt.c: 
	sched-rt-Fix-picking-RT-and-DL-tasks-from-empty-queue

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/clock.c: 
	sched-clock-Prevent-tracing-recursion-in-sched_clock.

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/rt.c,
	kernel/sched/sched.h: sched: Guarantee task priority in
	pick_next_task()

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: sched: Put rq sched_avg
	under CONFIG_FAIR_GROUP_SCHED

2017-03-24  robcore <robpatershuk@gmail.com>

	* mm/slub.c: still reverting slub commit

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/smp.h: that smp header fix too

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/process.c: maybe this is the issue, i needed to
	revert this once i found the sched fix

2017-03-24  robcore <robpatershuk@gmail.com>

	* refMar24.txt: reference

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: REVERT old commit removing
	cpufreq_update_policy from the cpufreq_cpu_callback. We have old
	stuff mang, and right now our hotplug capable cpus need all the help
	they can get

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/uapi/asm-generic/unistd.h: asm-generic: add
	sched_setattr/sched_getattr syscalls

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/rcu/torture.c, kernel/sched/auto_group.c,
	kernel/sched/core.c, kernel/sys.c, kernel/workqueue.c: finally use
	prio macros instead of hardcoded vals

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/sched/prio.h: sched-prio-Add-3-macros

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/sched/prio.h: 
	sched-prio-Use-DEFAULT_PRIO-to-define-NICE_TO_PRIO

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/power/main.c, kernel/power/power.h,
	kernel/power/suspend.c, kernel/power/suspend_test.c: 
	PM-sleep-Simplify-sleep-states-sysfs-interface-code.

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/power/swap.c: dox

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/pnp/pnpbios/bioscalls.c, init/main.c,
	kernel/context_tracking.c, kernel/locking/lockdep.c,
	kernel/power/snapshot.c, kernel/printk/printk.c,
	kernel/sched/core.c, kernel/softirq.c, lib/dump_stack.c: 
	asmlinkage-Add-explicit-__visible to more vars

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/power/hibernate.c: 
	PM-hibernate-no-kernel_power_off-when-pm_power_off

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/power/hibernate.c: 
	PM-hibernate-use-unsigned-local-variables-in-swsusp

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/fork.c, kernel/kallsyms.c, kernel/kexec.c,
	kernel/ksysfs.c, kernel/power/power.h, kernel/power/snapshot.c,
	kernel/power/suspend.c, kernel/power/swap.c, kernel/sched/clock.c,
	kernel/sched/core.c, kernel/signal.c, kernel/time/timekeeping.c,
	kernel/trace/trace.h: longshot - kernel: use macros from compiler.h
	instead of __attribute__((...))

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/power/snapshot.c: hibernate - spelling fix

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/power/hibernate.c: 
	PM-hibernate-use-name_to_dev_t-to-parse-resume

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: that pm_runtime_enable in the callback
	is also no longer necessary because it is called from the
	resume_early function

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/power/snapshot.c: kernel/power/snapshot.c: use memblock
	apis for early memory allocations

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: pm_runtime_put was never supposed to be
	called from legacy suspends callback

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: comment pm_print_active_wakeup_sources
	in main.c out for now

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/linux/pm.h,
	kernel/power/suspend.c: revert some problematic power commits, keep
	some

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/trace/events/power.h: REVERT -
	pm callback tracing fuckit

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: base power main: fixup some more of my
	pmruntime/getputs, also streamline some of the callback gotos given
	that !callback and callback are both tested for anyway, so some of
	the gotos were superfluous

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/trace/events/power.h: PM /
	sleep: trace events for device PM callbacks

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, drivers/base/power/wakeup.c: wakeup -
	fix my wakeup implementation so freeze_wake is called regardless
	upon the activation of a (valid, mind you) wakeup source after the
	potential waitqueue finishes

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: consistently check for the presence
	of a wakeup source, applied to device_wakeup_disable

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: PM / sleep: Handle failures in
	device_suspend_late() consistently

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/linux/pm.h,
	kernel/power/suspend.c: PM / sleep: Export dpm_suspend_late/noirq()
	and dpm_resume_early/noirq()

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: hopefully fixed my pm_runtime imbalance

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: leaving that out for now gotsta do some
	stuff and things

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_gov_msm.c: so upon looking at it with
	fresh eyes, my dcvs hack accomplished literally the exact opposite
	of what was intended.

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: power main: fix missing async error
	assignment

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: remove unused goto

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, drivers/base/power/wakeup.c,
	include/linux/pm.h, include/linux/pm_runtime.h,
	include/linux/suspend.h: PM / sleep: Mechanism to avoid resuming
	runtime-suspended devices unnecessarily

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/linux/pm.h: 
	PM-sleep-Two-flags-for-async-suspend_noirq-and-suspend

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, drivers/base/power/wakeup.c: drivers:
	wakeup: more thoroughly deactivation of wakelocks. Thanks
	@franciscofranco ->TODO(for me I mean lol): create a sysfs entry,
	similiar to the wakelock implementation that allows for on-the-fly
	disabling of wakeup sources that match anything on the wakelock
	list...probably with hooks in the wakelock wrapper.

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: fix goddamn "patch" placing this one in
	the wrong function

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: PM-Runtime-Fix-error-path-for-prepare

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/trace/events/power.h: PM /
	Sleep: new trace event to print device suspend and resume times

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, drivers/base/memory.c,
	drivers/base/power/sysfs.c, drivers/base/regmap/regmap-debugfs.c: 
	driver-core-replace-strict_strto-with-kstrtoul

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/stop_machine.c: dox

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/stop_machine.c: 
	stop_machine-Fix-2-race-between-stop_two_cpus

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/panic.c: remove doubled local irq disable from panic.c

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/auto_group.c, kernel/sched/core.c: REVERT -
	sched-Replace-hardcoding-of-20-and-19-with-MIN_NICE (thought I had
	the prio commit taken care of?)

2017-03-24  robcore <robpatershuk@gmail.com>

	* block/blk-softirq.c, drivers/cpuidle/coupled.c,
	include/linux/smp.h, kernel/sched/core.c, kernel/smp.c,
	net/core/dev.c: thus reverted

2017-03-24  robcore <robpatershuk@gmail.com>

	* block/blk-softirq.c, drivers/cpuidle/coupled.c,
	include/linux/smp.h, kernel/sched/core.c, kernel/smp.c,
	net/core/dev.c: looks like this was reverted soon after

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-nohz-Exclude-isolated-cores-from-load-balancing

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: dox

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/auto_group.c, kernel/sched/core.c: 
	sched-Replace-hardcoding-of-20-and-19-with-MIN_NICE

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/rt.c: sched/rt: Make init_sched_rt_class() __init

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched/rt: Remove
	leaf_rt_rq_list from struct rq

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/sched/rt.h, kernel/locking/rtmutex.c,
	kernel/sched/core.c: sched: Consider pi boosting in setscheduler()

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Adjust p->sched_reset_on_fork when
	nothing else changes

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Check for idle task in might_sleep()

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Init-idle-on_rq-in-init_idle.

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c, kernel/sched/idle_task.c,
	kernel/sched/rt.c, kernel/sched/sched.h: 
	sched-Remove-some-ifdeffery.

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c,
	kernel/sched/fair.c, kernel/sched/idle_task.c, kernel/sched/rt.c,
	kernel/sched/sched.h, kernel/sched/stop_task.c: 
	sched-Fix-hotplug-task-migration

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h: sched/fair: Remove
	idle_balance() declaration in sched.h

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Reset se-depth when task switched
	to FAIR

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-numa-add-cond_resched-to-task_numa_work

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c, kernel/sched/core.c, kernel/sched/deadline.c,
	kernel/sched/debug.c, kernel/sched/fair.c,
	kernel/sched/idle_task.c, kernel/sched/rt.c, kernel/sched/sched.h,
	mm/slub.c: bring all the suspects of the lockup back, found a few
	commits later what the issue is

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c,
	kernel/sched/debug.c, kernel/sched/fair.c,
	kernel/sched/idle_task.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	REVERT - the three problematic sched commits until i found out how
	to resolve this

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/linux/pm.h: hooooold up on
	those pm sleep changes for now, will have a look into it

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: PM / sleep: Asynchronous threads for
	resume_early

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: PM / sleep: Asynchronous threads for
	resume_noirq (we had some of it already)

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: REVERT - Disable-HOTPLUG-TRACE-in-kernel-cpu.c

2017-03-24  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c: REVERT -
	sysfs-create-bin_attributes-under-the-requested-group

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h: fixup doubled def

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h: rcu: Define rcu_assign_pointer() in
	terms of smp_store_release()

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h: there it is -> rcu: Add an
	RCU_INITIALIZER for global RCU-protected pointers

2017-03-24  robcore <robpatershuk@gmail.com>

	* scripts/package/Makefile: 
	scripts-package-Makefile-compare-objtree-with-srctree

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/linux/pm.h: PM / sleep: Two
	flags for async suspend_noirq and suspend_late - Rob note: adjusted
	for our updated franken-framework

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/irq/manage.c: dox

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/interrupt.h, kernel/irq/handle.c,
	kernel/irq/internals.h, kernel/irq/manage.c: 
	genirq-Provide-irq_wake_thread

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/hardirq.h, kernel/irq/manage.c: genirq: Provide
	synchronize_hardirq()

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h: REVERT - rcupdate commit - gotta do a
	little backtracing

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: sync my idle.c with my previous one

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/spi/Kconfig, drivers/spi/Makefile, drivers/spi/spi-qup.c: 
	spi -add updated QUP SPI driver

2017-03-24  robcore <robpatershuk@gmail.com>

	* Documentation/devicetree/bindings/spi/qcom,spi-qup.txt: dox

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/user_namespace.c: dox

2017-03-24  robcore <robpatershuk@gmail.com>

	* mm/slab.c: dox

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h: 
	workqueue-Remove-deprecated-__cancel_delayed_work.

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: 
	workqueue-ensure-task-is-valid-across-kthread_stop

2017-03-24  robcore <robpatershuk@gmail.com>

	* fs/ext4/move_extent.c: 
	ext4-remove-an-unneeded-check-in-mext_page_mkuptodate

2017-03-24  robcore <robpatershuk@gmail.com>

	* fs/ext4/super.c: ext4-Add-__init-marking-to-init_inodecache

2017-03-24  robcore <robpatershuk@gmail.com>

	* fs/file.c: fs-Substitute-rcu_access_pointer-for-rcu_dereference;

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: rcu-Disambiguate-CONFIG_RCU_NOCB_CPUs

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h: rcu: Define rcu_assign_pointer() in
	terms of smp_store_release()

2017-03-24  robcore <robpatershuk@gmail.com>

	* scripts/genksyms/keywords.gperf,
	scripts/genksyms/keywords.hash.c_shipped, scripts/genksyms/lex.l,
	scripts/genksyms/lex.lex.c_shipped,
	scripts/genksyms/parse.tab.c_shipped,
	scripts/genksyms/parse.tab.h_shipped, scripts/genksyms/parse.y: 
	genksyms-fix-typeof-handling

2017-03-24  robcore <robpatershuk@gmail.com>

	* Makefile, scripts/mkmakefile: 
	kbuild-support-simultaneous-make-config-and-make-all

2017-03-24  robcore <robpatershuk@gmail.com>

	* tools/lib/lockdep/lockdep: 
	liblockdep-Add-the-lockdep-user-space-utility

2017-03-24  robcore <robpatershuk@gmail.com>

	* tools/lib/lockdep/Makefile, tools/lib/lockdep/common.c,
	tools/lib/lockdep/lockdep.c, tools/lib/lockdep/lockdep_internals.h,
	tools/lib/lockdep/lockdep_states.h, tools/lib/lockdep/rbtree.c,
	tools/lib/lockdep/uinclude/asm/hweight.h,
	tools/lib/lockdep/uinclude/asm/sections.h,
	tools/lib/lockdep/uinclude/linux/bitops.h,
	tools/lib/lockdep/uinclude/linux/compiler.h,
	tools/lib/lockdep/uinclude/linux/debug_locks.h,
	tools/lib/lockdep/uinclude/linux/delay.h,
	tools/lib/lockdep/uinclude/linux/export.h,
	tools/lib/lockdep/uinclude/linux/ftrace.h,
	tools/lib/lockdep/uinclude/linux/gfp.h,
	tools/lib/lockdep/uinclude/linux/hardirq.h,
	tools/lib/lockdep/uinclude/linux/hash.h,
	tools/lib/lockdep/uinclude/linux/interrupt.h,
	tools/lib/lockdep/uinclude/linux/irqflags.h,
	tools/lib/lockdep/uinclude/linux/kallsyms.h,
	tools/lib/lockdep/uinclude/linux/kern_levels.h,
	tools/lib/lockdep/uinclude/linux/kernel.h,
	tools/lib/lockdep/uinclude/linux/kmemcheck.h,
	tools/lib/lockdep/uinclude/linux/linkage.h,
	tools/lib/lockdep/uinclude/linux/list.h,
	tools/lib/lockdep/uinclude/linux/lockdep.h,
	tools/lib/lockdep/uinclude/linux/module.h,
	tools/lib/lockdep/uinclude/linux/mutex.h,
	tools/lib/lockdep/uinclude/linux/poison.h,
	tools/lib/lockdep/uinclude/linux/prefetch.h,
	tools/lib/lockdep/uinclude/linux/proc_fs.h,
	tools/lib/lockdep/uinclude/linux/rbtree.h,
	tools/lib/lockdep/uinclude/linux/rbtree_augmented.h,
	tools/lib/lockdep/uinclude/linux/rcu.h,
	tools/lib/lockdep/uinclude/linux/seq_file.h,
	tools/lib/lockdep/uinclude/linux/spinlock.h,
	tools/lib/lockdep/uinclude/linux/stacktrace.h,
	tools/lib/lockdep/uinclude/linux/stringify.h,
	tools/lib/lockdep/uinclude/linux/types.h,
	tools/lib/lockdep/uinclude/trace/events/lock.h: 
	liblockdep-Wrap-kernel-locking-lockdep.c

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/arm/Makefile, arch/arm/boot/Makefile,
	arch/arm/boot/install.sh: 
	arm-kbuild-make-make-install-not-depend-on-vmlinux

2017-03-24  robcore <robpatershuk@gmail.com>

	* scripts/gen_initramfs_list.sh, usr/Makefile: 
	initramfs-read-CONFIG_RD_-variables-for-initramfs

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, scripts/Makefile.headersinst,
	scripts/headers_install.sh: kbuild: fix make headers_install when
	path is too long

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/rculist.h, include/linux/rcupdate.h: rcu:
	Indentation and spacing fixes.

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h: vr

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/rcu/torture.c, kernel/rcu/tree.c: 
	rcu-Remove-ACCESS_ONCE-from-jiffies

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, include/linux/rcutiny.h,
	include/linux/rcutree.h, include/linux/srcu.h, kernel/rcu/rcu.h,
	kernel/rcu/srcu.c, kernel/rcu/tiny.c, kernel/rcu/tiny_plugin.h,
	kernel/rcu/torture.c, kernel/rcu/tree.h, kernel/rcu/tree_plugin.h,
	kernel/rcu/update.c: rcu-Stop-tracking-FSF-s-postal-address.

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu-Add-ACCESS_ONCE-to-n_force_qs_lh-accesses.

2017-03-24  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c: 
	sysfs-create-bin_attributes-under-the-requested-group

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/char/mem.c: dev-mem-handle-out-of-bounds-read-write

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/tty.h: tty-Fix-ref-counting-for-port-krefs

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/misc/lkdtm.c: lkdtm - pr_foo

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/time/Kconfig: dox

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, mm/mmu_context.c: 
	sched-mm-call-finish_arch_post_lock_switch-in-idl

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/smp.h: revert smp sparse fix

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/timer.c: timer: Spare IPI when deferrable timer is queued
	on idle remote targets

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/workqueue.h: workqueue: add args to workqueue
	lockdep name

2017-03-24  robcore <robpatershuk@gmail.com>

	* scripts/mod/modpost.c: Kbuild, lto: Handle basic LTO in modpost

2017-03-24  robcore <robpatershuk@gmail.com>

	* scripts/Makefile.build: Kbuild-lto-Disable-LTO-for-asm-offsets.c

2017-03-24  robcore <robpatershuk@gmail.com>

	* scripts/gcc-ld: 
	Kbuild-lto-Add-a-gcc-ld-script-to-let-run-gcc-as-ld.

2017-03-24  robcore <robpatershuk@gmail.com>

	* scripts/Kbuild.include, scripts/ld-version.sh: 
	Kbuild-lto-add-ld-version-and-ld-ifversion-macros.

2017-03-24  robcore <robpatershuk@gmail.com>

	* scripts/mod/modpost.c, scripts/mod/modpost.h: Kbuild, lto: Drop
	.number postfixes in modpost

2017-03-24  robcore <robpatershuk@gmail.com>

	* scripts/mod/modpost.c: Kbuild, lto, workaround: Dont warn for
	initcall_reference in modpost

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/Makefile: lto-Disable-LTO-for-sys_ni.

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/module.c: lto-Handle-LTO-common-symbols-in-module-loader

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/linkage.h: lto-Make-asmlinkage-__visible

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_irqsoff.c: 
	asmlinkage-Make-trace_hardirqs_on-off_caller-visible;

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/panic.c, lib/string.c: 
	asmlinkage-Make-__stack_chk_failed-and-memcmp-visible

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/locking/rwsem-xadd.c: 
	asmlinkage-Mark-rwsem-functions-visble

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/extable.c: asmlinkage-Make-main_extable_sort_needed-visible

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex.c: asmlinkage-mutex-Mark-__visible

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/locking/lockdep.c: asmlinkage-Make-trace_hardirq-visible

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/lockdep.h, kernel/locking/lockdep.c: 
	asmlinkage-Make-lockdep_sys_exit-visible

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/pnp/pnpbios/bioscalls.c: 
	asmlinkage-pnp-Make-variables-used-from-assembler-visble

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/x86/kernel/time.c, kernel/timer.c: 
	asmlinkage-Make-jiffies-visible

2017-03-24  robcore <robpatershuk@gmail.com>

	* virt/kvm/kvm_main.c: asmlinkage-kvm-Make-kvm_rebooting-visible.

2017-03-24  robcore <robpatershuk@gmail.com>

	* include/linux/io.h: asmlinkage-Make-__iowrite32_copy-visible

2017-03-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-versatile/core.c, drivers/irqchip/irq-vic.c,
	include/linux/irqchip/arm-vic.h: irqchip-support-cascaded-VICs

2017-03-24  robcore <robpatershuk@gmail.com>

	* drivers/irqchip/irq-vic.c: 
	irqchip-vic-update-the-base-IRQ-member-correctly.

2017-03-24  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: fixup my missing cpu cast

2017-03-23  robcore <robpatershuk@gmail.com>

	* mm/slub.c: revert slub commit too

2017-03-23  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/process.c: bring back "redundant" cpu idle call
	due to a panic

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: fix up my idle.c

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/base/devres.c, include/linux/device.h: REVERT (till i find
	the devm_kmalloc commit) - dvm_kstrdup

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle.c: right dont need that

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/timed_output.h: staging: android:
	timed_output: fix a checkpatch warning

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/base/devres.c, include/linux/device.h: devres: introduce
	API "devm_kstrdup"

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/video/cfbcopyarea.c: framebuffer-fix-cfb_copyarea.

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/video/console/fbcon.c: fbcon: Clean up fbcon data in
	fb_info on FB_EVENT_FB_UNBIND with 0 fb

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/Makefile, kernel/cpu/Makefile, kernel/sched/Makefile,
	kernel/{cpu => sched}/idle.c: 
	sched-idle-Move-cpu-idle.c-to-sched-idle.c

2017-03-23  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/process.c: sched/idle, ARM: Remove redundant
	cpuidle_idle_call()

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/debug.c: sched - add statistic
	for newidle load balance cost

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Delete-is_same_group-outside-CONFIG_FAIR_GROUP

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c,
	kernel/sched/fair.c, kernel/sched/idle_task.c, kernel/sched/rt.c,
	kernel/sched/sched.h: sched: Push down pre_schedule() and
	idle_balance()

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/smp.h: smp.h - fix warnings about arch nonboot CPU
	calls

2017-03-23  robcore <robpatershuk@gmail.com>

	* fs/nfs/dir.c: mm-fix-page-leak-at-nfs_symlink

2017-03-23  robcore <robpatershuk@gmail.com>

	* mm/slub.c: mm-slub.c-list_lock- position fixup

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/cpufreq_hardlimit.h: oops l9ittle more

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_hardlimit.c,
	include/linux/cpufreq_hardlimit.h: hacking touchboost/wakeup boost,
	will do some proper enable/disable work in the days to come but this
	should work for now

2017-03-23  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_hardlimit.c,
	include/linux/cpufreq_hardlimit.h: cpuboost/hardlimit - due to
	suspicion that the aforementioned drivers might be causing erratic
	cpu boosting/scaling behaviour, I have restored the
	wakeup/touchboost capabilities of the hardlimit driver, and have
	taken yanks dvfs idea to the extreme of simply making the scaling
	frequency a read only attribute from here on in (we dont even use
	this for our in-app polling anymore, we use cpuinfo). Also disabled
	cpuboost driver as that is the actual suspect in our scaling
	mystery.  Here goes.

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: VEEEERY slightly adjust my
	freezing_in_progress test to use a loop instead of "for" with my
	fingers crossed that this doesnt absolutely destroy context

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/base/power/wakeup.c: we freeze quickly

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/idle_task.c: sched: Clean up idle task SMP logic

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Clean-up-the-__clear_buddies_-functions

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: fix up prev

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: REVERT that again for now

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: I think we can have task_dead(prev) now

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/deadline.c,
	kernel/sched/fair.c, kernel/sched/idle_task.c, kernel/sched/rt.c,
	kernel/sched/sched.h, kernel/sched/stop_task.c: sched: Push
	put_prev_task() into pick_next_task()

2017-03-23  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/futex.h,
	arch/arm/include/asm/pgtable-2level.h, arch/arm/mm/Kconfig,
	arch/arm/mm/mmu.c, arch/arm/mm/proc-macros.S,
	arch/arm/mm/proc-v7-2level.S: ARM: 7954/1: mm: remove remaining
	domain support from ARMv6

2017-03-23  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/spinlock.h: ARM: 7955/1: spinlock: ensure we
	have a compiler barrier before s

2017-03-23  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/Kbuild, arch/openrisc/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, arch/x86/include/asm/Kbuild,
	include/asm-generic/mcs_spinlock.h: hold up

2017-03-23  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/Kbuild, arch/openrisc/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild, arch/x86/include/asm/Kbuild,
	include/asm-generic/mcs_spinlock.h: locking/mcs: Allow architecture
	specific asm files to be used for contended case

2017-03-23  robcore <robpatershuk@gmail.com>

	* fs/ntfs/file.c, fs/sync.c, fs/xfs/xfs_file.c, include/linux/fs.h,
	mm/filemap.c: fix O_SYNC O_APPEND syncing on the wrong range on
	write

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/prio.h,
	kernel/sched/core.c, kernel/sched/cputime.c: 
	sched-Implement-task_nice-as-static-inline-function

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/asm-generic/bitops/const_hweight.h: 
	bitops-Fix-signedness-of-compile-time-hweight-implementation

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/sched/prio.h, kernel/sched/sched.h: 
	sched-Expose-some-macros-related-to-priority

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/prio.h,
	include/linux/sched/rt.h: 
	sched-Move-the-priority-specific-bits-into-a-new-header

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: sched/deadline: Skip in switched_to_dl()
	if task is current

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/mmc/card/block.c, drivers/mmc/core/mmc.c: gonna try out
	mmc commits again as a result

2017-03-23  robcore <robpatershuk@gmail.com>

	* net/netlink/genetlink.c: Ah HA! THIS was the cause! REVERT -
	genetlink-fix-family-dump-race

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/mmc/card/block.c: dang this is probably it, but REVERT -
	TEST-mmc-fix-host-release-issue-after-discard-op - i liked this ones
	promise thought

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/mmc.c: one of you broke wifi, process of
	elimination time - REVERT
	EXPERIMENT-mmc-core-mmc-DDR-mode-should-not-depend-on-UHS_DDR50

2017-03-23  robcore <robpatershuk@gmail.com>

	* quickie.sh => robstuff/quickie.sh, robstuff/sdcard_cleaner.sh: 
	added a script and moved a couple to my excess folder

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/clock.c: sched/clock: Fixup early initialization

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/vtime.h, kernel/sched/cputime.c: fixed up my vtime
	header...out of sheer luck

2017-03-23  robcore <robpatershuk@gmail.com>

	* Documentation/devicetree/bindings/iommu/arm,smmu.txt: dox

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/iommu/Kconfig, drivers/iommu/Makefile,
	drivers/iommu/arm-smmu.c: 
	iommu-arm-Add-support-for-ARM-Ltd.-System-MMU-arch

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/preempt_mask.h, include/linux/rwlock_api_smp.h,
	include/linux/spinlock_api_smp.h, include/linux/spinlock_api_up.h,
	kernel/softirq.c: REVERT - locking-Optimize-lock_bh-functions - need
	some more prereqs

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/preempt_mask.h, include/linux/rwlock_api_smp.h,
	include/linux/spinlock_api_smp.h, include/linux/spinlock_api_up.h,
	kernel/softirq.c: locking-Optimize-lock_bh-functions

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/cputime.c: cputime - add workaround for systems
	without CONFIG_VIRT_CPU_ACCOUNTING_NATIVE

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/uio/uio.c: uio-we-cannot-mmap-unaligned-page-contents.

2017-03-23  robcore <robpatershuk@gmail.com>

	* init/Kconfig: dox

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/cputime.c: 
	sched-Fix-__sched_setscheduler-nice-test.

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: TEST -
	PM-Runtime-Fix-error-path-for-prepare

2017-03-23  robcore <robpatershuk@gmail.com>

	* arch/alpha/include/asm/thread_info.h,
	arch/arm/include/asm/thread_info.h,
	arch/avr32/include/asm/thread_info.h,
	arch/blackfin/include/asm/thread_info.h,
	arch/frv/include/asm/thread_info.h,
	arch/m68k/include/asm/thread_info.h,
	arch/microblaze/include/asm/thread_info.h,
	arch/score/include/asm/thread_info.h,
	arch/um/include/asm/thread_info.h,
	arch/unicore32/include/asm/thread_info.h,
	arch/xtensa/include/asm/thread_info.h,
	include/linux/preempt_mask.h, include/linux/sched.h: preempt: Make
	PREEMPT_ACTIVE generic

2017-03-23  robcore <robpatershuk@gmail.com>

	* arch/blackfin/include/asm/hardirq.h,
	arch/m68k/include/asm/hardirq.h, include/linux/preempt_mask.h: 
	hardirqs - make them generic

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/sw_sync.c: 
	android-sw_sync-use-get_unused_fd_flags-O_CLOEXEC

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/sync.c: 
	android-sync-use-get_unused_fd_flags-O_CLOEXEC

2017-03-23  robcore <robpatershuk@gmail.com>

	* init/Kconfig: modules: do not depend on kconfig to set option to
	symbol MODULES

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/i2c/i2c-core.c: i2c: Improve logging on failure to probe
	for ->class devices

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/input/touchscreen/htcpen.c: bs

2017-03-23  robcore <robpatershuk@gmail.com>

	* lib/earlycpio.c: dox

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/usb/core/hcd.c: EXPERIMENT -
	usb-rh_call_control-tbuf-overflow-fix

2017-03-23  robcore <robpatershuk@gmail.com>

	* mm/slab_common.c: 
	mm-slab_common-add-unlikely-to-size-check-of-kmalloc.

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/cputime.c: 
	vtime-Always-debug-check-snapshot-source-_before_-up

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/context_tracking.h, include/linux/vtime.h,
	kernel/sched/cputime.c: vtime: Optimize full dynticks accounting off
	case

2017-03-23  robcore <robpatershuk@gmail.com>

	* arch/s390/include/asm/vtime.h, include/linux/vtime.h: vtime -
	describe overriden funcs in archs

2017-03-23  robcore <robpatershuk@gmail.com>

	* arch/m68k/include/asm/irqflags.h: bs

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/hardirq.h, include/linux/preempt_mask.h: 
	hardirq-Split-preempt-count-mask-definitions.

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/context_tracking.h,
	include/linux/context_tracking_state.h: 
	context_tracking-Split-low-level-state-headers

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/context_tracking.h, kernel/context_tracking.c: 
	context_tracking-Optimize-context-switch-off-cas

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/context_tracking.h, kernel/context_tracking.c,
	kernel/sched/cputime.c: context_tracking: Optimize guest APIs off
	case

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/context_tracking.h, kernel/context_tracking.c: 
	context_tracking-Optimize-main-APIs-off-case

2017-03-23  robcore <robpatershuk@gmail.com>

	* fs/hugetlbfs/inode.c: 
	-hugetlb-fix-lockdep-splat-caused-by-pmd-sharing

2017-03-23  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: memcg: dont initialize kmem-cache destroying work
	for root caches

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: revert that

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/cpuset.c: cpuset-remove-an-unncessary-forward-declaration.

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: reverted those for now
	will come back

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: ohhhhhhhhhhh

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: rename
	cgroup_subsys_state->dput_work and its callback function

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/dma/mv_xor.c: dma-mv_xor-use-NULL-instead-of-0;

2017-03-23  robcore <robpatershuk@gmail.com>

	* arch/x86/mm/ioremap.c: bs

2017-03-23  robcore <robpatershuk@gmail.com>

	* net/netlink/genetlink.c: genetlink-fix-family-dump-race

2017-03-23  robcore <robpatershuk@gmail.com>

	* mm/slub.c: mm-slub.c-beautify-code- remove redundant break

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/input/mouse/synaptics.c: 
	Input-synaptics-fix-incorrect-placement-of-__initconst

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/input/joystick/as5011.c,
	drivers/input/joystick/maplecontrol.c: 
	Input-joysticks-use-dev_get_platdata.

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/uio/uio.c: uio: drop unused vma_count member in uio_device
	struct

2017-03-23  robcore <robpatershuk@gmail.com>

	* mm/memory.c: mm: make generic_access_phys available for modules

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/context_tracking.h, kernel/context_tracking.c: 
	context_tracing-Fix-guest-accounting-with-native-vtime

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/context_tracking.h, kernel/context_tracking.c: 
	kvm-Move-guest-entry-exit-APIs-to-context_tracking

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/context_tracking.h, init/main.c,
	kernel/context_tracking.c: context_tracking: Ground setup for static
	key use

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/export.h: failed as expected

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/export.h: a few of these might not work, but this
	one in particular, export: declare ksymtab symbol

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/module.h: module-fix-coding-style

2017-03-23  robcore <robpatershuk@gmail.com>

	* include/linux/jiffies.h, kernel/sched/core.c: sched/nohz: Fix
	overflow error in scheduler_tick_max_deferment()

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/time/tick-sched.c: nohz_full: fix code style issue of
	tick_nohz_full_stop_tick

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/md/dm-snap.c: 
	dm-snapshot-use-GFP_KERNEL-when-initializing-exception

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/char/ttyprintk.c: drivers/char: dont use module_init in
	non-modular ttyprintk.c

2017-03-23  robcore <robpatershuk@gmail.com>

	* mm/slub.c: slub-Fix-possible-format-string-bug.

2017-03-23  robcore <robpatershuk@gmail.com>

	* mm/slub.c: slub-use-lockdep_assert_held

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/mmc/card/block.c: TEST - mmc: fix host release issue after
	discard operation

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/mmc/core/mmc.c: EXPERIMENT -
	mmc-core-mmc-DDR-mode-should-not-depend-on-UHS_DDR500

2017-03-23  robcore <robpatershuk@gmail.com>

	* net/ipv4/tcp.c: sched-net-Clean-up-preempt_enable_no_resched-abuse

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/clock.c: sched-clock-Fix-up-clear_sched_clock_stable.

2017-03-23  robcore <robpatershuk@gmail.com>

	* arch/x86/kernel/cpu/amd.c, arch/x86/kernel/cpu/intel.c,
	arch/x86/kernel/tsc.c, include/linux/sched.h, kernel/sched/clock.c,
	kernel/sched/debug.c, kernel/time/tick-sched.c,
	kernel/trace/ring_buffer.c: 
	sched-clock-x86-Use-a-static_key-for-sched_clock

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/clock.c: 
	sched-clock-Remove-local_irq_disable-from-the-clocks

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Reset-decay_count-when-task-is-enqueued.

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Extend-active-balance-to-accept-push_task-arg

2017-03-23  robcore <robpatershuk@gmail.com>

	* kernel/rcu/srcu.c: right id have to do a whole thing

2017-03-23  robcore <robpatershuk@gmail.com>

	* drivers/battery/max77693_charger.c: lately ive noticed a
	re-occurance of the input current remaining at high levels if booted
	whilst plugged in then removed, so im forcing the max current on
	battery/discharge to 460.  also DONT FUCKING USE MSLEEP WHILST
	HOLDING A MUTEX LOCK YOU FUCKS

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/rcu/srcu.c: srcu - whats the point of delayed works set to
	0?

2017-03-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: turn off conservative msm
	runqueue accounting by default

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c: 
	sched-Add-scaled-task-load-statistics

2017-03-22  robcore <robpatershuk@gmail.com>

	* drivers/Kconfig, kernel/ksysfs.c, kernel/sched/fair.c,
	kernel/sched/rt.c: scheduler tunables/ksysfs - no need to initialize
	the same variable twice.

2017-03-22  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/secfilter/Kconfig,
	drivers/secfilter/Makefile, drivers/secfilter/sec_filter.c,
	drivers/secfilter/sec_filter.h, drivers/secfilter/tcp_track.c,
	drivers/secfilter/tcp_track.h, drivers/secfilter/url_parser.c,
	drivers/secfilter/url_parser.h, net/netfilter/nfnetlink_queue.c: get
	rid of useless sec net filter

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, include/linux/sched.h,
	include/linux/sched/sysctl.h, include/trace/events/sched.h,
	init/Kconfig, kernel/ksysfs.c, kernel/sched/core.c,
	kernel/sched/debug.c, kernel/sched/fair.c, kernel/sched/rt.c,
	kernel/sched/sched.h, kernel/sysctl.c: possed

2017-03-22  robcore <robpatershuk@gmail.com>

	* pos.sh: gonna pos to sched-Add-scaled-task-load-statistics to try
	cool stuff

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: that too

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: just comment that out

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: revert
	that for a sec

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fucker

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: sched:
	Introduce spill threshold tunables to manage overcommitment -- i
	highly doubt this will work

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	kernel/sched/fair.c, kernel/sysctl.c:  sched/fair: Introduce scheduler boost for low latency workloads

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Avoid-active-migration-of-small-tasks

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Account-for-cpu-s-current-frequency

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: sched: make
	sched_set_window() return failure when PELT is in use

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c: 
	sched-debug-Print-additional-information-in-proc

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Move around cod

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Update-capacity-of-all-online-cpus-when-minmax-changes

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-update-task-statistics-when-CPU-frequency-changes

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/trace/events/sched.h,
	kernel/sched/core.c: sched-Add-new-trace-events

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-do-not-balance-on-exec-if-SCHED_HMP.

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c: 
	sched: Use historical load for freq governor input

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-window-stats-apply-scaling-to-full-elapsed-windows

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sysctl.c: sched-notify-cpufreq-on-over-underprovisioned-CPUs

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/trace/events/sched.h, kernel/sched/core.c: 
	tracing-sched-Track-per-cpu-rt-and-non-rt-cpu_load

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h,
	kernel/sysctl.c: sched: add migration load change notifier for
	frequency guidance (again)

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Limit-MAX_PINNED_INTERVAL

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: reverted

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: nope dont need this

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: remove my temp macro

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, kernel/sched/fair.c: 
	sched-add-hook-for-platform-specific-CPU-power-info

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/fair.c,
	kernel/sysctl.c: sched-add-power-aware-scheduling-sysctl.

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Extend update_task_ravg() to accept
	wallclock as argument

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: 
	sched-add-sched_get_busy-sched_set_window-APIs.

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-window-stats-adjust-RQ-curr-prev-sums-on-task

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched: window-stats:
	Add aggregated runqueue windowed stats

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: sched: window-stats: synchronize windows
	across cpus

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: window-stats: Do not account wait time

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-window-stats-update-during-migration

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: (again) sched: add notifier for cross-cpu migrations

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: move shit properly

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: hold up gonna do this right;

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: move efficiency functions to a logical place
	(also i am so surprsed sched_init was working)

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: temporarily ensure hmp functions are factored
	out using CONFIG macros

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched: Provide tunable to switch between PELT and window-based stats

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: reverted

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: nopers

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Reset-decay_count-when-task-is-enqueued.

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/debug.c: 
	sched-Provide-scaled-load-information-for-tasks-in-proc

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/trace/events/sched.h, kernel/sched/fair.c,
	kernel/sched/sched.h: sched-Add-additional-ftrace-events

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/ksysfs.c, kernel/sched/debug.c, kernel/sched/rt.c: 
	sched-Extend-proc-sched_debug-with-additional-info

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Improve balance_cpu() to consider
	other cpus in its group as target of (pinned) task

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched: Track number of big and small tasks on a cpu

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: fixup for migration

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched: Handle cpu-bound tasks stuck on wrong cpu

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Extend-active-balance-to-accept-push_task-arg

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Send-NOHZ-kick-to-idle-cpu-in-same-cluster.

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c:  sched: Basic task placement support for HMP systems

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Influence-cpu_power-based-on-max_freq-and-effiency

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: 
	sched-Use-rq-efficiency-in-scaling-load-stats

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched: Introduce
	efficiency, load_scale_factor and capacity

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, init/Kconfig, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: 
	sched-Add-CONFIG_SCHED_HMP-Kconfig-option

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c: 
	sched: Add scaled task load statistics

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: remove hotplug tracing in cpu.c, and ratelimit
	whenever intelliplug or thermal holds a cpu from coming up

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: Disable-HOTPLUG-TRACE-in-kernel-cpu.c

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/locking/rtmutex.c: fixup my rtmutex.c...beyond that HOLY
	SHIT ITS WORKING

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/futex.c, kernel/locking/rtmutex.c, kernel/sched/core.c: 
	well sort of got it building...this boot will not go well

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, init/Kconfig, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: reverted

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, init/Kconfig, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: fucker

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c, kernel/sched/core.c: reverted

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c, kernel/sched/core.c: hmm...nope

2017-03-22  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, include/linux/sched.h,
	include/linux/sched/sysctl.h, init/Kconfig,
	kernel/locking/rtmutex.c, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h, kernel/sysctl.c: some reversals

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/locking/rtmutex.c, kernel/sched/fair.c,
	kernel/sched/sched.h: some dumb changes

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Track-number-of-big-and-small-tasks-on-a-cpu

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	-sched-Handle-cpu-bound-tasks-stuck-on-wrong-cpu;

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Extend-active-balance-to-accept-push_task-arg

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Send-NOHZ-kick-to-idle-cpu-in-same-cluster.

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: sched:
	Basic task placement support for HMP systems

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Influence-cpu_power-based-on-max_freq-and-effiency

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: 
	sched-Use-rq-efficiency-in-scaling-load-stats.

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/sched.h: sched: Introduce
	efficiency, load_scale_factor and capacity

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, init/Kconfig, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, kernel/sysctl.c: 
	sched-Add-CONFIG_SCHED_HMP-Kconfig-option.

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/locking/rtmutex.c,
	kernel/sched/core.c, kernel/sched/fair.c: sched: Add scaled task
	load statistics

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/ksysfs.c: fuck me

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/ksysfs.c: what do you mean there is no "rt_untime"
	declared?

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c: 
	reverted

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c: 
	nevermind done it

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c: reverted

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c: this got corrupted

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Simplify-return-logic-in-sched_copy_attr

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Simplify-return-logic-in-sched_read_attr

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Fix-sched_policy-0-comparison.

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Disallow-sched_attr-sched_policy-0

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Make sched_setattr() correctly return
	-EFBIG

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/ksysfs.c: set to 0 for now

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/ksysfs.c, kernel/sched/rt.c: RT_RUNTIME_SHARE - Add a
	ksysfs toggle for rt_runtime_sharing for runtime switching

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched/rt.h, kernel/locking/rtmutex.c,
	kernel/sched/core.c: 
	Revert-sched-Consider-pi-boosting-in-setscheduler

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: 
	-sched-deadline-Delete-extraneous-extern-for-to_ratio

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: sched-dl-Fix-race-in-dl_task_timer

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/locking/rtmutex.c: better handling of
	rtmutex-Handle-deadlock-detection-smarter

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched/deadline: Restrict user params max
	value to 2^63 ns

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/locking/rtmutex.c: rtmutex-Fix-deadlock-detector-for-real

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c,
	kernel/sched/deadline.c: sched-deadline-Fix-sched_yield-behavior

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched/rt.h, kernel/locking/rtmutex.c,
	kernel/sched/core.c: sched: Consider pi boosting in setscheduler()

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/fork.c: 
	kernel-fork.c-make-dup_mm-static

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: futex-Make-lookup_pi_state-more-robust

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: futex dox

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: futex-avoid-race-between-requeue-and-wake

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: 
	futex-revert-back-to-the-explicit-waiter-counting-code

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Calculate-max_possible_freq-based-on-current-policy->max

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: reverted

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: hold off on this one for now

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/time/timekeeping.c: 
	WARN-ONCE-when-ktime_get-requested-during-suspend.

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-deadline-Deny-unprivileged-users-to-set-change

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c, kernel/sched/rt.c: 
	sched-deadline-Prevent-rt_time-growth-to-infinity

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpudeadline.c: 
	sched-deadline-Switch-CPU-s-presence-test-order

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: 
	sched-deadline-Cleanup-RT-leftovers-from-inc-dec-_dl

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c, kernel/sched/sched.h: 
	sched-deadline-Remove-useless-dl_nr_total

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpudeadline.c: 
	sched-deadline-Test-for-CPU-s-presence-explicitly

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/syscalls.h, kernel/sched/core.c: 
	sched-Add-flags-argument-to-sched_-set-get-attr-sysc

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Fix-information-leak-in-sys_sched_getattr.

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-core-Make-dl_b-lock-IRQ-safe.

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-core-Fix-sched_rt_global_validate.

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-deadline-Fix-overflow-to-handle-period-0

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: 
	sched-deadline-Fix-bad-accounting-of-nr_running

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/features.h: disable runtime sharing again

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Improve the ->group_imb logic

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-Make-sched_class-get_rr_interval-optional

2017-03-22  robcore <robpatershuk@gmail.com>

	* Documentation/scheduler/00-INDEX,
	Documentation/scheduler/sched-deadline.txt, kernel/sched/deadline.c: 
	dox

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/deadline.c: sched/deadline:
	Compatibility fixes for kernel 3.4.y @dorimanx

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/uapi/linux/sched.h, kernel/sched/core.c: sched: Move
	SCHED_RESET_ON_FORK into attr::sched_flags

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Fix-up-attr-sched_priority-warning

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Fix-up-scheduler-syscall-LTP-fails.

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	-sched-Preserve-the-nice-level-over-sched_setschedule.

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: dox

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: 
	sched-deadline-No-need-to-check-p-if-dl_se-is-valid

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched/deadline: Remove unused variables

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpudeadline.c: 
	sched-deadline-Fix-sparse-static-warnings

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched/deadline: Fix hotplug admission control

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched/sysctl.h, kernel/sched/core.c,
	kernel/sched/deadline.c, kernel/sched/sched.h, kernel/sysctl.c: 
	sched-deadline-Remove-the-sysctl_sched_dl-knobs

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	sched-deadline-Fix-up-the-smp-affinity-mask-tests

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/Makefile, kernel/sched/core.c,
	kernel/sched/cpudeadline.c, kernel/sched/cpudeadline.h,
	kernel/sched/deadline.c, kernel/sched/sched.h: sched/deadline: speed
	up SCHED_DEADLINE pushes with a push-heap

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/sysctl.h,
	kernel/sched/core.c, kernel/sched/deadline.c, kernel/sched/sched.h,
	kernel/sysctl.c: sched/deadline: Add bandwidth management for
	SCHED_DEADLINE tasks

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/rt.h, kernel/fork.c,
	kernel/locking/rtmutex.c, kernel/locking/rtmutex_common.h,
	kernel/sched/core.c, kernel/sched/deadline.c, kernel/sched/sched.h,
	kernel/trace/trace_sched_wakeup.c: 
	sched-deadline-Add-SCHED_DEADLINE-inheritance-logic

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: printk_sched has been replaced with
	printk_deferred

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: fix a formatting err

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/Makefile: ooper

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/rt.h, kernel/fork.c,
	kernel/locking/rtmutex.c, kernel/locking/rtmutex_common.h,
	kernel/sched/core.c, kernel/sched/deadline.c, kernel/sched/sched.h,
	kernel/trace/trace_sched_wakeup.c: REVERT -
	sched-deadline-Add-SCHED_DEADLINE-inheritance-logic

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/rt.h, kernel/fork.c,
	kernel/locking/rtmutex.c, kernel/locking/rtmutex_common.h,
	kernel/sched/core.c, kernel/sched/deadline.c, kernel/sched/sched.h,
	kernel/trace/trace_sched_wakeup.c: sched/deadline: Add
	SCHED_DEADLINE inheritance logic

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c,
	kernel/sched/deadline.c: 
	sched-deadline-Add-period-support-for-SCHED_DEADLINE

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: 
	sched-deadline-Add-SCHED_DEADLINE-avg_update-account

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c,
	kernel/sched/deadline.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	sched/deadline: Add SCHED_DEADLINE SMP-related data structures &
	logic

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/deadline.h,
	include/uapi/linux/sched.h, kernel/fork.c, kernel/hrtimer.c,
	kernel/sched/Makefile, kernel/sched/core.c,
	kernel/sched/deadline.c, kernel/sched/sched.h,
	kernel/sched/stop_task.c: 
	sched-deadline-Add-SCHED_DEADLINE-structures

2017-03-22  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/unistd.h,
	arch/arm/include/uapi/asm/unistd.h, arch/arm/kernel/calls.S,
	include/linux/sched.h, include/linux/syscalls.h,
	kernel/sched/core.c, kernel/sched/sched.h: 

	sched-Add-new-scheduler-syscalls-to-support-an-extended-deadline-blahblah this again

2017-03-22  robcore <robpatershuk@gmail.com>

	* mm/vmscan.c: vmscan - doubled

2017-03-22  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: expose preempt_schedule_irq again

2017-03-22  robcore <robpatershuk@gmail.com>

	* mm/vmscan.c: When kswapd is awoken due to reclaim by a running
	task, set the priority of kswapd to that of the calling task thus
	making memory reclaim cpu activity affected by nice level.
	-ck.kolivas.org

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/math64.h, init/Kconfig: (again) - add math64-Add-mul_u64_u32_shr

2017-03-22  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c: 
	sched-fair-Rework-sched_fair-time-accounting.

2017-03-22  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/Kconfig,
	drivers/staging/android/lowmemorykiller.c, include/linux/sched.h,
	kernel/sched/core.c: reverted lmk commit

2017-03-22  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/lowmemorykiller.c: fuck it

2017-03-22  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/lowmemorykiller.c: removed lowmem driver
	parts for a sec

2017-03-22  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/Kconfig,
	drivers/staging/android/lowmemorykiller.c, include/linux/sched.h,
	kernel/sched/core.c: half of android lmk: check free mem when tasks
	switch

2017-03-21  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: gonna try adaptive tuning and cpu
	idle multiple drivers

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: i think this may help fix the exit race

2017-03-21  robcore <robpatershuk@gmail.com>

	* include/linux/context_tracking.h, include/linux/vtime.h,
	kernel/sched/cputime.c: revertoooo

2017-03-21  robcore <robpatershuk@gmail.com>

	* include/linux/context_tracking.h, include/linux/vtime.h,
	kernel/sched/cputime.c: hmm no

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/cputime.c: vtime-Fix-racy-cputime-delta-update

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/cputime.c: vks

2017-03-21  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c,
	mm/memcontrol.c, security/device_cgroup.c: reverted

2017-03-21  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c,
	mm/memcontrol.c, security/device_cgroup.c: fuck i know i just have
	to fix the naming but still fuck

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/cgroup_freezer.c, kernel/sched/core.c,
	kernel/sched/cpuacct.c: cgroup naming, update the cgroup subsys
	state additions to the newer naming scheme cgroup_css

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/cgroup_freezer.c, kernel/cpuset.c, kernel/sched/core.c,
	kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c, mm/memcontrol.c,
	net/sched/cls_cgroup.c, security/device_cgroup.c: 
	cgroup-add-update-accessors-which-obtain-subsys-spec

2017-03-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/proc-arm6_7.S: one more cpuinit removal

2017-03-21  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c: 
	sched-fair-Track-cgroup-depth

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Move-rq-idle_stamp-up-to-the-core

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-Remove-cpu-parameter-from-idle_balance

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: Revert "sched: Fix sleep time double
	accounting in enqueue entity"

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Factor-out-the-on_null_domain-checks-in-trig

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Pass-struct-rq-to-nohz_idle_balance.

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Pass-struct-rq-to-rebalance_domains

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Remove-unused-parameter-from-nohz_balancer_kick

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Remove-unused-parameter-from-find_new_ilb

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Pass-struct-rq-to-on_null_domain

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Reduce-nohz_kick_needed-parameters.

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched: Reduce trigger_load_balance() parameters

2017-03-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/proc-v7.S: more CPUINIT removal

2017-03-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/headsmp.S: msm headsmp get rid of __CPUINIT

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Check-sched_domain-before-computing-group-power

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Remove unnecessary iteration over
	sched domains to update nr_busy_cpus

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: dox

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-balancing-Fix-local-avg_load-busiest-avg_load

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-balancing-Fix-local-avg_load-sds-avg_load-case

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: k...

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: nope

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Shrink-sg_lb_stats-and-play-memset-games.

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: 
	sched-Clean-up-struct-sd_lb_stat

2017-03-21  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/sched.h: 
	after the fact...fix domain iteration

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-Factor-out-code-to-should_we_balance

2017-03-21  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/binder.c: binder - apparently this fixes a
	scheduling while atomic issue

2017-03-21  robcore <robpatershuk@gmail.com>

	* drivers/usb/gadget/ci13xxx_msm_hsic.c,
	drivers/usb/host/ehci-msm-hsic.c: REVERT - hsic shit, no go

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: reverted

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: nope need should we balance fuck

2017-03-21  robcore <robpatershuk@gmail.com>

	* drivers/usb/gadget/ci13xxx_msm_hsic.c,
	drivers/usb/host/ehci-msm-hsic.c: that should do it?

2017-03-21  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: now ive fucked it

2017-03-21  robcore <robpatershuk@gmail.com>

	* drivers/usb/gadget/ci13xxx_msm_hsic.c,
	drivers/usb/host/ehci-msm-hsic.c: guess we rely heavily on this
	deprecated shitty runtime_idle for now

2017-03-21  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: reverted

2017-03-21  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: too soon, gotta do should we balance shit
	first

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched fair - a little manual cleanup

2017-03-21  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c: 
	sched-window-stats-add-prev_window-counter-per-task

2017-03-21  robcore <robpatershuk@gmail.com>

	* drivers/usb/gadget/ci13xxx_msm_hsic.c,
	drivers/usb/host/ehci-msm-hsic.c: Rob Hacking - msm hsic drivers -
	balance wakelocks, get rid of runtime idle, try out a few hacks here
	and there, ensure work is queued only on cpu0

2017-03-21  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: something selects POSIX ACL
	...hmm...

2017-03-21  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: disable posix acl

2017-03-21  robcore <robpatershuk@gmail.com>

	* init/do_mounts.c: dox

2017-03-21  robcore <robpatershuk@gmail.com>

	* scripts/mod/modpost.c: 
	scripts-mod-modpost.c-handle-non-ABS-crc-symbols (our compat change
	last time was the issue i think, so im gonna try this again)

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/module.c: get rid of scnprintf if module.c

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fixup last one

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/cleanups: Add load balance cpumask
	pointer to struct lb_env

2017-03-21  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Propagate struct lb_env usage
	into find_busiest_group

2017-03-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/fastchg.c: fix info show

2017-03-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/fastchg.c, include/linux/fastchg.h: revert
	fastchg updates for now

2017-03-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/fastchg.c: fast charge - fixup failsafe store
	logic

2017-03-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/fastchg.c: oops add my custom failsafe attrs to
	the list

2017-03-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/fastchg.c: fix up fast charge derps

2017-03-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/fastchg.c, include/linux/fastchg.h: fast charge
	2.2 - implement custom failsafe levels for each charge type.

2017-03-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/fastchg.c, include/linux/fastchg.h: fast charge
	- reminder last commit i also increased the usb max charge level.
	this round: fixed my derp in the INFO sysfs representation, and
	corrected the range value to each specific charge type for info as
	well

2017-03-20  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/kernel.txt, arch/arm/configs/canadefconfig,
	arch/arm/mach-msm/cpufreq.c, include/linux/mm_types.h,
	include/linux/sched.h, kernel/fork.c, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/features.h, kernel/sched/sched.h: 
	possed

2017-03-20  robcore <robpatershuk@gmail.com>

	* pos.sh: i have to pos just to checkout the battery commit

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-numa-Remove-check-that-skips-small-VMAs

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-numa-Reschedule-task-on-preferred-NUMA-node

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c: 
	sched-numa-Update-NUMA-hinting-faults-once-per-scan

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c: 
	sched-numa-Select-a-preferred-node

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: 
	sched-numa-Track-NUMA-hinting-faults-on-per-node-basis

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Slow-scan-rate-if-no-NUMA-hinting-fault

2017-03-20  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/kernel.txt, include/linux/sched.h,
	kernel/sched/fair.c: 
	sched-numa-Set-the-scan-rate-proportional-to-the-mem

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: 
	sched-numa-Initialise-numa_next_scan-properly

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm_types.h, kernel/fork.c, kernel/sched/fair.c,
	kernel/sched/features.h: revert mm: sched: numa: Delay PTE scanning

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-numa-Continue-PTE-scanning

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: a bit more

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: some fair cleanup

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/numa: Mitigate chance that same task
	always updates PTEs

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/balancing: Prevent the reselection of a
	previous env.dst_cpu if some tasks are pinned

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-balancing-Fix-local-avg_load-busiest-avg_load

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-balancing-Fix-local-avg_load-sds-avg_load-case

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Fix-the-group_capacity-computation.

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Rework and comment the
	group_capacity code

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-fair-Reduce-local_group-logic

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c: sched/fair: Rewrite
	group_imb trigger

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Fix-load-balancing-performance-regression-inshould_we_balance

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Rework and comment the group_imb
	code

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Make group power more consistent

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Remove duplicate load_per_task
	computations

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Shrink-sg_lb_stats-and-play-memset-games

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched -clean up struct sd_lb_stat

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Factor out code to should_we_balance()

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Prevent to re-select dst-cpu in
	load_balance()

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Dont consider other cpus in our group
	in case of NEWLY_IDLE

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched: Change position of resched_cpu() in
	load_balance()

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: fixup some of the compatibility with the
	older/newer commit model

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c: 
	Revert "sched: Improve scalability via CPU buddies"

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: dox

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/cleanups: Add load balance cpumask
	pointer to struct lb_env

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-Improve-balance_cpu-to-consider-other-cpus

2017-03-20  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c: throw intellithermal config
	conditions around msm limiting functions to remind me why we have
	them

2017-03-20  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: now i want to see if i can get
	away without sched tracing altogether again

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: i have nothing against removing traces

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c: 
	sched/fair: Revert sched-domain iteration breakage

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/fair: Propagate struct lb_env usage
	into find_busiest_group (holy shit this is an old, obvious missed
	commit)

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-numa-Fix-build-error

2017-03-20  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/fastchg.c, include/linux/fastchg.h: fast charge
	- minor formatting cleanup, as well as change the fast charge
	failsafe for AC MAINS to 1200 to be closer inline with stock values

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: reverted

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Mitigate-chance-that-same-task-always-update

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, kernel/events/core.c, kernel/sched/core.c,
	kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c, mm/memcontrol.c,
	net/sched/cls_cgroup.c, security/device_cgroup.c: possed

2017-03-20  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	mm/memcontrol.c: what the FUCK is happening?

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-relocate-cgroup_advance_iter

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/cgroup_freezer.c, mm/memcontrol.c: 
	cgroup-make-hierarchy-iterators-deal-with-cgroup_sub

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-always-use-cgroup_next_child-to-walk-the-child

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-convert-cgroup_next_sibling-to-cgroup_next

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-add-cgroup-dummy_css

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-pin-cgroup_subsys_state-when-opening-a-cgroup

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: 
	cgroup-add-subsys-backlink-pointer-to-cftype

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, kernel/events/core.c, kernel/sched/core.c,
	kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c, mm/memcontrol.c,
	security/device_cgroup.c: cgroup: pass around cgroup_subsys_state
	instead of cgroup in subsystem methods

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c,
	mm/memcontrol.c, security/device_cgroup.c: cgroup-add-css_parent

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, kernel/sched/core.c, kernel/sched/cpuacct.c,
	mm/hugetlb_cgroup.c, mm/memcontrol.c, net/sched/cls_cgroup.c,
	security/device_cgroup.c: brought those back

2017-03-20  robcore <robpatershuk@gmail.com>

	* mm/hugetlb_cgroup.c: hugetlb_cgroup-pass-around-hugetlb_cgroup

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c, kernel/cgroup_freezer.c,
	kernel/cpuset.c, kernel/sched/core.c, kernel/sched/cpuacct.c,
	mm/hugetlb_cgroup.c, mm/memcontrol.c, net/sched/cls_cgroup.c,
	security/device_cgroup.c: i see now

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, mm/memcontrol.c,
	security/device_cgroup.c: reverted

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, mm/memcontrol.c,
	security/device_cgroup.c: fuck

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup: add subsystem
	pointer to cgroup_subsys_state

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/cgroup_freezer.c, kernel/cpuset.c, kernel/sched/core.c,
	kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c, mm/memcontrol.c,
	net/sched/cls_cgroup.c, security/device_cgroup.c: 
	cgroup-add-update-accessors-which-obtain-subsys

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: reverterated

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: ohhh

2017-03-20  robcore <robpatershuk@gmail.com>

	* block/blk-cgroup.h, include/linux/cgroup.h, kernel/cgroup.c,
	kernel/cgroup_freezer.c, kernel/cpuset.c, kernel/events/core.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c,
	mm/memcontrol.c, net/sched/cls_cgroup.c, security/device_cgroup.c: 
	reverted those...fuck.

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/events/core.c, kernel/sched/core.c, kernel/sched/cpuacct.c,
	mm/hugetlb_cgroup.c, mm/memcontrol.c, net/sched/cls_cgroup.c,
	security/device_cgroup.c: i hate cgroups

2017-03-20  robcore <robpatershuk@gmail.com>

	* block/blk-cgroup.h, include/linux/cgroup.h,
	kernel/cgroup_freezer.c, kernel/cpuset.c, kernel/sched/core.c,
	kernel/sched/cpuacct.c, mm/memcontrol.c, net/sched/cls_cgroup.c,
	security/device_cgroup.c: cgroup: add css_parent()

2017-03-20  robcore <robpatershuk@gmail.com>

	* block/blk-cgroup.h, kernel/cgroup_freezer.c, kernel/cpuset.c,
	kernel/sched/core.c, kernel/sched/cpuacct.c, mm/hugetlb_cgroup.c,
	mm/memcontrol.c, net/sched/cls_cgroup.c, security/device_cgroup.c: 
	cgroup - add update accessors

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-add-subsystem-pointer-to-cgroup_subsys_state

2017-03-20  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, arch/arm/include/asm/dma-mapping.h: revert
	SWIOTLB commit

2017-03-20  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/kernel.txt, arch/arm/include/asm/unistd.h,
	arch/arm/include/uapi/asm/unistd.h, arch/arm/kernel/calls.S,
	fs/exec.c, fs/proc/array.c, include/linux/mempolicy.h,
	include/linux/migrate.h, include/linux/mm.h,
	include/linux/mm_types.h, include/linux/page-flags-layout.h,
	include/linux/sched.h, include/linux/syscalls.h, kernel/bounds.c,
	kernel/fork.c, kernel/sched/core.c, kernel/sched/debug.c,
	kernel/sched/fair.c, kernel/sched/features.h,
	kernel/sched/idle_task.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sched/stop_task.c, kernel/sysctl.c, mm/huge_memory.c,
	mm/memory.c, mm/mempolicy.c, mm/migrate.c, mm/mm_init.c,
	mm/mmzone.c, mm/mprotect.c, mm/page_alloc.c: possed

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, pos.sh: pos prepped

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h: shit i have bringup to do

2017-03-20  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, arch/arm/include/asm/dma-mapping.h: TEST - arm:
	make SWIOTLB available

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Reflow-task_numa_group-to-avoid-a-compile-err

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Retry-task_numa_migrate-periodically.

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Use-unsigned-longs-for-numa-group-fault-s

2017-03-20  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/kernel.txt, include/linux/sched.h,
	kernel/sched/fair.c, kernel/sysctl.c, mm/mempolicy.c: 
	sched-numa-Skip-some-page-migrations

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	mm/mempolicy.c: mm: numa: Revert temporarily disabling of NUMA
	migration

2017-03-20  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/kernel.txt, include/linux/mm_types.h,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sysctl.c: 
	sched-numa-Remove-the-numa_balancing_scan_period_reset

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c, mm/huge_memory.c,
	mm/memory.c: sched-numa-Adjust-scan-rate-in-task_numa_placement

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-numa-Take-false-sharing-into-account

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c, mm/memory.c: 
	sched-numa-Be-more-careful-about-joining-numa-groups

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched/numa: Avoid migrating tasks that are placed on their preferred
	node

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-numa-Fix-task-or-group-comparison;

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Decide-whether-to-favour-task-or-group

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/debug.c, kernel/sched/fair.c: 
	sched-numa-Add-debugging.

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Prevent-parallel-updates-to-group-stats

2017-03-20  robcore <robpatershuk@gmail.com>

	* fs/exec.c, include/linux/sched.h, kernel/sched/fair.c,
	kernel/sched/sched.h: sched-numa-Call-task_numa_free-from-do_execve

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c: 
	sched-numa-Use-group-fault-statistics-in-numa

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/fork.c, kernel/sched/core.c: 
	sched-numa-Stay-on-the-same-node-if-CLONE_VM

2017-03-20  robcore <robpatershuk@gmail.com>

	* mm/memory.c, mm/mprotect.c: mm: numa: Do not batch handle PMD
	pages

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c, mm/huge_memory.c,
	mm/memory.c: mm-numa-Do-not-group-on-RO-pages.

2017-03-20  robcore <robpatershuk@gmail.com>

	* mm/migrate.c: mm-numa-Copy-cpupid-on-page-migration.

2017-03-20  robcore <robpatershuk@gmail.com>

	* fs/proc/array.c, include/linux/sched.h, kernel/sched/fair.c: 
	sched-numa-Report-a-NUMA-task-group-ID.

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, include/linux/sched.h, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/sched.h, mm/memory.c: 
	sched-numa-Use-cpu-pid-to-create-task-groups

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, include/linux/mm_types.h,
	include/linux/page-flags-layout.h, kernel/bounds.c,
	kernel/sched/fair.c, mm/huge_memory.c, mm/memory.c, mm/mempolicy.c,
	mm/migrate.c, mm/mm_init.c, mm/mmzone.c, mm/mprotect.c,
	mm/page_alloc.c: mm: numa: Change page last {nid,pid} into {cpu,pid}

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-numa-Fix-placement-of-workloads-spread

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Favor-placing-a-task-on-the-preferred-node

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-numa-Use-a-system-wide-search-to-find-swap-migrations

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/idle_task.c, kernel/sched/rt.c, kernel/sched/sched.h,
	kernel/sched/stop_task.c: sched/numa: Introduce migrate_swap()

2017-03-20  robcore <robpatershuk@gmail.com>

	* mm/mprotect.c: mm-numa-Trap-pmd-hinting-faults

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Do-not-trap-hinting-faults-for-shared-lib

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Increment-numa_migrate_seq-when-task-runs.

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c: 
	sched-numa-Retry-migration-of-tasks-to-CPU;

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Avoid-overloading-CPUs-on-a-preferred-NUMA_NODE

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/mempolicy.h, kernel/sched/fair.c, mm/mempolicy.c: 
	mm-numa-Limit-NUMA-scanning-to-migrate-on-fault-VMAs

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, mm/mempolicy.c: 
	sched/numa: Do not migrate memory immediately

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, include/linux/mm_types.h,
	include/linux/page-flags-layout.h, kernel/sched/fair.c,
	mm/huge_memory.c, mm/memory.c, mm/mempolicy.c, mm/migrate.c,
	mm/mm_init.c, mm/mmzone.c, mm/mprotect.c, mm/page_alloc.c: 
	sched/numa: Set preferred NUMA node based on number of private
	faults

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/migrate.h, mm/huge_memory.c, mm/memory.c,
	mm/migrate.c, mm/mprotect.c: 
	mm-numa-Scan-pages-with-elevated-page_mapcount

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Check-current-mm-before-allocating-NUMA

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/fair.c, mm/huge_memory.c,
	mm/memory.c: 
	sched-numa-Add-infrastructure-for-split-shared-private-mem

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/sched.h: 
	sched-numa-Reschedule-task-on-preferred-NUMA-node

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, kernel/sched/features.h: 
	sched-numa-Resist-moving-tasks-towards-nodes

2017-03-20  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/kernel.txt, include/linux/sched.h,
	kernel/sched/core.c, kernel/sched/fair.c, kernel/sched/features.h,
	kernel/sysctl.c: 
	sched-numa-Favour-moving-tasks-towards-the-preferred.

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c: 
	sched-numa-Update-NUMA-hinting-faults-once-per-scan.

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c: 
	sched-numa-Select-a-preferred-node-with-the-most-num

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/sched.h: 
	sched-numa-Track-NUMA-hinting-faults-on-per-node-basis

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Slow-scan-rate-if-no-NUMA-hinting-faults

2017-03-20  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/kernel.txt, include/linux/sched.h,
	kernel/sched/fair.c: 
	sched-numa-Set-the-scan-rate-proportional-to-the-mem

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c, kernel/sched/fair.c: 
	sched-numa-Initialise-numa_next_scan-properly

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm_types.h, kernel/fork.c, kernel/sched/fair.c,
	kernel/sched/features.h: Revert "mm: sched: numa: Delay PTE scanning
	until a task is scheduled on a new node"

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Continue-PTE-scanning-even-if-migrate

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-numa-Mitigate-chance-that-same-task-always-updates

2017-03-20  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c, mm/memory.c: 
	mm-numa-Do-not-migrate-or-account-for-hinting-faults

2017-03-20  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c, mm/mprotect.c: 
	mm-Only-flush-TLBs-if-a-transhuge-PMD-is-modified

2017-03-20  robcore <robpatershuk@gmail.com>

	* mm/mprotect.c: mm: Do not flush TLB during protection change if
	!pte_present && !migration_entry

2017-03-20  robcore <robpatershuk@gmail.com>

	* mm/mprotect.c: mm-Account-for-a-THP-NUMA-hinting-update-as-one-PTE

2017-03-20  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c, mm/migrate.c: mm: Close races between THP
	migration and PMD numa clearing

2017-03-20  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c, mm/memory.c: 
	mm-numa-Sanitize-task_numa_fault-callsites

2017-03-20  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c: mm-Prevent-parallel-splits-during-THP-migration

2017-03-20  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c: 
	mm-Wait-for-THP-migrations-to-complete-during-NUMA

2017-03-20  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c: 
	mm-numa-Do-not-account-for-a-hinting-fault-if-we-race

2017-03-20  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/kernel.txt: dox

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: futex - reverted that commit for now too as
	something tells me i did this ages ago

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/deadline.h,
	include/linux/sched/rt.h, include/uapi/linux/sched.h,
	kernel/fork.c, kernel/hrtimer.c, kernel/locking/rtmutex.c,
	kernel/locking/rtmutex_common.h, kernel/sched/Makefile,
	kernel/sched/core.c, kernel/sched/deadline.c, kernel/sched/rt.c,
	kernel/sched/sched.h, kernel/sched/stop_task.c,
	kernel/trace/trace_sched_wakeup.c, kernel/trace/trace_selftest.c: 
	reverted back to the initial inclusion of the deadline-based
	syscalls

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/rt.h, kernel/fork.c,
	kernel/locking/rtmutex.c, kernel/locking/rtmutex_common.h,
	kernel/sched/core.c, kernel/sched/deadline.c, kernel/sched/sched.h,
	kernel/trace/trace_sched_wakeup.c: hold up i should probably do some
	poper backtracking

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_sched_wakeup.c, kernel/trace/trace_selftest.c: 
	sched-deadline-Add-latency-tracing-for-SCHED_DEADLINE

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c,
	kernel/sched/deadline.c: 
	sched-deadline-Add-period-support-for-SCHED_DEADLINE.

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/deadline.c: 
	sched-deadline-Add-SCHED_DEADLINE-avg_update-account

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c,
	kernel/sched/deadline.c, kernel/sched/rt.c, kernel/sched/sched.h: 
	sched/deadline: Add SCHED_DEADLINE SMP-related data structures &
	logic (rob note: fixed this commit as it was designed to free the
	dlo mask if rdo needed to be released which is clearly incorrect)

2017-03-20  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, include/linux/sched/deadline.h,
	include/uapi/linux/sched.h, kernel/fork.c, kernel/hrtimer.c,
	kernel/sched/Makefile, kernel/sched/core.c,
	kernel/sched/deadline.c, kernel/sched/sched.h,
	kernel/sched/stop_task.c: 
	sched-deadline-Add-SCHED_DEADLINE-structures (while ignoring
	previous numa sched_fork(clone_flags) implementations)

2017-03-20  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/unistd.h,
	arch/arm/include/uapi/asm/unistd.h, arch/arm/kernel/calls.S,
	include/linux/sched.h, include/linux/syscalls.h,
	kernel/sched/core.c, kernel/sched/sched.h: sched: Add new scheduler
	syscalls to support an extended scheduling parameters ABI

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: futexes: Avoid taking the hb->lock if there is
	nothing to wake up

2017-03-20  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: dox

2017-03-19  robcore <robpatershuk@gmail.com>

	* ref: removed

2017-03-19  robcore <robpatershuk@gmail.com>

	* ref: ref 4patches/1967

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/compat.h, include/linux/syscalls.h,
	init/do_mounts.c: REVERT -
	syscalls.h-use-gcc-alias-instead-of-assembler-aliases

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/uapi/linux/perf_event.h, kernel/events/core.c: 
	perf-Introduce-a-flag-to-enable-close-on-exec

2017-03-19  robcore <robpatershuk@gmail.com>

	* scripts/mod/modpost.c: REVERT - scripts-mod-modpost.c -
	handle-non-ABS-crc-symbols

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h: 
	sched-remove-ARCH-specific-fpu_counter-from-task_struct

2017-03-19  robcore <robpatershuk@gmail.com>

	* init/do_mounts.c: init-do_mounts.c-add-maj-min-syntax-comment

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/jump_label.h: jump_label-unlikely-x-0

2017-03-19  robcore <robpatershuk@gmail.com>

	* scripts/mod/modpost.c: 
	scripts-mod-modpost.c-handle-non-ABS-crc-symbols

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/compat.h, include/linux/syscalls.h: 
	syscalls.h-use-gcc-alias-instead-of-assembler-aliases - also some
	upstream merging with compat.h

2017-03-19  robcore <robpatershuk@gmail.com>

	* mm/ksm.c: ksm: remove redundant __GFP_ZERO from kcalloc. kcalloc
	returns zeroed memory.  There is no need to use this flag.

2017-03-19  robcore <robpatershuk@gmail.com>

	* mm/readahead.c: mm/readahead.c:do_readhead(): dont check for
	->readpage

2017-03-19  robcore <robpatershuk@gmail.com>

	* Documentation/power/runtime_pm.txt: dox

2017-03-19  robcore <robpatershuk@gmail.com>

	* drivers/input/touchscreen/cyttsp4_core.c: 
	Input-cyttsp4-remove-unnecessary-work-pending-test

2017-03-19  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: mm: memcg: do not declare OOM from __GFP_NOFAIL
	allocations

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/iommu.h: iommu: add IOMMU_EXEC flag for safely
	allowing XN mappings

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/spinlock.h: 
	locking-Add-an-smp_mb__after_unlock_lock-for-UNLOCK+BLOCK barrier

2017-03-19  robcore <robpatershuk@gmail.com>

	* Documentation/memory-barriers.txt: dox

2017-03-19  robcore <robpatershuk@gmail.com>

	* drivers/clk/clk.c: not there yet

2017-03-19  robcore <robpatershuk@gmail.com>

	* drivers/clk/clk.c: 
	clk-Fix-debugfs-reparenting-NULL-pointer-dereference.

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/fs-writeback.c: writeback - fix data corruption on NFS

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/locking/mutex-debug.c: 
	mutexes-Give-more-informative-mutex-warning

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree_plugin.h: rcu: Apply
	smp_mb__after_unlock_lock() to preserve grace periods

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/rcu.h: rcu-Remove-extern-from-function-declarations

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/torture.c: 
	rcu-torture-Dynamically-allocate-SRCU-output-buffer

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu-Don-t-activate-RCU-core-on-NO_HZ_FULL-CPUs

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Warn-on-allegedly-impossible-rcu_read_unlock

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/futex.c: 
	futex-move-user-address-verification-up-to-common-code

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, kernel/rcu/rcu.h, kernel/rcu/update.c: 
	rcu-Provide-better-diagnostics-for-blocking-in-RCU

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/srcu.c: dox

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Fix-CONFIG_RCU_FANOUT_EXACT-for-odd-fanout-leaf

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu-Fix-coccinelle-warnings

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/posix-cpu-timers.c: 
	posix-timers-Convert-abuses-of-BUG_ON-to-WARN_ON

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/posix-cpu-timers.c: 
	posix-timers-Remove-remaining-uses-of-tasklist_lock

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/posix-cpu-timers.c: 
	posix-timers-Use-sighand-lock-instead-of-tasklist_lock

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/posix-cpu-timers.c: 
	posix-timers-Consolidate-posix_cpu_clock_get

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/posix-cpu-timers.c: 
	posix-timers-Remove-useless-clock-sample-on-timers

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/posix-cpu-timers.c: 
	posix-timers-Remove-dead-task-special-case.

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/posix-cpu-timers.c: 
	posix-timers-Cleanup-reaped-target-handling.

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/posix-cpu-timers.c: 
	posix-timers-Remove-dead-process-posix-cpu-timers-caching

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/posix-cpu-timers.c: 
	posix-timers-Remove-dead-thread-posix-cpu-timers-caching

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/padata.c: padata: Fix wrong usage of rcu_dereference()

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/params.c: params: improve standard definitions

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Let-the-world-know-when-RCU-adjusts-its-geometry

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/srcu.c: dox

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu: Allow task-level idle entry/exit nesting
	(fixes a partial commit of mine from earlier)

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: adapt task_dead method to our out-of-whack,
	half upstreamed tree

2017-03-19  robcore <robpatershuk@gmail.com>

	* Documentation/RCU/trace.txt, kernel/rcu/tree.c,
	kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu-Break-call_rcu-deadlock-involving-scheduler-and-rcu

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/torture.c, kernel/rcu/tree.c, kernel/rcu/tree_plugin.h: 
	rcu: Fix and comment ordering around wait_event() -- also barriers

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree.h: rcu: Kick CPU halfway to RCU
	CPU stall warning

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/posix-cpu-timers.c: posix-timers: Fix full dynticks CPUs
	kick on timer rescheduling

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/posix-cpu-timers.c: 
	posix-timers-Spare-workqueue-if-there-is-no-full-dynticks

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Add sched_class->task_dead() method

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: 
	sched-fair-Move-load-idx-selection-in-find_idlest_group

2017-03-19  robcore <robpatershuk@gmail.com>

	* drivers/power/Makefile: reverted

2017-03-19  robcore <robpatershuk@gmail.com>

	* drivers/power/Makefile: enabled something i now regret

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched: Check TASK_DEAD rather than EXIT_DEAD
	in schedule_debug()

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/fork.c: tasks-fork-Remove-unnecessary-child-exit_state.

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched-Fix-a-trivial-syntax-misuse

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h, kernel/time/tick-sched.c: 
	NOHZ-Check-for-nohz-active-instead-of-nohz-enabled

2017-03-19  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/smp_twd.c: 
	ARM-7359-2-smp_twd-Only-wait-for-reprogramming-on-active-cpus

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/irq.h, kernel/irq/settings.h, kernel/irq/spurious.c: 
	genirq: Prevent spurious detection for unconditionally polled
	interrupts

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/locking/lockdep.c: locking/lockdep: Mark
	__lockdep_count_forward_deps() as static

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/panic.c: kernel/panic.c: reduce 1 byte usage for print
	tainted buffer

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/module.c: kernel/module.c: use pr_foo() kernel/module.c
	uses a mix of printk(KERN_foo and pr_foo().  Convert it all to
	pr_foo and make the offered cleanups. Not sure what to do about the
	printk(KERN_DEFAULT).  We dont have a pr_default(). Rob note: USE
	PR_INFO YOU FUCKING DUMBASS.

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/taskstats.c: kernel/taskstats.c: return -ENOMEM when alloc
	memory fails in add_del_listener()

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/sysctl.c: kernel/sysctl.c: check return value after call
	proc_put_char() in __do_proc_doulongvec_minmax()

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/events/core.c: 
	-perf-Do-not-compute-time-values-unnecessarily.

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/events/core.c: perf: Account freq events globally

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/events/callchain.c: 
	perf-Roll-back-callchain-buffer-refcount

2017-03-19  robcore <robpatershuk@gmail.com>

	* arch/x86/um/elfcore.c, fs/binfmt_elf_fdpic.c,
	include/linux/elfcore.h, kernel/elfcore.c: success

2017-03-19  robcore <robpatershuk@gmail.com>

	* arch/x86/um/elfcore.c, fs/binfmt_elf_fdpic.c,
	include/linux/elfcore.h, kernel/elfcore.c: fail

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/events/core.c: 
	perf-Fix-the-perf-context-switch-optimization

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/events/core.c: perf: Change zero-padding of strings in
	perf_event_mmap_event()

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/events/core.c: perf: Kill the dead !vma->vm_mm code in
	perf_event_mmap_event()

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/events/core.c: DANGER - perf-Remove-useless-atomic_t.

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/jump_label.h, include/linux/jump_label_ratelimit.h,
	init/main.c, kernel/jump_label.c: static_key: WARN on usage before
	jump_label_init was called

2017-03-19  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/kernel.txt, include/linux/mm.h,
	include/linux/mm_types.h, include/linux/page-flags-layout.h,
	include/linux/sched.h, kernel/fork.c, kernel/sched/core.c,
	kernel/sched/fair.c, kernel/sched/features.h, kernel/sched/sched.h,
	kernel/sysctl.c, mm/huge_memory.c, mm/memory.c, mm/mempolicy.c,
	mm/migrate.c, mm/mm_init.c, mm/mprotect.c, mm/page_alloc.c: reverted

2017-03-19  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/kernel.txt, include/linux/mm.h,
	include/linux/mm_types.h, include/linux/page-flags-layout.h,
	include/linux/sched.h, kernel/sched/core.c, kernel/sched/fair.c,
	kernel/sched/features.h, kernel/sched/sched.h, kernel/sysctl.c,
	mm/huge_memory.c, mm/memory.c, mm/mempolicy.c, mm/migrate.c,
	mm/mm_init.c, mm/mprotect.c, mm/page_alloc.c: big useless numa
	squash

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/mm_types.h, kernel/fork.c, kernel/sched/fair.c,
	kernel/sched/features.h: Revert-mm-sched-numa-Delay-PTE-scanning

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched-numa-Continue-PTE-scanning

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c: sched/numa: Mitigate chance that same task
	always updates PTEs

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/kdb.h, include/linux/kgdb.h,
	kernel/debug/debug_core.c, kernel/debug/debug_core.h,
	kernel/debug/kdb/kdb_debugger.c, kernel/debug/kdb/kdb_main.c: 
	-kdb-Add-support-for-external-NMI-handler-to-call-KGDB

2017-03-19  robcore <robpatershuk@gmail.com>

	* drivers/rtc/interface.c: 
	rtc-Keep-system-awake-until-all-expired-RTC-timers-complete

2017-03-19  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/mmu.c: 
	ARM-7785-1-mm-restrict-early_alloc-to-section-alignment

2017-03-19  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/entry-common.S: 
	ARM-entry-allow-ARM-private-syscalls-to-be-restarted

2017-03-19  robcore <robpatershuk@gmail.com>

	* sound/drivers/dummy.c, sound/pci/hda/hda_hwdep.c,
	sound/soc/codecs/wm8962.c, sound/soc/omap/mcbsp.c,
	sound/soc/soc-core.c: ALSA-replace-strict_strto-with-kstrtoul

2017-03-19  robcore <robpatershuk@gmail.com>

	* drivers/gpio/gpiolib.c: gpiolib-replace-strict_strtol-with-kstrtol

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/sysfs.h: fix up my sysfs defs for real

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/sysfs.h: remove doubled define for ATTR GROUPS

2017-03-19  robcore <robpatershuk@gmail.com>

	* mm/slub.c: mm/slub: beautify code for 80 column limitation and tab
	alignment

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/sysfs.h: sysfs-use-file-mode-defines-from-stat.h

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/sysfs.h: 
	sysfs-add-more-helper-macro-s-for-bin_-attribute-_groups

2017-03-19  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, include/linux/device.h: 
	driver-core-add-default-groups-to-struct-class.

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c: 
	sysfs-prevent-warning-when-only-using-binary-attr

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c, include/linux/sysfs.h: 
	sysfs-add-support-for-binary-attributes-in-groups

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/device.h: 
	driver-core-device.h-add-RW-and-RO-attribute-macros

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/sysfs.h: sysfs.h-add-BIN_ATTR-macro

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/sysfs.h: sysfs.h-add-ATTRIBUTE_GROUPS-macro

2017-03-19  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/porting, arch/alpha/kernel/osf_sys.c,
	fs/autofs4/root.c, fs/coda/dir.c, fs/compat.c, fs/ecryptfs/file.c,
	fs/exportfs/expfs.c, fs/ext2/dir.c, fs/libfs.c, fs/minix/dir.c,
	fs/nfsd/nfs4recover.c, fs/nfsd/vfs.c, fs/readdir.c, fs/sysv/dir.c,
	fs/ufs/dir.c, include/linux/fs.h: dont worry guys, you will be back

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/autofs4/root.c, fs/libfs.c, include/linux/fs.h: frankly i have
	no patience for this right now, reverting fs ones

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/ext2/dir.c, fs/minix/dir.c, fs/sysv/dir.c, fs/ufs/dir.c: 
	readdir-simple-local-unixlike-switch-to-iterate

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/coda/dir.c, fs/compat.c, fs/exportfs/expfs.c,
	fs/nfsd/nfs4recover.c, fs/readdir.c, include/linux/fs.h: [readdir]
	introduce ->iterate(), ctx->pos, dir_emit()

2017-03-19  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/porting, arch/alpha/kernel/osf_sys.c,
	fs/compat.c, fs/ecryptfs/file.c, fs/exportfs/expfs.c,
	fs/nfsd/nfs4recover.c, fs/nfsd/vfs.c, fs/readdir.c,
	include/linux/fs.h: [readdir] introduce iterate_dir() and
	dir_context-- new helper, replacing vfs_readdir().

2017-03-19  robcore <robpatershuk@gmail.com>

	* drivers/block/cryptoloop.c, drivers/block/loop.c, {include/linux
	=> drivers/block}/loop.h: move linux/loop.h to drivers/block

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/compat_ioctl.c: compat.c-LOOP_CLR_FD-is-taken-care-of-in-loop.c

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/pstore/platform.c: 
	pstore-Return-unique-error-if-backend-registration-fails

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/sysfs/inode.c: sysfs: kill sysfs_sb declaration in
	fs/sysfs/inode.c.

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c: dox

2017-03-19  robcore <robpatershuk@gmail.com>

	* lib/kobject.c: kobject: sanitize argument for format string

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/sysfs/file.c: sysfs_notify-is-only-possible-on-file-attributes.

2017-03-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: cpufreq - remove a comment from
	__cpufreq_remove

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/sysfs/group.c, fs/sysfs/symlink.c, fs/sysfs/sysfs.h,
	include/linux/sysfs.h: sysfs-Functions-for-adding-removing-symlinks

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree_plugin.h: a little more rcu
	bringup

2017-03-19  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/init.c: arm init - a little more cleanup

2017-03-19  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/dma-mapping.c: a few small dma-mapping fixups

2017-03-19  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/dma-mapping.c: ARM-dma-Drop-__GFP_COMP

2017-03-19  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/dma-mapping.c: ARM: dma-mapping: NULLify
	dev->archdata.mapping pointer on detach

2017-03-19  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/dma-mapping.c: 
	ARM-dma-mapping-convert-DMA-direction-into-IOMMU

2017-03-19  robcore <robpatershuk@gmail.com>

	* Makefile, drivers/net/ethernet/intel/igb/e1000_phy.c,
	drivers/s390/char/vmur.c, drivers/scsi/libfc/fc_fcp.c,
	mm/mmu_notifier.c, sound/pci/hda/hda_codec.c: treewide typos

2017-03-19  robcore <robpatershuk@gmail.com>

	* scripts/setlocalversion: scripts-setlocalversion - remove
	potential git corruptions

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/spinlock_api_smp.h: dox

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/fscache/operation.c, fs/fscache/page.c,
	include/linux/fscache-cache.h: couple more fscache updates

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/cachefiles/interface.c, fs/cachefiles/xattr.c,
	fs/fscache/cookie.c, fs/fscache/fsdef.c, fs/fscache/internal.h,
	fs/fscache/main.c, fs/fscache/netfs.c, fs/fscache/object-list.c,
	fs/fscache/object.c, fs/fscache/operation.c, fs/fscache/page.c,
	include/linux/fscache-cache.h: 
	FS-Cache-Simplify-cookie-retention-for-fscache_object-destroy

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/cachefiles/interface.c, fs/cachefiles/namei.c,
	fs/fscache/cache.c, fs/fscache/cookie.c, fs/fscache/internal.h,
	fs/fscache/object-list.c, fs/fscache/object.c,
	fs/fscache/operation.c, fs/fscache/page.c,
	include/linux/fscache-cache.h: 
	-FS-Cache-Fix-object-state-machine-to-have-separate- work and wait
	states

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/cachefiles/namei.c, fs/fscache/cache.c, fs/fscache/cookie.c,
	fs/fscache/object.c, fs/fscache/operation.c,
	include/linux/fscache-cache.h: FS-Cache-Wrap-checks-on-object-state

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/fscache/object.c, include/linux/fscache-cache.h: 
	FS-Cache-Uninline-fscache_object_init

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/fscache/page.c: FS-Cache: Dont sleep in page release if
	__GFP_FS is not set

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/cachefiles/namei.c: 
	CacheFiles-name-i_mutex-lock-class-explicitl

2017-03-19  robcore <robpatershuk@gmail.com>

	* fs/fscache/page.c: 
	fs-fscache-remove-spin_lock-from-the-condition-in-while

2017-03-19  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/mmu_context.h: 
	ARM-7757-1-mm-don-t-flush-icache-in-switch_mm

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_events.c: tracing: Do not call
	kmem_cache_free() on allocation failure (you cannot free what you do
	not have)

2017-03-19  robcore <robpatershuk@gmail.com>

	* include/linux/rcutiny.h: rcu - Remove
	rcu_preempt_note_context_switch

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu: Move redundant call to note_gp_changes()
	into called functio

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu: Inline trivial wrapper function
	rcu_start_gp_per_cpu()

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu: Merge __rcu_process_gp_end() into
	__note_gp_change

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: more rcu bringup, advance callers at at grace
	period end and switch callers from rcu_process_gp_end() to
	note_gp_changes()

2017-03-19  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/mmu.c: RM-mm-clean-up-membank-size-limit-checks

2017-03-19  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/mmu.c: ARM-mm-cleanup-checks-for-membank-overlap

2017-03-19  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/mmu.c: ARM-mm-use-physical-addresses-in-highmem

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_selftest.c: 
	tracing-Fix-bad-parameter-passed-in-branch-selftest

2017-03-19  robcore <robpatershuk@gmail.com>

	* kernel/trace/ftrace.c: ftrace: Use the rcu _notrace variants for
	rcu_dereference_raw()

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/trace/events/rcu.h, kernel/rcu/tiny.c, kernel/rcu/tree.h: 
	rcu: Avoid sparse warnings in rcu_nocb_wake trace -- and some
	formatting cleanup

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: fix double def

2017-03-18  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c, mm/memory.c: revert those three to test build
	first

2017-03-18  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c, mm/memory.c: mm: numa: Sanitize
	task_numa_fault() callsites

2017-03-18  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c: mm-Prevent-parallel-splits-during-THP-migration.

2017-03-18  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c: 
	mm-Wait-for-THP-migrations-to-complete-during-NUMA

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/sched/fair.c, mm/huge_memory.c: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* Documentation/sysctl/kernel.txt: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/skbuff.h: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/balloon_compaction.h, mm/migrate.c, mm/vmscan.c:  mm: avoid reinserting isolated balloon pages into LRU lists

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/asm-generic/vtime.h: 
	include-asm-generic-vtime.h-avoid-zero-length-file

2017-03-18  robcore <robpatershuk@gmail.com>

	* fs/binfmt_elf.c: fs/binfmt_elf.c: prevent a coredump with a large
	vm_map_count from Oopsing

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/power/snapshot.c, kernel/power/user.c: PM / hibernate: Fix
	user space driven resume regression

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/processor.h,
	arch/arm/include/asm/spinlock.h, arch/arm/include/asm/unified.h: 
	reverted

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/processor.h,
	arch/arm/include/asm/spinlock.h, arch/arm/include/asm/unified.h: no
	can do -- goddamned krait

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig: ARM: Kconfig: allow full nohz CPU accounting

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/Kconfig, init/Kconfig, kernel/time/Kconfig:  vtime: Add HAVE_VIRT_CPU_ACCOUNTING_GEN Kconfig

2017-03-18  robcore <robpatershuk@gmail.com>

	* fs/sysv/super.c: sysv-Add-forgotten-superblock-lock-init-for-v7-fs

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/params.c: 
	kernel-params-fix-handling-of-signed-integer-types

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/gpu/drm/msm/msm_drv.c, drivers/gpu/drm/msm/msm_gem.c: 
	drm-msm-use-drm_gem_dumb_destroy-helper.

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/gpu/drm/msm/msm_drv.c: 
	drm-msm-deal-with-mach-iommu.h-removal

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/gpu/drm/msm/mdp4/mdp4_kms.c: 
	drm-msm-Remove-iommu-include-from-mdp4_kms.c

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/gpu/drm/msm/msm_drv.c: drm-msm-Odd-PTR_ERR-usage.

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/Kconfig, include/linux/mutex.h: 
	mutex-replace-CONFIG_HAVE_ARCH_MUTEX_CPU_RELAX

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/kobj_completion.h, lib/kobject.c: 
	kobject-introduce-kobj_completion

2017-03-18  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c: 
	-sysfs-drop-semicolon-from-to_sysfs_dirent-definition

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/video/kyro/fbdev.c: video-kyro-Remove-redundant-break

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/video/udlfb.c: video: udlfb: Use NULL instead of 0

2017-03-18  robcore <robpatershuk@gmail.com>

	* Documentation/RCU/checklist.txt: 
	rcu-Fix-occurrence-of-the-the-in-checklist.txt.

2017-03-18  robcore <robpatershuk@gmail.com>

	* tools/perf/util/probe-finder.c, tools/perf/util/probe-finder.h: 
	perf-probe-Fix-probing-symbols-with-optimization-suffixes

2017-03-18  robcore <robpatershuk@gmail.com>

	* Documentation/RCU/stallwarn.txt: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, include/linux/rcutiny.h,
	include/linux/rcutree.h, kernel/locking/lockdep.c,
	kernel/rcu/tiny.c, kernel/rcu/tree.c, kernel/rcu/update.c: rcu:
	Consistent rcu_is_watching() naming

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, include/linux/rcutiny.h,
	include/linux/rcutree.h: k reverted to do it fresh.  what the FUCK
	happens that two rejected files just get deleted? huh? ANSWER ME

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, include/linux/rcutiny.h,
	include/linux/rcutree.h: this patch fucked up my tree

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu: Change EXPORT_SYMBOL() to
	EXPORT_SYMBOL_GPL()

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/srcu.c, kernel/rcu/tiny.c, kernel/rcu/tree.c: 
	rcu-Is-it-safe-to-enter-an-RCU-read-side-critical-section?

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: rcu: Throttle invoke_rcu_core()
	invocations due to non-lazy callbacks

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: rcu: Throttle rcu_try_advance_all_cbs()
	execution

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: rcu: Remove redundant code from
	rcu_cleanup_after_idle()

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/atomic.h,
	arch/x86/include/asm/atomic64_64.h, arch/x86/include/asm/bitops.h,
	arch/x86/include/asm/local.h, arch/x86/include/asm/rmwcc.h: add bs

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* security/Makefile: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: 
	rcu-Fix-CONFIG_RCU_NOCB_CPU_ALL-panic-on-machines-with-sparse-CPUs

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/battery/max77693_charger.c: move unstable_power_detection
	to the actual current reduction work function

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-fusion3-battery.c: remove the remnants of
	my "bright" idea Global shit from fusion battery pdata file

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/fastchg.c, drivers/battery/max77693_charger.c,
	include/linux/fastchg.h: Fast Charge 2.1 - Remove failed Global
	Current experiment and add the solution to my problems instead.
	Brought in a control for unstable_power_detection from the exynos
	variant - credits to @jwchen1259 -- thanks man!

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/sched/features.h: turn on RT runtime sharing again for fun
	and curiousity

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu: Flag lockless access to ->gp_flags
	ACCESS_ONCE()

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu: Prevent spurious-wakeup DoS attack on
	rcu_gp_kthread()

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu-Improve-grace-period-start-logic

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Reject-memory-order-induced-stall-warning-false-positive

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu-Micro-optimize-rcu_cpu_has_callbacks.

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/rculist.h: 
	rcu-Make-list_splice_init_rcu-account-for-RCU-reader

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h, kernel/rcu/update.c: random cleanup in
	rcu dir

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/of/platform.c: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/of/irq.c: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c: yep[

2017-03-18  robcore <robpatershuk@gmail.com>

	* fs/sysfs/dir.c: nope

2017-03-18  robcore <robpatershuk@gmail.com>

	* fs/ext4/extents.c: ext4: fix use of potentially uninitialized
	variables in debugging code

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/device.h: 
	dev-core-fix-build-break-when-DEBUG-is-enabled

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/base/bus.c, drivers/base/core.c, drivers/base/driver.c: 
	driver core: add #include <linux/sysfs.h> to core files.

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/spi/spi-rspi.c: spi: spi-rspi: fix inconsistent
	spin_lock_irqsave

2017-03-18  robcore <robpatershuk@gmail.com>

	* Documentation/memory-hotplug.txt: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* Documentation/ABI/testing/sysfs-block-zram,
	Documentation/DocBook/media/v4l/vidioc-g-parm.xml,
	Documentation/hwmon/submitting-patches,
	Documentation/hwspinlock.txt, Documentation/kmemcheck.txt,
	Documentation/mtd/nand_ecc.txt, Documentation/printk-formats.txt,
	Documentation/sound/alsa/README.maya44,
	drivers/clocksource/acpi_pm.c, mm/memory-failure.c,
	sound/pci/ens1370.c, sound/pci/via82xx.c: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* Documentation/power/swsusp.txt: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/of/fdt.c, include/linux/of_fdt.h: drivers: of: add
	function to scan fdt nodes given by path

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig.debug: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* Documentation/arm/kernel_mode_neon.txt: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* Documentation/arm/Booting: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/types.h: 
	ARM-7822-1-add-workaround-for-ambiguous-C99-stdint.h

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/gpu/drm/msm/adreno/a3xx_gpu.c,
	drivers/gpu/drm/msm/adreno/adreno_gpu.c,
	drivers/gpu/drm/msm/adreno/adreno_gpu.h,
	drivers/gpu/drm/msm/msm_gpu.c, drivers/gpu/drm/msm/msm_gpu.h: 
	drm-msm-add-basic-hangcheck-recovery-mechanism

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/gpu/drm/msm/Makefile,
	drivers/gpu/drm/msm/adreno/a3xx_gpu.c,
	drivers/gpu/drm/msm/adreno/a3xx_gpu.h,
	drivers/gpu/drm/msm/adreno/adreno_gpu.c,
	drivers/gpu/drm/msm/adreno/adreno_gpu.h,
	drivers/gpu/drm/msm/msm_drv.c, drivers/gpu/drm/msm/msm_drv.h,
	drivers/gpu/drm/msm/msm_gem.c, drivers/gpu/drm/msm/msm_gem.h,
	drivers/gpu/drm/msm/msm_gem_submit.c,
	drivers/gpu/drm/msm/msm_gpu.c, drivers/gpu/drm/msm/msm_gpu.h,
	drivers/gpu/drm/msm/msm_ringbuffer.c,
	drivers/gpu/drm/msm/msm_ringbuffer.h, include/uapi/drm/Kbuild,
	include/uapi/drm/msm_drm.h: drm-msm-add-a3xx-gpu-support.

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/gpu/drm/msm/adreno/a2xx.xml.h,
	drivers/gpu/drm/msm/adreno/a3xx.xml.h,
	drivers/gpu/drm/msm/adreno/adreno_common.xml.h,
	drivers/gpu/drm/msm/adreno/adreno_pm4.xml.h: 
	drm-msm-add-register-definitions-for-gpu

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/gpu/drm/Kconfig, drivers/gpu/drm/Makefile,
	drivers/gpu/drm/msm/Kconfig, drivers/gpu/drm/msm/Makefile,
	drivers/gpu/drm/msm/NOTES, drivers/gpu/drm/msm/hdmi/hdmi.c,
	drivers/gpu/drm/msm/hdmi/hdmi.h,
	drivers/gpu/drm/msm/hdmi/hdmi_connector.c,
	drivers/gpu/drm/msm/hdmi/hdmi_i2c.c,
	drivers/gpu/drm/msm/hdmi/hdmi_phy_8960.c,
	drivers/gpu/drm/msm/hdmi/hdmi_phy_8x60.c,
	drivers/gpu/drm/msm/mdp4/mdp4_crtc.c,
	drivers/gpu/drm/msm/mdp4/mdp4_dtv_encoder.c,
	drivers/gpu/drm/msm/mdp4/mdp4_format.c,
	drivers/gpu/drm/msm/mdp4/mdp4_irq.c,
	drivers/gpu/drm/msm/mdp4/mdp4_kms.c,
	drivers/gpu/drm/msm/mdp4/mdp4_kms.h,
	drivers/gpu/drm/msm/mdp4/mdp4_plane.c,
	drivers/gpu/drm/msm/msm_connector.c,
	drivers/gpu/drm/msm/msm_connector.h, drivers/gpu/drm/msm/msm_drv.c,
	drivers/gpu/drm/msm/msm_drv.h, drivers/gpu/drm/msm/msm_fb.c,
	drivers/gpu/drm/msm/msm_fbdev.c, drivers/gpu/drm/msm/msm_gem.c,
	drivers/gpu/drm/msm/msm_gem.h: drm/msm: basic KMS driver for
	snapdragon

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/gpu/drm/msm/dsi/dsi.xml.h,
	drivers/gpu/drm/msm/dsi/mmss_cc.xml.h,
	drivers/gpu/drm/msm/dsi/sfpb.xml.h,
	drivers/gpu/drm/msm/hdmi/hdmi.xml.h,
	drivers/gpu/drm/msm/hdmi/qfprom.xml.h,
	drivers/gpu/drm/msm/mdp4/mdp4.xml.h: freedreno -
	drm-msm-add-register-definitions

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/srcu.c, kernel/rcu/tiny.c, kernel/rcu/tree.c: REVERT
	rcu-Is-it-safe-to-enter-an-RCU-read-side-critical-section (for a
	sec)

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/srcu.c, kernel/rcu/tiny.c, kernel/rcu/tree.c: rcu: Is
	it safe to enter an RCU read-side critical section?

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/gpu/ion/ion.c, drivers/gpu/ion/ion_carveout_heap.c,
	drivers/gpu/ion/ion_cma_heap.c, drivers/gpu/ion/ion_cp_heap.c,
	drivers/gpu/ion/ion_priv.h, drivers/gpu/ion/ion_system_heap.c,
	quickie.sh: REVERT - All of the ion/gpu locking rbtree/list stuff to
	test

2017-03-18  robcore <robpatershuk@gmail.com>

	* Documentation/RCU/RTFP.txt: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/time/Kconfig: 
	nohz_full-Add-Kconfig-parameter-for-scalable-detection

2017-03-18  robcore <robpatershuk@gmail.com>

	* Documentation/timers/NO_HZ.txt: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/debugobjects.h, lib/debugobjects.c: 
	debugobjects-Make-debug_object_activate-return-status

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/update.c: rcu: Simplify debug-objects fixups

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree_plugin.h: rcu: Simplify
	RCU_STATE_INITIALIZER() macro

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, include/trace/events/rcu.h,
	kernel/rcu/rcu.h, kernel/rcu/tiny.c, kernel/rcu/tiny_plugin.h,
	kernel/rcu/torture.c, kernel/rcu/tree.c, kernel/rcu/tree.h,
	kernel/rcu/update.c: rcu - constify annotations

2017-03-18  robcore <robpatershuk@gmail.com>

	* fs/seq_file.c, include/linux/seq_file.h: 
	seq_file-add-seq_list_-_percpu-helpers.

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c, drivers/cpufreq/cpufreq.c,
	include/linux/cpufreq.h: reverted

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c, drivers/cpufreq/cpufreq.c,
	include/linux/cpufreq.h: still no

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c, drivers/cpufreq/cpufreq.c,
	include/linux/cpufreq.h: revert cpufreq_notify_transition for now

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: maybe not...

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: fix up my missing bracket

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/ftrace_event.h, include/linux/kernel.h: brought back
	some old tracing header defs

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_events.c: reverted

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_events.c: oops

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: never mind need it

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: fuck it gonna try to see if this
	will build, boot, and potentially be faster without tracing

2017-03-18  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt,
	arch/alpha/include/asm/Kbuild, arch/arm/configs/canadefconfig,
	arch/arm/include/asm/Kbuild, arch/blackfin/include/asm/Kbuild,
	arch/frv/include/asm/Kbuild, arch/openrisc/include/asm/Kbuild,
	arch/score/include/asm/Kbuild, arch/um/include/asm/Kbuild,
	arch/unicore32/include/asm/Kbuild,
	arch/x86/include/asm/trace_clock.h, arch/x86/kernel/Makefile,
	arch/x86/kernel/trace_clock.c, include/asm-generic/trace_clock.h,
	include/linux/ftrace.h, include/linux/ftrace_event.h,
	include/linux/kernel.h, include/linux/ring_buffer.h,
	include/linux/trace_clock.h, include/trace/ftrace.h,
	kernel/trace/Kconfig, kernel/trace/blktrace.c,
	kernel/trace/ftrace.c, kernel/trace/ring_buffer.c,
	kernel/trace/trace.c, kernel/trace/trace.h,
	kernel/trace/trace_branch.c, kernel/trace/trace_clock.c,
	kernel/trace/trace_entries.h, kernel/trace/trace_events.c,
	kernel/trace/trace_events_filter.c, kernel/trace/trace_export.c,
	kernel/trace/trace_functions.c,
	kernel/trace/trace_functions_graph.c, kernel/trace/trace_irqsoff.c,
	kernel/trace/trace_kdb.c, kernel/trace/trace_mmiotrace.c,
	kernel/trace/trace_output.c, kernel/trace/trace_output.h,
	kernel/trace/trace_sched_switch.c,
	kernel/trace/trace_sched_wakeup.c, kernel/trace/trace_selftest.c,
	kernel/trace/trace_syscalls.c, pos.sh: possed mostly, except for
	ftrace and kernel.h...

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: did a stupid thing

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: remove instances for now

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.h: revert that

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, kernel/trace/trace.c,
	kernel/trace/trace.h: hold up

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: disable sched tracer

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/ftrace_event.h, kernel/trace/Kconfig,
	kernel/trace/trace.h: bringup: tracing: Make a snapshot feature
	available from userspace

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_clock.c: 
	tracing-Use-sched_clock_cpu-for-trace_clock_global

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/ring_buffer.h, kernel/trace/ring_buffer.c,
	kernel/trace/trace.c: ring-buffer-Add-stats-field-for-amount-read

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: update tracing scnprintf to our updated
	vsprint framework

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c, kernel/trace/trace.h: 
	tracing-Fix-outputting-formats-of-x86-tsc-and-count

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/trace_clock.h, include/linux/ftrace_event.h: 
	reverted

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/trace_clock.h, include/linux/ftrace_event.h: 
	think i just fucked up

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/alpha/include/asm/Kbuild, arch/arm/include/asm/Kbuild,
	arch/blackfin/include/asm/Kbuild, arch/frv/include/asm/Kbuild,
	arch/openrisc/include/asm/Kbuild, arch/score/include/asm/Kbuild,
	arch/um/include/asm/Kbuild, arch/unicore32/include/asm/Kbuild,
	arch/x86/include/asm/trace_clock.h, arch/x86/kernel/Makefile,
	arch/x86/kernel/trace_clock.c, include/asm-generic/trace_clock.h,
	include/linux/trace_clock.h: tracing-x86-Add-a-TSC-trace_clock (that
	we will never use)

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/boot/compressed/atags_to_fdt.c: ARM: 7722/1: zImage:
	Convert 32bits memory size and address from ATAG to 32/64bits DTB
	pending on the architecture

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/setup.c: arm kernel: clear __my_cpu_offset on boot
	CPU to avoid hang

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/div64.h: ARM: 7705/1: use optimized do_div
	only for EABI

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: redef

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/clockchips.h, kernel/time/tick-broadcast.c: REVERT -
	tick check broadcast expired have it

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: oops that is a void

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: fix up syntax errs

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/perf_event.h, kernel/events/core.c: revert
	perf_event_can_stop_tick have it

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_trace.c, tsp-investigation.txt: gonna check out a
	thing

2017-03-18  robcore <robpatershuk@gmail.com>

	* ipc/msgutil.c: reverted

2017-03-18  robcore <robpatershuk@gmail.com>

	* ipc/msgutil.c: not yet

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/md/bcache/alloc.c, drivers/md/bcache/btree.c,
	drivers/md/bcache/super.c: bcache

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/sys.c: 
	kernel-sys.c-make-prctl-PR_SET_MM-generally-available

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/page_alloc.c: got it

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/page_alloc.c: mm: introduce common help
	functions to deal with reserved/managed pages

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/pagemap.h: vm-adjust-ifdef-for-TINY_RCU.

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/perf_event.h, kernel/events/core.c,
	kernel/rcu/tree.c, kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	perf: New helper to prevent full dynticks CPUs from stopping tick

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cpufreq.c, drivers/cpufreq/cpufreq.c,
	include/linux/cpufreq.h, kernel/rcu/tree.c: cpufreq: Notify all
	policy->cpus in cpufreq_notify_transition()

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/trace/events/rcu.h, kernel/rcu/tree.c, kernel/rcu/tree.h,
	kernel/rcu/tree_plugin.h: and more - abstract out gp shit

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu bringup - rcu: Distinguish "rcuo" kthreads by RCU flavor

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h: fixup config in header

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	rcu proper blocking bringup

2017-03-18  robcore <robpatershuk@gmail.com>

	* security/smack/smack_lsm.c: 
	Fix-NULL-pointer-dereference-in-smack_inode_unlink

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/staging/zcache/zcache-main.c: zcache shit

2017-03-18  robcore <robpatershuk@gmail.com>

	* Documentation/pinctrl.txt: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/usb/otg/nop-usb-xceiv.c: fuck that

2017-03-18  robcore <robpatershuk@gmail.com>

	* drivers/usb/otg/nop-usb-xceiv.c: usb-phy-nop-use-devm_kzallo

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: tracing-Fix-ftrace_dump.

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_events.c, kernel/trace/trace_output.c,
	kernel/trace/trace_output.h: 
	tracing-Rename-trace_event_mutex-to-trace_event_sem

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_syscalls.c: 
	tracing-Fix-comment-about-prefix-in-arch_syscall

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_events.c: 
	tracing-Convert-trace_destroy_fields-to-static

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.h, kernel/trace/trace_events.c,
	kernel/trace/trace_events_filter.c: 
	tracing-Move-find_event_field-into-trace_events

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: 
	tracing-Use-TRACE_MAX_PRINT-instead-of-constant.

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: tracing-Use-pr_foo

2017-03-18  robcore <robpatershuk@gmail.com>

	* Documentation/trace/ftrace.txt: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: tracing-Add-perf-trace_clock

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/trace_clock.h, kernel/trace/trace.c,
	kernel/trace/trace_clock.c: 
	tracing-Add-uptime-trace-clock-that-uses-jiffies

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c, kernel/trace/trace_irqsoff.c,
	kernel/trace/trace_sched_wakeup.c: 
	tracing-Add-function-trace-option-to-disable-func

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_functions.c: 
	tracing-Add-function-probe-to-trigger-stack-traces

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/kernel.h, kernel/trace/trace.c: 
	tracing-Add-skip-argument-to-trace_dump_stack.

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_events.c: 
	tracing-Add-function-probe-triggers-to-enable-disable

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/ftrace_event.h, include/trace/ftrace.h,
	kernel/trace/trace_events.c: 
	tracing-Add-a-way-to-soft-disable-trace-events

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/ftrace.c: 
	ftrace-Use-manual-free-after-synchronize_sched

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/ftrace.h, kernel/trace/ftrace.c: 
	ftrace-Clean-up-function-probe-methods

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/ftrace_event.h: nother dox fix

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/ftrace_event.h: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: 
	tracing-Add-snapshot-trigger-to-function-probes.

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: 
	tracing-Add-alloc-free_snapshot-to-replace-duplicate.

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/ftrace.c: ftrace: Fix function probe to only enable
	needed functions

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_functions.c: 
	ftrace-Separate-unlimited-probes-from-count-limited

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_functions.c: 
	tracing-Consolidate-ftrace_trace_onoff_unreg

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_functions.c: 
	tracing-Consolidate-updating-of-count-for-traceon

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: 
	tracing-Let-tracing_snapshot-be-used-by-modules

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c, kernel/trace/trace.h: 
	tracing-Add-internal-ftrace-trace_puts-for-ftrace

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/kernel.h: 
	tracing-Optimize-trace_printk-with-one-arg-to-use

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/kernel.h, kernel/trace/trace.c,
	kernel/trace/trace.h, kernel/trace/trace_entries.h,
	kernel/trace/trace_output.c, kernel/trace/trace_output.h: 
	tracing-Add-trace_puts-for-even-faster-trace_printk

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_branch.c: 
	tracing-Fix-the-branch-tracer-that-broke-with-buffer.

2017-03-18  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, kernel/trace/trace.c,
	kernel/trace/trace.h, kernel/trace/trace_events.c: 
	tracing-Add-alloc_snapshot-kernel-command-line-param

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: tracing-Move-the-tracing-selftest-code

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/kernel.h, kernel/trace/trace.c: 
	tracing-Add-internal-tracing_snapshot-functions

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c, kernel/trace/trace.h: 
	tracing-Prevent-deleting-instances

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: 
	tracing-Add-per_cpu-directory-into-tracing-instances

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: tracing-Add-snapshot-feature-to-instances

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: tracing-Consolidate-buffer-allocation-code

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c, kernel/trace/trace.h: 
	tracing-Have-trace_array-keep-track

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: 
	tracing-Add-snapshot_raw-to-extract-the-raw-data

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/Kconfig: 
	tracing-Add-config-option-to-allow-snapshot-to-swap

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: 
	tracing-Add-snapshot-in-the-per_cpu-trace-dir

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/ftrace_event.h, kernel/trace/blktrace.c,
	kernel/trace/trace.c, kernel/trace/trace.h,
	kernel/trace/trace_functions.c,
	kernel/trace/trace_functions_graph.c, kernel/trace/trace_irqsoff.c,
	kernel/trace/trace_kdb.c, kernel/trace/trace_mmiotrace.c,
	kernel/trace/trace_output.c, kernel/trace/trace_sched_switch.c,
	kernel/trace/trace_sched_wakeup.c, kernel/trace/trace_selftest.c,
	kernel/trace/trace_syscalls.c: tracing: Consolidate max_tr into main
	trace_array structure

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/Kconfig: 
	tracing-Enable-snapshot-when-any-latency-tracer-is-enabled

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c, kernel/trace/trace.h,
	kernel/trace/trace_events.c: 
	tracing-Clear-all-trace-buffers-when-unloaded-module

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/ftrace_event.h, kernel/trace/trace_events.c: 
	tracing: Only clear trace buffer on module unload if event was
	traced

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/ftrace_event.h: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/ring_buffer.c: 
	ring-buffer-Init-waitqueue-for-blocked-readers

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/trace/ftrace.h, kernel/trace/trace_export.c,
	kernel/trace/trace_syscalls.c: 
	tracing-Fix-some-section-mismatch-warnings

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_events.c: tracing: Fix trace events build
	without modules

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.h: 
	tracing-Add-__per_cpu-annotation-to-trace-array

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_syscalls.c: 
	tracing-syscalls-Annotate-field-defining-functions

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/trace/ftrace.h, kernel/trace/trace_export.c: 
	tracing-Annotate-event-field-defining-functions

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/ftrace_event.h, include/trace/ftrace.h,
	kernel/trace/trace_output.c: 
	tracing-Add-a-helper-function-for-event-print-funct

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/ring_buffer.h, kernel/trace/ring_buffer.c,
	kernel/trace/trace.c: 
	tracing-ring-buffer-Move-poll-wake-ups-into-ring-buf

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: tracing-Fix-read-blocking-on-trace_pipe_raw.

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: tracing-Fix-polling-on-trace_pipe_raw

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: tracing-Do-not-block-on-splice

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.h, kernel/trace/trace_events.c: 
	tracing-Use-direct-field-type-and-system-names.

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_events.c: 
	tracing-Use-kmem_cache_alloc-instead-of-kmalloc

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace_events.c: 
	tracing-Get-trace_events-kernel-command-line-working.;

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c, kernel/trace/trace.h,
	kernel/trace/trace_events.c: 
	tracing-Add-rmdir-to-remove-multibuffer-instances.

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c, kernel/trace/trace.h,
	kernel/trace/trace_events.c: 
	tracing-Add-interface-to-allow-multiple-trace-buffer

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.h, kernel/trace/trace_syscalls.c: tracing: Make
	syscall events suitable for multiple buffers

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c, kernel/trace/trace.h,
	kernel/trace/trace_branch.c, kernel/trace/trace_functions.c,
	kernel/trace/trace_functions_graph.c, kernel/trace/trace_irqsoff.c,
	kernel/trace/trace_kdb.c, kernel/trace/trace_mmiotrace.c,
	kernel/trace/trace_sched_switch.c,
	kernel/trace/trace_sched_wakeup.c: tracing: Replace the static
	global per_cpu arrays with allocated per_cpu

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/ftrace_event.h, include/trace/ftrace.h,
	kernel/trace/trace.c: 
	tracing-Pass-the-ftrace_file-to-the-buffer-lock

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c: merged remaining parts of trace

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c, kernel/trace/trace.h,
	kernel/trace/trace_irqsoff.c, kernel/trace/trace_sched_wakeup.c: 
	mother fuck

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/trace/trace.c, kernel/trace/trace.h,
	kernel/trace/trace_kdb.c: tracing: Use RING_BUFFER_ALL_CPUS for
	TRACE_PIPE_ALL_CPU

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/ftrace_event.h, include/trace/ftrace.h,
	kernel/trace/trace.c, kernel/trace/trace.h,
	kernel/trace/trace_events.c, kernel/trace/trace_events_filter.c: 
	tracing: Separate out trace events from global variables

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/clockchips.h, kernel/time/tick-broadcast.c: 
	tick-Provide-a-check-for-a-forced-broadcast-pending.

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: 
	context_tracking-Restore-preempted-context-state-after switch

2017-03-18  robcore <robpatershuk@gmail.com>

	* include/linux/context_tracking.h: context - restore previous
	context state upon exit

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/x86/kernel/kvm.c, include/linux/context_tracking.h: move
	context tracking execption handling

2017-03-18  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-at91/board-foxg20.c,
	arch/arm/mach-at91/board-stamp9g20.c,
	arch/arm/mach-ixp4xx/vulcan-setup.c, arch/arm/mach-pxa/raumfeld.c: 
	bs

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: dox

2017-03-18  robcore <robpatershuk@gmail.com>

	* kernel/rcu/srcu.c: srcu - update docs and such

2017-03-17  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: reverted

2017-03-17  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: hold up

2017-03-17  robcore <robpatershuk@gmail.com>

	* include/linux/rcupdate.h, kernel/rcu/tree.c, kernel/sched/core.c: 
	cleanup some fallout from context tracking additions

2017-03-17  robcore <robpatershuk@gmail.com>

	* include/linux/rcutree.h, kernel/rcu/srcu.c, kernel/rcu/tree.c,
	kernel/rcu/tree.h, kernel/rcu/tree_plugin.h,
	kernel/time/tick-sched.c: brought back my rcu changes

2017-03-17  robcore <robpatershuk@gmail.com>

	* MachinexChangeLog: added a changelog

2017-03-17  robcore <robpatershuk@gmail.com>

	* include/linux/rcutree.h, kernel/rcu/srcu.c, kernel/rcu/tree.c,
	kernel/rcu/tree.h, kernel/rcu/tree_plugin.h,
	kernel/time/tick-sched.c: quick revert

2017-03-17  robcore <robpatershuk@gmail.com>

	* pos.sh: quick pos to release 92

2017-03-17  robcore <robpatershuk@gmail.com>

	* kernel/rcu/srcu.c, kernel/rcu/tree.c, kernel/rcu/tree.h,
	kernel/rcu/tree_plugin.h: some more pickup work for rcu

2017-03-17  robcore <robpatershuk@gmail.com>

	* include/linux/rcutree.h, kernel/rcu/tree_plugin.h,
	kernel/time/tick-sched.c: hacking in more past necessities

2017-03-17  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree_plugin.h, kernel/time/tick-sched.c: more old
	bringup - rcu: Make RCU_FAST_NO_HZ respect nohz= boot parameter

2017-03-17  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c, kernel/rcu/tree.h, kernel/rcu/tree_plugin.h: 
	some old bringup for rcu - rcu: Make RCU_FAST_NO_HZ take advantage
	of numbered callbacks

2017-03-17  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, kernel/kthread.c, kernel/smpboot.c: there
	fixed

2017-03-17  robcore <robpatershuk@gmail.com>

	* kernel/kthread.c, kernel/smpboot.c: revert that too

2017-03-17  robcore <robpatershuk@gmail.com>

	* fixup last couple commits

