2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: even longer

2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: bracket

2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c, drivers/cpufreq/mx_hotplug.c,
	include/linux/workqueue.h, kernel/workqueue.c: revert workqueue
	changes - some fixes to mx plug

2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: remove that

2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: fix my ordering on unlikely error
	case in startup

2017-10-31  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: fix a derp

2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, include/linux/workqueue.h,
	kernel/workqueue.c: modified modify_delayed_work so that it checks
	for NULL values...catering to my own shitty race conditions

2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: bracket

2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: some more security for our little
	quandry

2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: fix a potential early NULL pointer
	reference with a bandaid for now

2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: more tinkering

2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a-bluelight.c,
	drivers/leds/leds-an30259a.c: leds - trying out a setting for
	BLUE_BRIGHTNESS_OFFSET i found

2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: going nuts with it

2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: k gonna try this

2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: that should do it

2017-10-31  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: delay the shutdown led sequence

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: try out using C for the
	initial freq calculation, because we are actually just trying to
	find the closest freq represented by loadadjfreq / tl

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: bump up DEFAULT_TARGET_LOAD
	by 1

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: more tunable updates

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, openrecoveryscript: shifting gears
	doesnt make as much sense in this mixed metaphor as clutch

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, openrecoveryscript: just gonna keep
	lowering these thresholds until i see the results i want

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, openrecoveryscript: down allll the
	thresholds

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, openrecoveryscript: be more picky
	when offlining cores than onlining

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: add some insurance to allow us to
	online all the fucking cores we want when its time to shut down.
	also, remove some leftover unused bloat

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: add load averaging to the core
	up/down decision making

2017-10-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c: load avg/runqueue stats: actually format
	the code in the spirit of the original description

2017-10-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c: hold up just do it at the individual core
	level

2017-10-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c: the individual cores too

2017-10-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c: fuck it divide it by ten right at the
	source

2017-10-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c: do this even better

2017-10-30  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c: give us a user facing interface for total
	cpu load

2017-10-30  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/loadavg.c: created a total
	loadavg function

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: dont need that

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: allow boost to mod the delayed work,
	and bypass the sampling rate. also, move it before any of the
	request calculation because it is outside of the basic functioning.
	finally, ensure that we syncronize the scheduler when finished doing
	whatever

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: hit the brakes no longer needs to be
	passed values

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: mx hotplug - fix some logic
	regarding first and second gear. our downshift one value could have
	easily been blocking the hit the brakes function. also remove checks
	for number of cpus online, because that is for the external
	functions to sort out. and a few other little fixups

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: up the sampling rate and boost
	length

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: more lowering

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, drivers/cpufreq/mx_hotplug_wip.c: 
	fix my driver, the averaging was not wise, and stick to releasing
	the brakes on driver stop.

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: compiler optimize

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: dont let checkpoint go below zero

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: more of the endless tweaking

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: mx hotplug experiment - take a
	dynamic average of nr running, and throw it in its own high pri
	kthread

2017-10-30  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: lowered again

2017-10-30  robcore <robpatershuk@gmail.com>

	* build_kernel.sh, drivers/cpufreq/mx_hotplug.c: brought down my mx
	thresholds again

2017-10-29  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: and more

2017-10-29  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: even lower

2017-10-29  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: lowered the thresholds again

2017-10-29  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, drivers/cpufreq/userspace_hotplug.c: 
	DUH didnt even have uplug enabled from the function. jesus what a
	bad day

2017-10-29  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: adjust the lower rate too, and
	remove some bloat

2017-10-29  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, openrecoveryscript: more mx
	adjustments

2017-10-29  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, drivers/cpufreq/userspace_hotplug.c: 
	jeeze my head is obviously sore

2017-10-29  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/userspace_hotplug.c: uspace hotplug can be in the
	kernel sysfs

2017-10-29  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/Kconfig,
	drivers/cpufreq/Makefile, drivers/cpufreq/userspace_hotplug.c: some
	protection for userspace hotplug not to get confused if things like
	core control or hardplug are being used (the latter is somewhat
	pointless if userspace hotplug is in use)

2017-10-29  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/userspace_hotplug.c, openrecoveryscript: i think i
	have a sensical skelaton for the userspace cpu hotplug driver

2017-10-29  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, drivers/cpufreq/userspace_hotplug.c: 
	more mx adjustments

2017-10-29  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: more slight adjustments

2017-10-29  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, drivers/cpufreq/userspace_hotplug.c: 
	adjusted thresholds in mx plug, changed a variable name, and did a
	little work in userspace

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: mx hotplug - some slight adjustments
	to the thresholds, and more fun naming

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: mx hotplug - some slight adjustments
	to the thresholds, and more fun naming

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: no more scaling governor changes from
	the traditional sysfs interface. read only.

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/userspace_hotplug.c: 
	gonna introduce a nifty little userspace hotplug driver, might as
	well do something useful with my cpumask test code

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: duh. check if
	the cpu is online before grabbing the policy. also, check if the
	policy exists and if not, return ENOMEM. This is fine and intended
	behaviour. the goal is to change the policy immediately if online,
	and provide a cached governor to wake up to when the core is
	offline, so failing for this step is of little to no consequence

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	include/linux/cpufreq.h: duh rob, if the cpu is online you have to
	set the new policy

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: change some of my terminology
	strictly for fun

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: lower my thresholds a bit

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	include/linux/cpufreq.h: hehe forgot userspace. but to ones defence
	it is a forgetable gov

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_conservative.c,
	drivers/cpufreq/cpufreq_intelliactive.c,
	drivers/cpufreq/cpufreq_interactive.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.h,
	drivers/cpufreq/cpufreq_ondemand.c,
	drivers/cpufreq/cpufreq_performance.c,
	drivers/cpufreq/cpufreq_powersave.c,
	drivers/cpufreq/cpufreq_userspace.c, include/linux/cpufreq.h,
	kernel/sched/cpufreq_schedutil.c: MUAHAHAHAHA hacked the governor
	for permanence using my same ol governor array scheme!!!!!!!

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: same dumbness

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: maybe if i wasnt an idiot

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: could it be
	this easy?

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: hmm

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: cpufreq - back
	to basics, i need to find out which step fails

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: hehehe i think i modified this
	properly. now if the governor has changed when the cpu is offline,
	we take a copy of it, and do a dummy "store" during policy init

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: revert that
	junk

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: ohhh i get it
	gonna do a thing

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: given that we only try the mutex
	lock in mx hotplug input boost, go ahead and eliminate the count,
	there are numerous factors that still make boost less consistent, so
	the count isnt needed on top of them

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: early
	prototype of persistent governor changes despite unplugged cores

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: get rid of the defs for the failed
	workqueue setup

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: a few more slight adjustments - made
	boost checking a little more streamlined, and slightly raised the
	single core down limit

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: theeere we go

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: mother FUCK"

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: lets stay on the conservative side
	for touch boosting

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: mother FUCKER

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: aaand fix my boost logic

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: raging semi-colon

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: made it a bit smarter once more

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: fixup boosting logic to allow for
	trylock on touch side

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: FUCK double equal

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: ohhhh im an idiot

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: oops no semi colon there. syntax
	mang

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, drivers/input/omniboost.c,
	include/linux/cpu.h: I THINK Ive implemented something a little
	safer for touchboost. also, adjust levels just a bit

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: adjust our thresholds a bit...IT
	WORKS!

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: dont need that return

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: oops i change dthat back to a
	straight up lock

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, drivers/input/omniboost.c: get rid
	of timer lock and try it just with mutex, make startstop smarter,
	get rid of kthread parking, and lock hotplug suspend. also, remove
	the nos boost from omniboost for now because i dont think that works
	with our syncronization structure (yet)

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: glad i spotted that, needed some
	brackets

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: protect reset wip with mutex too

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: reset_wip() on startup, not shutdown

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: make the start up/teardown safer

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: syntax fix

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, drivers/input/omniboost.c,
	include/linux/cpu.h: a little more work on the hotplug front -
	trying out parking again, as well as setting the target based on the
	avg nr running, not making cpus online the deciding factor

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: THATS what i meant to do in mx
	hotplug

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: rever the cpufreq changes - they break
	stuff

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: dont think we need the sem in the sysfs
	funcs

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: oops didnt hit save

2017-10-28  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/cpufreq.c: testing
	holding the rwsem for some of our crucial hardlimit values in
	cpufreq

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: mx_hotplug - add a mutex for
	syncronization, get rid of global target_cpus var - send the
	adjusted cpu core target directly to the up/down functions, wake up
	the process on start and resume even before queuing so the task
	doesnt look hung to the freezer, and a couple of other little
	cleanups

2017-10-28  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c: use a common variable to enable/disable
	showing these values, having it on by default combined with using a
	polling application increases overhead significantly

2017-10-28  robcore <robpatershuk@gmail.com>

	* Documentation/ABI/testing/sysfs-devices-power,
	drivers/base/cpu.c, drivers/base/power/domain_governor.c,
	drivers/base/power/qos.c, drivers/base/power/runtime.c,
	drivers/base/power/sysfs.c, drivers/cpuidle/governors/menu.c,
	include/linux/pm_qos.h: fuck it we dont have latency issues and that
	causes warnings in mmc sleep resulting in perma wakelocks

2017-10-28  robcore <robpatershuk@gmail.com>

	* drivers/base/cpu.c: oops didnt have pm qos there

2017-10-28  robcore <robpatershuk@gmail.com>

	* Documentation/ABI/testing/sysfs-devices-power,
	drivers/base/cpu.c, drivers/base/power/domain_governor.c,
	drivers/base/power/qos.c, drivers/base/power/runtime.c,
	drivers/base/power/sysfs.c, drivers/cpuidle/governors/menu.c,
	include/linux/pm_qos.h: PM / QoS: Fix device resume latency PM QoS

2017-10-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: well... it doesnt implode anymore!
	that said, it also doesnt actually do any plugging

2017-10-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/mx_hotplug.c: this
	will probably fail, but id like to see it do so

2017-10-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/mx_hotplug.c: 
	screw the hotplug driver for now

2017-10-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	arch/arm/mach-msm/acpuclock-krait.c, drivers/cpufreq/mx_hotplug.c: a
	couple fixups in mx hotplug, and some renaming because im liking the
	mechanical theme

2017-10-27  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c,
	arch/arm/mach-msm/board-jf_eur.c, drivers/cpufreq/mx_hotplug.c: some
	more insurance that thermal wont be brought up before the cpufreq
	driver is registered

2017-10-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: mx hotplug is looking neater

2017-10-27  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: instead of randomly cycling
	all of the cpu freqs after resuming from suspend, just use the
	cpufreq resume function extension. (this way we know we have the
	policies for the cpus, and it avoids a waste of energy if we dont)

2017-10-27  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/Makefile, arch/arm/mm/Kconfig: truly shutting off
	deprecated swp emulation

2017-10-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: brakes

2017-10-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: shit i read up on this again today
	disable swap emulation

2017-10-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: can be static

2017-10-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: oh yeah and
	made hardlimit ready percpu

2017-10-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	arch/arm/mach-msm/acpuclock-krait.c,
	arch/arm/mach-msm/board-jf_eur.c,
	drivers/cpufreq/alucard_hotplug.c,
	drivers/cpufreq/bricked_hotplug.c, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/intelli_hotplug.c, drivers/cpufreq/lazyplug.c,
	drivers/cpufreq/msm_sleeper.c, drivers/cpufreq/mx_hotplug.c,
	drivers/thermal/msm_thermal.c, include/linux/cpufreq.h,
	kernel/cpu_hardplug.c: did some overhauling with mx hotplug
	(studied), and got rid of the "hotplug ready" parameter that should
	have been percpu and is frankly no different from checking if
	(cpu_online(cpu) && policy !=NULL), which we already do fucking
	EVERY where so this bool is just a redundant, non-working idiot move
	on my end. turns out debug prints are our friend

2017-10-27  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: print out a curiousity of
	mine

2017-10-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: gonna have to set up a workqueue

2017-10-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: FUCK

2017-10-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: right we got rid of the dumb goto

2017-10-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: try ensuring we let task running
	happen

2017-10-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c: oops forgot to bind my mask to 0

2017-10-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/Makefile, drivers/cpufreq/mx_hotplug.c,
	drivers/cpufreq/mx_hotplug_wip.c: mother FUCKER

2017-10-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/mx_hotplug.c, drivers/cpufreq/mx_hotplug_wip.c: 
	trying something nuts

2017-10-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: intelliplug 15.8 - break early
	if we are already at our target

2017-10-27  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/Kconfig,
	drivers/cpufreq/Makefile, drivers/cpufreq/cpufreq_interactive.c,
	drivers/cpufreq/mx_hotplug.c, drivers/cpufreq/{ix_hotplug.c =>
	mx_hotplug_wip.c}: starting on mx_hotplug - userspace facing api is
	just a dummy until i get my wip ready to go - also a small
	interactive fix i think

2017-10-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c: built myself a little load/nr_running avg
	reference to monitor info

2017-10-26  robcore <robpatershuk@gmail.com>

	* include/linux/sysfs.h: added some helpers for storing and showing
	funcs

2017-10-26  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, kernel/sched/core.c,
	kernel/sched/loadavg.c, kernel/sched/sched_avg.c: some hacking/some
	fixing of signed to unsigned for cpu vars, and prep for a little
	debug interface im building myself

2017-10-26  robcore <robpatershuk@gmail.com>

	* kernel/sched/loadavg.c: loadavg - we were using a long for "cpu"
	and an int for ave_nr_running, very backwards. fixed

2017-10-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/ix_hotplug.c: actually thats probably a bad idea

2017-10-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c, drivers/cpufreq/ix_hotplug.c: 
	trying some ix adjustments before dropping it entirely

2017-10-26  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/Kconfig,
	drivers/cpufreq/Makefile, drivers/cpufreq/ix_hotplug.c: trying out
	instigatorxs hotplug driver

2017-10-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/ix_hotplug.c: doing some work with instigators hp

2017-10-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: thinking out loud

2017-10-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: cpufreq - remove unused policy
	arguement from cpufreq_parse_governor

2017-10-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: get rid of unnecessary vars
	in acpuclock

2017-10-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: waste of time

2017-10-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: trying a thing again

2017-10-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: trying out the ol "set policy
	cur" routine in the cpufreq driver again

2017-10-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: hardlimit -
	update the reapplication process to reflect changes in the cpufreq
	core regarding per-policy vs. per-cpu structures. pass policy to
	hardlimit functions, and use a switch to indicate whether it should
	do a final update. also, get rid of update scaling limits now that
	reapply hardlimits is a part of the core. the whole process can
	simply be one function. ...also fixup our check for cur limits in
	the "check_cpu_hardlimit" routine, this way we retry 2 more times
	before giving up

2017-10-25  robcore <robpatershuk@gmail.com>

	* mm/shmem.c: mm: shmem: check for mapping owner before
	dereferencing

2017-10-24  robcore <robpatershuk@gmail.com>

	* drivers/leds/ledtrig-backlight.c: more fb notif/bl updating. can
	you see im on a long term mission?

2017-10-24  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: make the ordering of my open recovery script
	smarter. also, create and push it for adb wireless condition,
	despite the pending manual reboot

2017-10-24  robcore <robpatershuk@gmail.com>

	* drivers/video/backlight/backlight.c: throw in some backlight
	debugging for my frame of reference

2017-10-24  robcore <robpatershuk@gmail.com>

	* .gitignore, openrecoveryscript-last.txt: removed last ors and
	added it to gitignore

2017-10-24  robcore <robpatershuk@gmail.com>

	* openrecoveryscript-last.txt: nothing important

2017-10-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/platsmp.c, openrecoveryscript-last.txt: oh
	interesting, smp must setup nr_cpu_ids to be safe for cpu ops

2017-10-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/platsmp.c: wait now i will try something

2017-10-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/platsmp.c, openrecoveryscript-last.txt: i wanna
	see something

2017-10-24  robcore <robpatershuk@gmail.com>

	* drivers/misc/cpumask_calculator.c, openrecoveryscript-last.txt: 
	get rid of redundant kobject

2017-10-24  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	drivers/input/touchscreen/virtual_wakeup_key.c,
	drivers/misc/Kconfig, drivers/misc/Makefile,
	drivers/misc/cpumask_calculator.c: wrote a quick little cpumask
	calculator (super inappropriate, should definitely be a userspace
	program, but this will work perfectly for synapse), and simplified
	the virtual wakeup key driver

2017-10-24  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: missing comma

2017-10-24  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c, openrecoveryscript-last.txt: more
	led fun

2017-10-24  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: fuck it this bad boy is 4.0

2017-10-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/platsmp.c, kernel/cpu_hardplug.c,
	openrecoveryscript-last.txt: there fixed it, no need for the added
	prints, we have sysfs in hardplug to verify if anything goes wrong

2017-10-24  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: lets see if i made this appropriately
	self-correcting

2017-10-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/platsmp.c, kernel/cpu_hardplug.c,
	openrecoveryscript-last.txt: hopefully fixed us all up...
	(headscratcher this is)

2017-10-24  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: updated my script to flash and reboot if twrp
	detected

2017-10-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/platsmp.c, kernel/cpu_hardplug.c: i think my
	alterations to platsmp were a bad idea, so went back to usual there
	and threw nonboot initialization into hardplug

2017-10-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/platsmp.c: just a derp

2017-10-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/platsmp.c, kernel/cpu_hardplug.c: nevermind i
	think smp init happens before even the core initcall

2017-10-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/platsmp.c, kernel/cpu_hardplug.c: that woulda
	fucked us, i think we actually get our possible mask from the kernel
	smp init sequence, not platform

2017-10-24  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: aaaaand put the comma in the right place
	rob. jeeze i need a break i cant even write a simple print statement

2017-10-24  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: shit i knew my naming would get frustrating

2017-10-24  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: syntax is key

2017-10-24  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: hardplug 3.6 - utilize some of our new mask
	techniques

2017-10-24  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/platsmp.c, arch/arm/mach-msm/pmu.c,
	include/linux/cpumask.h, kernel/cpu.c, kernel/cpu_hardplug.c: this
	is an idea, create a "nonboot" cpu mask to have a constant cpumask
	that can easily just be copied and used for other functions

2017-10-24  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: nevermind it works!

2017-10-24  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: just for my testing

2017-10-24  robcore <robpatershuk@gmail.com>

	* build_kernel.sh, openrecoveryscript: more fixups

2017-10-24  robcore <robpatershuk@gmail.com>

	* build_kernel.sh, openrecoveryscript: aaaand im proud of twrp for
	finding the script even though i had my full build machine path in
	front of the zip name

2017-10-24  robcore <robpatershuk@gmail.com>

	* build_kernel.sh, openrecoveryscript: oops my rm -f did NOT belong
	in the openrecoveryscript, not scripting format rob duh

2017-10-24  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: do the heavy lifting on our end, not through adb

2017-10-24  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: trying out some open recovery fun

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: and more and more and more

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: little more conservative

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: extend second half again

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: moar;

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: and a bit more

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: and more

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: going nuts with the led stuff for
	fun

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: trying another thing leds

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: leds

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: extend leds some more

2017-10-23  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: revert workqueue commit - not for us yet

2017-10-23  robcore <robpatershuk@gmail.com>

	* kernel/workqueue.c: workqueue: replace pool->manager_arb mutex
	with a flag

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: leds - extend the shutdown sequence
	waaaay further. will probably go even further than this

2017-10-23  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: my compiler doesnt like that as static?

2017-10-23  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: cpu/hotplug: Reset node state after operation

2017-10-23  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, kernel/cpu_hardplug.c: use an int returning
	defined enums for is_cpu_allowed - hardplug 3.4

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_intelliactive.c: just give up on input for
	now

2017-10-23  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, kernel/cpu.c, kernel/cpu_hardplug.c: hardplug
	3.3 - use cpumasks for screen on/off cpus to make the whole process
	much more efficient

2017-10-23  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: there that makes more sense. the mask now
	keeps track of cpus that are allowed online.

2017-10-23  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: kinda did this the opposite of how id like
	to, but i think i understand cpumasks better now

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_intelliactive.c: trying out cafactives
	ondemand booster for a little mini boost in intelliactive

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: oops extraneous bracket

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: thermal - ensure we do core control
	if core threshold is less than freq threshold again

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_machinex_gov_attr.c: make intelliactives
	tunables make sense

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c, include/linux/msm_thermal.h: a wild
	attempt at using proper cpumask functions for our thermal functions

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c, include/linux/msm_thermal.h: revert
	for now

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c, include/linux/msm_thermal.h: dunno
	if i wanna do all this work

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: aaaand actually define max idx
	duuuuhhhh

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: oops idx needs to go up to max

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: thermal - change hardcoded fourteen
	to a simple define, speed up polling rate by 40ms, and remove
	can_mitigate in lieu of the two separate checks because they are NOT
	the same thing (when it comes to the workqueue, we need to
	differentiate between suspended and cpufreq readiness)

2017-10-23  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/thermal/msm_thermal.c: looks
	like i need to keep thermal policy in check, also just hardcode
	thermal limit high

2017-10-22  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_intelliactive.c: guess using two phase in
	the struct itself is redundant

2017-10-22  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_intelliactive.c: just in case

2017-10-22  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_intelliactive.c: this probably wont work

2017-10-22  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_intelliactive.c: fix up

2017-10-22  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_intelliactive.c: ditch the handler for now

2017-10-22  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_intelliactive.c: trying another method
	with intelliactive input boost. if it doesnt work then meh

2017-10-22  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_intelliactive.c: add in fauxs badass idea
	for a literal interactive input boost (just for intelli though)

2017-10-22  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	drivers/cpufreq/cpufreq_intelliactive-orig.c,
	drivers/cpufreq/cpufreq_intelliactive.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.h: forward-ported
	intelliactive to 4.14

2017-10-22  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: extend the fad out shutdown led
	animation

2017-10-22  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: move the timer_is_busy
	check to timer_slack_required

2017-10-22  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.h: fixup stupid
	interactives ONE long type

2017-10-22  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.h: Interactive - prevent
	slack timer BUGs when starting/stopping the policy during suspend
	and resume. for starters, del_timer_sync is a bad idea when we only
	initialize the slack timer on boot, and not on governor start.  Yet
	we were destroying the handler on stop...doesnt make sense. also,
	ensure that we arent restarting a timer that is pending (also a bug,
	alongside our registration making the slack_timer null). also,
	brought in some of the machinex_gov_attrs for permanent sysfs
	handling

2017-10-22  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.h, kernel/time/timer.c: 
	timers: Fix excessive granularity of new timers after a nohz idle

2017-10-22  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: get rid of ilock
	init/destroy and its association with ipolicy

2017-10-22  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	drivers/cpufreq/cpufreq_interactive.c: add ipolicy mutex lock for
	cpufreq target load calc and limits

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/hid/hid-multitouch.c, drivers/input/evdev.c,
	drivers/input/ff-core.c, drivers/input/input-mt.c,
	drivers/input/input.c, drivers/input/joydev.c,
	drivers/input/misc/uinput.c, drivers/input/mouse/alps.c,
	drivers/input/mouse/cypress_ps2.c, drivers/input/mouse/elantech.c,
	drivers/input/mouse/sentelic.c, drivers/input/mouse/synaptics.c,
	drivers/input/mousedev.c, drivers/input/touchscreen/cyttsp_core.c,
	drivers/input/touchscreen/egalax_ts.c,
	drivers/input/touchscreen/ili210x.c,
	drivers/input/touchscreen/mms114.c,
	drivers/input/touchscreen/penmount.c,
	drivers/input/touchscreen/wacom_w8001.c, include/linux/input.h,
	include/linux/input/mt.h, include/uapi/linux/input.h: possed

2017-10-21  robcore <robpatershuk@gmail.com>

	* pos.sh: fuck it possing

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c: 
	Input-evdev-fix-bug-in-checking-duplicate-clock-change

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c, include/uapi/linux/input.h: Input: evdev -
	add event-mask API

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c: Input-evdev-do-not-report-errors-from-flush

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/ff-core.c: Input-ff-core-use-new-debug-macros

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input-mt.c: Input-mt-Fix-input_mt_get_slot_by_key.

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input-mt.c: 
	Input-MT-make-slot-assignment-work-for-overcovered

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c: 
	Input-evdev-do-not-queue-SYN_DROPPED-if-queue-is-empty

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input-mt.c, drivers/input/mouse/cypress_ps2.c,
	include/linux/input/mt.h: 
	Input-MT-add-support-for-balanced-slot-assignment.

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c: 
	Input-evdev-flush-pending-events-on-clock-type-change

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c: Input-evdev-add-CLOCK_BOOTTIME-support

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input.c: 
	Input-automatically-set-EV_ABS-bit-in-input_set_abs

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c: Input-evdev-fix-EVIOCG-type-ioctl

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input-mt.c: Input-fix-used-slots-detection-breakage.

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input-mt.c, include/linux/input/mt.h: 
	Input-MT-make-slot-cleanup-callable-outside-mt_sync

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c: input-evdev-Use-ktime_mono_to_real

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c: 
	Input-don-t-modify-the-id-of-ioctl-provided-ff-effect

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input.c: nput-remove-a-redundant-max-call.

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c, include/uapi/linux/input.h: 
	Input-evdev-add-EVIOCREVOKE-ioctl.

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c: 
	Input-evdev-flush-queues-during-EVIOCGKEY-like-ioctl.

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input-mt.c, include/linux/input/mt.h: 
	Input-MT-handle-semi-mt-devices-in-core.

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input-mt.c: 
	Input-MT-do-not-apply-filtering-on-emulated-events

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input-mt.c, include/linux/input/mt.h: 
	Input-mt-add-input_mt_is_used.

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input-mt.c: 
	Input-fix-sparse-warning-in-multitouch-code.

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c, drivers/input/joydev.c,
	drivers/input/mousedev.c: 
	Input-fix-use-after-free-introduced-with-dynamic-minors

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c, drivers/input/input.c,
	drivers/input/joydev.c, drivers/input/mousedev.c,
	include/linux/input.h: Input: extend the number of event (and other)
	devices

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input-mt.c: 
	Input-MT-Allow-legacy-pressure-computation

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input-mt.c, include/linux/input/mt.h: 
	Input-MT-Get-slot-by-key

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input-mt.c, include/linux/input/mt.h: 
	Input-MT-Add-in-kernel-tracking

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input-mt.c, include/linux/input/mt.h: 
	Input-MT-Handle-frame-synchronization-in-core.

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/hid/hid-multitouch.c, drivers/input/input-mt.c,
	drivers/input/misc/uinput.c, drivers/input/mouse/alps.c,
	drivers/input/mouse/elantech.c, drivers/input/mouse/sentelic.c,
	drivers/input/mouse/synaptics.c,
	drivers/input/touchscreen/cyttsp_core.c,
	drivers/input/touchscreen/egalax_ts.c,
	drivers/input/touchscreen/ili210x.c,
	drivers/input/touchscreen/mms114.c,
	drivers/input/touchscreen/penmount.c,
	drivers/input/touchscreen/wacom_w8001.c, include/linux/input/mt.h: 
	Input-MT-Add-flags-to-input_mt_init_slots

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c: Input: evdev - Add the events() callback

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input.c: Input-Make-sure-we-follow-all-EV_KEY-events

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c, drivers/input/input-mt.c,
	drivers/input/input.c, include/linux/input.h,
	include/linux/input/mt.h:  Input: Break out MT data;

2017-10-21  robcore <robpatershuk@gmail.com>

	* mm/pagewalk.c: pagewalk broke things

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/blu_plug.c: minor blu plug adjustments

2017-10-21  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: cool input leds works

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/ff-core.c, include/uapi/linux/input.h: dox

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input.c, include/linux/input.h: 
	Input-improve-autorepeat-initialization.;

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/ff-core.c: 
	Input-ff-core-silence-an-underflow-warning.

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input-leds.c: Input-LEDs-skip-unnamed-LEDs

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/ff-core.c: ditto ff-core

2017-10-21  robcore <robpatershuk@gmail.com>

	* drivers/input/input.c: 
	Input-use-for_each_set_bit-where-appropriate

2017-10-21  robcore <robpatershuk@gmail.com>

	* Documentation/leds/leds-class.txt, drivers/input/Kconfig,
	drivers/input/Makefile, drivers/input/input-leds.c,
	drivers/leds/Kconfig: Input-export-LEDs-as-class-devices-in-sysfs

2017-10-21  robcore <robpatershuk@gmail.com>

	* mm/pagewalk.c: little fixup in pagewalk

2017-10-21  robcore <robpatershuk@gmail.com>

	* mm/bootmem.c: looks like i no longer need alloc_bootmem_section

2017-10-20  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/blu_plug.c: 
	cleaned up blu plug and am gonna try it out again

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/blu_plug.c: doing a little blu plug work. might
	bring it back"

2017-10-20  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: turn off cpuquiet. it works, but
	is not quite as adequate as intelli

2017-10-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/sched.h: oops how did you get in there

2017-10-20  robcore <robpatershuk@gmail.com>

	* include/linux/suspend.h: fix up hibernation defines

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpuquiet/governors/balanced.c,
	drivers/cpuquiet/governors/rqbalance.c: fix some suspend stuff

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpuquiet/governors/balanced.c,
	drivers/cpuquiet/governors/runnable_threads.c: no more pm qos

2017-10-20  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: looks like turning off stats is a
	good idea

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpuquiet/governors/balanced.c,
	drivers/cpuquiet/governors/rqbalance.c: more cputime fixes

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpuquiet/cpuquiet-common.c,
	drivers/cpuquiet/cpuquiet-msm.c: no __cpuinit

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpuquiet/governor.c: strncasecmp

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpuquiet/driver.c: we dont have asm cputime, we switched
	to include/linux

2017-10-20  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: set up config ops

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpuquiet/governors/userspace.c: make the userspace
	cpuquiet governor a dummy that does nothing

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpuquiet/cpuquiet-common.c,
	drivers/cpuquiet/governors/balanced.c,
	drivers/cpuquiet/governors/runnable_threads.c: import cpu quiet
	framework with some adaptations for our current source

2017-10-20  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, arch/x86/Kconfig, drivers/Makefile,
	drivers/cpuquiet/Kconfig, drivers/cpuquiet/Makefile,
	drivers/cpuquiet/cpuquiet-common.c,
	drivers/cpuquiet/cpuquiet-msm.c, drivers/cpuquiet/cpuquiet.c,
	drivers/cpuquiet/cpuquiet.h, drivers/cpuquiet/cpuquiet_attribute.c,
	drivers/cpuquiet/driver.c, drivers/cpuquiet/governor.c,
	drivers/cpuquiet/governors/Makefile,
	drivers/cpuquiet/governors/balanced.c,
	drivers/cpuquiet/governors/rqbalance.c,
	drivers/cpuquiet/governors/runnable_threads.c,
	drivers/cpuquiet/governors/userspace.c, drivers/cpuquiet/sysfs.c,
	include/linux/cpuquiet.h: bring in the cpuquiet framework

2017-10-20  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: sched updates (todo - turn all of our preempt
	functions into wrapper ones)

2017-10-20  robcore <robpatershuk@gmail.com>

	* include/linux/rculist.h, include/linux/rcupdate.h,
	include/linux/srcu.h, kernel/rcu/srcutree.c, kernel/rcu/sync.c,
	kernel/rcu/tree.c: dox

2017-10-20  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: 
	rcu-Remove-extraneous-READ_ONCE-s-from-rcu_irq_-enter

2017-10-20  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/input/omniboost.c: autosmp
	is more trouble than its worth. stop trying to make fetch work
	gretchen

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: route everything through prework

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: except for in input boost

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: get rid of cycle count, work towards
	ensuring that the queue is always rescheduled one way or another

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: turn off should boost once we have
	boosted

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: sweet - now cycle down again after
	touchboost

2017-10-20  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: trying out the old config for cpus
	up/down

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: oops

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: k i think this might be foolish

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: just make cycle a single param

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: break if we hit our target

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: fix a derp

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: check for hardplug

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: restructure so that we handle bringing
	down cpus first, also, restructure boosting so we only either
	reschedule work or bring up cpus if allowed

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: restructure autosmp to stop wasting
	instructions, and suit a per-cpu setup.

2017-10-19  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/autosmp.c: did
	some cool shit with autosmp to try again

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: fuck it i give up

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: this thing is a circus

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: put some of the init
	functions back in gov register...and other stuf...this governor
	makes no fucking sense

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: we dont handle the
	transition latency in the govs anymore either

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: had to move the noop timer

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: aaand just took care of an
	error

2017-10-19  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	drivers/cpufreq/cpufreq_interactive.c: right no more io busy bs

2017-10-19  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: trying interactive again,
	start stop the kthread when gov is inited/exited. not during
	registration

2017-10-18  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: i hate irqs

2017-10-18  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c: probably dont need the locking

2017-10-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: its not ready

2017-10-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/autosmp.c: the
	fuck how did my store routine get deleted?

2017-10-18  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/autosmp.c, drivers/cpufreq/cpufreq.c: i think i
	know why asmp wasnt working. fucking leftover modparam code

2017-10-18  robcore <robpatershuk@gmail.com>

	* include/linux/cpufreq.h: that was defined wrong from when i was
	slightly more stupid than i am now

2017-10-18  robcore <robpatershuk@gmail.com>

	* drivers/input/omniboost.c, include/linux/cpufreq.h: oops fix my
	omniboost stuff

2017-10-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: autosmp is a no go

2017-10-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/autosmp.c,
	drivers/cpufreq/cpufreq.c, drivers/cpufreq/intelli_hotplug.c,
	drivers/input/omniboost.c, include/linux/cpufreq.h: modernized
	AutoSMP a bit to try it out

2017-10-18  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.h: working on converting
	interactive to a usable governor

2017-10-18  robcore <robpatershuk@gmail.com>

	* drivers/leds/leds-an30259a.c: little led fun

2017-10-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: there

2017-10-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: too lazy reverting

2017-10-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: trying out pwm again

2017-10-18  robcore <robpatershuk@gmail.com>

	* Documentation/pwm.txt, drivers/pwm/core.c, include/linux/pwm.h: 
	pwm updates

2017-10-18  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/dma.c: what is the fucking point of adding pm
	runtime functions that do nothing?

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/alucard_hotplug.c,
	drivers/cpufreq/bricked_hotplug.c, drivers/cpufreq/lazyplug.c,
	drivers/cpufreq/msm_sleeper.c: fix my gotos and such for hotplug
	ready condition, if the driver is (unlikely) enabled before the
	cpufreq platform driver is ready, we would still want the driver to
	reschedule its ops

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/bricked_hotplug.c, drivers/cpufreq/lazyplug.c: 
	lazyplug fix - dont do anything if userspace sets the previous value

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/alucard_hotplug.c,
	drivers/cpufreq/bricked_hotplug.c, drivers/cpufreq/lazyplug.c,
	drivers/cpufreq/msm_sleeper.c, kernel/cpu_hardplug.c: fixes

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c, kernel/cpu_hardplug.c: hardplug
	all cpus during intelli work cycle

2017-10-17  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: just kidding dont wanna do synapse
	stuff

2017-10-17  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	drivers/cpufreq/alucard_hotplug.c,
	drivers/cpufreq/bricked_hotplug.c, drivers/cpufreq/lazyplug.c,
	drivers/cpufreq/msm_sleeper.c: disable msm sleeper for now because i
	wanna build but am too lazy to add the shit right now

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/lazyplug.c: setup a power suspend resume function
	for re-queueing

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/bricked_hotplug.c,
	drivers/cpufreq/intelli_hotplug.c, drivers/cpufreq/lazyplug.c: lazy
	plug - separate init from start and stop using a param callback

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/alucard_hotplug.c,
	drivers/cpufreq/intelli_hotplug.c: intelli - position our conditions
	for thermal and hardplug strategically to prevent bringing cpus up
	or down if controlled by the two overrides

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/alucard_hotplug.c: alucardhp - ensure that we
	restart the workqueue upon resume from suspend

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/alucard_hotplug.c: alucard hp - dont run the
	worker if if (!hotplug_ready || !is_display_on())

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: hardplug all cpus from intelli
	after (re)cycling cpus

2017-10-17  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: get rid of notifier - gonna go about it
	differently

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: oops up prepare not frozen

2017-10-17  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: may as well ensure that
	cpu_from_hardplug[cpu] is always consistent

2017-10-17  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: and another in hardplug

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: thats all of them

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: more intelli range checks

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c, kernel/cpu_hardplug.c: make the
	notifier just for cpu online, and fix the naming for intelli

2017-10-17  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, kernel/cpu_hardplug.c: cpu_allowed[] var no
	longer needs to be defined outside of the driver, and fix formatting

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c, kernel/cpu_hardplug.c: hardplug
	and intelliplug - add some extra insurance that cpus will go down
	when hardplug requires it. also hardplug - utilize my amateur
	knowledge of arrays now that i can sorta work with them

2017-10-17  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event.c,
	arch/arm/mach-msm/acpuclock-krait.c, arch/arm/mach-msm/cache_erp.c,
	arch/arm/mach-msm/hotplug.c, arch/arm/mach-msm/msm_rq_stats.c,
	arch/arm/mach-msm/perf_trace_counters.c,
	arch/arm/mach-msm/rpm_resources.c,
	drivers/cpufreq/intelli_hotplug.c, hcpu.txt,
	include/linux/cpuhotplug.h, include/linux/ring_buffer.h,
	kernel/profile.c, kernel/trace/ring_buffer.c, kernel/trace/trace.c: 
	possed

2017-10-17  robcore <robpatershuk@gmail.com>

	* pos.sh: possing back to P61 - the build is freakin magic

2017-10-17  robcore <robpatershuk@gmail.com>

	* kernel/trace/ring_buffer.c: ret

2017-10-17  robcore <robpatershuk@gmail.com>

	* kernel/trace/ring_buffer.c: more rb fixes

2017-10-17  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: fix intelli

2017-10-17  robcore <robpatershuk@gmail.com>

	* kernel/trace/ring_buffer.c: oops add the hlist node to the struct

2017-10-17  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cache_erp.c: fix cache erp
	CPUHP_CACHE_ERP_PREPARE

2017-10-17  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event.c,
	arch/arm/mach-msm/acpuclock-krait.c, arch/arm/mach-msm/cache_erp.c,
	arch/arm/mach-msm/perf_trace_counters.c,
	arch/arm/mach-msm/rpm_resources.c,
	drivers/cpufreq/intelli_hotplug.c, include/linux/cpuhotplug.h,
	include/linux/ring_buffer.h, kernel/trace/ring_buffer.c,
	kernel/trace/trace.c: re-arrange, add ring buffer prep call back

2017-10-17  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cache_erp.c: fix cache erp

2017-10-17  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cache_erp.c: gotta return 0

2017-10-17  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/perf_trace_counters.c: and more

2017-10-17  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/perf_trace_counters.c: oops actually fixed it

2017-10-17  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/perf_trace_counters.c: definitely didnt think we
	built this, but we do so i fixed it

2017-10-17  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c, include/linux/cpuhotplug.h: 
	just use dynamic hp for some of the stuff

2017-10-17  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event.c,
	arch/arm/mach-msm/acpuclock-krait.c, arch/arm/mach-msm/cache_erp.c,
	arch/arm/mach-msm/hotplug.c, arch/arm/mach-msm/msm_rq_stats.c,
	arch/arm/mach-msm/perf_trace_counters.c,
	arch/arm/mach-msm/rpm_resources.c,
	drivers/cpufreq/intelli_hotplug.c, hcpu.txt,
	include/linux/cpuhotplug.h: everything is pretty much converted
	except for blk mq - which i intended to do so i could leave it as
	the only remaining notifier user. now to figure out ordering...

2017-10-16  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h: gonna try a slightly different slot

2017-10-16  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/rpm_resources.c, hcpu.txt,
	include/linux/cpuhotplug.h: semi guessing trying to set up msm rpm
	with cpuhp

2017-10-16  robcore <robpatershuk@gmail.com>

	* hcpu.txt, include/linux/cpuhotplug.h, kernel/profile.c: 
	kernel:profile: cpuhp

2017-10-16  robcore <robpatershuk@gmail.com>

	* 10, build_kernel.sh: script - get rid of temp files

2017-10-16  robcore <robpatershuk@gmail.com>

	* mm/zswap.c: there we go

2017-10-16  robcore <robpatershuk@gmail.com>

	* mm/zswap.c: i was using the wrong registration anyway

2017-10-16  robcore <robpatershuk@gmail.com>

	* mm/zswap.c: nother ret

2017-10-16  robcore <robpatershuk@gmail.com>

	* mm/zswap.c: zswap return 0

2017-10-16  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: oops ret

2017-10-16  robcore <robpatershuk@gmail.com>

	* fs/buffer.c, hcpu.txt, include/linux/cpuhotplug.h,
	kernel/printk/printk.c: fs buffer

2017-10-16  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h, lib/radix-tree.c: radix

2017-10-16  robcore <robpatershuk@gmail.com>

	* hcpu.txt, include/linux/cpuhotplug.h, mm/memcontrol.c: memcontrol

2017-10-16  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h, mm/page_alloc.c: page alloc

2017-10-16  robcore <robpatershuk@gmail.com>

	* hcpu.txt, mm/vmscan.c: vmscan

2017-10-16  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h, mm/zsmalloc.c: cpuhp - zsmalloc

2017-10-16  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h, mm/zswap.c: hotplug state machine -
	give zswap some love

2017-10-16  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h, mm/vmstat.c: vmstats - you are going
	full cpuhp too

2017-10-16  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h, include/net/flow.h, net/core/flow.c,
	net/xfrm/xfrm_policy.c: net: flowcache - convert to hp state machine

2017-10-16  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h, net/core/dev.c: converted
	net/core/dev.c to hotplug state machine

2017-10-16  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c: i think...to match upstream, we
	are supposed to reserve and then free the memory regions that we
	call memblock_remove for...?

2017-10-16  robcore <robpatershuk@gmail.com>

	* drivers/input/touchscreen/sweep2sleep.c,
	drivers/input/touchscreen/virtual_wakeup_key.c: make our virtual
	input drivers late initcalls so they dont interfere with our other
	input drivers

2017-10-16  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c, hcpu.txt: remove
	msm_contig_mem_size from pmem reservation, we already reserve it

2017-10-15  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_conservative.c: just use smp_processor_id
	for conservative

2017-10-15  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_conservative.c: fixed it

2017-10-15  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_conservative.c: oh fuck i fucked
	conservative up but am on it

2017-10-15  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_conservative.c,
	drivers/cpufreq/cpufreq_governor.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.h,
	drivers/cpufreq/cpufreq_ondemand.c,
	kernel/sched/cpufreq_schedutil.c: there. now that i can do arrays
	semi-effectively, i am using them to implement persistent per-cpu
	governor tunables for all three of the existing tunable govs

2017-10-15  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/Kconfig,
	drivers/cpufreq/Makefile, drivers/cpufreq/cpufreq_governor.h,
	drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.h: setup the machinex gov
	attributes in a way that will make more sense with our governor
	structure

2017-10-15  robcore <robpatershuk@gmail.com>

	* fs/super.c: re-enable emergency remounting in reverse

2017-10-15  robcore <robpatershuk@gmail.com>

	* Makefile: turn off unsafe loop optimizations

2017-10-15  robcore <robpatershuk@gmail.com>

	* Makefile: added a warning for any unsafe loop optimizations that
	crop up

2017-10-15  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/msm_fb.h: good catch new gcc, you cant increment
	a bool

2017-10-15  robcore <robpatershuk@gmail.com>

	* drivers/regulator/pm8xxx-regulator.c: fix another double const

2017-10-15  robcore <robpatershuk@gmail.com>

	* drivers/media/common/tuners/tuner-xc2028.c: fix a || that shoulda
	been a |

2017-10-15  robcore <robpatershuk@gmail.com>

	* drivers/hid/Makefile, drivers/hid/hid-samsung.c: turn off a
	warning for hid samsung

2017-10-15  robcore <robpatershuk@gmail.com>

	* drivers/hid/hid-samsung.c, sound/soc/msm/msm-pcm-voice.c: fix a
	bug in in samsung kbd input mapping (Wswitch-unreachable);

2017-10-15  robcore <robpatershuk@gmail.com>

	* drivers/barcode_emul/Makefile: disable pointer compare locally in
	barcode emul

2017-10-15  robcore <robpatershuk@gmail.com>

	* Makefile: its -Wno-format-truncation

2017-10-15  robcore <robpatershuk@gmail.com>

	* Makefile: disable -Wformat-truncation

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/mmc/host/msm_sdcc.c: properly configure proactive suspend
	in sdcc (just in case im tired and dumb

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/misc/pmem.c: can i at least not use runtime pm in
	pointless pmem?

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/media/video/msm/msm.c, drivers/media/video/msm/msm.h,
	drivers/media/video/msm/msm_camera.c,
	drivers/media/video/msm/msm_isp.c,
	drivers/media/video/msm/server/msm_cam_server.c,
	drivers/video/msm/vidc/1080p/ddl/vcd_ddl.c,
	drivers/video/msm/vidc/1080p/ddl/vcd_ddl_utils.c,
	drivers/video/msm/vidc/1080p/ddl/vcd_ddl_utils.h,
	drivers/video/msm/vidc/720p/ddl/vcd_ddl_utils.h,
	drivers/video/msm/vidc/common/enc/venc_internal.c, pos.sh: possed

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	arch/arm/mach-msm/board-8064-display.c,
	arch/arm/mach-msm/board-8064.c, arch/arm/mach-msm/board-8930.c,
	arch/arm/mach-msm/board-8960.c, arch/arm/mach-msm/board-jf_eur.c,
	arch/arm/mach-msm/board-msm7x27.c,
	arch/arm/mach-msm/board-msm7x30.c,
	arch/arm/mach-msm/board-msm8x60.c,
	arch/arm/mach-msm/devices-8960.c,
	arch/arm/mach-msm/devices-msm7x30.c,
	arch/arm/mach-msm/devices-msm8x60.c, arch/arm/mach-msm/hw3d.c,
	arch/arm/mach-msm/memory.c, arch/arm/mach-msm/qdsp6v2/fm.c,
	drivers/char/Kconfig, drivers/char/msm_rotator.c,
	drivers/crypto/msm/qce.c, drivers/crypto/msm/qcedev.c,
	drivers/gpu/msm/kgsl.c, drivers/gpu/msm/kgsl_drm.c,
	drivers/gpu/msm/kgsl_sharedmem.c,
	drivers/media/video/msm/gemini/msm_gemini_platform.c,
	drivers/media/video/msm/jpeg_10/msm_jpeg_platform.c,
	drivers/media/video/msm/mercury/msm_mercury_platform.c,
	drivers/media/video/msm/msm_camera.c,
	drivers/media/video/msm/msm_isp.c,
	drivers/media/video/msm/msm_mctl.c,
	drivers/media/video/msm/msm_mctl_buf.c,
	drivers/media/video/msm/msm_mctl_pp.c,
	drivers/media/video/msm/msm_mem.c,
	drivers/media/video/msm/vfe/msm_vfe_stats_buf.c,
	drivers/media/video/msm_wfd/enc-mfc-subdev.c,
	drivers/media/video/msm_wfd/wfd-ioctl.c,
	drivers/media/video/msm_wfd/wfd-util.h,
	drivers/media/video/videobuf-msm-mem.c,
	drivers/media/video/videobuf2-msm-mem.c, drivers/misc/Kconfig,
	drivers/misc/Makefile, drivers/misc/pmem.c, drivers/misc/tzic.c,
	drivers/video/msm/Kconfig, drivers/video/msm/mdp4_overlay.c,
	drivers/video/msm/mdp_ppp.c, drivers/video/msm/mdss/mdss_fb.c,
	drivers/video/msm/mdss/mdss_mdp_util.c, drivers/video/msm/msm_fb.c,
	drivers/video/msm/msm_fb_def.h,
	drivers/video/msm/vidc/common/dec/vdec.c,
	drivers/video/msm/vidc/common/enc/venc.c,
	drivers/video/msm/vidc/common/enc/venc_internal.c,
	drivers/video/msm/vidc/common/init/vidc_init.c,
	drivers/video/msm/vidc/common/vcd/vcd_sub.c,
	include/linux/android_pmem.h, include/media/msm/vidc_init.h,
	include/media/msm/vidc_type.h, pos.sh, sound/soc/msm/lpass-dma.c,
	sound/soc/msm/msm-compr-q6.c,
	sound/soc/msm/msm-lowlatency-pcm-q6.c,
	sound/soc/msm/msm-multi-ch-pcm-q6.c, sound/soc/msm/msm-pcm-afe.c,
	sound/soc/msm/msm-pcm-lpa-8930_kor.c,
	sound/soc/msm/msm-pcm-lpa-89x0.c, sound/soc/msm/msm-pcm-lpa.c,
	sound/soc/msm/msm-pcm-q6.c, sound/soc/msm/msm7kv2-pcm.c,
	sound/soc/msm/msm8x60-pcm.c, sound/soc/msm/qdsp6/q6asm.c,
	sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c,
	sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c,
	sound/soc/msm/qdsp6v2/msm-pcm-afe-v2.c,
	sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c,
	sound/soc/msm/qdsp6v2/msm-pcm-q6-v2.c,
	sound/soc/msm/qdsp6v2/q6asm.c: the fuck

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/media/video/msm/msm.c, drivers/media/video/msm/msm.h,
	drivers/media/video/msm/msm_camera.c,
	drivers/media/video/msm/msm_isp.c,
	drivers/media/video/msm/server/msm_cam_server.c,
	drivers/video/msm/vidc/1080p/ddl/vcd_ddl.c,
	drivers/video/msm/vidc/1080p/ddl/vcd_ddl_utils.c,
	drivers/video/msm/vidc/1080p/ddl/vcd_ddl_utils.h,
	drivers/video/msm/vidc/720p/ddl/vcd_ddl_utils.h,
	drivers/video/msm/vidc/common/enc/venc_internal.c: this was
	pointless

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	arch/arm/mach-msm/board-8064-display.c,
	arch/arm/mach-msm/board-8064.c, arch/arm/mach-msm/board-8930.c,
	arch/arm/mach-msm/board-8960.c, arch/arm/mach-msm/board-jf_eur.c,
	arch/arm/mach-msm/board-msm7x27.c,
	arch/arm/mach-msm/board-msm7x30.c,
	arch/arm/mach-msm/board-msm8x60.c,
	arch/arm/mach-msm/devices-8960.c,
	arch/arm/mach-msm/devices-msm7x30.c,
	arch/arm/mach-msm/devices-msm8x60.c, arch/arm/mach-msm/hw3d.c,
	arch/arm/mach-msm/memory.c, arch/arm/mach-msm/qdsp6v2/fm.c,
	drivers/char/Kconfig, drivers/char/msm_rotator.c,
	drivers/crypto/msm/qce.c, drivers/crypto/msm/qcedev.c,
	drivers/gpu/msm/kgsl.c, drivers/gpu/msm/kgsl_drm.c,
	drivers/gpu/msm/kgsl_sharedmem.c,
	drivers/media/video/msm/gemini/msm_gemini_platform.c,
	drivers/media/video/msm/jpeg_10/msm_jpeg_platform.c,
	drivers/media/video/msm/mercury/msm_mercury_platform.c,
	drivers/media/video/msm/msm_camera.c,
	drivers/media/video/msm/msm_isp.c,
	drivers/media/video/msm/msm_mctl.c,
	drivers/media/video/msm/msm_mctl_buf.c,
	drivers/media/video/msm/msm_mctl_pp.c,
	drivers/media/video/msm/msm_mem.c,
	drivers/media/video/msm/vfe/msm_vfe_stats_buf.c,
	drivers/media/video/msm_wfd/enc-mfc-subdev.c,
	drivers/media/video/msm_wfd/wfd-ioctl.c,
	drivers/media/video/msm_wfd/wfd-util.h,
	drivers/media/video/videobuf-msm-mem.c,
	drivers/media/video/videobuf2-msm-mem.c, drivers/misc/Kconfig,
	drivers/misc/Makefile, drivers/misc/pmem.c, drivers/misc/tzic.c,
	drivers/video/msm/Kconfig, drivers/video/msm/mdp4_overlay.c,
	drivers/video/msm/mdp_ppp.c, drivers/video/msm/mdss/mdss_fb.c,
	drivers/video/msm/mdss/mdss_mdp_util.c, drivers/video/msm/msm_fb.c,
	drivers/video/msm/msm_fb_def.h,
	drivers/video/msm/vidc/common/dec/vdec.c,
	drivers/video/msm/vidc/common/enc/venc.c,
	drivers/video/msm/vidc/common/enc/venc_internal.c,
	drivers/video/msm/vidc/common/init/vidc_init.c,
	drivers/video/msm/vidc/common/vcd/vcd_sub.c,
	include/linux/android_pmem.h, include/media/msm/vidc_init.h,
	include/media/msm/vidc_type.h, sound/soc/msm/lpass-dma.c,
	sound/soc/msm/msm-compr-q6.c,
	sound/soc/msm/msm-lowlatency-pcm-q6.c,
	sound/soc/msm/msm-multi-ch-pcm-q6.c, sound/soc/msm/msm-pcm-afe.c,
	sound/soc/msm/msm-pcm-lpa-8930_kor.c,
	sound/soc/msm/msm-pcm-lpa-89x0.c, sound/soc/msm/msm-pcm-lpa.c,
	sound/soc/msm/msm-pcm-q6.c, sound/soc/msm/msm7kv2-pcm.c,
	sound/soc/msm/msm8x60-pcm.c, sound/soc/msm/qdsp6/q6asm.c,
	sound/soc/msm/qdsp6v2/msm-compr-q6-v2.c,
	sound/soc/msm/qdsp6v2/msm-multi-ch-pcm-q6-v2.c,
	sound/soc/msm/qdsp6v2/msm-pcm-afe-v2.c,
	sound/soc/msm/qdsp6v2/msm-pcm-lpa-v2.c,
	sound/soc/msm/qdsp6v2/msm-pcm-q6-v2.c,
	sound/soc/msm/qdsp6v2/q6asm.c: this will fail instantly

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: WHY THE FUCK WOULD YOU DO ALL
	THE TEARDOWN WORK FOR CLOCKS YOU DIDNT ACQUIRE!!!!!!!?

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: IS_ERR_OR_NULL

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: a little more hackin

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: tried my best to smarten it up
	without breaking it

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/gadget/ci13xxx_msm_hsic.c,
	drivers/usb/host/ehci-msm-hsic.c, drivers/usb/host/ehci-msm2.c,
	drivers/usb/otg/msm_otg.c: REVERT ehci changes, did some review,
	will try something else

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/gadget/ci13xxx_msm_hsic.c,
	drivers/usb/host/ehci-msm-hsic.c, drivers/usb/host/ehci-msm2.c,
	drivers/usb/otg/msm_otg.c: there

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/usb/host/ehci-msm-hsic.c: gonna regret this

2017-10-14  robcore <robpatershuk@gmail.com>

	* Documentation/devicetree/bindings/arm/pmu.txt, arch/arm/Kconfig,
	arch/arm/Makefile, arch/arm/include/asm/cputype.h,
	arch/arm/include/asm/perf_event.h,
	arch/arm/include/asm/perftypes.h, arch/arm/include/asm/pmu.h,
	arch/arm/kernel/Makefile, arch/arm/kernel/irq.c,
	arch/arm/kernel/perf_event.c, arch/arm/kernel/perf_event_cpu.c,
	arch/arm/kernel/perf_event_msm.c,
	arch/arm/kernel/perf_event_msm_krait.c,
	arch/arm/kernel/perf_event_v6.c, arch/arm/kernel/perf_event_v7.c,
	arch/arm/kernel/perf_event_xscale.c, arch/arm/mach-msm/Makefile,
	arch/arm/mach-msm/perf_event_msm_krait_l2.c,
	arch/arm/mach-msm/perf_event_msm_l2.c, arch/arm/oprofile/common.c,
	arch/arm/perfmon/Makefile, arch/arm/perfmon/cp15_registers.h,
	arch/arm/perfmon/l2_cp15_registers.h, arch/arm/perfmon/mcrmrc.h,
	arch/arm/perfmon/per-axi.c, arch/arm/perfmon/per-axi.h,
	arch/arm/perfmon/per-process-perf.c, arch/arm/perfmon/per.c,
	arch/arm/perfmon/perf-smp.c, arch/arm/perfmon/perf-v7.c,
	arch/arm/perfmon/perf.h, pos.sh: possed

2017-10-14  robcore <robpatershuk@gmail.com>

	* Documentation/devicetree/bindings/arm/pmu.txt, arch/arm/Kconfig,
	arch/arm/Makefile, arch/arm/include/asm/cputype.h,
	arch/arm/include/asm/perf_event.h,
	arch/arm/include/asm/perftypes.h, arch/arm/include/asm/pmu.h,
	arch/arm/kernel/Makefile, arch/arm/kernel/irq.c,
	arch/arm/kernel/perf_event.c, arch/arm/kernel/perf_event_cpu.c,
	arch/arm/kernel/perf_event_msm.c,
	arch/arm/kernel/perf_event_msm_krait.c,
	arch/arm/kernel/perf_event_v6.c, arch/arm/kernel/perf_event_v7.c,
	arch/arm/kernel/perf_event_xscale.c, arch/arm/kernel/pmu.c,
	arch/arm/mach-msm/Makefile,
	arch/arm/mach-msm/perf_event_msm_krait_l2.c,
	arch/arm/mach-msm/perf_event_msm_l2.c, arch/arm/oprofile/common.c,
	arch/arm/perfmon/Makefile, arch/arm/perfmon/cp15_registers.h,
	arch/arm/perfmon/l2_cp15_registers.h, arch/arm/perfmon/mcrmrc.h,
	arch/arm/perfmon/per-axi.c, arch/arm/perfmon/per-axi.h,
	arch/arm/perfmon/per-process-perf.c, arch/arm/perfmon/per.c,
	arch/arm/perfmon/perf-smp.c, arch/arm/perfmon/perf-v7.c,
	arch/arm/perfmon/perf.h: i tried a thing but it was too much effort

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/perf_event.h, arch/arm/include/asm/pmu.h,
	arch/arm/kernel/perf_event.c, arch/arm/kernel/perf_event_v6.c,
	arch/arm/kernel/perf_event_v7.c,
	arch/arm/kernel/perf_event_xscale.c, arch/arm/kernel/pmu.c,
	arch/arm/oprofile/common.c: im gonna do a whole thing

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event.c: ARM-7441-1-perf-return-EOPNOTSUPP

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/oprofile/oprofile_perf.c: 
	oprofile-perf-Use-per-cpu-framework

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/alpha/kernel/perf_event.c, arch/arm/kernel/perf_event_v6.c,
	arch/arm/kernel/perf_event_v7.c,
	arch/arm/kernel/perf_event_xscale.c,
	arch/x86/kernel/cpu/perf_event.c,
	arch/x86/kernel/cpu/perf_event_intel.c,
	arch/x86/kernel/cpu/perf_event_intel_ds.c,
	arch/x86/kernel/cpu/perf_event_p4.c, include/linux/perf_event.h,
	kernel/events/core.c: perf: Pass last sampling period to
	perf_sample_data_init()

2017-10-14  robcore <robpatershuk@gmail.com>

	* Documentation/devicetree/bindings/arm/pmu.txt,
	arch/arm/include/asm/perf_event.h, arch/arm/include/asm/pmu.h,
	arch/arm/kernel/Makefile, arch/arm/kernel/perf_event.c,
	arch/arm/kernel/perf_event_cpu.c, arch/arm/kernel/perf_event_v6.c,
	arch/arm/kernel/perf_event_v7.c,
	arch/arm/kernel/perf_event_xscale.c, arch/arm/oprofile/common.c,
	drivers/oprofile/oprofile_perf.c: possed

2017-10-14  robcore <robpatershuk@gmail.com>

	* pos.sh: possing these

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/Makefile, arch/arm/kernel/perf_event_cpu.c: what
	am i doing, why am i not just using trlte

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/perf_event.h, arch/arm/include/asm/pmu.h,
	arch/arm/kernel/perf_event.c, arch/arm/kernel/perf_event_v6.c,
	arch/arm/kernel/perf_event_v7.c,
	arch/arm/kernel/perf_event_xscale.c: ARM: perf: prepare for moving
	CPU PMU code into separate file

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event.c, arch/arm/kernel/perf_event_v6.c,
	arch/arm/kernel/perf_event_v7.c,
	arch/arm/kernel/perf_event_xscale.c: ARM: perf: probe devicetree in
	preference to current CPU

2017-10-14  robcore <robpatershuk@gmail.com>

	* Documentation/devicetree/bindings/arm/pmu.txt,
	arch/arm/kernel/perf_event.c: bs

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/pmu.h, arch/arm/kernel/perf_event.c:  ARM: PMU: Add runtime PM Support

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/perf_event.h, arch/arm/include/asm/pmu.h,
	arch/arm/kernel/perf_event.c, arch/arm/kernel/perf_event_v6.c,
	arch/arm/kernel/perf_event_v7.c,
	arch/arm/kernel/perf_event_xscale.c, arch/arm/oprofile/common.c,
	drivers/oprofile/oprofile_perf.c: ARM: 7448/1: perf: remove
	arm_perf_pmu_ids global enumeration (and add krait, and make
	oprofile percpu

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event.c: ARM: 7441/1: perf: return
	-EOPNOTSUPP if requested mode exclusion is unavailable

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: version bump

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: intelli - stop reporting online
	cpus on every cpu change, its enough to get the value when we need
	it during up down work

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: dont need an else in thermal there

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event.c: revert perf

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: stop getting the freq table from
	policy in our get/set routines, we get it on init and use it without
	problems for the remainder of the drivers lifespan, these routines
	should be no different. on that note, change the name of our local
	table pointer to therm_table to help us distinguish

2017-10-14  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: remove unused notifier i had
	accidentally added back to thermal

2017-10-14  robcore <robpatershuk@gmail.com>

	* kernel/workqueue2.c: remove workqueue2

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, arch/arm/include/asm/pmu.h,
	arch/arm/include/uapi/asm/Kbuild,
	arch/arm/include/uapi/asm/perf_regs.h,
	arch/arm/kernel/hw_breakpoint.c, arch/arm/kernel/kprobes.c,
	arch/arm/kernel/perf_event.c, arch/arm/kernel/perf_event_v6.c,
	arch/arm/kernel/perf_event_v7.c,
	arch/arm/kernel/perf_event_xscale.c, arch/arm/kernel/perf_regs.c,
	arch/arm/mm/mmu.c, pos.sh: reverted all that, im confused

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event.c: im confused

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event.c: 
	Revert-ARM-7556-1-perf-fix-updated-event-period

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/hw_breakpoint.c, arch/arm/kernel/kprobes.c: pcpu -
	replace __get_cpu_var uses

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event.c: 
	ARM-perf-fix-group-validation-for-mixed-software-and-hw

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/Kconfig, arch/arm/include/uapi/asm/Kbuild,
	arch/arm/include/uapi/asm/perf_regs.h, arch/arm/kernel/perf_regs.c: 
	perf - add suppport for perf registers api

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event.c: 
	ARM-perf-remove-unnecessary-checks-for-idx-0

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event_v6.c, arch/arm/kernel/perf_event_v7.c,
	arch/arm/kernel/perf_event_xscale.c: 
	ARM-perf-don-t-pretend-to-support-counting-of-L1

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/hw_breakpoint.c, arch/arm/mm/mmu.c: dox

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/pmu.h, arch/arm/kernel/perf_event.c: 
	ARM-perf-consistently-use-arm_pmu-name-for-PMU-name.

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event_v7.c: 
	ARM-perf-check-ARMv7-counter-validity

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/pmu.h, arch/arm/kernel/perf_event.c,
	arch/arm/kernel/perf_event_v6.c, arch/arm/kernel/perf_event_v7.c,
	arch/arm/kernel/perf_event_xscale.c: ARM: perf: consistently use
	struct perf_event in arm_pmu functions

2017-10-14  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/perf_event.c: make perf events hcpu notifier less
	stupid

2017-10-13  robcore <robpatershuk@gmail.com>

	* block/blk-softirq.c, include/linux/cpuhotplug.h: convert blk
	softirq to state machine

2017-10-13  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: add the ol IRQ config

2017-10-13  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, include/trace/events/irq.h,
	kernel/softirq.c, tools/perf/util/trace-event-parse.c: fix IRQ_POLL
	defs

2017-10-13  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h, lib/irq_poll.c: FINALLY make it state
	machined

2017-10-13  robcore <robpatershuk@gmail.com>

	* lib/irq_poll.c: fix sched

2017-10-13  robcore <robpatershuk@gmail.com>

	* include/linux/irq_poll.h, lib/irq_poll.c: irq_poll: fold
	irq_poll_disable_pending into irq_poll_softirq

2017-10-13  robcore <robpatershuk@gmail.com>

	* include/linux/irq_poll.h, lib/irq_poll.c: fold irq sched prep into
	sched

2017-10-13  robcore <robpatershuk@gmail.com>

	* lib/irq_poll.c: irq_poll: dont disable new irq_poll instances

2017-10-13  robcore <robpatershuk@gmail.com>

	* kernel/sysctl.c: get rid of irq_poll_enabled

2017-10-13  robcore <robpatershuk@gmail.com>

	* block/Makefile, include/linux/blk-iopoll.h,
	include/linux/interrupt.h, include/linux/irq_poll.h,
	kernel/sysctl.c, lib/Kconfig, lib/Makefile, block/blk-iopoll.c =>
	lib/irq_poll.c: converted block iopoll to irq poll

2017-10-13  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: there it is! i was sanitizing the
	min/max to the wrong values!!!!!!! the index not freq!

2017-10-13  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: umm...okay how about just assigning
	i directly?

2017-10-13  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: oops make sure we break on the
	sucess case3

2017-10-13  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: thermal - avoid having to get the
	policy for each cpu when applying the new thermal limit low value.
	just get it for the boot cpu and use a temp variable to pass the
	information on to the thermal_limit_low for the other cpus

2017-10-13  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: fine run the algo while
	deciding idle

2017-10-13  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.h,
	drivers/gpu/msm/kgsl_pwrscale_trustzone.c: fix kgsl again, except
	dont screw it up like last time

2017-10-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c,
	drivers/cpufreq/intelli_hotplug.c, drivers/gpu/msm/kgsl_pwrctrl.h,
	drivers/gpu/msm/kgsl_pwrscale_trustzone.c, include/linux/cpu.h,
	include/linux/cpuhotplug.h, kernel/cpu.c, kernel/cpu_hardplug.c: 
	possed

2017-10-13  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-10-13  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: use our sanitize helper in
	intelli

2017-10-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c,
	drivers/cpufreq/intelli_hotplug.c: back to notify for you two

2017-10-13  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, include/linux/cpuhotplug.h: reverted that

2017-10-13  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h, include/linux/cpuhotplug.h: fuck it all

2017-10-13  robcore <robpatershuk@gmail.com>

	* block/Makefile, block/blk-mq-cpu.c, block/blk-mq.c,
	block/blk-mq.h, include/linux/blk-mq.h: revert you

2017-10-13  robcore <robpatershuk@gmail.com>

	* block/Makefile, block/blk-mq-cpu.c, block/blk-mq.c,
	block/blk-mq.h, include/linux/blk-mq.h: wellll fuck

2017-10-13  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h: put topology back where it was

2017-10-13  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.h,
	drivers/gpu/msm/kgsl_pwrscale_trustzone.c: gpu - screw everything
	else, just bump gpu freq to 450 on wake, and skip idle calulation if
	napping. all of this is taking too much of a toll on cpu utilization

2017-10-13  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h: hmm

2017-10-13  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: aaand forgot to add my clamped
	values

2017-10-13  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: clamp target_cpus to show

2017-10-13  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h: im...starting to guess this should go
	before notify prepare?

2017-10-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c,
	drivers/cpufreq/intelli_hotplug.c, include/linux/cpu.h,
	include/linux/cpuhotplug.h, kernel/cpu.c: i think...i think im not
	even supposed to add those to the enum in cpu.c

2017-10-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: looks like frozen doesnt
	matter

2017-10-13  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: cpu hardplug doesnt need a notifier because
	it is at the heart of the hotplugging core, also remove any
	references to exiting

2017-10-13  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: fuck it call that 15.6

2017-10-13  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: cpu out of range checks need to
	be first, especially if continues are involved

2017-10-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: oops

2017-10-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: easier just to do the percpu
	thing. also, check for out of range

2017-10-13  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c, include/linux/cpu.h,
	include/linux/cpuhotplug.h, kernel/cpu.c: convert intelliplug to
	state machine

2017-10-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: remove cpu array from
	machinex_freq_table to see if we can just base our table on cpu 0

2017-10-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: pm-8x60 still handles
	suspend, though this hasnt broken anything, it will...ensure we dont
	call hotplug callbacks when offlining nonboot cpus for suspend

2017-10-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c, include/linux/cpu.h,
	include/linux/cpuhotplug.h, kernel/cpu.c: give acpuclock its own
	spot in the state machine, and put it before the notifiers because
	something tells me it needs to be there

2017-10-13  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: vain attempt to convert
	acpuclock-krait to use the hotplug state machine

2017-10-12  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h, include/linux/relay.h, kernel/cpu.c,
	kernel/relay.c: convert relay to use hotplug statemachine

2017-10-12  robcore <robpatershuk@gmail.com>

	* include/linux/relay.h, kernel/relay.c: relay: use per cpu
	constructs

2017-10-12  robcore <robpatershuk@gmail.com>

	* kernel/relay.c: relay: add global only mode

2017-10-12  robcore <robpatershuk@gmail.com>

	* kernel/relay.c: some relay cleanup

2017-10-12  robcore <robpatershuk@gmail.com>

	* kernel/irq/ipi.c: same with send verify;

2017-10-12  robcore <robpatershuk@gmail.com>

	* kernel/irq/ipi.c: ipi - ipi_get_hwirq: check for cpu EQUAL TO or
	greater than nr_cpu_ids

2017-10-12  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/string.h, arch/arm/kernel/armksyms.c,
	arch/arm/lib/memset.S: ARM: implement memset32 & memset64

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: and use semi-colons

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: try throwing some scm
	idle calls in the other govs

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: make it slightly more
	conservative

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/adreno.c, drivers/gpu/msm/kgsl_device.h: linkers
	are fucking stupid

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: aaand put load hist in
	the wrong function

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: add in load hist, ps
	also fixed the touch boost indicator

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/adreno.c, drivers/gpu/msm/kgsl_device.h,
	drivers/gpu/msm/kgsl_pwrscale_machinactive.c,
	drivers/gpu/msm/kgsl_pwrscale_trustzone.c: fixup some machinactive
	shit

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_machinactive.c,
	drivers/gpu/msm/kgsl_pwrscale_trustzone.c: integrate machinactive
	governor within the trustzone

2017-10-12  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/gpu/msm/Makefile,
	drivers/gpu/msm/kgsl_pwrscale.c, drivers/gpu/msm/kgsl_pwrscale.h,
	drivers/gpu/msm/kgsl_pwrscale_machinactive.c,
	drivers/gpu/msm/kgsl_pwrscale_trustzone.c: get rid of machinactive,
	go back to old kobject structure, add touch boost in idle check,
	will be moving machinactive logic to trustzone as another gov soon

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/adreno.c,
	drivers/gpu/msm/kgsl_pwrscale_trustzone.c: farm out wakelevel to a
	serparate function, account for wake set from touch and crank to max
	if thats the case. fix a derp in using the saved powerlevel (it was
	setting using 0 in the test case, my bad), stop setting the
	powerlevel to min before sleeping (the freq will go to 27mhz using
	scm voodoo anyhow), aaaaand now to fix machinactive after studying
	the subsystem a little

2017-10-12  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h: fix missing android cgroup stuff

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c, kernel/cpu.c,
	kernel/cpu_hardplug.c: add thermal_core_controlled hooks in the cpu
	hotplug core and get rid of the callbacks

2017-10-12  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup-defs.h, kernel/cgroup.c, kernel/cpu.c: fix up
	missing allow attach and (finally) get rid of ss->active

2017-10-12  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-fix-uninitialised-iterator-in-for_each_subsys

2017-10-12  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-replace-explicit-ss_mask-checking-with-for_each

2017-10-12  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup-defs.h, kernel/cgroup.c: 
	cgroup-use-bitmask-to-filter-for_each_subsys

2017-10-12  robcore <robpatershuk@gmail.com>

	* include/linux/blk-cgroup.h: blkcg-implement-task_get_blkcg_css

2017-10-12  robcore <robpatershuk@gmail.com>

	* block/bio.c, include/linux/cgroup.h:  cgroup, block: implement task_get_css() and use it in
	 bio_associate_current()

2017-10-12  robcore <robpatershuk@gmail.com>

	* block/blk-cgroup.c, include/linux/blk-cgroup.h: 
	blkcg-add-blkcg_root_css

2017-10-12  robcore <robpatershuk@gmail.com>

	* include/linux/blk-cgroup.h: 
	update-CONFIG_BLK_CGROUP-dummies-in-include-linux

2017-10-12  robcore <robpatershuk@gmail.com>

	* block/blk-cgroup.c, block/blk-core.c, block/blk-sysfs.c,
	block/blk-throttle.c, block/cfq-iosched.c, block/elevator.c, {block
	=> include/linux}/blk-cgroup.h: 
	blkcg-move-block-blk-cgroup.h-to-include-linux-blk-c

2017-10-12  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup-defs.h: 
	cgroup-add-seq_file-forward-declaration-for-struct

2017-10-12  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: simplify threadgroup locking;

2017-10-12  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup-defs.h, include/linux/init_task.h,
	include/linux/sched.h, init/Kconfig, kernel/cgroup.c, kernel/fork.c: 
	sched, cgroup: replace signal_struct->group_rwsem with a global
	percpu_rwsem

2017-10-12  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup-defs.h, include/linux/sched.h,
	kernel/cgroup.c: sched-cgroup-reorganize-threadgroup-locking.

2017-10-12  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-switch-to-unsigned-long-for-bitmasks

2017-10-12  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h: cgroup: reorganize include/linux/cgroup.h

2017-10-12  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup-defs.h, include/linux/cgroup.h: cgroup:
	separate out include/linux/cgroup-defs.h

2017-10-12  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: dox

2017-10-12  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-remove-use-of-seq_printf-return-value.

2017-10-12  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c, mm/memcontrol.c: memcg-zap-mem_cgroup_lookup.

2017-10-12  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h: cgroup: add dummy css_put() for
	!CONFIG_CGROUPS

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.c: oops we dont use slumber, we use
	sleep

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.c: little fix (thanks to arter for
	the idea) to show idle freq in the sysfs interface

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: put our conditional in
	the wakeup field then

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: nope that was wrong
	too...FUCK

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: oops supposed to crank
	the level based on "above the ceiling"

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.c: screw it

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.c: reinit completion

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: now that we boost the
	power level from the idle algo if less than floor, jumping to max on
	wakeup seems less important

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: remove extra bracket

2017-10-12  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: similiar to how its
	been done previously, boost the power level if no total time or
	total time is less than floor

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: shit do it there too

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: use proper
	device->pwrctrl prefix

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.h,
	drivers/gpu/msm/kgsl_pwrscale_trustzone.c: heres a thought, why not
	just fuckin save the powerlevel on sleep and use the same one when
	we wake up?

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: thermal - try making our get_table
	work a oneshot work structure.

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: do some simple level
	changes based on the last frequency

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: disable my fancy pants
	algo for now

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: methinks i bugged on the thermal
	shit. damn.

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: thermal - make initialization a
	little more risky in the hopes that it pays off in less checks
	during the actual operations

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: make our loadview
	calculation a little more intense

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: give us a little more
	wiggle room in the middle

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: fix my type checking
	for kgsk pwrscale changes, also through in more opportunities to
	retrieve busy_time. finally, use a nifty little algo for division by
	100....oh wait also never wake the device up to min level it is a
	waste

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/adreno.c,
	drivers/gpu/msm/kgsl_pwrscale_trustzone.c: compilers are fucked up

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/adreno.c: throw in can_adreno_boost to ensure we
	arent calling boost when the display is off

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/adreno.c, drivers/gpu/msm/kgsl_pwrctrl.c,
	drivers/gpu/msm/kgsl_pwrscale_trustzone.c,
	drivers/input/omniboost.c, include/linux/input.h: unfortunately,
	omniboost was too much of a hassle, so just structure the adreno
	boost around the omniboost format

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/adreno.c,
	drivers/gpu/msm/kgsl_pwrscale_trustzone.c,
	drivers/input/omniboost.c, include/linux/input.h: k...the
	adrenoboost thing will probably break again...BUT on the bright side
	move the load calculation to the wakeup function

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/adreno.c, drivers/input/omniboost.c,
	include/linux/input.h: adreno touch boost - ditched its built in
	handler registration and assimilated it into omniboost

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: fine. if thats how you
	want to play

2017-10-11  robcore <robpatershuk@gmail.com>

	* 10, drivers/gpu/msm/kgsl_pwrscale_trustzone.c: please let this fix
	the linker errors

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: gonna go ahead and
	simply interactive some more

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: remove obsolete and
	incorrect checks in interactive

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: trustzone, after
	finally getting to see what the load calculation looks like
	properly, ive adjusted interactive and ondemand to display the
	loadview, and am now using it as a rudimentary calculator to
	determine what freq to wake the gpu up at

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: guess i can ditch the
	excess last_wakes and returns

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: created a convoluted,
	makeshift mini algo for kgsl wakeup

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.c,
	drivers/gpu/msm/kgsl_pwrscale_trustzone.c: fix how max freq is
	showed, it was showing that useless thermal garbage again

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: give myself an easy
	marker to see wha tthe current gpu load is

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.c: forget thermal, they can change it
	all they want

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.c: fix up my min max lock so it
	doesnt break when we try to store a value

2017-10-11  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.c, drivers/gpu/msm/kgsl_pwrctrl.h: 
	completely crippled thermal_pwrlevel, and filled in the remaining
	missing min_max_lock locations

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.c, include/linux/kernel.h: mua ha ha
	ha, barred sammy from changing the gpu freq on us, also (hopefully)
	fixed my min max defs

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: steal some logic from
	the adreno tz driver for my note 3

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: more hacking, this
	thing is fickle

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: we need to make our
	algo waaaaay less aggressive

2017-10-10  robcore <robpatershuk@gmail.com>

	* build_kernel.sh, drivers/gpu/msm/kgsl_pwrctrl.c: ugh fix my stupid
	fucking min maxes again

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: without if
	(priv->no_switch_cnt > SWITCH_OFF_RESET_TH), we could just be
	constantly setting the fuckin thing back to "below 0" (not really
	cause unsigned, but you get it)

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: oops fix that thanks
	gcc - also...that block of code made no sense to me, there was
	literally no way that no_switch_cnt was ever being incremented...

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.c,
	drivers/gpu/msm/kgsl_pwrscale_trustzone.c: fixed my stupid mistakes
	in kgsl sysfs stores, and the idle count waaaaaaaay higher

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: fuck it, based on the
	amount of logspam i got, raise the counter

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: put the idle count some
	where smarter - and ACTUALLY fix my math (all this reverse min max
	stuff is a mind fuck apparently?

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.c: test for new_level being the same
	and return immediately

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.c: aaaanaaanaaaaand get rid of that
	superfluous callout to sanitize min max when its one line that could
	just be done in house

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.c: oops fix max_pwrlevel/min_pwrlevel
	bounds checking

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrctrl.c, drivers/gpu/msm/kgsl_pwrscale.c,
	drivers/gpu/msm/kgsl_pwrscale_trustzone.c: kgsl - sanitize the min
	max of fucking EVERYTHING. also, stop setting the current pwr level
	based on what is stored in the sysfs unless we dont have a driver
	handling it. finally, i will implement scaling based on your dumbass
	thermal_pwrlevel when you TELL ME WHICH NUMBER THE FUCKING SENSOR IS
	YOU FUCKING QUALCOMM PRICKS

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: oops rob you dummy, i
	was still adding zero. now ive come up with something that should
	cale it okay

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: smarten up the
	trustzone algo a little more

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: save ourselves a call
	to the same freq

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: ahahahaha the trustzone
	entries are a mile a minute

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mipi_samsung_octa.c,
	drivers/video/msm/mipi_samsung_octa_video_full_hd_pt.c: a little
	more tweaking debug values and the like. setting up something for
	temperature in the future

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: some more printing for
	my reference

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: a little more tweaking

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c: tzidle, because we are
	using this as a makeshift governor, have the driver reduce the power
	level by a step if we are below the floor

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c,
	drivers/video/msm/mipi_dsi_host.c,
	drivers/video/msm/mipi_magna_octa_video_full_hd_pt.c,
	drivers/video/msm/mipi_samsung_octa_video_full_hd_pt.c: some panel
	hacking

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: minor cleanup

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: don tneed to define cpu there
	anymore

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal-last-working.c,
	drivers/thermal/msm_thermal.c: brought in last working copy as a
	reference, and set thermal limit high to limit idx once again

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c, include/linux/cpufreq.h: how about
	i just do a ton of annoying arrays?

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: safety first, throw get/put online
	cpus around the disable routine

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: semantics

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: and sanitize my minmaxes again

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: man i was tired, make sure you fail
	IF hotplug is ready, rob, THAT will work

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: fuck it just bug on failure so at
	least i get a reason

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: one last shot before sleep

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/thermal/msm_thermal.c: i think
	now set_thermal_policy should probably apply the current cpufreq

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: sunofabitch missing bracket

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/thermal/msm_thermal.c: couple
	fixes, brackets for (table[i].frequency != CPUFREQ_TABLE_END)

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: son of a whore - if there is no
	policy->limited_max_freq_thermal, set it to MAX FUCK

2017-10-10  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: maybe i need to allocate?

2017-10-10  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c,
	drivers/thermal/msm_thermal.c: cmon baby

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: well i guess it would have helped
	not to set the min index value to 0-1 rob you fucking tool.

2017-10-09  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: try it out for krait too

2017-10-09  robcore <robpatershuk@gmail.com>

	* Makefile, drivers/thermal/msm8960_tsens.c,
	drivers/thermal/msm_thermal.c, drivers/thermal/pm8xxx-tm.c,
	drivers/thermal/thermal_core.c, include/linux/cpufreq.h: wow thanks
	for the help gcc! pro tip: confused as to whether you should be
	using a signed or unsigned integer as a comparison? turn on
	-wformat=2 and -wformat-signedness, lifesaver! (also like the entire
	thermal section was riddled with improper format specifiers for
	prints and sysfs entries...fuck the entire kernel probably is)

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: i think i have to use a signed
	integer for CPUFREQ_TABLE_END. TODO: brush up on my knowledge of
	ones complement and signedness

2017-10-09  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: another little script helper

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: ahhh i see what i was doing, IT
	BOOTS AND SEMI WORKS! Just had the wrong sanitized maxes for for
	thermal limit max - CPUFREQ_TABLE_END refers to the frequency, not
	the index value

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/thermal/msm_thermal_wip.c: fix
	a derp in cpufreq.c

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/thermal/msm_thermal.c,
	drivers/thermal/msm_thermal_backup.c,
	drivers/thermal/msm_thermal_wip.c: time to try out per_cpu thermal
	version 4^99999999

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c, drivers/thermal/msm_thermal_wip.c,
	include/linux/cpu.h: static bool core_control_enabled;

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c, drivers/thermal/msm_thermal_wip.c: 
	there fix it both in msm thermal and my wip

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: for whatever reason those changes
	(all the || ones) corrupted memory(?) the fuck?

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c, drivers/cpufreq/cpufreq.c,
	drivers/thermal/msm_thermal_wip.c, include/linux/cpufreq.h: doing
	some more work

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: a little cleanup, and a little more
	setting myself up for percpu. gonna build now and then go for it

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c, include/linux/cpumask.h: fix
	for_each_possible_cpu reverse, and add for_each_nonboot_cpu_reverse

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: in preparation for my billionth
	attempt at per-cpu thermal limiting, regroup some of the values that
	will need to be percpu. also, get rid of the update_max_freq or
	whatever it was called and just call the functions needed locally.
	there were two places it didnt really need its own function. and
	this will help us transition to per-cpu

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/lazyplug.c, include/linux/cpufreq.h: did a little
	work in lazy too

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/alucard_hotplug.c,
	drivers/cpufreq/bricked_hotplug.c, drivers/cpufreq/msm_sleeper.c,
	include/linux/cpumask.h: hotplugs - fix up some of the conditionals
	in bricked, alucard and msm sleeper

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: a little derp in msm_thermal

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/thermal/machinex_thermal.c,
	drivers/thermal/msm_thermal.c, include/linux/cpufreq.h: gonna start
	working on percpu thermal again

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: spacing

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/thermal/msm_thermal.c,
	include/linux/cpufreq.h: thermal: dont need the extra "extern" for
	hard limit max, also dont need to declare policy in freq limiting
	anymore

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: make fallback input_limit
	policy->hlimit_min_screen_on

2017-10-09  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/cpufreq/Kconfig,
	drivers/cpufreq/Makefile, drivers/cpufreq/cpu-boost.c,
	drivers/cpufreq/cpufreq.c, include/linux/cpu.h,
	include/linux/cpufreq.h: cpu boost - made the input boost mechanism
	a part of the cpufreq core

2017-10-09  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpu-boost.c, drivers/cpufreq/cpufreq.c,
	include/linux/cpufreq.h: input boost, moved the defs to cpufreq.h so
	that we could share cpuboosts percpu struct with cpufreq. this
	should eliminate the need for the single input limit variable i was
	using previously

2017-10-08  robcore <robpatershuk@gmail.com>

	* Documentation/core-api/cpu_hotplug.rst,
	drivers/cpufreq/cpu-boost.c: added some cpu hotplug docs for my
	reference

2017-10-08  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h, lib/percpu_counter.c: lib: move percpu
	counter to hp state machine

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/module.c: couple of module cleanups

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/ptrace.c: more ptrace fixer-uppers

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/ptrace.c: ptrace caps are already checked in
	__ptrace_may_access

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/range.c: make range less shitty

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/signal.c: for set_current_blocked just use
	__set_current_blocked

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/signal.c: check for INT_MIN in signal, return appropriately

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/sched/autogroup.c: dox

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpupri.c: stop zeroing cp on acquisition

2017-10-08  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h,
	kernel/sched/cpufreq_schedutil.c: no dice

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/events/core.c: a few nifty fixes in the scheduling core

2017-10-08  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: intelliplug - extend our lock
	times to a much more reasonable rate - half a second doesnt last
	long in terms of hotplugging and its better for power

2017-10-08  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/timer.c, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq2.c, drivers/md/dm-stats.c,
	include/linux/cpufreq.h, include/linux/percpu-defs.h,
	include/net/snmp.h, mm/slub.c, mm/vmstat.c: still keeping
	registration and cpu online separate, will save us a lot of time and
	effort given how much hotplugging we do

2017-10-08  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_stats.c,
	include/linux/cpufreq.h, kernel/sched/cpufreq_schedutil.c: destroy
	fast switch again - go back to the old policy_is_inactive method.
	turns out we can still reference anything so long as policy inherits
	cpufreq_cpu_data

2017-10-08  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq2.c,
	drivers/cpufreq/cpufreq_stats.c, include/linux/cpufreq.h,
	kernel/sched/cpufreq_schedutil.c: reverted those, i get it now

2017-10-08  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_stats.c: that
	broke everything

2017-10-08  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: giving a mixture of my changes and
	fauxs(nvidias)ideas a shot for consistent sysfs

2017-10-08  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h: giving a
	mixture of my changes and fauxs(nvidias)ideas a shot for consistent
	sysfs

2017-10-08  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_stats.c,
	include/linux/cpufreq.h, kernel/sched/cpufreq_schedutil.c: destroy
	fast switch

2017-10-08  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq2.c: removed

2017-10-08  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq2.c: brought
	both cpufreq versions up to date. can remove cpufreq2

2017-10-08  robcore <robpatershuk@gmail.com>

	* include/linux/cpufreq.h: today i am determined to have this
	working. changing kobj to a pointer

2017-10-08  robcore <robpatershuk@gmail.com>

	* net/sysctl_net.c: fuck i thought i reverted everything

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c, kernel/smpboot.c: more fixes for cpu/smpboot

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/smpboot.c: smpboot: lock the cpus across configuration

2017-10-08  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h, kernel/cpu.c: 
	smp-hotplug-Hotplug-state-fail-injection;

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: smp-hotplug-Differentiate-the-AP-completion

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: smp-hotplug-Differentiate-the-AP-work-lockdep-class

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: smp-hotplug-Callback-vs-state-machine-consistency.

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: smp/hotplug: Rewrite AP state machine core

2017-10-08  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h: smp-hotplug-Add-state-diagram

2017-10-08  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: smp-hotplug-Allow-external-multi-instance-rollback

2017-10-08  robcore <robpatershuk@gmail.com>

	* include/linux/smpboot.h, kernel/smpboot.c: smpboot/threads: Avoid
	runtime allocation

2017-10-08  robcore <robpatershuk@gmail.com>

	* fs/libfs.c, fs/namespace.c, fs/proc/inode.c,
	fs/proc/namespaces.c, fs/proc/proc_sysctl.c, include/linux/fs.h,
	include/linux/ns_common.h, include/linux/proc_fs.h,
	include/linux/proc_ns.h, include/linux/sysctl.h, init/version.c,
	ipc/msgutil.c, ipc/namespace.c, kernel/nsproxy.c,
	kernel/pid_namespace.c, kernel/user.c, kernel/user_namespace.c,
	kernel/utsname.c, net/core/net_namespace.c, net/sysctl_net.c: revert
	all the proc stuff

2017-10-08  robcore <robpatershuk@gmail.com>

	* net/sysctl_net.c: maybe hacked net_ctl_ro_header_perms to work

2017-10-07  robcore <robpatershuk@gmail.com>

	* net/sysctl_net.c: bring back register_net_sysctl_table

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: i think i prefer the old way of
	applying hardlimits conditionally in cpufreq_set_policy, just
	optimize for the case that the policy update probably already did
	it...because it probably already did

2017-10-07  robcore <robpatershuk@gmail.com>

	* fs/libfs.c, fs/proc/proc_sysctl.c, include/linux/fs.h,
	include/linux/sysctl.h: fixin - added make empty dir inode...this
	wont work

2017-10-07  robcore <robpatershuk@gmail.com>

	* net/sysctl_net.c: k still fix the memleak warning

2017-10-07  robcore <robpatershuk@gmail.com>

	* net/sysctl_net.c: revert that a sec

2017-10-07  robcore <robpatershuk@gmail.com>

	* net/sysctl_net.c: fuck

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/base/platform.c, net/sysctl_net.c: drivers->platform,
	couple of fixes

2017-10-07  robcore <robpatershuk@gmail.com>

	* fs/proc/root.c, net/netfilter/xt_qtaguid.c: qtaguid shut the FUCK
	up

2017-10-07  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, fs/proc/namespaces.c, include/linux/proc_fs.h,
	include/linux/proc_ns.h, kernel/nsproxy.c, net/core/net_namespace.c: 
	bury struct proc_ns in fs/proc

2017-10-07  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, fs/proc/inode.c, include/linux/ns_common.h,
	init/version.c, ipc/msgutil.c, ipc/namespace.c, kernel/nsproxy.c,
	kernel/pid_namespace.c, kernel/user.c, kernel/user_namespace.c,
	kernel/utsname.c, net/core/net_namespace.c: 
	copy-address-of-proc_ns_ops-into-ns_common.

2017-10-07  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, include/linux/proc_ns.h, ipc/namespace.c,
	kernel/pid_namespace.c, kernel/user_namespace.c, kernel/utsname.c,
	net/core/net_namespace.c: new-helpers-ns_alloc_inum-ns_free_inum

2017-10-07  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, fs/proc/inode.c, fs/proc/namespaces.c,
	include/linux/proc_ns.h, ipc/namespace.c, kernel/pid_namespace.c,
	kernel/utsname.c, net/core/net_namespace.c: 
	make-proc_ns_operations-work-with-struct-ns_common

2017-10-07  robcore <robpatershuk@gmail.com>

	* ipc/namespace.c, kernel/pid_namespace.c, kernel/utsname.c: 
	switch-the-rest-of-proc_ns_operations

2017-10-07  robcore <robpatershuk@gmail.com>

	* net/core/net_namespace.c: 
	netns-switch-get-put-install-inum-to-working;

2017-10-07  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, kernel/pid_namespace.c: 
	make-mntns-get-put-install-inum-work-with-mnt_ns-ns

2017-10-07  robcore <robpatershuk@gmail.com>

	* fs/proc/proc_sysctl.c, include/linux/sysctl.h, net/sysctl_net.c: 
	sysctl: Pass useful parameters to sysctl permissions

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq2.c: just cpufreq2 continued

2017-10-07  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: was going to do policy cur
	again but no, it is pointless, it is done when the cpu comes online

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq2.c: remove some
	uneccessary checks for setpolicy. quite helpful in areas such as
	cpufreq_quick_get, where this avoids us having to take a readlock
	just to verify we DONT have setpolicy and unlock again

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: oops i put cpufreq_suspended in the hp
	callbacks already

2017-10-07  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq2.c, include/linux/cpufreq.h: one less thing
	to worry about

2017-10-07  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: aaaand now that i have wakeme, use it

2017-10-07  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: oops bracket

2017-10-07  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: just some scripting fixes

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq2.c: oops forgot
	to check for cpufreq_suspended in cpu down

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c, include/linux/kernel.h: kernel.h -
	wrote a couple of nifty helpers to check if a value is within a
	specific range, or out, or within and equal to

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: thermal - now that we are testing
	for min/max sensor number at the top of the loop, we dont have to
	check for i < 7 || i > 10 in our fail case

2017-10-07  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: interactive - you are taking a
	time out;

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: oops remove boostplust
	durations attr

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: interactive: adjust default
	values to actually make frequency switching possible. our frequency
	switching latency is minimum (10us or less), so these ridiculous
	long sampling rates and periods are killing us

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: that warning will always
	show up on the first pass, its harmless so its removed

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: test for ret

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: just make thermal core controlled
	the tested variable in the hcpu callback. we have it, may as well
	use it

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: fixed the fail count logic in my
	temperature fail counts (wasnt counting sensor ten, just breaking.
	now we count it and then break if thats the case). also, bring back
	FREQ/CORE_DO_NOTHING, as sometimes literally nothing is the
	appropriate call. finally, make do_freq_control an integer, and
	return either negative on failure, positive on the need to take
	further action via core control, or 0 if things are fine

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: put the kthread in struct
	interactive_policy (ipolicy) and made the driver less paranoid. we
	werent getting anywhere. that said, this governor trend of like a
	billion different confusing structs all pointing to something or
	another needs to end NOW

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: oops meant to remove that, dont need it
	anymore

2017-10-07  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_interactive.c,
	drivers/cpufreq/cpufreq_interactive_UPSTREAM.c,
	kernel/sched/cpufreq_schedutil.c: made interactive potentially
	viable. moved kthread create and stop routines into the init/exit
	routines called from cpufreq, not on boot (cmon guys, get with the
	times)

2017-10-07  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: fuck i thought device
	initcall would be alright

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: just fixin up things that
	were outdated

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c: fix a bracket

2017-10-07  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	arch/arm/mach-msm/acpuclock-krait.c,
	drivers/cpufreq/cpufreq_interactive.c: thats right, no more
	io_is_busy

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/cpufreq_interactive.c: 
	simply dont run through the cpu online/offline callbacks if cpufreq
	is suspended. given our acpuclock/driver freq management and the way
	the hotplug state machine practically freezes everything in time,
	there will literally be no change in the state of the cpufreq core
	at all when it resumes (theoretically), and this may be what we need
	in order to get interactive working.

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: i still dont like these functions being
	called after suspend.

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/pufreq_performance2.c: remove garbage file

2017-10-07  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c, drivers/cpufreq/Kconfig,
	drivers/cpufreq/Makefile, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_governor.c,
	drivers/cpufreq/cpufreq_governor.h,
	drivers/cpufreq/cpufreq_interactive.c,
	drivers/cpufreq/intelli_hotplug.c,
	drivers/cpufreq/pufreq_performance2.c,
	drivers/thermal/msm_thermal.c, include/linux/cpufreq.h,
	include/linux/prometheus.h, kernel/power/prometheus.c,
	kernel/sched/cpufreq_schedutil.c, pos.sh, sop.sh: actually i liked
	where i was

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c, sop.sh: fuck

2017-10-07  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c, drivers/cpufreq/Kconfig,
	drivers/cpufreq/Makefile, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_governor.c,
	drivers/cpufreq/cpufreq_governor.h,
	drivers/cpufreq/cpufreq_interactive.c,
	drivers/cpufreq/intelli_hotplug.c,
	drivers/cpufreq/pufreq_performance2.c, include/linux/cpufreq.h,
	include/linux/prometheus.h, kernel/power/prometheus.c,
	kernel/sched/cpufreq_schedutil.c: possed

2017-10-07  robcore <robpatershuk@gmail.com>

	* pos.sh: im possing for now, to be continued when i have more
	energy

2017-10-07  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: this is a maaaaaaaaaajor WIP

2017-10-06  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: I think NR_CPUS is right

2017-10-06  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, include/linux/cpufreq.h,
	kernel/sched/cpufreq_schedutil.c: need to do some debugging

2017-10-06  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: fix a missing include for hp

2017-10-06  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/intelli_hotplug.c,
	include/linux/prometheus.h, kernel/power/prometheus.c: what better a
	place to call suspend and resume for hardlimit than right in the
	screen-based suspend api? this is similiar to cpufreq using hooks in
	dpm ops

2017-10-06  robcore <robpatershuk@gmail.com>

	* include/linux/cpufreq.h: oops added cpufreq_suspended to cpufreq.h
	while thinking out loud but changed my mind. gotta think longterm
	with this one

2017-10-06  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_interactive.c, include/linux/cpufreq.h: a
	little bit of interactive tweaking but this driver is a circus

2017-10-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c, drivers/cpufreq/Kconfig,
	drivers/cpufreq/Makefile, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq2.c,
	drivers/cpufreq/cpufreq_conservative2.c,
	drivers/cpufreq/cpufreq_governor.c,
	drivers/cpufreq/cpufreq_governor.h,
	drivers/cpufreq/cpufreq_governor2.c,
	drivers/cpufreq/cpufreq_governor2.h,
	drivers/cpufreq/cpufreq_governor_attr_set2.c,
	drivers/cpufreq/cpufreq_interactive.c,
	drivers/cpufreq/cpufreq_interactive2.c,
	drivers/cpufreq/cpufreq_ondemand2.c,
	drivers/cpufreq/cpufreq_ondemand2.h,
	drivers/cpufreq/cpufreq_powersave2.c,
	drivers/cpufreq/cpufreq_userspace2.c, include/linux/cpufreq.h,
	kernel/sched/cpufreq_schedutil.c: remove "have governor per policy,"
	because we always will so lets just fucking keep it that way. saves
	a lot of checking (a lot of this stuff should have just been config
	options but i digress). while we are at it move back to the
	buildable files these are safe changes

2017-10-06  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq2.c: for starters, remove disabled checks
	because we are never disabling this bitch

2017-10-06  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_conservative2.c,
	drivers/cpufreq/cpufreq_governor2.c,
	drivers/cpufreq/cpufreq_governor2.h,
	drivers/cpufreq/cpufreq_governor_attr_set2.c,
	drivers/cpufreq/cpufreq_interactive2.c,
	drivers/cpufreq/cpufreq_ondemand2.c,
	drivers/cpufreq/cpufreq_ondemand2.h,
	drivers/cpufreq/cpufreq_powersave2.c,
	drivers/cpufreq/cpufreq_userspace2.c,
	drivers/cpufreq/pufreq_performance2.c: same with governors

2017-10-06  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq2.c: now that the cpufreq api probably isnt
	going to go through any major changes for a while, time to make it
	our own

2017-10-06  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c,
	drivers/thermal/msm_thermal_backup.c: as it would turn out,
	thermal_limit_high is just the bloody table end (max freq), so avoid
	having to acquire policy at all in freq mitigation and set thermal
	limit max to thermal limit high. hardlimit wont care if thermal
	limit is greater than any hard limits, it only cares if the max
	should be reduced.

2017-10-06  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: reverted

2017-10-06  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: fucking meld

2017-10-06  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: if all cores are safe, dont even
	bother doing frequency control

2017-10-06  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: msm thermal - SMARTER. we now pipe
	from the wq -> frequency temperature evaluation -> frequency control
	-> (if needed) core temperature evaluation -> core control, repeat.
	it involved having to do some forward declaration, but this saves us
	from tons of unneccessary duplicated code. also, removed option to
	disable thermal again. also, made the hotplug_check_needed test a
	LOT simpler and localized. ONE LINE!!!

2017-10-06  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, security/selinux/hooks.c: get rid of dumb
	refs to __flush_signals

2017-10-06  robcore <robpatershuk@gmail.com>

	* kernel/sys.c: sonofabitch

2017-10-06  robcore <robpatershuk@gmail.com>

	* kernel/sys.c: naw hold up there

2017-10-06  robcore <robpatershuk@gmail.com>

	* kernel/sys.c: sys too

2017-10-06  robcore <robpatershuk@gmail.com>

	* kernel/signal.c: signal cleanups

2017-10-06  robcore <robpatershuk@gmail.com>

	* include/linux/pid_namespace.h, kernel/signal.c: get rid of
	__randomize_layout - and get rid of useless kthread flushing wrapper

2017-10-06  robcore <robpatershuk@gmail.com>

	* kernel/pid.c: n more

2017-10-06  robcore <robpatershuk@gmail.com>

	* include/linux/pid.h, include/linux/pid_namespace.h, kernel/pid.c,
	kernel/pid_namespace.c: little more cleanp

2017-10-06  robcore <robpatershuk@gmail.com>

	* include/linux/pid.h: give disable_pid_allocation the definition it
	needs to be declared

2017-10-06  robcore <robpatershuk@gmail.com>

	* kernel/fork.c, kernel/pid.c, kernel/pid_namespace.c,
	kernel/user_namespace.c: cleanups

2017-10-06  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/Kbuild, arch/arm/include/asm/futex.h,
	include/asm-generic/futex.h: make futex asm-generic

2017-10-06  robcore <robpatershuk@gmail.com>

	* include/linux/futex.h, init/Kconfig, kernel/futex.c,
	kernel/locking/rtmutex_common.h: bringing in futex changes from
	upstream

2017-10-06  robcore <robpatershuk@gmail.com>

	* include/linux/cpu_pm.h, kernel/cpu_pm.c: cpu_pm - change to an
	atomic notifier, and cleanup

2017-10-06  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, fs/namespace.c: fix double

2017-10-06  robcore <robpatershuk@gmail.com>

	* fs/mount.h, fs/namespace.c, include/linux/ipc_namespace.h,
	include/linux/ns_common.h, include/linux/pid_namespace.h,
	include/linux/user_namespace.h, include/linux/utsname.h,
	include/net/net_namespace.h, init/version.c, ipc/msgutil.c,
	ipc/namespace.c, kernel/pid.c, kernel/pid_namespace.c,
	kernel/user.c, kernel/user_namespace.c, kernel/utsname.c,
	net/core/net_namespace.c: common object embedded into various struct
	....ns

2017-10-06  robcore <robpatershuk@gmail.com>

	* fs/proc/base.c, include/linux/user_namespace.h,
	kernel/user_namespace.c: constify shit

2017-10-06  robcore <robpatershuk@gmail.com>

	* ipc/namespace.c: task lock > rcu

2017-10-06  robcore <robpatershuk@gmail.com>

	* include/linux/user_namespace.h, include/uapi/linux/keyctl.h,
	kernel/user.c, kernel/user_namespace.c, security/keys/Kconfig,
	security/keys/Makefile, security/keys/compat.c,
	security/keys/internal.h, security/keys/keyctl.c,
	security/keys/persistent.c, security/keys/sysctl.c: more key stuff

2017-10-06  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, include/linux/nsproxy.h,
	include/linux/user_namespace.h, kernel/fork.c, kernel/nsproxy.c,
	kernel/pid_namespace.c, kernel/user.c, kernel/user_namespace.c: 
	squashin

2017-10-06  robcore <robpatershuk@gmail.com>

	* kernel/user_namespace.c: more

2017-10-06  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, include/linux/user_namespace.h, kernel/user.c,
	kernel/user_namespace.c: proc-mount fixes

2017-10-06  robcore <robpatershuk@gmail.com>

	* fs/namespace.c: undoubled

2017-10-06  robcore <robpatershuk@gmail.com>

	* fs/namespace.c: doubled

2017-10-06  robcore <robpatershuk@gmail.com>

	* kernel/user_namespace.c: userns-Allow-any-uid-or-gid-mappings

2017-10-06  robcore <robpatershuk@gmail.com>

	* include/linux/user_namespace.h, kernel/user.c,
	kernel/user_namespace.c: userns - avoid recursion

2017-10-06  robcore <robpatershuk@gmail.com>

	* kernel/nsproxy.c, kernel/user_namespace.c: more

2017-10-06  robcore <robpatershuk@gmail.com>

	* kernel/fork.c: fork cleanup

2017-10-06  robcore <robpatershuk@gmail.com>

	* kernel/pid.c, kernel/pid_namespace.c: some pid work

2017-10-06  robcore <robpatershuk@gmail.com>

	* fs/proc/base.c, include/linux/projid.h,
	include/linux/user_namespace.h, kernel/user.c,
	kernel/user_namespace.c: userns: Add kprojid_t and associated
	infrastructure in projid.h

2017-10-06  robcore <robpatershuk@gmail.com>

	* kernel/user_namespace.c: 
	userns-For-proc-self-uid-gid-_map-derive-the-lower-under

2017-10-06  robcore <robpatershuk@gmail.com>

	* include/linux/nsproxy.h, include/linux/user_namespace.h,
	kernel/fork.c, kernel/nsproxy.c, kernel/user_namespace.c:  userns: Implement unshare of the user namespace

2017-10-06  robcore <robpatershuk@gmail.com>

	* fs/proc/namespaces.c, kernel/user_namespace.c: userns: Properly
	Implement proc namespace operations

2017-10-06  robcore <robpatershuk@gmail.com>

	* fs/namespace.c: use hlist move in namespace

2017-10-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-8064-wifi.c,
	arch/arm/mach-msm/board-8064.h,
	arch/arm/mach-msm/board-bluetooth-bcm4335.c: reverted

2017-10-06  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-8064-wifi.c,
	arch/arm/mach-msm/board-8064.h,
	arch/arm/mach-msm/board-bluetooth-bcm4335.c: all of this was for
	nothing, that value never turns off

2017-10-05  robcore <robpatershuk@gmail.com>

	* fs/Makefile, fs/internal.h, fs/libfs.c, fs/mount.h,
	fs/namespace.c, fs/nsfs.c, fs/pnode.c, fs/pnode.h, fs/proc/inode.c,
	fs/proc/internal.h, fs/proc/namespaces.c, fs/proc_namespace.c,
	fs/sysfs/mount.c, include/linux/dcache.h, include/linux/fs.h,
	include/linux/ipc_namespace.h, include/linux/mount.h,
	include/linux/ns_common.h, include/linux/pid_namespace.h,
	include/linux/proc_fs.h, include/linux/proc_ns.h,
	include/linux/user_namespace.h, include/linux/utsname.h,
	include/net/net_namespace.h, init/version.c, ipc/msgutil.c,
	ipc/namespace.c, kernel/cred.c, kernel/exit.c, kernel/groups.c,
	kernel/nsproxy.c, kernel/pid.c, kernel/pid_namespace.c,
	kernel/user.c, kernel/user_namespace.c, kernel/utsname.c,
	kernel/utsname_sysctl.c, net/core/net_namespace.c: possed

2017-10-05  robcore <robpatershuk@gmail.com>

	* pos.sh: possing

2017-10-05  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/memory.c, fs/Makefile, fs/internal.h,
	fs/libfs.c, fs/mount.h, fs/namespace.c, fs/nsfs.c, fs/pnode.c,
	fs/pnode.h, fs/proc/internal.h, fs/proc_namespace.c,
	fs/sysfs/mount.c, include/linux/dcache.h, include/linux/fs.h,
	include/linux/mount.h, include/linux/proc_fs.h,
	include/linux/user_namespace.h, kernel/user.c: i need to revert all
	of this for now (except for the arch code) because i want to try
	something unrelated

2017-10-05  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, fs/proc/inode.c, fs/proc/internal.h,
	fs/proc/namespaces.c, include/linux/ns_common.h,
	include/linux/proc_ns.h, init/version.c, ipc/msgutil.c,
	ipc/namespace.c, kernel/cred.c, kernel/exit.c, kernel/groups.c,
	kernel/nsproxy.c, kernel/pid.c, kernel/pid_namespace.c,
	kernel/user.c, kernel/user_namespace.c, kernel/utsname.c,
	kernel/utsname_sysctl.c, net/core/net_namespace.c: more of the
	hacking

2017-10-05  robcore <robpatershuk@gmail.com>

	* ipc/namespace.c, kernel/utsname.c: some others

2017-10-05  robcore <robpatershuk@gmail.com>

	* net/core/net_namespace.c: netns-switch-get-put-install-inum

2017-10-05  robcore <robpatershuk@gmail.com>

	* fs/namespace.c: make mntns ->get()/->put()/->install()/->inum()
	work with &mnt_ns->ns

2017-10-05  robcore <robpatershuk@gmail.com>

	* fs/mount.h, fs/namespace.c, include/linux/ipc_namespace.h,
	include/linux/ns_common.h, include/linux/pid_namespace.h,
	include/linux/user_namespace.h, include/linux/utsname.h,
	include/net/net_namespace.h, init/version.c, ipc/msgutil.c,
	ipc/namespace.c, kernel/pid.c, kernel/pid_namespace.c,
	kernel/user.c, kernel/user_namespace.c, kernel/utsname.c,
	net/core/net_namespace.c: half - ass move proc inum into ns common

2017-10-05  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mipi_samsung_octa.c: mipi_samsung_disp_shutdown.
	make it less stupid. check for shit in a logical order

2017-10-05  robcore <robpatershuk@gmail.com>

	* fs/proc/fd.c: unfortunately proc is still fucked, though i did
	revert one thing

2017-10-05  robcore <robpatershuk@gmail.com>

	* crypto/blkcipher.c: a little block cipher fix

2017-10-05  robcore <robpatershuk@gmail.com>

	* include/linux/prometheus.h, kernel/power/prometheus.c,
	kernel/power/suspend.c: prometheus 6.1 - get rid of dumb notifier
	again and use list_del_init to reinitialize the list when a client
	unregisters

2017-10-05  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdp.c: got rid of a couple REALLY annoying
	prints

2017-10-05  robcore <robpatershuk@gmail.com>

	* crypto/algboss.c, crypto/api.c, crypto/internal.h: some crypto
	hacking this time

2017-10-05  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, include/linux/ipc.h,
	include/linux/ipc_logging.h, include/linux/ipc_namespace.h,
	include/linux/sem.h, include/linux/shm.h, include/uapi/linux/shm.h,
	ipc/compat.c, ipc/compat_mq.c, ipc/ipc_sysctl.c, ipc/mq_sysctl.c,
	ipc/mqueue.c, ipc/msg.c, ipc/msgutil.c, ipc/namespace.c, ipc/sem.c,
	ipc/shm.c, ipc/util.c, ipc/util.h: k trying out a somewhat hacked
	3.13 ipc

2017-10-05  robcore <robpatershuk@gmail.com>

	* drivers/gpu/msm/kgsl_pwrscale_trustzone.c,
	drivers/video/msm/msm_fb_panel.c, kernel/power/prometheus.c: a lil
	kgsl hax

2017-10-05  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c, drivers/thermal/msm_thermal.c,
	include/linux/msm_thermal.h: finally getting rid of that annoying
	pdata - also stick with the current plan for freq steps, four made
	everything go out of wack. as for the temp vs. delta issue...well
	lets see how this plays out.

2017-10-05  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: meh

2017-10-05  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: looks like address is the way to go

2017-10-05  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: i think for no action we need to
	just assume that we are under limit

2017-10-05  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c,
	drivers/thermal/msm_thermal.c: trying some other methods because im
	having a hell of a time bringing the cpufreq back up

2017-10-05  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: fi

2017-10-05  robcore <robpatershuk@gmail.com>

	* build_kernel.sh, drivers/thermal/msm_thermal.c: reapplication of
	hard limits is killing us? or its script changes

2017-10-05  robcore <robpatershuk@gmail.com>

	* adbtmp, build_kernel.sh: more scripting fun

2017-10-04  robcore <robpatershuk@gmail.com>

	* include/linux/cpumask.h: and get rid of the broken redundant
	single cpu macros i made while apparently drunk

2017-10-04  robcore <robpatershuk@gmail.com>

	* include/linux/cpumask.h: fix my ranges in cpumask too

2017-10-04  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c, include/linux/msm_thermal.h: there,
	at least i can optimize the sensor gathering using a for loop

2017-10-04  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: maybe this will fix my script

2017-10-04  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c, drivers/cpufreq/cpufreq.c,
	drivers/thermal/msm_thermal.c, include/linux/cpufreq.h,
	include/linux/cpumask.h: no dice. and now my recovery is corrupted

2017-10-04  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: oops still have to assign limited
	max to max

2017-10-04  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c, drivers/cpufreq/cpufreq.c,
	drivers/thermal/msm_thermal.c, include/linux/cpufreq.h,
	include/linux/cpumask.h: holy shit if this works i am a fucking god.
	PERCPU thermal frequency control.

2017-10-04  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c: after testing, looks like 360 ms
	is sold

2017-10-04  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: stick with the other workqueue

2017-10-04  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: there, hopefully thermal AND
	krait work

2017-10-04  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c,
	drivers/thermal/msm_thermal_backup.c: hopefully have made thermal
	slightly more streamlined

2017-10-04  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: if usb one is working, why dont i just do the
	fucking same?

2017-10-04  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: fixing a couple script thangs

2017-10-04  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c, build_kernel.sh,
	drivers/thermal/msm_thermal.c: there. cant i just override acpuclock
	directly from thermal?

2017-10-04  robcore <robpatershuk@gmail.com>

	* drivers/thermal/msm_thermal.c: go with a new style ordered wq, no
	legacy

2017-10-04  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, arch/arm/mach-msm/board-jf_eur.c,
	drivers/thermal/Makefile, drivers/thermal/intelli/Makefile,
	drivers/thermal/intelli/msm_thermal.c,
	drivers/thermal/msm_thermal.c, include/linux/cpumask.h: insurance
	policy - set the acpuclock rate immediately after a bad temp

2017-10-04  robcore <robpatershuk@gmail.com>

	* ipc/msg.c, ipc/sem.c: revert something i did ages ago that broke
	shit

2017-10-04  robcore <robpatershuk@gmail.com>

	* ipc/msg.c: went down this route before

2017-10-04  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: trying out ipc stuff some more

2017-10-04  robcore <robpatershuk@gmail.com>

	* ipc/util.c: see if i can get away with just converting ipc to
	idr_alloc

2017-10-04  robcore <robpatershuk@gmail.com>

	* include/linux/prometheus.h, kernel/power/prometheus.c: Prometheus
	6.0 - fill in the missing notifier stage between
	powersuspend/resume/pmsuspend/resume using a raw notifier head
	synchronized with the same locks as powersuspend/resume functions.
	also, cleanup a lot of the locking into simply locking around the
	states themselves using an easy function. and get rid of the
	set_power_suspend_state function that can easily just be included in
	the panel beacon itself. ummm i think that does it. just a nifty
	little logical upgrade

2017-10-04  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: goddamn

2017-10-04  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, build_kernel.sh,
	crypto/algboss.c, include/linux/ipc.h, include/linux/ipc_logging.h,
	include/linux/ipc_namespace.h, include/linux/sched.h,
	include/linux/sem.h, include/linux/shm.h, include/uapi/linux/shm.h,
	ipc/Makefile, ipc/compat.c, ipc/compat_mq.c, ipc/ipc_sysctl.c,
	ipc/mq_sysctl.c, ipc/mqueue.c, ipc/msg.c, ipc/msgutil.c,
	ipc/namespace.c, ipc/sem.c, ipc/shm.c, ipc/util.c, ipc/util.h: aim
	for recovery first as adbtype or whatever doesnt work so well

2017-10-04  robcore <robpatershuk@gmail.com>

	* crypto/algboss.c: hax

2017-10-03  robcore <robpatershuk@gmail.com>

	* ipc/Makefile, ipc/compat.c, ipc/compat_mq.c, ipc/ipc_sysctl.c,
	ipc/ipcns_notifier.c, ipc/mq_sysctl.c, ipc/mqueue.c, ipc/msg.c,
	ipc/msgutil.c, ipc/namespace.c, ipc/sem.c, ipc/shm.c,
	ipc/syscall.c, ipc/util.c, ipc/util.h: dont change my mode

2017-10-03  robcore <robpatershuk@gmail.com>

	* include/linux/ipc.h, include/linux/ipc_logging.h,
	include/linux/ipc_namespace.h, include/linux/sched.h,
	include/linux/sem.h, include/linux/shm.h, include/uapi/linux/shm.h,
	ipc/compat.c, ipc/compat_mq.c, ipc/ipc_sysctl.c,
	ipc/ipcns_notifier.c, ipc/mq_sysctl.c, ipc/mqueue.c, ipc/msg.c,
	ipc/msgutil.c, ipc/namespace.c, ipc/sem.c, ipc/shm.c,
	ipc/syscall.c, ipc/util.c, ipc/util.h: holy shit just hacked in
	sysvipc

2017-10-03  robcore <robpatershuk@gmail.com>

	* fs/proc/array.c, fs/proc/base.c, fs/proc/internal.h,
	fs/proc/page.c, fs/proc/proc_net.c, fs/proc/root.c: that should
	do-er

2017-10-03  robcore <robpatershuk@gmail.com>

	* fs/proc/base.c: more of the same

2017-10-03  robcore <robpatershuk@gmail.com>

	* drivers/md/bitmap.c, fs/proc/base.c, fs/proc/fd.c,
	fs/proc/inode.c, fs/proc/nommu.c, fs/seq_file.c,
	include/linux/seq_file.h, mm/swapfile.c: oops looks like seq_file
	wasnt all the way updated as i thought

2017-10-03  robcore <robpatershuk@gmail.com>

	* fs/Makefile, fs/internal.h, fs/namespace.c, fs/nsfs.c,
	fs/proc/namespaces.c, fs/proc/nommu.c, fs/proc/proc_avc.c,
	fs/proc/proc_net.c, init/main.c: revert that

2017-10-03  robcore <robpatershuk@gmail.com>

	* fs/Makefile, fs/internal.h, fs/namespace.c, fs/nsfs.c,
	fs/proc/namespaces.c, fs/proc/nommu.c, fs/proc/proc_avc.c,
	fs/proc/proc_net.c, init/main.c: oops

2017-10-03  robcore <robpatershuk@gmail.com>

	* fs/proc/proc_sysctl.c, fs/proc/root.c, fs/proc/self.c: more
	d_inode and kgid/kuid updates, as well as noooo "unlikely" for an
	issue with subdir, it can be very likely at the moment in proc...

2017-10-03  robcore <robpatershuk@gmail.com>

	* fs/proc/task_mmu.c, fs/proc/task_nommu.c: also use seq_file_path
	instead of seq file with the path included, thats what its there for

2017-10-03  robcore <robpatershuk@gmail.com>

	* fs/proc/uptime.c: uptime - just use monotonic boottime, thats what
	its there for

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, fs/proc/generic.c,
	fs/proc/vmcore.c: bring back sysvipc and bring in some memory
	helpers in proc/vmcore

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, drivers/video/msm/msm_fb_panel.c,
	fs/proc/root.c: oops semi-colons make the world go round

2017-10-03  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdp.c, drivers/video/msm/msm_fb_panel.c: some
	prints out of curiousity

2017-10-03  robcore <robpatershuk@gmail.com>

	* fs/dcache.c, vid.txt: i think just go hard on the null pointer
	checks in dcache

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/setup.c: ohhh this may all be because stupid
	mainline tears down cpu structures for hotplugged cpus

2017-10-03  robcore <robpatershuk@gmail.com>

	* fs/proc/generic.c: oops make it prettier

2017-10-03  robcore <robpatershuk@gmail.com>

	* fs/proc/generic.c: sneaky hack - instead of returning NULL on
	create_proc_read_entry if it is actually a directory, just build the
	directory ;)

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-8064-display.c,
	arch/arm/mach-msm/board-jactive_att-gpiomux.c,
	arch/arm/mach-msm/board-jactive_att.c,
	arch/arm/mach-msm/board-jactive_eur-gpiomux.c,
	arch/arm/mach-msm/board-jactive_eur.c,
	arch/arm/mach-msm/board-jf_att-gpiomux.c,
	arch/arm/mach-msm/board-jf_att.c,
	arch/arm/mach-msm/board-jf_cri-gpiomux.c,
	arch/arm/mach-msm/board-jf_cri.c,
	arch/arm/mach-msm/board-jf_dcm-gpiomux.c,
	arch/arm/mach-msm/board-jf_dcm.c,
	arch/arm/mach-msm/board-jf_eur-gpiomux.c,
	arch/arm/mach-msm/board-jf_eur.c,
	arch/arm/mach-msm/board-jf_ktt-gpiomux.c,
	arch/arm/mach-msm/board-jf_ktt.c,
	arch/arm/mach-msm/board-jf_lgt-gpiomux.c,
	arch/arm/mach-msm/board-jf_lgt.c,
	arch/arm/mach-msm/board-jf_skt-gpiomux.c,
	arch/arm/mach-msm/board-jf_skt.c,
	arch/arm/mach-msm/board-jf_spr-gpiomux.c,
	arch/arm/mach-msm/board-jf_spr.c,
	arch/arm/mach-msm/board-jf_tmo-gpiomux.c,
	arch/arm/mach-msm/board-jf_tmo.c,
	arch/arm/mach-msm/board-jf_usc-gpiomux.c,
	arch/arm/mach-msm/board-jf_usc.c,
	arch/arm/mach-msm/board-jf_vzw-gpiomux.c,
	arch/arm/mach-msm/board-jf_vzw.c,
	arch/arm/mach-msm/board-jfve_eur-gpiomux.c,
	arch/arm/mach-msm/board-jfve_eur.c,
	arch/arm/mach-msm/include/mach/socinfo.h, fs/libfs.c, fs/proc/fd.c,
	fs/proc/generic.c, fs/proc/inode.c, fs/proc/internal.h,
	fs/proc/namespaces.c, fs/proc/proc_devtree.c, fs/proc/thread_self.c: 
	more proc hax

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-8064-display.c,
	arch/arm/mach-msm/board-jf_eur-gpiomux.c,
	arch/arm/mach-msm/include/mach/socinfo.h: looks like machine_is_JF()
	wasnt defined?

2017-10-03  robcore <robpatershuk@gmail.com>

	* .gitignore: gitignoring a little helper im making for myself

2017-10-03  robcore <robpatershuk@gmail.com>

	* fs/namei.c: hacked around some missing definitions to make
	lazy_walk better (i hope) in namei

2017-10-03  robcore <robpatershuk@gmail.com>

	* fs/namei.c, include/linux/namei.h, include/linux/sched.h: reverted
	nameidata stuff

2017-10-03  robcore <robpatershuk@gmail.com>

	* fs/dcache.c, fs/namei.c, include/linux/dcache.h,
	include/linux/namei.h, include/linux/sched.h: iiimmm fuckin up some
	nameidata stuff

2017-10-03  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/dhd_linux.c, include/linux/wakelock.h: 
	bcmdhd wakelock adjustments, and a new helper "wake_try_unlock"

2017-10-03  robcore <robpatershuk@gmail.com>

	* usr/gen_init_cpio.c: leave it out of cpio i guess

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/scm-pas.c, arch/arm/mach-msm/spm-v2.c,
	arch/arm/mach-msm/spm_devices.c, drivers/leds/ledtrig-cpu.c,
	drivers/oprofile/cpu_buffer.c, drivers/oprofile/timer_int.c,
	drivers/staging/qcache/qcache-main.c, net/core/drop_monitor.c,
	net/rds/ib_rdma.c: make setting vdd a little safer, and did a little
	this_cpu_ptr cleanup

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/modem_notifier.c, arch/arm/mach-msm/smem_log.c,
	drivers/char/tty_io.c, drivers/misc/tsif.c, drivers/misc/tspp.c,
	drivers/regulator/core.c, drivers/spi/spi_qsd.h,
	drivers/tty/smux_debug.c, drivers/tty/smux_test.c,
	fs/exfat/exfat_super.c, fs/exfat/exfat_super.h,
	fs/sdcardfs/derived_perm.c, fs/sdcardfs/inode.c,
	fs/sdcardfs/sdcardfs.h, mode_t.txt, security/selinux/sec/secfs.c,
	tools/perf/util/util.c, tools/testing/selftests/memfd/memfd_test.c,
	usr/gen_init_cpio.c: tons of mode_t whack-a-mole

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c: rq stats - use proactive hooks

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/memory.c: make some of our memory ops less
	susceptible to overflow

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/dma.c: dma - use the workqueue instead of
	scheduling work

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/dma.c: make dmov wq suck less

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/cache_erp.c, mode_t.txt: erp panic cleanup

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_bus/msm_bus_config.c,
	arch/arm/mach-msm/msm_bus/msm_bus_core.h, mode_t.txt: cleaned up msm
	bus a little, IS ERR OR NULL and jactive things we dont need

2017-10-03  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: putting redundant echo "Kernel is located in
	/media/root/robcore/AIK/$OUTFOLDER/$OUTFOLDER.zip" before adb
	pushing so i can kill the script and do it manually quicker when
	needed

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c,
	drivers/thermal/intelli/msm_thermal.c,
	drivers/thermal/msm8960_tsens.c, include/linux/msm_thermal.h,
	include/linux/msm_tsens.h: reverted all the thermal stuff to be on
	the safe side in case i dont like how this tests. and im sleepy

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c,
	drivers/thermal/intelli/msm_thermal.c: k maybe just a bit lower

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c,
	drivers/thermal/intelli/msm_thermal.c: the more we poll the more
	heat we probably use?

2017-10-03  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: dont even need that k
	variable. if any temps go over limit, return positive. if none do, j
	will be 0 which is the proper value for "stop mitigating" below

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-jf_eur.c,
	drivers/thermal/intelli/msm_thermal.c,
	drivers/thermal/msm8960_tsens.c, include/linux/msm_thermal.h,
	include/linux/msm_tsens.h: trying something ridiculous with msm
	thermal, to snapshot all thermal ids

2017-10-03  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/pm-8x60.c: fucked around

2017-10-02  robcore <robpatershuk@gmail.com>

	* drivers/input/evdev.c, drivers/leds/leds-an30259a.c: little led
	cleanup

2017-10-02  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdp.c: nooooo mdp proactive suspend

2017-10-02  robcore <robpatershuk@gmail.com>

	* drivers/input/touchscreen/virtual_wakeup_key.c: fixed some
	semantics

2017-10-02  robcore <robpatershuk@gmail.com>

	* drivers/input/touchscreen/virtual_wakeup_key.c: did some work on
	virtual power key

2017-10-02  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdp.c: fix up my mdp proactive suspend notifiers

2017-10-02  robcore <robpatershuk@gmail.com>

	* drivers/input/omniboost.c: omni - match fucking everything

2017-10-02  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, arch/arm/mach-msm/smd.c,
	drivers/input/Kconfig, drivers/input/Makefile,
	drivers/input/keyboard/cypress_touchkey_236/cypress-touchkey-236.c,
	drivers/input/keyboard/gpio_keys.c, drivers/input/omniboost.c,
	drivers/input/touchscreen/sweep2sleep.c,
	drivers/input/touchscreen/synaptics_i2c_rmi.c: omniplug - lets hook
	up all of our drivers with some awesome. ...also smd.c stop abusing
	pm_notifier to run stuff you can just do independantly you twat

2017-10-02  robcore <robpatershuk@gmail.com>

	* fs/drop_caches.c, kernel/nsproxy.c: fix up namespace copy in
	nsproxy

2017-10-02  robcore <robpatershuk@gmail.com>

	* drivers/misc/sec_misc.c: give samsung ability to drop caches
	again. PS PROACTIVE SUSPEND WORKS!

2017-10-02  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig,
	arch/arm/mach-msm/qdsp6v2/audio_lpa.c,
	arch/arm/mach-msm/qdsp6v2/audio_lpa.h, drivers/input/input.c,
	drivers/misc/inv_mpu/mpu-dev.c, drivers/mmc/core/core.c,
	drivers/mmc/host/msm_sdcc.c, drivers/mmc/host/msm_sdcc.h,
	include/linux/suspend.h, init/main.c, kernel/power/Kconfig,
	kernel/power/suspend.c, kernel/power/suspend2.c: Introducing
	Proactive Suspend. This acts as the EARLY_SUSPEND_LEVEL_DISABLE_FB
	(final) level of early suspend, and is associated with pm_suspend
	instead of powersuspend panel hooks

2017-10-02  robcore <robpatershuk@gmail.com>

	* include/linux/suspend.h, kernel/power/suspend2.c: starting work on
	an earlysuspend/powersuspend hybrid - proactive suspend

2017-10-02  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h, net/core/dev.c: got a little too big
	for my britches, net dev side

2017-10-02  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/wl_cfg80211.c,
	include/linux/workqueue.h: create and use mod_scheduled_work which
	is just a wrapper for mod_delayed_work on the system wq

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/wl_cfg80211.c: one tiiiiny change,
	only call wakeup if the interface is up. is that so much to ask?

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/i2c/i2c-core.c, drivers/pci/pci.c, kernel/rcu/tree.c: kill
	hibernate some more

2017-10-01  robcore <robpatershuk@gmail.com>

	* include/linux/cpuhotplug.h, kernel/cpu.c: there we go added net
	dev to list, also did a little tweaking in cpuhotlug in general

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/wl_cfg80211.c, net/core/dev.c: few
	little cleanups in net dev...including using hotplug state machine
	instead of old hotcpu notifier....here is hoping this doesnt break
	too much

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/scsi/scsi_pm.c, drivers/spi/spi.c, drivers/usb/core/usb.c: 
	see if this helps with our hibernate callback issues

2017-10-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c,
	arch/arm/mach-msm/msm_rq_stats.c, drivers/base/firmware_class.c,
	drivers/leds/ledtrig-sleep.c, drivers/mmc/core/core.c,
	drivers/net/wireless/bcmdhd/dhd_linux.c,
	drivers/thermal/intelli/msm_thermal.c, kernel/cpu.c,
	kernel/trace/ftrace.c: get rid of references to HIBERNATE in our
	drivers, we dont use it

2017-10-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: acpuclock - removing
	CPUFREQ_NEED_INITIAL_FREQ_CHECK, our bootloader is overly consistent
	in that regard

2017-10-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock.c: redo acpuclock

2017-10-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock.c, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_stats.c, include/linux/cpufreq.h: better
	hold off for now

2017-10-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock.c, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_stats.c, include/linux/cpufreq.h: holy shit.
	i MAY be able to get fauxs sweet interface up and running again

2017-10-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/restart.c, drivers/cpufreq/Makefile,
	drivers/cpufreq/cpufreq_governor.h,
	drivers/thermal/intelli/msm_thermal.c, include/linux/cpumask.h: 
	restart - attempting to EXPLICITLY call our function FROM cpu 0 and
	BACKWARDS on the others

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_governor.h,
	drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	drivers/cpufreq/cpufreq_ondemand.c: revert my custom attr hacking
	for now, gonna plan this out well

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_governor.h,
	drivers/cpufreq/cpufreq_interactive.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	drivers/cpufreq/cpufreq_ondemand.c: fuck

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/alucard_hotplug.c: alucard too

2017-10-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/msm_rq_stats.c, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_governor.c,
	drivers/cpufreq/cpufreq_governor.h,
	drivers/cpufreq/cpufreq_ondemand.c, drivers/cpufreq/msm_hotplug.c,
	include/linux/cpufreq.h: given that NO mobile device will ever find
	use for io_is_busy, remove all references to it

2017-10-01  robcore <robpatershuk@gmail.com>

	* include/linux/cpumask.h: throw in an excessive but easy macro to
	iterate over a single cpu in a specific mask

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_machinex_gov_attr.c: oops used 3 and 4
	instead of 2 and 3

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_governor.c,
	drivers/cpufreq/cpufreq_ondemand.c,
	drivers/cpufreq/intelli_hotplug.c: took my hooks out of the main
	drivers for now, essentially mx is just a dummy framework still

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_governor.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.h,
	drivers/cpufreq/cpufreq_ondemand.c: there has to be a better way to
	do this

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_machinex_gov_attr.c: add missing sampling
	rates

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_machinex_gov_attr.c: finish up the
	remaining vals in our new interface

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	include/linux/sysfs.h: outlying shell of a constant sysfs for all
	governors created. now for more hooks in the govs themselves

2017-10-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: remove redundant check for
	new == old, as we already have the check in the core

2017-10-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: keep our old target style,
	and get rid of async notification...though i think the latter is why
	the former was necessary, oh well

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_machinex_gov_attr.c: comment out stuff im
	not using in mx gov attrs yet

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	drivers/leds/leds-an30259a.c, include/linux/sysfs.h,
	kernel/mxsysfs.c: looks like mainline macros are out of date. the
	accepted method of sysfs entry construction has been show_name for
	quite some time now

2017-10-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: just mindless cleanup

2017-10-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: move our test for new freq ==
	cur freq to the actual set rate call

2017-10-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: oops lil fix

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_governor.h,
	drivers/cpufreq/cpufreq_machinex_gov_attr.h: oops got my includes
	backwards

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq_machinex_gov_attr.h: #endif

2017-10-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c,
	arch/arm/mach-msm/acpuclock.c, drivers/cpufreq/Makefile,
	drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.h,
	drivers/cpufreq/cpufreq_ondemand.c,
	drivers/input/touchscreen/sweep2sleep.c,
	drivers/leds/leds-an30259a.c, include/linux/sysfs.h,
	kernel/mxsysfs.c: did some more work in cpufreq, made MX_ATTRs
	global, did some fixup in acpuclock (our cpufreq driver) to keep up
	to date and stop using the deprecated "target" function in favour of
	"target_index".

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c,
	drivers/power/power_supply_core.c: fix my goto and spacing

2017-10-01  robcore <robpatershuk@gmail.com>

	* drivers/power/power_supply_core.c: power supply: if the screen
	isnt on, fuck it dont bother with a wake lock, BUT always make that
	check just in case. also, stub out the "changed" transaction into
	mini get/put/try routines

2017-10-01  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/rpm-regulator.c,
	drivers/input/keyboard/gpio_keys.c, include/linux/pm_wakeup.h: gpio
	keys, switch back to using wakelocks so we can track them using
	autosleep/android mechanisms. also in the rpm-regulator, enable
	requires_tcxo_workaround unconditionally if it is enabled in
	platform data

2017-09-30  robcore <robpatershuk@gmail.com>

	* drivers/power/pm8921-charger.c, drivers/power/power_supply_core.c: 
	pm8921 and core - power_supply_changed

2017-09-30  robcore <robpatershuk@gmail.com>

	* drivers/power/power_supply_core.c: include linux/delay.h

2017-09-30  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c: fuck i lied, i was looking at the
	wrong driver (same name, different location)

2017-09-30  robcore <robpatershuk@gmail.com>

	* drivers/power/sec_battery.c: there, sec battery supplies its own
	wakelocks for all of its power_supply_changed functions, so none of
	them require one held in power supply core

2017-09-30  robcore <robpatershuk@gmail.com>

	* drivers/power/power_supply_core.c, include/linux/power_supply.h: i
	think this is a good idea, a lot of our stuff is already wake locked
	when we call power_supply_changed, so ive added a separate version
	that also uses trylocks

2017-09-30  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-fusion3-battery.c: trying out oneshot flag
	for battery irq

2017-09-30  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-fusion3-battery.c: trying out north
	american version again

2017-09-30  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-fusion3-battery.c,
	drivers/battery/fastchg.c, drivers/battery/local_fc.h,
	drivers/battery/sec_battery.c, include/linux/fastchg.h: reverted it
	all for now

2017-09-30  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/board-fusion3-battery.c,
	drivers/battery/fastchg.c, drivers/battery/local_fc.h,
	drivers/battery/sec_battery.c, include/linux/fastchg.h: well - broke
	something

2017-09-30  robcore <robpatershuk@gmail.com>

	* include/linux/wakelock.h: wake_trylock - see if the wakeup source
	is active and, if not, stay awake and return positive (true),
	otherwise return 0 (false)

2017-09-30  robcore <robpatershuk@gmail.com>

	* include/linux/pm_wakeup.h: i may be wrong here, but am pretty sure
	we should only mark wakeup sources as active if they have been
	called as such...

2017-09-30  robcore <robpatershuk@gmail.com>

	* drivers/usb/misc/mdm_data_bridge.c: interesting experiment, throw
	mdm_data_bridge a new workqueue for kevent work.

2017-09-30  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: also cleaning up the init sequence in
	prometheus. check for null, remove objects, return ENOMEM on failure

2017-09-30  robcore <robpatershuk@gmail.com>

	* drivers/input/touchscreen/synaptics/rmi_sensor.c,
	kernel/power/prometheus.c: rmi sensor: try our best NOT to rely on
	flush_scheduled_work(), as it is a blocking operation on the main
	system wq and that is NOT okay

2017-09-29  robcore <robpatershuk@gmail.com>

	* drivers/power/power_supply_core.c: little more

2017-09-29  robcore <robpatershuk@gmail.com>

	* drivers/battery/sec_battery.c, drivers/power/power_supply_core.c: 
	"schedule" wq functions suck. im going to try putting (almost)
	everything in a simple function

2017-09-29  robcore <robpatershuk@gmail.com>

	* drivers/power/power_supply_core.c: thats it. im going all out with
	this power_supply_changed fake notifier

2017-09-29  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: intelli plug - bump version,
	smooth out some of the locking, lengthen some of our timer values.
	these ones are far too short

2017-09-29  robcore <robpatershuk@gmail.com>

	* drivers/power/pm8921-charger.c: remove some useless debugging

2017-09-29  robcore <robpatershuk@gmail.com>

	* drivers/power/pm8921-charger.c: JESUS FUCKING CHRIST
	pm8921-charger. okay, i know we probably dont use half of this shit.
	but still. a: dont needlessly call TWO subsequent
	power_supply_changed routines in the set routine if the type has
	already been set. b: WHY THE FUCK WOULD YOU HOLD A WAKE LOCK AFTER
	THE SCHEDULED WORK THAT RELEASES IT? FUCK

2017-09-29  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/sec-switch.c: while checking out some code on my
	smoke break, i noticed that these two charging indicators are
	backwards because they do the opposite of what their names imply.

2017-09-29  robcore <robpatershuk@gmail.com>

	* drivers/power/power_supply_core.c: trying something *potentially*
	helpful to prevent the constant onslaught of wakelocks coming from
	fucking power supply core. see my angry comment for details

2017-09-29  robcore <robpatershuk@gmail.com>

	* drivers/rtc/class.c, drivers/rtc/rtc-pm8xxx.c,
	net/wireless/sysfs.c: fixed up rtc pm calls and spruced up msm
	pm8xxx rtc driver while at it

2017-09-29  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: PM / s2idle: Invoke the ->wake() platform
	callback earlier;

2017-09-29  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c: fix up device_add pm stuff

2017-09-29  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/linux/device.h: this will be a
	hassle, but hopefully worth it. remove legacy suspend support

2017-09-29  robcore <robpatershuk@gmail.com>

	* drivers/net/usb/rmnet_usb_data.c, drivers/usb/serial/csvt.c: might
	revert this

2017-09-28  robcore <robpatershuk@gmail.com>

	* drivers/usb/core/hcd.c: some more usb tinkering. lets break shit!

2017-09-28  robcore <robpatershuk@gmail.com>

	* drivers/usb/core/hcd.c, drivers/usb/core/urb.c: a few more
	cleanups

2017-09-28  robcore <robpatershuk@gmail.com>

	* drivers/usb/core/otg_whitelist.h, drivers/usb/core/sec-dock.h: 
	minor whitespace cleanup

2017-09-28  robcore <robpatershuk@gmail.com>

	* drivers/usb/core/driver.c: usb driver - only terminate urbs for
	the device if the device not only if the device allows "soft"
	rebinding, but also if it is present ;)

2017-09-28  robcore <robpatershuk@gmail.com>

	* drivers/usb/core/driver.c, drivers/usb/core/hub.c,
	drivers/usb/core/message.c, include/linux/usb.h: USB: dont cancel
	queued resets when unbinding drivers

2017-09-28  robcore <robpatershuk@gmail.com>

	* drivers/usb/core/driver.c: usb core/hub/driver/message - merging
	in some smart changes from upstream

2017-09-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c, kernel/cpu_hardplug.c: intelli
	and hardplug - update to use new range macros, and make hardplug
	bring previous cpus back online (keep track of em too). also, stick
	with max_cpus_online in intelli because using the hardplug reference
	requires syncronization that we cant afford

2017-09-28  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: take out the debug WARN

2017-09-28  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: throwing a conditional backtrace into
	suspend to satisfy some curiousity

2017-09-28  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/pm-data.c: change our supported sleep modes

2017-09-28  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/pm-8x60.c: msm pm - slightly adjust our cpu pm
	notifier to notify once we have requested low power exit

2017-09-28  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/sec-switch.c: sec switch: get rid of my cable
	type hack, didnt work. also expand my conditions for my custom
	charger check, and try setting the previous cable type immediately
	after checking if it matches cable type like on newer models

2017-09-28  robcore <robpatershuk@gmail.com>

	*
	drivers/input/keyboard/cypress_touchkey_236/cypress-touchkey-236.c,
	drivers/input/keyboard/gpio_keys.c,
	drivers/input/touchscreen/synaptics_i2c_rmi.c: back to previous
	boost setup

2017-09-28  robcore <robpatershuk@gmail.com>

	*
	drivers/input/keyboard/cypress_touchkey_236/cypress-touchkey-236.c: 
	fuck cypress touchkey too

2017-09-28  robcore <robpatershuk@gmail.com>

	* drivers/input/keyboard/gpio_keys.c,
	drivers/input/touchscreen/synaptics_i2c_rmi.c: reorder the hotplug
	boost and the cpufreq boost again

2017-09-28  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: prometheus - get rid of redundant
	hardplug_all_cpus() call and keep the resume work on cpu 0 again

2017-09-28  robcore <robpatershuk@gmail.com>

	* include/linux/cpumask.h: cpumask: wrote some pretty nifty little
	macros, if i do say so myself. just a shortcut for checking cpu
	range

2017-09-28  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: fix a little derp

2017-09-28  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/platsmp.c, drivers/cpufreq/intelli_hotplug.c,
	drivers/thermal/intelli/msm_thermal.c, include/linux/cpu.h,
	include/linux/cpumask.h, kernel/cpu.c, kernel/cpu_hardplug.c,
	kernel/power/prometheus.c: fixed it all up - wrote some pretty neat
	macros for each cpu except 0, and nonboot online/offline/possible
	stuff

2017-09-28  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: intelli down

2017-09-28  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: back to working hardplug - better changes
	coming too i have ideas

2017-09-28  robcore <robpatershuk@gmail.com>

	* pos.sh: the fuck

2017-09-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: intelliplug hardplug call back
	- go with schedule delayed work because recycling is pointless if
	hardplug is disabled

2017-09-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c, include/linux/cpu.h,
	include/linux/cpumask.h, kernel/cpu_hardplug.c: hardplug 2.7 and
	intelliplug 14.7 - create a notifier for hotplug drivers to readjust
	when hardplug values change. also, ensure that hardplug brings up
	cores that it disables *almost* unconditionally, as it seems to
	affect the rest of the system

2017-09-27  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: hardplug 2.6 - test for cpumask empty in
	is_cpu_allowed too

2017-09-27  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: use nonboot helpers in msm
	thermal

2017-09-27  robcore <robpatershuk@gmail.com>

	* include/linux/cpumask.h: fix a derp in cpumask.h

2017-09-27  robcore <robpatershuk@gmail.com>

	* include/linux/cpumask.h, kernel/cpu_hardplug.c,
	kernel/power/prometheus.c: cpu hardplug 2.5: doing it right this
	time.

2017-09-27  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: revert hardplug for now with some minor
	upgrades

2017-09-27  robcore <robpatershuk@gmail.com>

	* include/linux/cpumask.h, kernel/cpu_hardplug.c: fixing hardplug
	for now

2017-09-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c, kernel/power/prometheus.c: 
	intelli/hard plugs: if hardplug has any screen on work to do, it
	makes waking up way faster (and safer) to do it after the resume.
	thus, delay intelliplugs take-over of the cpus for a second with a
	simple delayed work wrapper for recycle_cpus()

2017-09-27  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: check for (limit_screen_on_cpus) in
	prometheus. bump the version.

2017-09-27  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: hardplug 2.3 - stricter checking for the
	two conditions that matter most - cpu CANNOT be in the hardplug mask
	if it is online, otherwise assuming assuming the opposite should be
	relatively safe. will test for corner cases

2017-09-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c, include/linux/cpu.h,
	include/linux/cpumask.h, kernel/cpu.c, kernel/cpu_hardplug.c,
	kernel/power/prometheus.c: cpu_hardplug 2.2 - apply a global cpumask
	utilizing the core infrastracture. TODO - get good at
	arrays/bitmasks and make "allowed" vars a lot simpler with em

2017-09-27  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/platsmp.c, include/linux/cpumask.h,
	kernel/cpu.c, kernel/cpu_hardplug.c: create a new global cpumask
	that tracks just the nonboot cpus (ie. 1-3 on a four core system)

2017-09-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c, include/linux/cpumask.h,
	kernel/cpu.c: intelli 14.5 - cleanup some of our initializers, to
	avoid having to if we are skipping a function entirely

2017-09-27  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: hardplug 2.1 - forget testing for
	cpu_online regarding max online. if the cpu isnt online yet, it will
	be soon

2017-09-27  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: remove the unnecessary "continue" from my
	cpu iterator

2017-09-27  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: throw in some extra conditions to nr
	hardplugged cpus

2017-09-27  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: 2.1 - check to see if the cpu is allowed on
	hardplug callback before diving into hardplug cpu

2017-09-27  robcore <robpatershuk@gmail.com>

	* include/linux/cpu.h: fixed an Lanchor thing

2017-09-27  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c, include/linux/cpu.h,
	kernel/cpu_hardplug.c: intelliplug 14.4/hardplug 2.0 - expose the
	"real" max cpus online so that hotplug drivers can adjust their max
	limits appropriately. in intelli - turn the simple calculation into
	a helper function and use it instead of max_cpus_online everywhere

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: fuck you gcc

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: cleanup some of our
	for_each_cpu shit

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: hmmm no we will set the cpu
	as part of the mask regardless of whether cpu is allowed. the check
	is only really relevant on cpu_up, which in thermals case will clear
	the bit even if cpu up fails so who the fuck cares

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: remember the mutex - make
	the whole thing a soft trylock

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: fix a return val now that i
	made update_offline_cores a void func (as it was being used for
	anyway)

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: thermal housekeeping

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.c,
	drivers/cpufreq/cpufreq_machinex_gov_attr.h: starting work on some
	stationary cpu governor tunables that are VERY hacky and inefficient
	but will get the ball rolling

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: up BOOST_LOCK_DUR and thus,
	DEFAULT_DOWN_LOCK_DUR to 150 ms

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: Intelli 14.3 - move current
	profile selection to its own function, go back to generic get for
	cpufreq as its faster and less locking. we dont need exact numbers
	here they are just snapshots

2017-09-26  robcore <robpatershuk@gmail.com>

	* kernel/cpu.c: I was like "WHAT THE HELL IS GOING ON?" just now but
	using if in a comparison statement is relatively important for
	things like compiling and for the bloody thing to work as intended

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c,
	drivers/thermal/intelli/msm_thermal.c, include/linux/cpu.h,
	kernel/cpu.c, kernel/cpu_hardplug.c: intelliplug
	14.2/thermal/hardplug updates - make thermal_core_controlled the
	per-cpu variable that it is. use it in intelli of course. use
	cpufreq_quick_get in intelli to see if the added locked values gives
	us value. also ensure that we arent stepping on screen on hardplug
	when unlocking screen off plugs

2017-09-26  robcore <robpatershuk@gmail.com>

	* kernel/cpu_hardplug.c: hardplug, fastpath our check for cpu 0

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/thermal/intelli/msm_thermal.c: msm thermal - > when taking
	down cpus, we should be testing for cpu > 1 | cpu < 1.  if we are
	testing for 0, it will be included in the hotplugging which is dumb.

2017-09-26  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: more script fixes

2017-09-26  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: more adjustments

2017-09-26  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: umm...how was this working?

2017-09-26  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: maybe semi-colons. who the fuck knows this
	protocol is a circus

2017-09-26  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: those single quotes were bad

2017-09-26  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: keep prometheus_override mutex locked

2017-09-26  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: aaand get rid of global suspend and
	ignore wakelocks variables

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c, include/linux/prometheus.h: 
	make the suspend booster a void i changed a plan

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, drivers/cpufreq/intelli_hotplug.c,
	include/linux/prometheus.h, include/linux/suspend.h,
	kernel/power/prometheus.c: prometheus 5.6 and intelliplug 14.1 -
	remove system suspend setting as our firmware seems to be taking
	over now, so i think our attempts are in vain until i get some of
	the callbacks under our control from fw. beyond that, hook up a
	nifty little relationship with prometheus and intelliplug to bring
	all the cpus online before suspend, as number of cores available
	when not suspended was becoming unpredictable with intelliplug
	plugging 2 of the cores right before suspend. problem solved.

2017-09-26  robcore <robpatershuk@gmail.com>

	* build_kernel.sh: throw some single quotes around shit in my
	script. also...so far it is noticing if usb is connected, and
	normally detects when in recovery just fine, so make that the only
	test case

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/input/touchscreen/synaptics_i2c_rmi.c: oh okay it likes
	being an unsigned integer. thanks gcc...

2017-09-26  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: rename prometheus deep_suspend to
	kick_suspend, as that is what we are using it for. also, bump to 5.5

2017-09-26  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c, kernel/power/suspend.c: suspend to idle
	has kicked suspend into gear in the past, so trying that out for
	prometheus while also removing a dumb condition on pm_test_level in
	suspend as well

2017-09-26  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: suspend - just force our memsleep default
	to MEM

2017-09-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/sec-switch.c: dont bother setting
	previous_cable_type to cable type twice

2017-09-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/sec-switch.c: close that bracket asshole

2017-09-26  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/sec-switch.c,
	drivers/input/touchscreen/synaptics_i2c_rmi.c,
	include/linux/i2c/synaptics_rmi.h: sec switch - utilize an old trick
	ktoonsez thought of to verifiy if the charger is connected and use
	it in our initial check. also ensure first_chg_checked variable is
	set REGARDLESS and inform us

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: intelliplug 14 - optimize
	profile selection as well as clamping, and some more tweaks here and
	there

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: intelliplug 13.8: properly use
	intelliread when showing the value of "active" variable

2017-09-26  robcore <robpatershuk@gmail.com>

	* drivers/base/bus.c, drivers/base/core.c, drivers/base/dd.c,
	drivers/base/dma-mapping.c, drivers/base/memory.c,
	drivers/base/soc.c, include/linux/device.h, include/linux/kobject.h: 
	possed

2017-09-26  robcore <robpatershuk@gmail.com>

	* pos.sh: possing last few

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/base/bus.c: bus: drv->p is freed in driver_release()

2017-09-25  robcore <robpatershuk@gmail.com>

	* include/linux/kobject.h: add the missing kobject actions

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/base/dd.c: oops missed the first half of the file

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, drivers/base/dd.c,
	drivers/base/dma-mapping.c, include/linux/device.h: added some
	helpers, cleaned up deferred probing a bit

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/base/soc.c: my guess is we dont use soc bus driver

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/base/memory.c: im guessing we barely use device memory

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/base/cpu.c: smarten up cpu device registration a bit

2017-09-25  robcore <robpatershuk@gmail.com>

	* kernel/power/suspend.c: use pr_cont not printk in suspend for sync

2017-09-25  robcore <robpatershuk@gmail.com>

	* kernel/rcu/tree.c: rcu-Allow-for-page-faults-in-NMI-handlers.

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/tty/serial/msm_serial_hs.c: oops we dont "case" default,
	default is a specifier equal to it

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/tty/serial/msm_serial_hs.c: msm serial hs - shut the FUCK
	up Unknown PM state

2017-09-25  robcore <robpatershuk@gmail.com>

	* include/linux/atomic.h, include/linux/spinlock.h: add
	smp_mb__after_spinlock

2017-09-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: msm_cpufreq_driver - i
	believe we may benefit from CPUFREQ_ASYNC_NOTIFICATION (trying it
	anyway)

2017-09-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: in try to wake up, use smp_mb__after_spinlock
	instead of before

2017-09-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/core.c: little fix in sched/core.c migrate_task

2017-09-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock.c: aaand acpuclk_get_rate

2017-09-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock.h: more

2017-09-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock.c, arch/arm/mach-msm/acpuclock.h: fix
	the def?

2017-09-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: acpuclock - at least throw in
	some type safety regarding cpu signedness

2017-09-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpufreq_schedutil.c: finish up schedutil sync with
	latest mainline

2017-09-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpufreq_schedutil.c: cpufreq: schedutil: Make iowait
	boost more energy efficient

2017-09-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpufreq_schedutil.c: cpufreq: schedutil: Always
	process remote callback with slow switching

2017-09-25  robcore <robpatershuk@gmail.com>

	* kernel/sched/cpufreq_schedutil.c: cpufreq: schedutil: Dont
	restrict kthread to related_cpus unnecessarily

2017-09-25  robcore <robpatershuk@gmail.com>

	* include/linux/kernel.h: put sanitize_min_max before the other
	min/max macros because it interferes, and revert to the original
	working one

2017-09-25  robcore <robpatershuk@gmail.com>

	* include/linux/kernel.h: fix my sanitize_min_max macros

2017-09-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c, drivers/cpufreq/cpufreq.c,
	drivers/cpufreq/intelli_hotplug.c, include/linux/kernel.h,
	include/linux/sysfs_helpers.h: i think my excessive null checks and
	acpuclock changes were dumb

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: lets call this 13.7

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: fix up my READ_ONCE of a
	clamped value, and optimize the output of thread stats too

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: intelli 13.6 - ps last commit I
	made the clamping a little more optimized, so to speak

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/intelli_hotplug.c: go a
	little easy on verify within limits. I think reapplying hardlimits
	is overkill

2017-09-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c: sweeten the deal a bit

2017-09-25  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/acpuclock-krait.c,
	arch/arm/mach-msm/acpuclock.c, drivers/cpufreq/cpufreq.c: Bear with
	me...cant i just use a thermal max clampin acpuclock set rate?

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: account for potential hardlimit policy
	NULL pointers on suspend/resume

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: verify_within_limits -> account for the
	unlikeliest of corner cases: the potential for policy to be NULL.
	while we are at it, reapply hardlimits before setting the rest of
	the limits.

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c, drivers/cpufreq/intelli_hotplug.c: 
	cpufreq_verifiy_within_limits -> account for policy->max <
	policy->min

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: fuck it, just return the clamped value
	instead of rolling our own

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/cpufreq.c: cpufreq - clamp hard min/max

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: intelliplug 13.4 - clamp the
	target_cpus value at every source

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: intelli - get rid of last
	remaining INTELLI_USE_SPINLOCK

2017-09-25  robcore <robpatershuk@gmail.com>

	* include/linux/slub_def.h: have virt to obj

2017-09-25  robcore <robpatershuk@gmail.com>

	* fs/ext2/acl.c, fs/ext2/balloc.c, fs/ext2/ext2.h, fs/ext2/inode.c,
	fs/ext2/super.c, fs/ext3/acl.c, fs/ext3/balloc.c, fs/ext3/ext3.h,
	fs/ext3/inode.c, fs/ext3/super.c: ext2/3 - merge mostly with current
	ref tree

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: intelliplug 13.3 - remove now
	unused atomic functions and def. spinlock works

2017-09-25  robcore <robpatershuk@gmail.com>

	* include/linux/slub_def.h: mm-slub-introduce-virt_to_obj-function.

2017-09-25  robcore <robpatershuk@gmail.com>

	* drivers/cpufreq/intelli_hotplug.c: Intelliplug 13.2 - show actual
	target cpus instead of just the goal provided by the thread stats -
	this way we get real time information regardless of the source of
	input

2017-09-23  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: disable global pm for now

2017-09-23  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: prometheus 5.4 - restructure wakelock
	checking and such so that we return on cables/media, etc regardless
	of selection...and just make it smarter

2017-09-23  robcore <robpatershuk@gmail.com>

	* kernel/power/power.h, kernel/power/prometheus.c,
	kernel/power/wakelock.c: prometheus 5.3 - enable wake lock checking
	by default again, also use the neato wakelock counter i got from
	some guys repo (sorry dude completely forgot where) to make testing
	easier... finally...uh, made a whole spectacle out of calling
	suspend. have a look and youll see what i mean

2017-09-23  robcore <robpatershuk@gmail.com>

	* drivers/base/power/runtime.c: get rid of some trace crap

2017-09-23  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: okay lets try
	suspend_devices_and_enter(PM_SUSPEND_MEM)

2017-09-23  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: call it 5.1

2017-09-23  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: try using hibernate() instead?

2017-09-23  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: did other stuff too, this is 5.0

2017-09-23  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c, include/linux/suspend.h,
	kernel/power/prometheus.c: disable callbacks when prometheus calls
	suspend

2017-09-23  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: some formatting cleanup

2017-09-23  robcore <robpatershuk@gmail.com>

	* drivers/video/msm/mdp.c, include/linux/workqueue.h,
	kernel/power/prometheus.c: prometheus 4.8 - put the cancel works
	back where they belong - use a different type of workqueue (real
	singlethread hipri instead of the fake mdp one that was just the
	same as singlethread), actually call PM_SUSPEND_MEM instead of mem
	current, turn off the oom function for now, stop skipping first
	suspend, and cleanup prints

2017-09-23  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: prometheus 4.7 - use __read_mostly for
	oom disabler

2017-09-23  robcore <robpatershuk@gmail.com>

	* kernel/power/prometheus.c: prometheus 4.6 - cancel the previous
	works before even calling the oppositive work function

2017-09-23  robcore <robpatershuk@gmail.com>

	* kernel/power/main.c, kernel/power/prometheus.c: small change in
	prometheus - use the ignore wakelock define so it isnt pointless

2017-09-23  robcore <robpatershuk@gmail.com>

	* include/linux/prometheus.h, kernel/power/main.c,
	kernel/power/prometheus.c, mm/memcontrol.c, mm/oom_kill.c,
	mm/page_alloc.c: there bring back to prometheus stuff

2017-09-23  robcore <robpatershuk@gmail.com>

	* fs/ext4/dir.c, fs/ext4/ext4.h, fs/ext4/ext4_extents.h,
	fs/ext4/extents.c, fs/ext4/extents_status.c,
	fs/ext4/extents_status.h, fs/ext4/file.c, fs/ext4/ialloc.c,
	fs/ext4/indirect.c, fs/ext4/inline.c, fs/ext4/inode.c,
	fs/ext4/ioctl.c, fs/ext4/mballoc.c, fs/ext4/migrate.c,
	fs/ext4/move_extent.c, fs/ext4/namei.c, fs/ext4/super.c,
	include/linux/prometheus.h, kernel/power/main.c,
	kernel/power/prometheus.c, mm/memcontrol.c, mm/oom_kill.c,
	mm/page_alloc.c: whoa revert that for a sec i forgot i was doing an
	ext4 experiment

2017-09-23  robcore <robpatershuk@gmail.com>

	* fs/ext4/dir.c, fs/ext4/ext4.h, fs/ext4/ext4_extents.h,
	fs/ext4/extents.c, fs/ext4/extents_status.c,
	fs/ext4/extents_status.h, fs/ext4/file.c, fs/ext4/ialloc.c,
	fs/ext4/indirect.c, fs/ext4/inline.c, fs/ext4/inode.c,
	fs/ext4/ioctl.c, fs/ext4/mballoc.c, fs/ext4/migrate.c,
	fs/ext4/move_extent.c, fs/ext4/namei.c, fs/ext4/super.c,
	include/linux/prometheus.h, kernel/power/main.c,
	kernel/power/prometheus.c, mm/memcontrol.c, mm/oom_kill.c,
	mm/page_alloc.c: prometheus 4.5 - disable oom temporarily before
	calling suspend, call the correct suspend state right out of the
	gate (it will default to deep thanks to our command line entry), and
	use the autosleep lock instead of pm_mutex...looks like suspend uses
	the pm_mutex internally now

2017-09-23  robcore <robpatershuk@gmail.com>

	* fs/ext4/inode.c: remove EXT4_STATE_DELALLOC_RESERVED

2017-09-23  robcore <robpatershuk@gmail.com>

	* fs/ext4/balloc.c, fs/ext4/ext4.h, fs/ext4/extents.c,
	fs/ext4/indirect.c, fs/ext4/mballoc.c: import ext4 logic for
	DELALLOC_RESERVED

2017-09-23  robcore <robpatershuk@gmail.com>

	* drivers/base/power/main.c: PM: core: Fix
	device_pm_check_callbacks()

2017-09-23  robcore <robpatershuk@gmail.com>

	* drivers/base/power/qos.c: 
	PM-QoS-Use-the-correct-variable-to-check-the-QoS-req

2017-09-23  robcore <robpatershuk@gmail.com>

	* fs/ext4/indirect.c: ext4-fix-indirect-punch-hole-corruption.

2017-09-23  robcore <robpatershuk@gmail.com>

	* init/Kconfig, init/main.c: init-remove-CONFIG_INIT_FALLBACK

2017-09-23  robcore <robpatershuk@gmail.com>

	* include/asm-generic/vmlinux.lds.h, scripts/module-common.lds: 
	kernel: add support for .init_array.* constructors

2017-09-23  robcore <robpatershuk@gmail.com>

	* include/linux/slub_def.h, mm/slub.c: mm/slub: share object_err
	function

2017-09-23  robcore <robpatershuk@gmail.com>

	* include/linux/slub_def.h: mm-slub-introduce-virt_to_obj-function.

2017-09-23  robcore <robpatershuk@gmail.com>

	* kernel/power/main.c: fix some formatting garbage

2017-09-23  robcore <robpatershuk@gmail.com>

	* drivers/input/touchscreen/sweep2sleep.c, include/linux/suspend.h,
	kernel/power/hibernate.c, kernel/power/main.c: did some work in the
	custom power department. for starters, make hibernates sys_sync call
	rely on the userspace accessible param used in regular suspend
	because we dont have a real hibernate. also, slightly modify
	userspace access to suspend states to ensure that, if on, the screen
	is shut down before setting one of the power states from userspace.
	also, use a kobject so i can see what the fucking states look like
	myself without all of this overly complex, decoding nonsense

2017-09-23  robcore <robpatershuk@gmail.com>

	* include/linux/compiler-gcc.h: compiler - reintroduce alias symbol
	shortcut

2017-09-23  robcore <robpatershuk@gmail.com>

	* lib/cpu_rmap.c: cpu_rmap:irq_set_affinity_notifier instead of
	release

2017-09-23  robcore <robpatershuk@gmail.com>

	* lib/flex_proportions.c: dox

2017-09-23  robcore <robpatershuk@gmail.com>

	* lib/kobject.c: kobject - use const for rename

2017-09-23  robcore <robpatershuk@gmail.com>

	* Documentation/ia64/paravirt_ops.txt,
	Documentation/virtual/00-INDEX,
	Documentation/virtual/paravirt_ops.txt, MAINTAINERS,
	include/linux/cryptohash.h, lib/dynamic_queue_limits.c,
	lib/gen_crc32table.c, lib/halfmd4.c, lib/idr.c,
	lib/interval_tree.c, lib/kobject_uevent.c, lib/list_sort.c,
	lib/llist.c, lib/md5.c, lib/nlattr.c, lib/percpu_ida.c,
	lib/plist.c, lib/show_mem.c, lib/strncpy_from_user.c: fixup includes
	again

2017-09-23  robcore <robpatershuk@gmail.com>

	* drivers/scsi/sd.c: ditto scsi

2017-09-23  robcore <robpatershuk@gmail.com>

	* drivers/mmc/card/block.c: update string_get_size in mmc block to
	take block size arg

2017-09-23  robcore <robpatershuk@gmail.com>

	* lib/string_helpers.c: temporary hax for string helpers

2017-09-23  robcore <robpatershuk@gmail.com>

	* include/linux/string_helpers.h: fix includes

2017-09-23  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/bcmutils.c,
	drivers/net/wireless/bcmdhd/include/bcmutils.h,
	drivers/net/wireless/bcmdhd/wl_android.c,
	drivers/net/wireless/bcmdhd/wl_cfg_btcoex.c: hmm..okay, stick with
	my strncasecmp changes for bcmdhd

2017-09-23  robcore <robpatershuk@gmail.com>

	* lib/string_helpers.c: go with mainline to for string params

2017-09-23  robcore <robpatershuk@gmail.com>

	* lib/string.c, lib/string_helpers.c, lib/strnlen_user.c: revert
	that

2017-09-23  robcore <robpatershuk@gmail.com>

	* lib/string.c, lib/string_helpers.c, lib/strnlen_user.c: FUCK

2017-09-23  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/bcmdhd/bcmutils.c,
	drivers/net/wireless/bcmdhd/include/bcmutils.h,
	drivers/net/wireless/bcmdhd/wl_android.c,
	drivers/net/wireless/bcmdhd/wl_cfg_btcoex.c: reverted the bcmdhd

2017-09-23  robcore <robpatershuk@gmail.com>

	* arch/arm/mach-msm/sec_debug.c, drivers/acpi/battery.c,
	drivers/infiniband/ulp/srpt/ib_srpt.c,
	drivers/misc/altera-stapl/altera.c,
	drivers/net/wireless/bcmdhd/bcmutils.c,
	drivers/net/wireless/bcmdhd/include/bcmutils.h,
	drivers/net/wireless/bcmdhd/wl_android.c,
	drivers/net/wireless/bcmdhd/wl_cfg_btcoex.c,
	drivers/platform/x86/thinkpad_acpi.c, drivers/pnp/interface.c,
	drivers/s390/cio/chp.c, drivers/scsi/ips.c,
	drivers/scsi/scsi_debug.c,
	drivers/staging/zcache/ramster/heartbeat.c,
	drivers/staging/zcache/ramster/masklog.c,
	drivers/usb/gadget/file_storage.c, drivers/video/pvr2fb.c,
	drivers/video/s3c2410fb.c, drivers/video/sis/sis_main.c,
	drivers/video/sm501fb.c, fs/cifs/cifs_dfs_ref.c, fs/cifs/connect.c,
	fs/cifs/dir.c, fs/ecryptfs/file.c, fs/exfat/exfat_super.c,
	fs/fat/dir.c, fs/fat/namei_vfat.c, fs/isofs/inode.c,
	fs/ncpfs/dir.c, fs/ncpfs/ncplib_kernel.h,
	fs/ocfs2/cluster/heartbeat.c, fs/ocfs2/cluster/masklog.c,
	fs/sdcardfs/dentry.c, include/linux/nls.h,
	kernel/debug/kdb/kdb_bp.c, net/batman-adv/gateway_common.c,
	net/ipv4/netfilter/nf_nat_sip.c, net/netfilter/ipvs/ip_vs_ftp.c,
	net/netfilter/nf_conntrack_ftp.c, net/netfilter/nf_conntrack_sip.c,
	net/netfilter/nf_log.c, net/sunrpc/xprtrdma/verbs.c,
	sound/pci/hda/hda_hwdep.c, sound/soc/codecs/audience/es705-cdev.c,
	sound/soc/codecs/audience/escore-cdev.c, strnrep.sh: moved my script

2017-09-23  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, strnrep.sh: fuck it gonna quickly
	replace strnicmp cases

2017-09-23  robcore <robpatershuk@gmail.com>

	* Documentation/cgroups/unified-hierarchy.txt,
	Documentation/filesystems/Locking,
	Documentation/filesystems/caching/backend-api.txt,
	Documentation/filesystems/caching/fscache.txt,
	Documentation/ia64/paravirt_ops.txt, Documentation/kasan.txt,
	Documentation/virtual/00-INDEX,
	Documentation/virtual/paravirt_ops.txt,
	Documentation/x86/x86_64/mm.txt, MAINTAINERS, Makefile,
	arch/arm/configs/canadefconfig, arch/frv/include/asm/string.h,
	arch/x86/Kconfig, arch/x86/boot/Makefile,
	arch/x86/boot/compressed/eboot.c, arch/x86/boot/compressed/misc.h,
	arch/x86/include/asm/kasan.h, arch/x86/include/asm/string_64.h,
	arch/x86/kernel/dumpstack.c, arch/x86/kernel/head64.c,
	arch/x86/kernel/setup.c, arch/x86/kernel/x8664_ksyms_64.c,
	arch/x86/lib/memcpy_64.S, arch/x86/lib/memmove_64.S,
	arch/x86/lib/memset_64.S, arch/x86/mm/Makefile,
	arch/x86/mm/kasan_init_64.c, block/blk-merge.c,
	block/blk-mq-sysfs.c, block/blk-mq-tag.c, block/blk-mq-tag.h,
	block/blk-mq.c, block/blk-throttle.c, drivers/md/dm.c,
	drivers/net/wireless/airo.c, drivers/scsi/ch.c,
	drivers/staging/android/logger.c, drivers/usb/gadget/inode.c,
	fs/9p/vfs_inode.c, fs/Kconfig.binfmt, fs/Makefile, fs/aio.c,
	fs/bad_inode.c, fs/binfmt_som.c, fs/btrfs/ioctl.c,
	fs/cachefiles/daemon.c, fs/cachefiles/interface.c,
	fs/cachefiles/internal.h, fs/cachefiles/namei.c,
	fs/cachefiles/rdwr.c, fs/ceph/dir.c, fs/coda/dir.c, fs/coredump.c,
	fs/dcache.c, fs/direct-io.c, fs/ecryptfs/ecryptfs_kernel.h,
	fs/ecryptfs/file.c, fs/ecryptfs/inode.c, fs/ecryptfs/keystore.c,
	fs/ecryptfs/main.c, fs/exportfs/expfs.c, fs/fat/inode.c,
	fs/fs-writeback.c, fs/fscache/internal.h, fs/fscache/object.c,
	fs/fscache/stats.c, fs/fuse/dir.c, fs/fuse/file.c,
	fs/fuse/fuse_i.h, fs/hfsplus/dir.c, fs/hppfs/hppfs.c,
	fs/internal.h, fs/jffs2/dir.c, fs/jffs2/super.c, fs/jffs2/xattr.c,
	fs/libfs.c, fs/locks.c, fs/namei.c, fs/namespace.c,
	fs/nfs/direct.c, fs/nfsd/nfs4recover.c, fs/nfsd/nfsfh.c,
	fs/nfsd/vfs.c, fs/notify/fanotify/fanotify.c, fs/ocfs2/file.c,
	fs/posix_acl.c, fs/proc/generic.c, fs/proc/inode.c,
	fs/proc/internal.h, fs/proc/vmcore.c, fs/read_write.c,
	fs/reiserfs/xattr.c, fs/super.c, fs/udf/file.c,
	include/linux/aio.h, include/linux/blk-mq.h,
	include/linux/compiler-gcc.h, include/linux/cryptohash.h,
	include/linux/dcache.h, include/linux/fscache-cache.h,
	include/linux/kasan.h, include/linux/kexec.h,
	include/linux/rbtree.h, include/linux/sched.h,
	include/linux/slab.h, include/linux/slub_def.h,
	include/linux/socket.h, include/linux/string.h,
	include/linux/uio.h, include/uapi/linux/Kbuild,
	include/uapi/linux/som.h, kernel/kexec.c, lib/Kconfig.debug,
	lib/Kconfig.kasan, lib/Makefile, lib/dynamic_queue_limits.c,
	lib/halfmd4.c, lib/idr.c, lib/interval_tree.c,
	lib/kobject_uevent.c, lib/llist.c, lib/lockref.c, lib/md5.c,
	lib/nlattr.c, lib/percpu_ida.c, lib/plist.c, lib/show_mem.c,
	lib/string.c, lib/string_helpers.c, lib/strncpy_from_user.c,
	lib/test_kasan.c, mm/Makefile, mm/cma.c, mm/compaction.c,
	mm/huge_memory.c, mm/hugetlb.c, {lib => mm}/iov_iter.c,
	mm/kasan/Makefile, mm/kasan/kasan.c, mm/kasan/kasan.h,
	mm/kasan/report.c, mm/kmemleak.c, mm/memcontrol.c, mm/memory.c,
	mm/nommu.c, mm/page_alloc.c, mm/page_io.c, mm/shmem.c,
	mm/slab_common.c, mm/slub.c, net/atm/mpoa_proc.c, net/socket.c,
	scripts/Makefile.kasan, scripts/Makefile.lib,
	security/apparmor/include/apparmor.h, security/apparmor/lsm.c,
	security/apparmor/path.c, security/inode.c,
	security/selinux/hooks.c, sep23ref.txt: possed

2017-09-23  robcore <robpatershuk@gmail.com>

	* pos.sh: possing all the way back to
	kasan-add-kernel-address-sanitizer-infrastructure

2017-09-23  robcore <robpatershuk@gmail.com>

	* block/blk-mq-tag.c, block/blk-mq-tag.h, block/blk-mq.c: some block
	mq fixes

2017-09-23  robcore <robpatershuk@gmail.com>

	* sep23ref.txt: ref

2017-09-23  robcore <robpatershuk@gmail.com>

	* block/blk-mq-tag.c: 
	blk-mq-re-check-for-available-tags-after-running

2017-09-23  robcore <robpatershuk@gmail.com>

	* block/blk-mq-tag.c: blk-mq-fix-hang-in-bt_get

2017-09-23  robcore <robpatershuk@gmail.com>

	* net/socket.c: oops save my c file

2017-09-23  robcore <robpatershuk@gmail.com>

	* include/linux/socket.h, net/socket.c: fuck it converted net socket
	to iov_iter

2017-09-23  robcore <robpatershuk@gmail.com>

	* net/socket.c: temporarily disabling aio read/write for socket

2017-09-22  robcore <robpatershuk@gmail.com>

	* net/socket.c: fix net socket too

2017-09-22  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/logger.c: add an additional stop point in
	my logger implementation

2017-09-22  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/logger.c: fix logger len implementation

2017-09-22  robcore <robpatershuk@gmail.com>

	* include/linux/blk-mq.h: fix a thing

2017-09-22  robcore <robpatershuk@gmail.com>

	* include/linux/blk-mq.h: hold up

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/locks.c: -locks-fix-generic_delete_lease-tracepoint

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/aio.c, fs/direct-io.c, fs/fuse/file.c, fs/nfs/direct.c,
	include/linux/aio.h: fs: split generic and aio kiocb

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/aio.c, fs/ecryptfs/file.c, fs/read_write.c,
	include/linux/aio.h, net/socket.c: fs: dont allow to complete sync
	iocbs through

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/fuse/file.c, fs/fuse/fuse_i.h: 
	fuse-handle-synchronous-iocbs-internally

2017-09-22  robcore <robpatershuk@gmail.com>

	* block/blk-merge.c, block/blk-mq.c: fix missing updates to blk-mq

2017-09-22  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c, include/linux/blk-mq.h: 
	blk-mq-don-t-wait-in-blk_mq_queue_enter-if-__GFP_WAIT

2017-09-22  robcore <robpatershuk@gmail.com>

	* block/blk-mq-sysfs.c, block/blk-mq.c, include/linux/blk-mq.h: 
	blk-mq-add-blk_mq_init_allocated_queue-and-export

2017-09-22  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c: 
	blk-mq-fix-use-of-incorrect-goto-label-in-blk_mq_init

2017-09-22  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/logger.c, drivers/usb/gadget/inode.c,
	net/socket.c: fixups from ki_nbytes

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/aio.c, fs/ocfs2/file.c, fs/read_write.c, fs/udf/file.c,
	include/linux/aio.h, mm/page_io.c: fs: remove ki_nbytes

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: memcg: disable hierarchy support if bound to the
	legacy cgroup hierarchy

2017-09-22  robcore <robpatershuk@gmail.com>

	* include/linux/dcache.h: oops have those

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/notify/fanotify/fanotify.c: 
	fanotify-fix-event-filtering-with-FAN_ONDIR-set"

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/nommu.c: mm-nommu.c-export-symbol-max_mapnr

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/cma.c: cma - fix aligned offset calc

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/hugetlb.c: mm-hugetlb-close-race-when-setting-PageTail

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: mm, oom: do not fail __GFP_NOFAIL allocation if
	oom killer is disabled

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c: 
	mm-thp-Return-the-correct-value-for-change_huge_pmd

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c, mm/memory.c: 
	mm-fix-up-numa-read-only-thread-grouping-logic.

2017-09-22  robcore <robpatershuk@gmail.com>

	* drivers/net/wireless/airo.c, drivers/scsi/ch.c, fs/jffs2/xattr.c,
	net/atm/mpoa_proc.c: some dox

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/locks.c: locks-fix-fasync_struct-memory-leak-in-lease-upgrade.

2017-09-22  robcore <robpatershuk@gmail.com>

	* Documentation/cgroups/unified-hierarchy.txt, mm/memcontrol.c: 
	mm-memcontrol-use-max-instead-of-infinity-in-control

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: memcg-fix-low-limit-calculation

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/nommu.c: mm-nommu-fix-memory-leak

2017-09-22  robcore <robpatershuk@gmail.com>

	* lib/Kconfig.debug:  rcu: Drive PROVE_RCU directly off of PROVE_LOCKING

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/ecryptfs/ecryptfs_kernel.h, fs/ecryptfs/keystore.c,
	fs/ecryptfs/main.c:  eCryptfs: ensure copy to crypt_stat->cipher does not overrun

2017-09-22  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/caching/backend-api.txt,
	Documentation/filesystems/caching/fscache.txt,
	fs/cachefiles/internal.h, fs/cachefiles/namei.c,
	fs/fscache/internal.h, fs/fscache/object.c, fs/fscache/stats.c,
	include/linux/fscache-cache.h: 
	FS-Cache-Count-culled-objects-and-objects-rejected

2017-09-22  robcore <robpatershuk@gmail.com>

	* lib/lockref.c: remove some access onces

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/shmem.c: mm-shmem-check-for-mapping-owner-before-dereferencing

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/proc/generic.c, fs/proc/inode.c, fs/proc/internal.h: 
	procfs-fix-race-between-symlink-removals-and-traversal

2017-09-22  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/Locking: dox

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/cachefiles/daemon.c, fs/cachefiles/interface.c,
	fs/cachefiles/namei.c, fs/cachefiles/rdwr.c, fs/fs-writeback.c,
	fs/internal.h, fs/notify/fanotify/fanotify.c, fs/super.c: writeback,
	fanotify, and super

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/9p/vfs_inode.c, fs/btrfs/ioctl.c, fs/cachefiles/daemon.c,
	fs/cachefiles/namei.c, fs/ceph/dir.c, fs/coda/dir.c,
	fs/ecryptfs/file.c, fs/ecryptfs/inode.c, fs/exportfs/expfs.c,
	fs/fuse/dir.c, fs/hfsplus/dir.c, fs/hppfs/hppfs.c, fs/jffs2/dir.c,
	fs/jffs2/super.c, fs/libfs.c, fs/namei.c, fs/namespace.c,
	fs/nfsd/nfs4recover.c, fs/nfsd/nfsfh.c, fs/nfsd/vfs.c,
	fs/notify/fanotify/fanotify.c, fs/posix_acl.c, fs/reiserfs/xattr.c,
	mm/shmem.c, security/inode.c, security/selinux/hooks.c: VFS:
	(Scripted) Convert S_ISLNK/DIR/REG(dentry->d_inode) to
	d_is_*(dentry)

2017-09-22  robcore <robpatershuk@gmail.com>

	* security/apparmor/include/apparmor.h, security/apparmor/lsm.c,
	security/apparmor/path.c, security/selinux/hooks.c: security file
	updates

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/dcache.c, include/linux/dcache.h: 
	VFS-Split-DCACHE_FILE_TYPE-into-regular-and-special

2017-09-22  robcore <robpatershuk@gmail.com>

	* include/linux/dcache.h: VFS-Add-a-whiteout-dentry-type.

2017-09-22  robcore <robpatershuk@gmail.com>

	* include/linux/dcache.h: 
	VFS-Introduce-inode-getting-helpers-for-layered-union

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/dcache.c, include/linux/dcache.h: 
	VFS-Add-a-fallthrough-flag-for-marking-virtual-dentry

2017-09-22  robcore <robpatershuk@gmail.com>

	* block/blk-throttle.c: 
	blk-throttle-check-stats_cpu-before-reading-it

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/posix_acl.c: posix_acl-fix-reference-leaks-in-posix_acl_create.

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/coredump.c: dox

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/aio.c: fs-aio.c-Remove-duplicate-function-name-in-pr_debug

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/bad_inode.c: don-t-bother-with-most-of-the-bad_file_ops-methods

2017-09-22  robcore <robpatershuk@gmail.com>

	* drivers/md/dm.c: dm: fix a race condition in dm_get_md

2017-09-22  robcore <robpatershuk@gmail.com>

	* include/linux/kexec.h: kexec - add IND_FLAGS macro

2017-09-22  robcore <robpatershuk@gmail.com>

	* include/linux/kexec.h: 
	kexec-add-bit-definitions-for-kimage-entry-flags

2017-09-22  robcore <robpatershuk@gmail.com>

	* kernel/kexec.c: dox

2017-09-22  robcore <robpatershuk@gmail.com>

	* include/linux/rbtree.h: dox

2017-09-22  robcore <robpatershuk@gmail.com>

	* lib/Makefile, {mm => lib}/iov_iter.c, mm/Makefile: move iov_iter.c
	from mm/ to lib/

2017-09-22  robcore <robpatershuk@gmail.com>

	* include/linux/uio.h, mm/iov_iter.c: new-helper-dup_iter.

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/proc/vmcore.c: 
	vmcore-fix-PT_NOTE-n_namesz-n_descsz-overflow-issue

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/fat/inode.c: fs-fat-use-MSDOS_SB-macro-to-get-msdos_sb_info;

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/locks.c: locks: fix list insertion when lock is split in two

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/locks.c: locks-remove-conditional-lock-release-in-middle

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/locks.c: locks-only-remove-leases-associated-with-the-file

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/Kconfig.binfmt, fs/Makefile, fs/binfmt_som.c,
	include/uapi/linux/Kbuild, include/uapi/linux/som.h: 
	fs-binfmt_som-Drop-kernel-support-for-HP-UX-SOM-bin

2017-09-22  robcore <robpatershuk@gmail.com>

	* Documentation/kasan.txt, arch/arm/kernel/module.c,
	arch/x86/kernel/module.c, arch/x86/mm/kasan_init_64.c,
	drivers/base/regmap/regmap-irq.c, fs/cifs/file.c, fs/locks.c,
	include/asm-generic/vmlinux.lds.h, include/linux/compiler-gcc4.h,
	include/linux/fs.h, include/linux/init_task.h,
	include/linux/kasan.h, include/linux/mm.h, include/linux/vmalloc.h,
	init/Kconfig, init/main.c, kernel/kprobes.c, kernel/module.c,
	lib/Kconfig.kasan, mm/filemap_xip.c, mm/kasan/kasan.c,
	mm/kasan/kasan.h, mm/kasan/report.c, mm/memory.c, mm/vmalloc.c,
	scripts/Makefile.kasan, scripts/module-common.lds: possed

2017-09-22  robcore <robpatershuk@gmail.com>

	* pos.sh: possing back to kasan enable stack instrumentation

2017-09-22  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/00-INDEX,
	Documentation/filesystems/Locking,
	Documentation/filesystems/dax.txt,
	Documentation/filesystems/ext2.txt,
	Documentation/filesystems/vfs.txt,
	Documentation/filesystems/xip.txt, MAINTAINERS, fs/Kconfig,
	fs/Makefile, fs/dax.c, fs/exofs/inode.c, fs/ext2/Kconfig,
	fs/ext2/Makefile, fs/ext2/ext2.h, fs/ext2/file.c, fs/ext2/inode.c,
	fs/ext2/namei.c, fs/ext2/super.c, fs/ext2/xip.c, fs/ext2/xip.h,
	fs/open.c, include/linux/fs.h, include/linux/rmap.h,
	include/linux/vmalloc.h, mm/Makefile, mm/fadvise.c, mm/filemap.c,
	mm/filemap_xip.c, mm/madvise.c, scripts/diffconfig: possed

2017-09-22  robcore <robpatershuk@gmail.com>

	* pos.sh: gotta pos again

2017-09-22  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/dax.txt, fs/dax.c, include/linux/fs.h: 
	dax-add-dax_zero_page_range.

2017-09-22  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/ext2.txt, fs/ext2/ext2.h,
	fs/ext2/file.c, fs/ext2/inode.c, fs/ext2/namei.c, fs/ext2/super.c: 
	ext2-get-rid-of-most-mentions-of-XIP-in-ext2

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/ext2/ext2.h, fs/ext2/inode.c, fs/ext2/namei.c: 
	ext2-remove-ext2_aops_xip;

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/Kconfig, fs/Makefile, fs/ext2/Kconfig, fs/ext2/ext2.h,
	fs/ext2/file.c, fs/ext2/super.c, include/linux/fs.h,
	scripts/diffconfig: 
	vfs-ext2-remove-CONFIG_EXT2_FS_XIP-and-rename-CONFIG

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/ext2/Makefile, fs/ext2/inode.c, fs/ext2/namei.c,
	fs/ext2/super.c, fs/ext2/xip.c, fs/ext2/xip.h: 
	ext2-remove-xip.c-and-xip.h.

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/ext2/ext2.h, fs/ext2/inode.c, fs/ext2/namei.c: 
	ext2-remove-ext2_use_xip

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/ext2/super.c, fs/ext2/xip.c, fs/ext2/xip.h: 
	ext2-remove-ext2_xip_verify_sb

2017-09-22  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/Locking,
	Documentation/filesystems/vfs.txt, fs/exofs/inode.c,
	fs/ext2/inode.c, fs/ext2/xip.c, fs/ext2/xip.h, fs/open.c,
	include/linux/fs.h, include/linux/rmap.h, mm/Makefile,
	mm/fadvise.c, mm/filemap_xip.c, mm/madvise.c: 
	vfs-remove-get_xip_mem.

2017-09-22  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/00-INDEX,
	Documentation/filesystems/dax.txt,
	Documentation/filesystems/xip.txt: dox

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/dax.c, fs/ext2/inode.c, include/linux/fs.h, mm/filemap_xip.c: 
	dax-ext2-replace-xip_truncate_page-with-dax_truncate.

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/dax.c, fs/ext2/file.c, include/linux/fs.h, mm/filemap_xip.c: 
	dax-ext2-replace-the-XIP-page-fault-handler

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/dax.c, fs/ext2/inode.c, fs/ext2/xip.c, fs/ext2/xip.h,
	include/linux/fs.h: 
	dax-ext2-replace-ext2_clear_xip_target-with-dax_clean

2017-09-22  robcore <robpatershuk@gmail.com>

	* MAINTAINERS, fs/Makefile, fs/dax.c, fs/ext2/file.c,
	fs/ext2/inode.c, include/linux/fs.h, mm/filemap.c, mm/filemap_xip.c: 
	dax-ext2-replace-XIP-read-and-write-with-DAX-I-O

2017-09-22  robcore <robpatershuk@gmail.com>

	* fs/ext2/inode.c, fs/ext2/xip.h, include/linux/fs.h, mm/filemap.c: 
	vfs-ext2-introduce-IS_DAX-inode.

2017-09-22  robcore <robpatershuk@gmail.com>

	* include/linux/vmalloc.h: update VM LOWMEM again

2017-09-22  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/mach/map.h, arch/arm/kernel/tcm.c,
	arch/arm/mach-omap2/io.c, arch/arm/mach-omap2/omap4-common.c,
	arch/arm/mm/ioremap.c, arch/arm/mm/mmu.c, include/linux/vmalloc.h,
	mm/vmalloc.c, sep21ref.txt: possed

2017-09-22  robcore <robpatershuk@gmail.com>

	* pos.sh: that half worked

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/vmalloc.c: this might work

2017-09-22  robcore <robpatershuk@gmail.com>

	* include/linux/vmalloc.h: little more

2017-09-22  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/mmu.c, include/linux/vmalloc.h, mm/vmalloc.c: try to
	make this less dangerous

2017-09-22  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/mach/map.h, arch/arm/kernel/tcm.c,
	arch/arm/mach-omap2/io.c, arch/arm/mach-omap2/omap4-common.c,
	arch/arm/mm/ioremap.c, arch/arm/mm/mmu.c, mm/vmalloc.c: danger

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/ksm.c, mm/mmap.c, mm/mmu_notifier.c, mm/nobootmem.c,
	mm/nommu.c: possed

2017-09-22  robcore <robpatershuk@gmail.com>

	* include/linux/vmalloc.h, pos.sh: possing those last few, changed
	vmalloc.h #define VM_LOWMEM to 100 as per google code

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/nommu.c: and more

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/ksm.c: a little more

2017-09-22  robcore <robpatershuk@gmail.com>

	* include/linux/vmalloc.h: or can i get away with making both of
	those 40 for now

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/mmap.c, mm/mmu_notifier.c, mm/nobootmem.c: except arch unmap

2017-09-22  robcore <robpatershuk@gmail.com>

	* mm/mmap.c: attempting to fix whatever has broken binder by using
	proper mmap_min_addr setup...and a couple of other imports

2017-09-21  robcore <robpatershuk@gmail.com>

	* sep21ref.txt: ref

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/memory.c: 
	mm-allow-page-fault-handlers-to-perform-the-COW

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/filemap_xip.c, mm/memory.c: mm-fix-XIP-fault-vs-truncate-race

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/cifs/file.c, fs/locks.c, include/linux/fs.h: 
	Revert-locks-keep-a-count-of-locks-on-the-flctx-list

2017-09-21  robcore <robpatershuk@gmail.com>

	* drivers/base/regmap/regmap-irq.c: regmap-irq-set-IRQF_ONESHOT-flag

2017-09-21  robcore <robpatershuk@gmail.com>

	* kernel/kprobes.c: 
	kprobes-makes-kprobes-enabled-works-correctly-for-op

2017-09-21  robcore <robpatershuk@gmail.com>

	* kernel/kprobes.c: kprobes: set kprobes_all_disarmed earlier to
	enable re-optimization.

2017-09-21  robcore <robpatershuk@gmail.com>

	* init/Kconfig, init/main.c: init-remove-CONFIG_INIT_FALLBACK.

2017-09-21  robcore <robpatershuk@gmail.com>

	* Documentation/kasan.txt, arch/x86/kernel/module.c,
	arch/x86/mm/kasan_init_64.c, include/linux/compiler-gcc4.h,
	include/linux/kasan.h, kernel/module.c, lib/Kconfig.kasan,
	mm/kasan/kasan.c, mm/kasan/kasan.h, mm/kasan/report.c,
	scripts/Makefile.kasan: kasan - enable instrumentation of global
	variables

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/asm-generic/vmlinux.lds.h, scripts/module-common.lds: 
	kernel: add support for .init_array.* constructors

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/module.c, include/linux/vmalloc.h, mm/vmalloc.c: 
	mm-vmalloc-pass-additional-vm_flags-to-__vmalloc_node

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/vmalloc.h, mm/vmalloc.c: mm: vmalloc: add flag
	preventing guard hole allocation

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/x86/mm/kasan_init_64.c, include/linux/init_task.h,
	mm/kasan/kasan.h, mm/kasan/report.c, scripts/Makefile.kasan: 
	kasan-enable-stack-instrumentation.

2017-09-21  robcore <robpatershuk@gmail.com>

	* Documentation/ia64/paravirt_ops.txt,
	Documentation/virtual/00-INDEX,
	Documentation/virtual/paravirt_ops.txt, MAINTAINERS,
	include/linux/cryptohash.h, lib/dynamic_queue_limits.c,
	lib/halfmd4.c, lib/interval_tree.c, lib/kobject_uevent.c,
	lib/llist.c, lib/md5.c, lib/nlattr.c, lib/percpu_ida.c,
	lib/plist.c, lib/show_mem.c, lib/strncpy_from_user.c: p[ossed

2017-09-21  robcore <robpatershuk@gmail.com>

	* pos.sh: fuck this the include changes are going away

2017-09-21  robcore <robpatershuk@gmail.com>

	* lib/idr.c: i NEED that include for idr

2017-09-21  robcore <robpatershuk@gmail.com>

	* lib/string_helpers.c: remove const again

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/frv/include/asm/string.h, include/linux/string.h,
	lib/string.c: i need strnicmp for now because i dont feel like
	replacing shit in a ton of drivers

2017-09-21  robcore <robpatershuk@gmail.com>

	* Documentation/x86/x86_64/mm.txt, arch/x86/Kconfig,
	arch/x86/boot/Makefile, arch/x86/boot/compressed/eboot.c,
	arch/x86/boot/compressed/misc.h, arch/x86/include/asm/kasan.h,
	arch/x86/include/asm/string_64.h, arch/x86/kernel/dumpstack.c,
	arch/x86/kernel/head64.c, arch/x86/kernel/setup.c,
	arch/x86/kernel/x8664_ksyms_64.c, arch/x86/lib/memcpy_64.S,
	arch/x86/lib/memmove_64.S, arch/x86/lib/memset_64.S,
	arch/x86/mm/Makefile, arch/x86/mm/kasan_init_64.c,
	lib/Kconfig.kasan, mm/kasan/kasan.c: x86 kasan shit

2017-09-21  robcore <robpatershuk@gmail.com>

	* lib/Kconfig.kasan, lib/Makefile, lib/test_kasan.c: lib: add kasan
	test module

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/kmemleak.c: kmemleak-disable-kasan-instrumentation-for-kmemleak

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, fs/dcache.c: 
	fs-dcache-manually-unpoison-dname-after-allocation

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/kasan.h, include/linux/slab.h, lib/Kconfig.kasan,
	mm/Makefile, mm/kasan/kasan.c, mm/kasan/kasan.h, mm/kasan/report.c,
	mm/slab_common.c, mm/slub.c: mm: slub: add kernel address sanitizer
	support for slub allocator

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/slub.c: mm-slub-introduce-metadata_access_enable-metadata

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/slub_def.h, mm/slub.c: 
	mm-slub-share-object_err-function.

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/slub_def.h: mm-slub-introduce-virt_to_obj-function

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/kasan.h, mm/compaction.c, mm/kasan/kasan.c,
	mm/kasan/kasan.h, mm/kasan/report.c, mm/page_alloc.c: 
	mm-page_alloc-add-kasan-hooks-on-alloc-and-free-path.

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/kasan/kasan.c: kasan-disable-memory-hotplug

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/compiler-gcc.h: 
	compiler-introduce-__alias-symbol-shortcut

2017-09-21  robcore <robpatershuk@gmail.com>

	* Documentation/kasan.txt, Makefile, include/linux/kasan.h,
	include/linux/sched.h, lib/Kconfig.debug, lib/Kconfig.kasan,
	mm/Makefile, mm/kasan/Makefile, mm/kasan/kasan.c, mm/kasan/kasan.h,
	mm/kasan/report.c, scripts/Makefile.kasan, scripts/Makefile.lib: 
	kasan: add kernel address sanitizer infrastructure

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/namespace.c: fs-namespace-convert-devname-allocation

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/slab_common.c: 
	mm-slab-convert-cache-name-allocations-to-kstrdup_const

2017-09-21  robcore <robpatershuk@gmail.com>

	* lib/gen_crc32table.c: lib-crc32-constify-crc32-lookup-table

2017-09-21  robcore <robpatershuk@gmail.com>

	* Documentation/ia64/paravirt_ops.txt,
	Documentation/virtual/00-INDEX,
	Documentation/virtual/paravirt_ops.txt, MAINTAINERS,
	lib/kobject_uevent.c, lib/llist.c, lib/md5.c, lib/nlattr.c,
	lib/percpu_ida.c, lib/plist.c, lib/show_mem.c,
	lib/strncpy_from_user.c: squashed include work, and dox

2017-09-21  robcore <robpatershuk@gmail.com>

	* lib/list_sort.c: lib-list_sort.c-rearrange-includes

2017-09-21  robcore <robpatershuk@gmail.com>

	* lib/idr.c: lib-idr.c-remove-redundant-include.

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/cryptohash.h, lib/halfmd4.c: 
	lib-halfmd4.c-simplify-include

2017-09-21  robcore <robpatershuk@gmail.com>

	* lib/dynamic_queue_limits.c: 
	lib-dynamic_queue_limits.c-simplify-includes;

2017-09-21  robcore <robpatershuk@gmail.com>

	* lib/interval_tree.c: lib-interval_tree.c-simplify-includes.

2017-09-21  robcore <robpatershuk@gmail.com>

	* lib/test-hexdump.c: test bs

2017-09-21  robcore <robpatershuk@gmail.com>

	* lib/Kconfig.debug, lib/Makefile, lib/test-hexdump.c:  hexdump: introduce test suite

2017-09-21  robcore <robpatershuk@gmail.com>

	* lib/genalloc.c: 
	lib-genalloc.c-fix-the-end-addr-check-in-addr_in_gen

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/frv/include/asm/string.h, include/linux/string.h,
	lib/string.c: string - remove strnicmp

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/string_helpers.h, lib/string_helpers.c: 
	libstring_helpers.c-string_get_size-return-void

2017-09-21  robcore <robpatershuk@gmail.com>

	* lib/string_helpers.c: 
	lib-string_helpers.c-string_get_size-use-32-bit-arithmatic

2017-09-21  robcore <robpatershuk@gmail.com>

	* lib/string_helpers.c: lib/string_helpers.c:string_get_size():
	remove redundant prefixes

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/drop_caches.c: we should really be defining this symbol outside
	of drop_caches if other files are using it...

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/drop_caches.c, mm/page_alloc.c: get rid of drop_slabs in fs
	drop_caches

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: touchups

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/prometheus.h, kernel/power/prometheus.c,
	mm/page_alloc.c: TODO: make prometheus disable oom killer and make
	thaw processes in process.c enable it

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/types.h: 
	linux-types.h-Always-use-unsigned-long-for-pgoff_t.patch

2017-09-21  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/proc.txt, fs/proc/task_mmu.c: 
	fs-proc-task_mmu-show-page-size-in-proc-pid-numa_map

2017-09-21  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/proc.txt: dox

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/proc/generic.c, fs/proc/inode.c: 
	-fs-proc-use-PDE-to-get-proc_dir_entry

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memory-failure.c: 
	mm-hwpoison-drop-lru_add_drain_all-in-__soft_offline.

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/mm_init.c: mm-mm_init.c-park-mminit_verify_zonelist-as-__init

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: 
	mm-page_alloc.c-pull-out-init-code-from-build_all_zonelists

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/internal.h: -mm-internal.h-don-t-split-printk-call-in-two;

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, kernel/fork.c: 
	mm-do-not-use-mm-nr_pmds-on-MMU-configurations.

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/net/sock.h, mm/memcontrol.c, net/ipv4/tcp_memcontrol.c:  memcg: cleanup static keys decrement

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/compaction.c: -mm-compaction-stop-the-isolation-when-we-isolate

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/slab.c, mm/slab.h, mm/slab_common.c, mm/slob.c, mm/slub.c: 
	slub-make-dead-caches-discard-free-slabs-immediately.

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/slub.c: slub-fix-kmem_cache_shrink-return-value.

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/slub.c: slub-never-fail-to-shrink-cache.

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/list_lru.h, mm/list_lru.c, mm/memcontrol.c: 
	memcg-reparent-list_lrus-and-free-kmemcg_id-on-css

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/dcache.c, fs/inode.c, include/linux/list_lru.h, mm/list_lru.c,
	mm/workingset.c: list_lru-add-helpers-to-isolate-items

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/slab.h, mm/memcontrol.c, mm/slab_common.c: 
	memcg-free-memcg_caches-slot-on-css-offline.

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/slab_common.c: slab-use-css-id-for-naming-per-memcg-caches

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/slab.h, mm/slab.c, mm/slab.h, mm/slab_common.c,
	mm/slub.c: slab-link-memcg-caches-of-the-same-kind-into-a-list

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/slab.h: oops dont need that one

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/slab.h, include/linux/slab_def.h,
	include/linux/slub_def.h, mm/memcontrol.c, mm/slab.h,
	mm/slab_common.c, mm/slub.c: slab: embed memcg_cache_params to
	kmem_cache

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/super.c: fs-shrinker-always-scan-at-least-one-object

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/super.c: fs-make-shrinker-memcg-aware

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/list_lru.h, include/linux/memcontrol.h,
	mm/list_lru.c, mm/memcontrol.c: list_lru-introduce-per-memcg-lists

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/super.c, include/linux/list_lru.h, mm/list_lru.c: 
	list_lru-organize-all-list_lrus-to-list

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/list_lru.h, mm/list_lru.c: 
	list_lru-get-rid-of-active_nodes

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, mm/memcontrol.c, mm/slab_common.c: 
	memcg-add-rwsem-to-synchronize-against-memcg_caches-

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, mm/memcontrol.c, mm/slab_common.c: 
	memcg-rename-some-cache-id-related-variables

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, include/linux/mm.h,
	include/linux/shrinker.h, mm/memcontrol.c, mm/memory-failure.c,
	mm/vmscan.c: vmscan-per-memory-cgroup-slab-shrinkers

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/super.c, fs/xfs/xfs_super.c, include/linux/fs.h: fs:
	consolidate {nr,free}_cached_objects args in shrink_control

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/dcache.c, fs/inode.c, fs/internal.h, fs/super.c,
	include/linux/list_lru.h, mm/workingset.c: 
	list_lru-introduce-list_lru_shrink_-count-walk

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c, mm/mprotect.c: 
	mm-numa-avoid-unnecessary-TLB-flushes

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c, mm/memory.c: 
	mm-numa-add-paranoid-check-around-pte_protnone_numa.

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/huge_mm.h, mm/huge_memory.c, mm/memory.c,
	mm/mprotect.c: mm-numa-do-not-trap-faults-on-the-huge-zero-page

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/pgtable.h,
	arch/x86/include/asm/pgtable_types.h,
	include/asm-generic/pgtable.h, include/linux/swapops.h: mm - remove
	remaining refs to NUMA hinting bits

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/pgtable-3level.h, include/linux/huge_mm.h,
	mm/huge_memory.c, mm/memory.c, mm/mempolicy.c, mm/migrate.c,
	mm/mprotect.c, mm/pgtable-generic.c: mm: convert p[te|md]_mknonnuma
	and remaining page table manipulations

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/uapi/linux/mempolicy.h, mm/gup.c, mm/huge_memory.c,
	mm/memory.c, mm/mprotect.c, mm/pgtable-generic.c: mm: convert
	p[te|md]_numa users to p[te|md]_protnone_numa

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/pgtable.h, include/asm-generic/pgtable.h: mm:
	add p[te|md] protnone helpers for use by NUMA ;

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c, mm/migrate.c: mm: numa: do not dereference pmd
	outside of the lock during NUMA hinting fault

2017-09-21  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-Use-kvfree-in-pidlist_free

2017-09-21  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: 
	cgroup-call-cgroup_subsys-bind-on-cgroup-subsys-init.

2017-09-21  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: release css->id after css_free

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memory.c: get rid of other page getting funcs from mem

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memory.c: removed static cow mapping def from memory.c

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/internal.h: yeah yeah dirty cow, but ill fix it after i update
	it

2017-09-21  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: prevent mount hang due to memory
	controller lifetime

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/cgroup.h, kernel/cgroup.c: cgroup - add effect
	variants of funcs

2017-09-21  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-fix-the-async-css-offline-wait-logic

2017-09-21  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup-restructure-child_subsys_mask-handling

2017-09-21  robcore <robpatershuk@gmail.com>

	* kernel/cgroup.c: cgroup: separate out
	cgroup_calc_child_subsys_mask() from
	cgroup_refresh_child_subsys_mask()

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/Makefile: time to build gup

2017-09-21  robcore <robpatershuk@gmail.com>

	* sep21ref.txt: ref

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/mmap.c, mm/nommu.c: fix a couple of overflows (min_t usage)

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/page_ext.h, mm/page_owner.c: 
	mm-page_owner.c-remove-unnecessary-stack_trace-field.

2017-09-21  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/proc.txt: dox

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c, mm/page_alloc.c: 
	mm-incorporate-read-only-pages-into-transparent-huge

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: 
	mm-always-steal-split-buddies-in-fallback-allocation

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: stupid spacing for future commits

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c, mm/mincore.c: 
	mincore-apply-page-table-walker-on-do_mincore

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/proc/task_mmu.c: mm-proc-pid-clear_refs-avoid-split_huge_page

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/proc/task_mmu.c, mm/mempolicy.c, mm/pagewalk.c: 
	-mm-pagewalk-fix-misbehavior-of-walk_page_range

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/mempolicy.c: 
	mempolicy-apply-page-table-walker-on-queue_pages_range

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: memcg-cleanup-preparation-for-page-table-walk

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/proc/task_mmu.c: numa

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/proc/task_mmu.c: 
	pagemap-use-walk-vma-instead-of-calling-find_vma

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/proc/task_mmu.c: 
	clear_refs-remove-clear_refs_private-vma-and-intro

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/proc/task_mmu.c: 
	smaps-remove-mem_size_stats-vma-and-use-walk_page_vm

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/pagewalk.c: pagewalk-add-walk_page_vma.

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/pagewalk.c: pagewalk-improve-vma-handling

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/pagewalk.c: 
	mm-pagewalk-remove-pgd_entry-and-pud_entry.

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/proc/task_mmu.c: proc-pagemap-walk-page-tables-under-pte-lock.

2017-09-21  robcore <robpatershuk@gmail.com>

	* drivers/scsi/st.c, mm/process_vm_access.c, net/ceph/pagevec.c: 
	mm-gup-use-get_user_pages_unlocked

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/x86/mm/gup.c, mm/gup.c, mm/util.c: mm: gup: use
	get_user_pages_unlocked within | get_user_pages_fast

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/gup.c, mm/nommu.c: 
	mm-gup-add-__get_user_pages_unlocked-to-customize

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/gup.c, mm/nommu.c: mm-gup-add-get/set
	user_pages_locked

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/gfp.h, mm/mempolicy.c: mm/mempolicy.c: merge
	alloc_hugepage_vma to alloc_pages_vma

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/gfp.h, mm/huge_memory.c, mm/mempolicy.c: 
	mm-thp-allocate-transparent-hugepages-on-local-node.

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/compaction.h, include/trace/events/compaction.h,
	mm/compaction.c: mm/compaction: add tracepoint to observe behaviour
	of compaction defer

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/compaction.h, include/trace/events/compaction.h,
	mm/compaction.c: more tracing

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/trace/events/compaction.h: 
	mm-compaction-change-tracepoint-format

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/btrfs/extent_io.c, mm/page-writeback.c: 
	page_writeback-put-account_page_redirty-after-set

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/pgd.c, arch/unicore32/mm/pgd.c, kernel/fork.c,
	mm/mmap.c:  mm: fix false-positive warning on exit

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/x86/mm/pgtable.c, fs/proc/task_mmu.c, include/linux/mm.h,
	include/linux/mm_types.h, kernel/fork.c, mm/debug.c, mm/hugetlb.c,
	mm/memory.c, mm/mmap.c, mm/oom_kill.c:  mm: account pmd page tables to the process

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/pgtable-2level.h: 
	arm-define-__PAGETABLE_PMD_FOLDED-for-LPAE

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/asm-generic/4level-fixup.h: 
	mm-asm-generic-define-PUD_SHIFT-in-asm-generic-4level

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/alpha/include/asm/pgtable.h,
	arch/arm/include/asm/pgtable-nommu.h,
	arch/avr32/include/asm/pgtable.h, arch/frv/include/asm/pgtable.h,
	arch/m68k/include/asm/pgtable_mm.h,
	arch/microblaze/include/asm/pgtable.h,
	arch/openrisc/include/asm/pgtable.h,
	arch/score/include/asm/pgtable.h,
	arch/um/include/asm/pgtable-2level.h,
	arch/um/include/asm/pgtable-3level.h,
	arch/x86/include/asm/pgtable_types.h,
	arch/xtensa/include/asm/pgtable.h: mm - make FIRST_USER_ADDRESS
	unsigned long on all arches

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: mm-memcontrol-consolidate-swap-controller-code

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: mm-memcontrol-consolidate-memory-controller-init

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: mm-memcontrol-simplify-soft-limit-tree-init-code

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/cma.c: mm-cma-fix-totalcma_pages-to-include-DT-defined-CMA

2017-09-21  robcore <robpatershuk@gmail.com>

	* drivers/tty/sysrq.c, include/linux/oom.h, kernel/exit.c,
	kernel/power/process.c, mm/memcontrol.c, mm/oom_kill.c,
	mm/page_alloc.c: 
	oom-PM-make-OOM-detection-in-the-freezer-path-racele

2017-09-21  robcore <robpatershuk@gmail.com>

	* drivers/tty/sysrq.c: sysrq-convert-printk-to-pr_-equivalent

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/oom_kill.c: oom-thaw-the-OOM-victim-if-it-is-frozen

2017-09-21  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/lowmemorykiller.c, include/linux/oom.h,
	kernel/exit.c, mm/memcontrol.c, mm/oom_kill.c: oom: add helpers for
	setting and clearing TIF_MEMDIE

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: mm-memcontrol-fold-move_anon-and-move_file

2017-09-21  robcore <robpatershuk@gmail.com>

	* Documentation/cgroups/unified-hierarchy.txt,
	include/linux/memcontrol.h, mm/memcontrol.c, mm/vmscan.c: mm:
	memcontrol: default hierarchy interface for memory

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/page_counter.h, mm/hugetlb_cgroup.c,
	mm/memcontrol.c, net/ipv4/tcp_memcontrol.c: 
	mm-page_counter-pull-1-handling-out-of-page_counter

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: mm: use correct format specifiers when printing
	address ranges

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: memcg-add-BUILD_BUG_ON-for-string-tables.

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, mm/memcontrol.c, mm/vmscan.c: 
	vmscan-force-scan-offline-memory-cgroups

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: 
	mm-more-checks-on-free_pages_prepare-for-tail-pages.

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: mm-page_alloc.c-drop-dead-destroy_compound_page.

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mmzone.h, mm/mmzone.c: 
	mm-microoptimize-zonelist-operations

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/compaction.h, mm/compaction.c, mm/internal.h,
	mm/page_alloc.c: mm-reduce-try_to_compact_pages-parameters

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: return null

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: oh its just ac

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: ac->classzone_idx

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: ac->preferred_zone - and make noretry less ugly

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: ac->nodelist

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: ac->zonelist

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: more tweaking

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page-writeback.c, mm/page_alloc.c: 
	mm-page_alloc-reduce-number-of-alloc_pages-functions (and try to
	integrate from sammy s8 source

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: mm: set page->pfmemalloc in prep_new_page()

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/swapops.h, mm/migrate.c: mm/hugetlb: take page table
	lock in follow_huge_pmd()

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/arm/mm/hugetlbpage.c, arch/x86/mm/hugetlbpage.c:  mm/hugetlb: reduce arch dependent code around follow_huge_*

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/vmscan.c: mm-vmscan-wake-up-all-pfmemalloc-throttled-processes

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mmzone.h: dox

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: kmemcheck: move hook into
	__alloc_pages_nodemask() for the page allocator

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: mm/page_alloc.c:__alloc_pages_nodemask(): dont
	alter arg gfp_mask

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, mm/memcontrol.c, mm/page-writeback.c,
	mm/rmap.c: mm: memcontrol: track move_lock state internally

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/swap.h, mm/shmem.c: 
	swap-remove-unused-mem_cgroup_uncharge_swapcache-dec

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/oom_kill.c: 
	oom-make-sure-that-TIF_MEMDIE-is-set-under-task_lock;

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/oom_kill.c: oom-don-t-count-on-mm-less-current-process

2017-09-21  robcore <robpatershuk@gmail.com>

	* Documentation/vm/pagemap.txt, fs/proc/page.c,
	include/linux/huge_mm.h, include/uapi/linux/kernel-page-flags.h,
	mm/huge_memory.c, tools/vm/page-types.c:  mm:add KPF_ZERO_PAGE flag for /proc/kpageflags

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h: mm-add-VM_BUG_ON_PAGE-to-page_mapcount

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, include/linux/mm_types.h: 
	mm-add-fields-for-compound-destructor-and-order

2017-09-21  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/lowmemorykiller.c: samp - disable
	unconditionally when screen is off -> wrap user accessible toggle
	with a test for that and use it as the conditional for samp
	functions

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/uapi/linux/prctl.h, kernel/sys.c: rid ourselves of more
	PR_SET_VMA shit

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/mmu_notifier.c: give ourselves mmu notify range

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memory.c: fuck you numa

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, mm/ksm.c: give us some dummy defines

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mmu_notifier.h: add mmu helpers

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/memory.c: fix def of vma_merge, get rid of
	erroneous pte_file

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/proc/task_mmu.c, include/linux/mm_types.h, kernel/sys.c,
	mm/madvise.c, mm/mempolicy.c, mm/mlock.c, mm/mmap.c, mm/mprotect.c: 
	wipe out vma anon_name

2017-09-21  robcore <robpatershuk@gmail.com>

	* block/blk-merge.c, include/linux/blkdev.h: 
	block-remove-unused-function-blk_bio_map_sg

2017-09-21  robcore <robpatershuk@gmail.com>

	* block/blk-map.c: block-handle-the-null_mapped-flag-correctly

2017-09-21  robcore <robpatershuk@gmail.com>

	* block/blk-mq-tag.c: blk-mq-fix-double-free-in-error-path.

2017-09-21  robcore <robpatershuk@gmail.com>

	* block/blk-merge.c: 
	block-prevent-request-to-request-merging-with-gap

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, include/linux/slab.h,
	mm/memcontrol.c, mm/slab_common.c: 
	memcg-zap-memcg_slab_caches-and-memcg_slab_mutex

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/slab.h, mm/memcontrol.c, mm/slab_common.c: 
	memcg-zap-memcg_name-argument-of-memcg_create_kmem_c

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, mm/memcontrol.c, mm/slab.h: 
	memcg-zap-__memcg_-charge-uncharge-_slab

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: 
	mm-page_alloc.c-place-zone_id-check-before-VM_BUG_ON

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/hugetlb.h, mm/hugetlb.c: 
	mm-hugetlb-fix-type-of-hugetlb_treat_as_movable

2017-09-21  robcore <robpatershuk@gmail.com>

	* kernel/sysctl.c: 
	mm-hugetlb-remove-unnecessary-lower-bound-on-sysctl

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memory.c: mm-memory-merge-shared-writable-dirtying-branches

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memory.c: mm-memory-remove-vm_file-check-on-shared-writable-vm

2017-09-21  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/pgtable-2level.h,
	arch/arm/include/asm/pgtable-3level.h,
	arch/arm/include/asm/pgtable-nommu.h,
	arch/arm/include/asm/pgtable.h, arch/arm/mm/proc-macros.S,
	include/asm-generic/pgtable.h: ditto asm generic and arm

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, include/linux/swapops.h, mm/debug.c,
	mm/gup.c, mm/ksm.c, mm/madvise.c, mm/memcontrol.c, mm/memory.c,
	mm/mincore.c, mm/mprotect.c, mm/mremap.c, mm/msync.c: get rid of the
	rest of VM_NONLINEAR and pte file

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mm_types.h, mm/interval_tree.c: 
	mm-replace-vma-sharead.linear-with-vma-shared.

2017-09-21  robcore <robpatershuk@gmail.com>

	* Documentation/cachetlb.txt, fs/inode.c, include/linux/fs.h,
	include/linux/mm.h, include/linux/mm_types.h, include/linux/rmap.h,
	kernel/fork.c, mm/migrate.c, mm/mmap.c, mm/rmap.c, mm/swap.c: rmap -
	drop support of non-linear mappings

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/proc/task_mmu.c: proc-drop-handling-non-linear-mappings

2017-09-21  robcore <robpatershuk@gmail.com>

	* fs/9p/vfs_file.c, fs/btrfs/file.c, fs/ceph/addr.c,
	fs/cifs/file.c, fs/ext4/file.c, fs/fuse/file.c, fs/gfs2/file.c,
	fs/nfs/file.c, fs/nilfs2/file.c, fs/ocfs2/mmap.c, fs/ubifs/file.c,
	fs/xfs/xfs_file.c, include/linux/fs.h, include/linux/mm.h,
	mm/filemap.c, mm/filemap_xip.c, mm/shmem.c: get rid of vm ops remap
	pages and generic file remap

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/memory.c: fuck it, bring this up to scratch

2017-09-21  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/madvise.c, mm/memory.c: 
	mm-drop-support-of-non-linear-mapping-from-unmap-zap

2017-09-21  robcore <robpatershuk@gmail.com>

	* Documentation/vm/remap_file_pages.txt, include/linux/fs.h,
	mm/Makefile, mm/fremap.c, mm/mmap.c, mm/nommu.c: mm: replace
	remap_file_pages() syscall with emulation

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memory.c: mm: introduce do_shared_fault()

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memory.c: mm-introduce-do_cow_fault;

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memory.c: mm-introduce-do_read_fault

2017-09-21  robcore <robpatershuk@gmail.com>

	* mm/memory.c: mm: rename __do_fault() -> do_fault()

2017-09-20  robcore <robpatershuk@gmail.com>

	* Documentation/cachetlb.txt,
	Documentation/vm/remap_file_pages.txt,
	arch/arm/include/asm/pgtable-2level.h,
	arch/arm/include/asm/pgtable-3level.h,
	arch/arm/include/asm/pgtable-nommu.h,
	arch/arm/include/asm/pgtable.h, arch/arm/mm/proc-macros.S,
	fs/9p/vfs_file.c, fs/btrfs/file.c, fs/ceph/addr.c, fs/cifs/file.c,
	fs/ext4/file.c, fs/fuse/file.c, fs/gfs2/file.c, fs/inode.c,
	fs/nfs/file.c, fs/nilfs2/file.c, fs/ocfs2/mmap.c,
	fs/proc/task_mmu.c, fs/ubifs/file.c, fs/xfs/xfs_file.c,
	include/asm-generic/pgtable.h, include/linux/fs.h,
	include/linux/mm.h, include/linux/mm_types.h, include/linux/rmap.h,
	include/linux/swapops.h, kernel/fork.c, mm/Makefile, mm/debug.c,
	mm/filemap.c, mm/filemap_xip.c, mm/fremap.c, mm/gup.c,
	mm/interval_tree.c, mm/ksm.c, mm/madvise.c, mm/memcontrol.c,
	mm/memory.c, mm/migrate.c, mm/mincore.c, mm/mmap.c, mm/mprotect.c,
	mm/mremap.c, mm/msync.c, mm/nommu.c, mm/rmap.c, mm/shmem.c,
	mm/swap.c: possed

2017-09-20  robcore <robpatershuk@gmail.com>

	* pos.sh: possing the non linear mapping stuff for now

2017-09-20  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/pgtable-2level.h,
	arch/arm/include/asm/pgtable-3level.h,
	arch/arm/include/asm/pgtable-nommu.h,
	arch/arm/include/asm/pgtable.h, arch/arm/mm/proc-macros.S,
	include/asm-generic/pgtable.h: arm: drop L_PTE_FILE and
	pte_file()-related helpers

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, include/linux/swapops.h, mm/debug.c,
	mm/gup.c, mm/ksm.c, mm/madvise.c, mm/memcontrol.c, mm/memory.c,
	mm/mincore.c, mm/mprotect.c, mm/mremap.c, mm/msync.c: 
	mm-remove-rest-usage-of-VM_NONLINEAR-and-pte_file

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm_types.h, mm/interval_tree.c: mm: replace
	vma->sharead.linear with vma->shared

2017-09-20  robcore <robpatershuk@gmail.com>

	* Documentation/cachetlb.txt, fs/inode.c, include/linux/fs.h,
	include/linux/mm.h, include/linux/mm_types.h, include/linux/rmap.h,
	kernel/fork.c, mm/migrate.c, mm/mmap.c, mm/rmap.c, mm/swap.c: rmap:
	drop support of non-linear mappings

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/proc/task_mmu.c: proc-drop-handling-non-linear-mappings

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/9p/vfs_file.c, fs/btrfs/file.c, fs/ceph/addr.c,
	fs/cifs/file.c, fs/ext4/file.c, fs/fuse/file.c, fs/gfs2/file.c,
	fs/nfs/file.c, fs/nilfs2/file.c, fs/ocfs2/mmap.c, fs/ubifs/file.c,
	fs/xfs/xfs_file.c, include/linux/fs.h, include/linux/mm.h,
	mm/filemap.c, mm/filemap_xip.c, mm/shmem.c: mm: drop
	vm_ops->remap_pages and generic_file_remap_pages() stub

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/memory.c: 
	mm-drop-support-of-non-linear-mapping-from-fault-code

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/madvise.c, mm/memory.c: 
	-mm-drop-support-of-non-linear-mapping-from-unmap-zap

2017-09-20  robcore <robpatershuk@gmail.com>

	* Documentation/vm/remap_file_pages.txt, include/linux/fs.h,
	mm/Makefile, mm/fremap.c, mm/mmap.c, mm/nommu.c: mm: replace
	remap_file_pages() syscall with emulation

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/prometheus.h, kernel/power/prometheus.c,
	mm/page_alloc.c: revert those two

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/prometheus.h, kernel/power/prometheus.c,
	mm/page_alloc.c: actually i fucked up there...however this way is
	safer anyway because it actually allows powersuspend to complete

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/prometheus.h, kernel/power/prometheus.c,
	mm/page_alloc.c: why wait to halt oom killing on freezer? fuck that,
	get rid of it on power suspend

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/mlock.c: can_do_mlock - never saw the point in not combining
	these

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/fs-writeback.c, fs/inode.c, mm/backing-dev.c,
	mm/page-writeback.c: got rid of a ton of tracing...may bite me in
	the ass...probably wont

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/trace/events/writeback.h: maybe now?

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/trace/events/writeback.h: trying something else...

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/trace/events/writeback.h: got rid of a trace event for fun

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h: dont need that one

2017-09-20  robcore <robpatershuk@gmail.com>

	* sep20ref.txt: ref

2017-09-20  robcore <robpatershuk@gmail.com>

	* Documentation/vm/remap_file_pages.txt, include/linux/fs.h,
	mm/mmap.c, mm/nommu.c: revert that

2017-09-20  robcore <robpatershuk@gmail.com>

	* Documentation/vm/remap_file_pages.txt, include/linux/fs.h,
	mm/mmap.c, mm/nommu.c: wtf

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/vmstat.c: mm-vmstat.c-fix-cleanup-ifdefs

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/slab_common.c: mm-slab_common.c-use-kmem_cache_free

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/slub.c: dox

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h: mm: dont use compound_head() in
	virt_to_head_page()

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/slub.c: mm/slub: optimize alloc/free fastpath by removing
	preemption on/off

2017-09-20  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/fiemap.txt, fs/ioctl.c: 
	fsioctl.c-make-generic_block_fiemap-signal-tolerant.

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/notify/fanotify/fanotify.c, fs/notify/fanotify/fanotify_user.c: 
	more fanotify

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/notify/fanotify/fanotify_user.c: 
	fanotify-only-destroy-mark-when-both-mask-and-ignore-are-ready

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c, include/linux/blk-mq.h: blk-mq: make
	blk_mq_run_queues() static

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/cfq-iosched.c: 
	cfq-iosched-handle-failure-of-cfq-group-allocation.

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/nommu.c: mm-export-high_memory-symbol-on-MMU.

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-lib.c: block-Quiesce-zeroout-wrapper.

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/bio.c: block-rewrite-and-split-__bio_copy_iov.

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/bio.c, block/blk-map.c, include/linux/bio.h: 
	block-merge-__bio_map_user_iov-into-bio_map_user_iov

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/bio.c: block-merge-__bio_map_kern-into-bio_map_kern

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/bio.c, block/blk-map.c, block/scsi_ioctl.c,
	drivers/scsi/sg.c, include/linux/bio.h, include/linux/blkdev.h: 
	block: pass iov_iter to the BLOCK_PC mapping functions

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/bio.c: block-add-a-helper-to-free-bio-bounce-buffer-pages

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/bio.c, block/blk-map.c, include/linux/bio.h: 
	block-use-blk_rq_map_user_iov-to-implement-blk_rq

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/bio.c: block-simplify-bio_map_kern

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/inode.c, include/linux/fs.h: 
	vfs-add-find_inode_nowait-function.

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/ext4/inode.c, fs/fs-writeback.c, fs/gfs2/file.c, fs/inode.c,
	fs/jfs/file.c, fs/libfs.c, fs/proc_namespace.c, fs/sync.c,
	include/linux/backing-dev.h, include/linux/fs.h,
	include/trace/events/writeback.h, include/uapi/linux/fs.h,
	mm/backing-dev.c: vfs: add support for a lazytime mount option

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/aio.c: aio-annotate-aio_read_event_ring-for-sleep-patterns

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/Makefile, fs/tracefs/Makefile, fs/tracefs/inode.c,
	include/linux/tracefs.h, include/uapi/linux/magic.h: revert that for
	now

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/Makefile, fs/tracefs/Makefile, fs/tracefs/inode.c,
	include/linux/tracefs.h, include/uapi/linux/magic.h: tracefs - add
	new tracefs file system

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/locks.c, include/linux/fs.h: fs-add-FL_LAYOUT-lease-type.

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/locks.c: fs-track-fl_owner-for-leases.

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/super.c, include/linux/fs.h: 
	Make-super_blocks-and-sb_lock-static

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h: has to be static

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h: and added }

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h: throw in endif

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h: fix my page dump shit to just make it noop

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: i need hashdist for now

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/scsi/scsi_tcq.h: temporarily fix scsi by using the
	previous default

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/scsi/scsi_tcq.h: revert that

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/scsi/scsi_tcq.h: fuck im fucked

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c, block/blk-mq.h, block/blk-sysfs.c: 
	blk-mq-release-mq-s-kobjects-in-blk_release_queue

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-mq-sysfs.c, block/blk-mq.c: 
	Revert-blk-mq-fix-hctx-ctx-kobject-use-after-free

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/read_write.c, fs/splice.c, include/linux/fs.h: 
	fs-add-vfs_iter_-read-write-helpers

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/exec.c: temporarily fix open exec

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/splice.c, include/linux/uio.h, mm/iov_iter.c, mm/page_io.c: 
	new-helper-iov_iter_bvec

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-core.c: block-keep-established-cmd_flags-when-cloning

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-core.c: 
	block-add-blk-mq-support-to-blk_insert_cloned_request

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-core.c, drivers/md/dm.c: 
	block-require-blk_rq_prep_clone-be-given-an-init

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, mm/memory.c: 
	mm-provide-a-find_special_page-vma-operation

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/mod_devicetable.h: dox

2017-09-20  robcore <robpatershuk@gmail.com>

	* drivers/base/core.c, include/linux/device.h: 
	device-Change-dev_-level-logging-functions-to-return-void

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/vmscan.c: -mm-vmscan-fix-highidx-argument-type.

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: and another

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: nother fixup

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: trying to fixup my fixup

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/oom.h, mm/debug.c, mm/page_alloc.c: 
	mm-page_alloc-embed-OOM-killing-naturally-into-alloc - also some
	cleanup work

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/debugfs/inode.c, include/linux/debugfs.h: debugfs: Provide a
	file creation function that also takes an initial size

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/fs_pin.c, fs/mount.h, fs/namespace.c: switch the IO-triggering
	parts of umount

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/fs_pin.c, include/linux/fs_pin.h,
	include/linux/pid_namespace.h, kernel/acct.c: 
	new-fs_pin-killing-logics.

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/fs_pin.c, fs/internal.h, fs/super.c, include/linux/fs_pin.h: 
	allow-attaching-fs_pin-to-a-group-not-associated

2017-09-20  robcore <robpatershuk@gmail.com>

	* kernel/acct.c: get-rid-of-the-second-argument-of-acct_kill

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/fs_pin.h, kernel/acct.c: 
	take-count-and-rcu_head-out-of-fs_pin.

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/dcache.c, include/linux/lockref.h, lib/lockref.c: dcache: let
	the dentry count go down to zero without taking d_lock

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/fs_pin.c, kernel/acct.c: pull-bumping-refcount-into-kill

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/fs_pin.c, include/linux/fs_pin.h, kernel/acct.c,
	kernel/auditsc.c, security/commoncap.c: 
	file-f_path.dentry-is-pinned-down -> kill pin_put

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/proc/generic.c: gut proc_register() a bit

2017-09-20  robcore <robpatershuk@gmail.com>

	* security/selinux/selinuxfs.c: selinuxfs-don-t-open-code-d_genocide

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/dcache.c, include/linux/dcache.h: kill-d_validate

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/debugfs/inode.c, include/linux/debugfs.h: further squash of
	debugfs

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/debugfs/inode.c: debugfs-kill-__create_file

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/debugfs/inode.c: 
	debugfs-split-the-beginning-and-the-end-of-__create

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-mq-tag.c, block/blk-mq-tag.h, block/blk-mq.c,
	fs/debugfs/inode.c, include/linux/blk-mq.h: 
	debugfs_-mkdir-create-link-get-rid-of-redundant-arg

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-tag.c, drivers/block/osdblk.c, include/linux/blkdev.h,
	include/scsi/scsi_host.h, include/scsi/scsi_tcq.h: 
	block-support-different-tag-allocation-policy.

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/namei.c: simpler-calling-conventions-for-filename_mountpoint

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/exec.c, fs/namei.c, fs/open.c: fs: create proper filename
	objects

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/namei.c: -fs-rework-getname_kernel-to-handle-up-to-PATH_MAX

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/namei.c: cut-down-the-number-of-do_path_lookup-callers.

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/fs-writeback.c: fs-make-inode_to_bdi-handle-NULL-inode

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/partitions/check.c: 
	block-Remove-annoying-unknown-partition-table-message

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/locks.c, include/linux/fs.h: dox

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/quota/dquot.c, include/linux/dqblk_v1.h,
	include/linux/quota.h, include/uapi/linux/quota.h: quota - cleanup
	flags, also quota-Verify-flags-passed-to-Q_SETINFO.

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/quota/quota_v2.c: quota-Don-t-store-flags-for-v2-quota-format

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-lib.c, block/ioctl.c, include/linux/blkdev.h: 
	block-Add-discard-flag-to-blkdev_issue_zeroout-func

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/cfq-iosched.c: 
	cfq-iosched-fix-incorrect-filing-of-rt-async-cfqq

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/btrfs/disk-io.c, fs/ceph/super.c, fs/super.c,
	include/linux/backing-dev.h, include/trace/events/writeback.h,
	mm/backing-dev.c: remove default backing dev

2017-09-20  robcore <robpatershuk@gmail.com>

	* drivers/char/raw.c, fs/aio.c, fs/block_dev.c, fs/btrfs/disk-io.c,
	fs/btrfs/inode.c, fs/ceph/inode.c, fs/cifs/inode.c,
	fs/configfs/inode.c, fs/ecryptfs/inode.c, fs/exofs/inode.c,
	fs/fuse/inode.c, fs/gfs2/glock.c, fs/hugetlbfs/inode.c, fs/inode.c,
	fs/kernfs/inode.c, fs/ncpfs/inode.c, fs/nfs/inode.c,
	fs/nilfs2/gcinode.c, fs/nilfs2/mdt.c, fs/nilfs2/page.c,
	fs/nilfs2/super.c, fs/ocfs2/dlmfs/dlmfs.c, fs/ramfs/inode.c,
	fs/romfs/super.c, fs/ubifs/dir.c, fs/ubifs/super.c,
	include/linux/fs.h, mm/backing-dev.c, mm/shmem.c, mm/swap_state.c: 
	fs - remove mapping back_dev_info

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/ramfs/file-mmu.c, fs/ramfs/file-nommu.c, fs/ramfs/inode.c,
	fs/ramfs/internal.h: sync rest of ramfs

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/ramfs/inode.c: fixup ramfs

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/nilfs2/super.c: vs

2017-09-20  robcore <robpatershuk@gmail.com>

	* drivers/block/loop.c, drivers/block/loop.h: revert loop changes
	for now, my guess is they found another way to do blk-mq but i will
	need to wait to find out

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/btrfs/file.c, fs/ext2/ialloc.c, fs/ext4/super.c,
	fs/fs-writeback.c, fs/fuse/file.c, fs/gfs2/super.c, fs/ntfs/file.c,
	fs/xfs/xfs_file.c, include/linux/backing-dev.h,
	include/trace/events/writeback.h, mm/fadvise.c, mm/filemap.c,
	mm/filemap_xip.c, mm/page-writeback.c, mm/readahead.c,
	mm/truncate.c, mm/vmscan.c: fs: export inode_to_bdi and use it in
	favor of mapping->backing_dev_info

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/fs-writeback.c: 
	block_dev-get-bdev-inode-bdi-directly-from-the-block.

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/block_dev.c: block_dev-only-write-bdev-inode-on-close.

2017-09-20  robcore <robpatershuk@gmail.com>

	* Documentation/nommu-mmap.txt, block/blk-core.c,
	drivers/char/mem.c, drivers/mtd/mtdchar.c, drivers/mtd/mtdconcat.c,
	drivers/mtd/mtdcore.c, drivers/mtd/mtdpart.c, fs/9p/v9fs.c,
	fs/afs/volume.c, fs/aio.c, fs/btrfs/disk-io.c, fs/char_dev.c,
	fs/cifs/connect.c, fs/coda/inode.c,
	fs/configfs/configfs_internal.h, fs/configfs/inode.c,
	fs/configfs/mount.c, fs/ecryptfs/main.c, fs/exofs/super.c,
	fs/ncpfs/inode.c, fs/ramfs/file-nommu.c, fs/romfs/mmap-nommu.c,
	fs/ubifs/super.c, include/linux/backing-dev.h,
	include/linux/cdev.h, include/linux/fs.h, include/linux/mtd/mtd.h,
	mm/backing-dev.c, mm/nommu.c, security/security.c: fs: introduce
	f_op->mmap_capabilities for nommu mmap support

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/backing-dev.h, mm/madvise.c, mm/shmem.c, mm/swap.c,
	mm/swap_state.c: fs: kill BDI_CAP_SWAP_BACKED

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/hugetlbfs/inode.c, fs/kernfs/inode.c,
	fs/kernfs/kernfs-internal.h, fs/kernfs/mount.c,
	fs/ocfs2/dlmfs/dlmfs.c: fs-deduplicate-noop_backing_dev_info

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-mq-sysfs.c, block/blk-mq.c: 
	-blk-mq-fix-hctx-ctx-kobject-use-after-free.

2017-09-20  robcore <robpatershuk@gmail.com>

	* Documentation/vm/cleancache.txt, mm/cleancache.c: 
	mm-fix-cleancache-debugfs-directory-path

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/ceph/locks.c, fs/cifs/file.c, fs/lockd/svcsubs.c, fs/locks.c,
	fs/nfs/delegation.c, fs/nfs/nfs4state.c, fs/nfs/write.c,
	fs/nfsd/nfs4state.c, fs/read_write.c, include/linux/fs.h: more lock
	work

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/ceph/locks.c, fs/locks.c, fs/nfs/delegation.c,
	fs/nfs/nfs4state.c: bs

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/gup.c: another access once to read once

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/inode.c, fs/locks.c, include/linux/fs.h: 
	locks-add-a-new-struct-file_locking_context-pointer

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/locks.c: locks-have-locks_release_file-use-flock_lock_file

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/locks.c, include/linux/fs.h: 
	locks-add-new-struct-list_head-to-struct-file_lock.

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/lockd/xdr.c: remove unused func

2017-09-20  robcore <robpatershuk@gmail.com>

	* lib/mpi/mpi-cmp.c: MPILIB-Fix-comparison-of-negative-MPIs

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-mq-tag.c: 
	-blk-mq-fix-false-negative-out-of-tags-condition

2017-09-20  robcore <robpatershuk@gmail.com>

	* lib/mpi/mpi-internal.h: dox

2017-09-20  robcore <robpatershuk@gmail.com>

	* lib/mpi/mpi-cmp.c: MPILIB-Deobfuscate-mpi_cmp

2017-09-20  robcore <robpatershuk@gmail.com>

	* drivers/block/brd.c: brd-Request-from-fdisk-4k-alignment

2017-09-20  robcore <robpatershuk@gmail.com>

	* drivers/block/brd.c: brd-Fix-all-partitions-BUGs

2017-09-20  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/xip.txt, drivers/block/brd.c,
	drivers/s390/block/dcssblk.c, fs/block_dev.c, fs/ext2/xip.c,
	include/linux/blkdev.h: 
	block-Change-direct_access-calling-convention

2017-09-20  robcore <robpatershuk@gmail.com>

	* drivers/block/loop.c, drivers/block/loop.h: 
	loop-add-blk-mq.h-include

2017-09-20  robcore <robpatershuk@gmail.com>

	* drivers/block/loop.c: block-loop-don-t-handle-REQ_FUA-explicitly.

2017-09-20  robcore <robpatershuk@gmail.com>

	* drivers/block/loop.c: 
	block-loop-introduce-lo_discard-and-lo_req_flush

2017-09-20  robcore <robpatershuk@gmail.com>

	* drivers/block/loop.c: block-loop-say-goodby-to-bio.

2017-09-20  robcore <robpatershuk@gmail.com>

	* drivers/block/loop.c, drivers/block/loop.h: 
	block-loop-improve-performance-via-blk-mq

2017-09-20  robcore <robpatershuk@gmail.com>

	* drivers/block/brd.c: 
	brd-return-ENOSPC-rather-than-ENOMEM-on-page-alloc-failure

2017-09-20  robcore <robpatershuk@gmail.com>

	* drivers/block/brd.c: brd-add-support-for-rw_page.

2017-09-20  robcore <robpatershuk@gmail.com>

	* drivers/block/brd.c: brd - add ramdisk visibility option

2017-09-20  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/xip.txt, drivers/s390/block/dcssblk.c,
	fs/block_dev.c, fs/ext2/xip.c, include/linux/blkdev.h: revert that

2017-09-20  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/xip.txt, drivers/s390/block/dcssblk.c,
	fs/block_dev.c, fs/ext2/xip.c, include/linux/blkdev.h: fuck

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/asm-generic/tlb.h, mm/memory.c: 
	mm-mmu_gather-use-tlb-end-0-only-for-TLB-invalidation

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/mmap.c:  mm: fix corner case in anon_vma

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/compiler.h: revert the compiler change i don tneed
	it

2017-09-20  robcore <robpatershuk@gmail.com>

	* sep20ref.txt: ref

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/notify/fanotify/fanotify_user.c: 
	sched-fanotify-Deal-with-nested-sleeps

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/vmscan.c: mm-vmscan-prevent-kswapd-livelock-due-to-pfmemalloc

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: 
	memcg-fix-destination-cgroup-leak-on-task-charges-migration

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: 
	mm-memcontrol-switch-soft-limit-default-back-to-infinite

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/fcntl.c, include/linux/fs.h, include/uapi/asm-generic/fcntl.h: 
	vfs-renumber-FMODE_NONOTIFY-and-add-to-uniqueness;

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/rmap.c: mm-prevent-endless-growth-of-anon_vma-hierarchy

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c, block/blk-timeout.c, include/linux/blk-mq.h,
	include/linux/blk_types.h: block mq squash

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c, include/linux/blk-mq.h: 
	blk-mq-get-rid-of-cmd_size-in-the-hardware-queue

2017-09-20  robcore <robpatershuk@gmail.com>

	* lib/assoc_array.c: add missing include

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/fuse/dev.c, fs/fuse/dir.c, fs/fuse/inode.c: 
	fuse-fix-LOOKUP-vs-INIT-compat-handling.

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c, include/linux/blk-mq.h: 
	blk-mq-export-blk_mq_freeze_queue.

2017-09-20  robcore <robpatershuk@gmail.com>

	* lib/dynamic_debug.c: dox

2017-09-20  robcore <robpatershuk@gmail.com>

	* scripts/Makefile.clean: bs

2017-09-20  robcore <robpatershuk@gmail.com>

	* scripts/Makefile.clean: kbuild: Drop support for clean-rule

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-core.c, block/blk-mq-tag.c, block/blk-mq-tag.h,
	block/blk-mq.c, block/blk-mq.h: 
	block-wake-up-waiters-when-a-queue-is-marked-dying.

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/memory.c: Revert "mm/memory.c: share the i_mmap_rwsem"

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c, include/linux/blk-mq.h: 
	blk-mq-Export-freeze-unfreeze-functions

2017-09-20  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c: blk-mq-Exit-queue-on-alloc-failure

2017-09-20  robcore <robpatershuk@gmail.com>

	* tools/power/cpupower/utils/helpers/sysfs.c: bs

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/proc/meminfo.c: 
	fs-proc-meminfo.c-include-cma-info-in-proc-meminfo

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/cma.h, mm/cma.c, mm/page_alloc.c: mm: cma: split
	cma-reserved in dmesg log

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/mempolicy.c: 
	-mm-mempolicy.c-remove-unnecessary-is_valid_nodemask

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/namespace.c: mnt-Fix-a-memory-stomp-in-umount

2017-09-20  robcore <robpatershuk@gmail.com>

	* arch/arm/include/asm/spinlock.h: arm/spinlock: Replace ACCESS_ONCE
	with READ_ONCE

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/compiler.h, mm/gup.c, mm/rmap.c: 
	kernel-Provide-READ_ONCE-and-ASSIGN_ONCE.

2017-09-20  robcore <robpatershuk@gmail.com>

	* mm/memory.c: mmu_gather-fix-over-eager-tlb_flush_mmu_free-calling

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/proc_namespace.c: fs-make-mounts-and-mountstats-honor-root-dir

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/proc_namespace.c: vfs-cleanup-show_mountinfo

2017-09-20  robcore <robpatershuk@gmail.com>

	* init/do_mounts.c: init: fix read-write root mount

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/binfmt_misc.c: unfuck-binfmt_misc.c-broken-by-commit-e6084d4

2017-09-20  robcore <robpatershuk@gmail.com>

	* fs/kernfs/file.c, include/linux/migrate.h, include/linux/mm.h,
	mm/mempolicy.c, mm/migrate.c:  vm_area_operations: kill ->migrate()

2017-09-20  robcore <robpatershuk@gmail.com>

	* include/linux/uio.h, mm/filemap.c, mm/shmem.c: 
	new-helper-iter_is_iovec.

2017-09-19  robcore <robpatershuk@gmail.com>

	* fs/aio.c: fix my timing shit in aio

2017-09-19  robcore <robpatershuk@gmail.com>

	* sep19ref.txt: ref

2017-09-19  robcore <robpatershuk@gmail.com>

	* block/blk-mq-tag.c: Revert-blk-mq-Micro-optimize-bt_get

2017-09-19  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: fix no longer necessary version of set_page_owner

2017-09-19  robcore <robpatershuk@gmail.com>

	* include/linux/percpu-defs.h: bring back our little wrappers

2017-09-19  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: config

2017-09-19  robcore <robpatershuk@gmail.com>

	* fs/aio.c: aio-Skip-timer-for-io_getevents-if-timeout-0

2017-09-19  robcore <robpatershuk@gmail.com>

	* fs/aio.c, include/linux/fs.h, mm/mremap.c: 
	aio-Make-it-possible-to-remap-aio-ring.

2017-09-19  robcore <robpatershuk@gmail.com>

	* Documentation/cgroups/cpusets.txt,
	Documentation/cgroups/memory.txt: dox

2017-09-19  robcore <robpatershuk@gmail.com>

	* Documentation/local_ops.txt: dox

2017-09-19  robcore <robpatershuk@gmail.com>

	* include/linux/percpu-defs.h: 
	percpu-remove-__get_cpu_var-and-__raw_get_cpu_var

2017-09-19  robcore <robpatershuk@gmail.com>

	* fs/notify/mark.c, include/linux/fsnotify_backend.h: 
	fsnotify-remove-destroy_list-from-fsnotify_mark.

2017-09-19  robcore <robpatershuk@gmail.com>

	* fs/notify/dnotify/dnotify.c, fs/notify/fdinfo.c,
	fs/notify/fsnotify.c, fs/notify/fsnotify.h, fs/notify/inode_mark.c,
	fs/notify/inotify/inotify_fsnotify.c,
	fs/notify/inotify/inotify_user.c, fs/notify/mark.c,
	fs/notify/vfsmount_mark.c, include/linux/fsnotify_backend.h,
	kernel/audit_tree.c: fsnotify-unify-inode-and-mount-marks-handling.

2017-09-19  robcore <robpatershuk@gmail.com>

	* fs/open.c: fallocate-create-FAN_MODIFY-and-IN_MODIFY-events

2017-09-19  robcore <robpatershuk@gmail.com>

	* lib/decompress_bunzip2.c: 
	decompress_bunzip2-off-by-one-in-get_next_block

2017-09-19  robcore <robpatershuk@gmail.com>

	* include/linux/fault-inject.h, lib/fault-inject.c: 
	fault-inject-add-ratelimit-option.

2017-09-19  robcore <robpatershuk@gmail.com>

	* include/linux/ratelimit.h: ratelimit-add-initialization-macro;

2017-09-19  robcore <robpatershuk@gmail.com>

	* fs/fat/fat.h, fs/fat/file.c, fs/fat/inode.c: 
	-fat-fix-data-past-EOF-resulting-from-fsx-testsuite

2017-09-19  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: 
	mm-memcontrol.c-remove-unused-mem_cgroup_lru_names

2017-09-19  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, include/linux/slab.h,
	mm/memcontrol.c, mm/slab.c, mm/slub.c: memcg: fix possible
	use-after-free in memcg_kmem_get_cache()

2017-09-19  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: mm/memcontrol.c: fix defined but not used
	compiler warning

2017-09-19  robcore <robpatershuk@gmail.com>

	* mm/fadvise.c: dox

2017-09-19  robcore <robpatershuk@gmail.com>

	* mm/vmalloc.c: mm-vmalloc.c-fix-memory-ordering-bug.

2017-09-19  robcore <robpatershuk@gmail.com>

	* mm/oom_kill.c: 
	oom-kill-the-insufficient-and-no-longer-needed-PT_TRACE_EXIT check

2017-09-19  robcore <robpatershuk@gmail.com>

	* include/linux/oom.h, mm/memcontrol.c, mm/oom_kill.c: 
	oom-don-t-assume-that-a-coredumping-thread-will-exit.

2017-09-19  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: 
	mm-remove-the-highmem-zones-memmap-in-the-highmem-zone

2017-09-19  robcore <robpatershuk@gmail.com>

	* mm/migrate.c: 
	mm-unmapped-page-migration-avoid-unmap-remap-overhead

2017-09-19  robcore <robpatershuk@gmail.com>

	* fs/seq_file.c: fs-seq_file-fallback-to-vmalloc-instead-of-oom-kill

2017-09-19  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/ashmem.c, fs/drop_caches.c,
	include/linux/mm.h, include/linux/shrinker.h, mm/memory-failure.c,
	mm/page_alloc.c, mm/vmscan.c: mm: vmscan: invoke slab shrinkers from
	shrink_zone()

2017-09-19  robcore <robpatershuk@gmail.com>

	* include/linux/vm_event_item.h, mm/vmacache.c, mm/vmstat.c: 
	mm-vmacache-count-number-of-system-wide-flushes

2017-09-19  robcore <robpatershuk@gmail.com>

	* Documentation/vm/page_owner.txt: dox

2017-09-19  robcore <robpatershuk@gmail.com>

	* mm/page_owner.c: 
	mm-page_owner-correct-owner-information-for-early-alloc

2017-09-19  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, include/linux/page_ext.h,
	include/linux/page_owner.h, lib/Kconfig.debug, mm/Makefile,
	mm/page_alloc.c, mm/page_ext.c, mm/page_owner.c, mm/vmstat.c,
	tools/vm/Makefile, tools/vm/page_owner_sort.c: mm/page_owner: keep
	track of page owners

2017-09-19  robcore <robpatershuk@gmail.com>

	* include/linux/stacktrace.h, kernel/stacktrace.c: 
	stacktrace-introduce-snprint_stack_trace-for-buffer

2017-09-19  robcore <robpatershuk@gmail.com>

	* mm/nommu.c: mm-nommu-use-alloc_pages_exact-rather-than-its-own

2017-09-19  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt, arch/x86/mm/pageattr.c,
	include/linux/mm.h, mm/debug-pagealloc.c, mm/page_alloc.c: mm debug
	pagealloc - make debug pagealloc boottime configurable when set with
	CONFIG_DEBUG_PAGEALLOC

2017-09-19  robcore <robpatershuk@gmail.com>

	* include/linux/mm.h, include/linux/mm_types.h,
	include/linux/page-debug-flags.h, include/linux/page_ext.h,
	mm/Kconfig.debug, mm/debug-pagealloc.c, mm/page_alloc.c,
	mm/page_ext.c: mm/debug-pagealloc: prepare boottime configurable
	on/off

2017-09-19  robcore <robpatershuk@gmail.com>

	* include/linux/mmzone.h, include/linux/page_ext.h, init/main.c,
	mm/Kconfig.debug, mm/page_alloc.c, mm/page_ext.c: mm/page_ext:
	resurrect struct page extending code for debugging

2017-09-18  robcore <robpatershuk@gmail.com>

	* include/linux/gfp.h: mm, gfp: escalatedly define GFP_HIGHUSER and
	GFP_HIGHUSER_MOVABLE

2017-09-18  robcore <robpatershuk@gmail.com>

	* include/linux/kmemleak.h: include-linux-kmemleak.h-needs-slab.h.

2017-09-18  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, mm/memcontrol.c: 
	mm-memcontrol.c-remove-the-unused-arg-in-__memcg_kmem

2017-09-18  robcore <robpatershuk@gmail.com>

	* include/linux/mm_types.h, include/linux/swap.h: 
	mm-move-swp_entry_t-definition-to-include-linux-mm_t

2017-09-18  robcore <robpatershuk@gmail.com>

	* drivers/base/memory.c: 
	memory-hotplug-remove-redundant-call-of-page_to_pfn

2017-09-18  robcore <robpatershuk@gmail.com>

	* mm/hugetlb.c, mm/memory.c, mm/mmap.c: more hugetlb, and exports
	for vma and vma fault

2017-09-18  robcore <robpatershuk@gmail.com>

	* Documentation/kernel-parameters.txt: dox

2017-09-18  robcore <robpatershuk@gmail.com>

	* include/linux/sched.h, mm/memcontrol.c: further updates to memcg

2017-09-18  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: -memcg-zap-kmem_account_flags.;

2017-09-18  robcore <robpatershuk@gmail.com>

	* mm/mincore.c: mm-mincore-add-hwpoison-page-handle.

2017-09-18  robcore <robpatershuk@gmail.com>

	* mm/rmap.c: mm-rmap-calculate-page-offset-when-needed

2017-09-18  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: mm-debug-pagealloc-cleanup-page-guard-code

2017-09-18  robcore <robpatershuk@gmail.com>

	* mm/memblock.c: 
	mm-memblock.c-refactor-functions-to-set-clear-MEMBLOCK

2017-09-18  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: memcg-do-not-abuse-memcg_kmem_skip_account.

2017-09-18  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: 
	memcg-don-t-check-mm-in-__memcg_kmem_-get_cache-newp

2017-09-18  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: 
	memcg-__mem_cgroup_free-remove-stale-disarm_static_k

2017-09-18  robcore <robpatershuk@gmail.com>

	* mm/cma.c: mm-cma-align-to-physical-address-not-CMA-region

2017-09-18  robcore <robpatershuk@gmail.com>

	* mm/memory.c, mm/nommu.c: nommu and memory.c

2017-09-18  robcore <robpatershuk@gmail.com>

	* mm/memory-failure.c: mm-memory-failure-share-the-i_mmap_rwsem.

2017-09-18  robcore <robpatershuk@gmail.com>

	* mm/filemap_xip.c: mm-xip-share-the-i_mmap_rwsem

2017-09-18  robcore <robpatershuk@gmail.com>

	* include/linux/fs.h, mm/rmap.c: mm-rmap-share-the-i_mmap_rwsem

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/hugetlbfs/inode.c, fs/inode.c, include/linux/fs.h,
	include/linux/mmu_notifier.h, mm/filemap.c, mm/hugetlb.c,
	mm/mmap.c, mm/mremap.c, mm/rmap.c: mm-convert-i_mmap_mutex-to-rwsem

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/hugetlbfs/inode.c, kernel/fork.c, mm/filemap_xip.c,
	mm/fremap.c, mm/hugetlb.c, mm/memory-failure.c, mm/memory.c,
	mm/mmap.c, mm/mremap.c, mm/nommu.c, mm/rmap.c: mm: use new helper
	functions around the i_mmap_mutex

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/fuse/file.c, sep18ref.txt: ref

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/fuse/dir.c: get rid of a thing from the fuse updates

2017-09-18  robcore <robpatershuk@gmail.com>

	* include/linux/fs.h: 
	mm-fs-introduce-helpers-around-the-i_mmap_mutex

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/fuse/file.c: fuse-use-file_inode-in-fuse_file_fallocate.

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/fuse/dev.c, fs/fuse/dir.c, fs/fuse/file.c, fs/fuse/fuse_i.h,
	fs/fuse/inode.c: fuse: introduce fuse_simple_request() helper

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/fuse/fuse_i.h: fuse-reduce-max-out-args.

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/fuse/file.c, fs/fuse/fuse_i.h: 
	fuse-hold-inode-instead-of-path-after-release

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/fuse/cuse.c, fs/fuse/fuse_i.h, fs/fuse/inode.c: 
	fuse-flush-requests-on-umount

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/fuse/inode.c: fuse-don-t-wake-up-reserved-req-in-fuse_conn_kill

2017-09-18  robcore <robpatershuk@gmail.com>

	* kernel/printk/printk.c: printk: Do not disable preemption for
	accessingprintk_func

2017-09-18  robcore <robpatershuk@gmail.com>

	* block/bio.c: bio: modify __bio_add_page() to accept pages that
	dont start a new segment

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/inode.c, include/linux/fs.h, net/Makefile, net/nonet.c,
	net/socket.c: make default ->i_fop have ->open() fail with ENXIO

2017-09-18  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig: update config - turn on init
	fallback

2017-09-18  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: little cleanup, it looks like we are on the right
	track

2017-09-18  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: finish my little kernel/exit updates

2017-09-18  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: exit: reparent: introduce find_child_reaper();

2017-09-18  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: exit reparent - docx

2017-09-18  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: exit: reparent: fix the cross-namespace
	PR_SET_CHILD_SUBREAPER reparenting

2017-09-18  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: exit: reparent: fix the dead-parent
	PR_SET_CHILD_SUBREAPER reparenting

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/proc/base.c: -exit-proc-don-t-try-to-flush-proc-tgid-task-tgid

2017-09-18  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: dox

2017-09-18  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: exit: wait: drop tasklist_lock before psig->c*
	accounting

2017-09-18  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: exit-wait-don-t-use-zombie-real_parent

2017-09-18  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: exit-wait-cleanup-the-ptrace_reparented-checks

2017-09-18  robcore <robpatershuk@gmail.com>

	* sep17ref.txt: dont need ref anymore

2017-09-18  robcore <robpatershuk@gmail.com>

	* init/Kconfig, init/main.c: init: allow CONFIG_INIT_FALLBACK=n to
	disable defaults if init= fails

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/binfmt_elf.c: -fs-binfmt_elf.c-fix-internal-inconsistency

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/binfmt_misc.c: 
	fs-binfmt_misc.c-use-GFP_KERNEL-instead-of-GFP_USER

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/binfmt_misc.c: binfmt_misc-clean-up-code-style-a-bit.

2017-09-18  robcore <robpatershuk@gmail.com>

	* fs/binfmt_misc.c: dox

2017-09-18  robcore <robpatershuk@gmail.com>

	* include/linux/ptrace.h, kernel/exit.c, kernel/ptrace.c: 
	exit-ptrace-shift-reap-dead-code-from-exit_ptrace

2017-09-18  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: exit: reparent: cleanup the usage of
	reparent_leader()

2017-09-18  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: exit: reparent: cleanup the changing of ->parent

2017-09-17  robcore <robpatershuk@gmail.com>

	* drivers/base/sw_sync.c: ditto for android sync files

2017-09-17  robcore <robpatershuk@gmail.com>

	* drivers/base/sync.c: use get_unused_fd_flags in drivers/base/sync

2017-09-17  robcore <robpatershuk@gmail.com>

	* sep17ref.txt: ref

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/file.h: 
	include-linux-file.h-remove-get_unused_fd-macro

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/file.c: fs-file.c-replace-get_unused_fd-with-get_unused_fd_f

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/binfmt_misc.c: 
	binfmt_misc-replace-get_unused_fd-with-get_unused_fd

2017-09-17  robcore <robpatershuk@gmail.com>

	* kernel/exit.c: exit-reparent-use-ptrace_entry-rather-than-sibling

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/proc/array.c: fuck it

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/proc/array.c: proc: task_state: deuglify the max_fds
	calculation

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/proc/array.c: 
	proc-task_state-read-cred-group_info-outside-of-task.

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/proc/generic.c: fs-proc.c-use-rb_entry_safe-instead-of-rb_entry

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/proc/generic.c: procfs-fix-error-handling-of-proc_register.

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/proc/generic.c, fs/proc/proc_net.c, fs/proc/root.c,
	include/linux/proc_fs.h, mm/page_alloc.c: fs/proc: use a rb tree for
	the directory entries

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/oom.h, mm/oom_kill.c: make dump tasks static, only
	oom kill uses it

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, init/Kconfig, mm/debug.c,
	mm/memcontrol.c, mm/page_alloc.c: 
	mm-move-page-mem_cgroup-bad-page-handling-into-generic-code

2017-09-17  robcore <robpatershuk@gmail.com>

	* MAINTAINERS, include/linux/{page_cgroup.h => swap_cgroup.h},
	mm/Makefile, mm/memcontrol.c, mm/page_cgroup.c, mm/swap_state.c,
	mm/swapfile.c:  mm: page_cgroup: rename file to mm/swap_cgroup.c

2017-09-17  robcore <robpatershuk@gmail.com>

	* Documentation/cgroups/memory.txt, include/linux/memcontrol.h,
	include/linux/mm_types.h, include/linux/mmzone.h,
	include/linux/page_cgroup.h, init/main.c, mm/memcontrol.c,
	mm/page_alloc.c, mm/page_cgroup.c: mm - embed the memcg pointer
	directly into struct page

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: dox

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/frontswap.c: mm-frontswap.c-fix-the-condition-in-BUG_ON

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/hugetlb.c: mm-hugetlb-fix-__unmap_hugepage_range.

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, mm/memcontrol.c, mm/page-writeback.c,
	mm/rmap.c: mm-memcg-fix-potential-undefined-behaviour-in-page

2017-09-17  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/pgtable.h, fs/proc/task_mmu.c: mm: fix huge
	zero page accounting in smaps report

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, mm/memcontrol.c, mm/oom_kill.c: mm:
	memcontrol: drop bogus RCU locking from mem_cgroup_same_or_subtree()

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/memcontrol.h, mm/memcontrol.c: 
	-mm-memcontrol-pull-the-NULL-check-from-__mem_cgroup

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: mm-memcontrol-remove-bogus-NULL-check

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: mm-memcontrol-shorten-the-page-statistics-update

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/huge_memory.c: 
	thp-do-not-mark-zero-page-pmd-write-protected-explict

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/slab.h, mm/memcontrol.c, mm/slab_common.c: memcg:
	use generic slab iterators

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: 
	memcg-remove-mem_cgroup_reclaimable-check-from-soft-reclaim

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/hugetlb.h: 
	mm-hugetlb-correct-bit-shift-in-hstate_sizelog

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: 
	mm-memcontrol-fold-mem_cgroup_start_move-mem_cgroup

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: 
	mm-memcontrol-don-t-pass-a-NULL-memcg-to-mem_cgroup

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: mm-memcontrol-inline-memcg-move_lock-locking

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/page_cgroup.h, mm/memcontrol.c: and other pcg stuff

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/page_cgroup.h, mm/memcontrol.c: 
	mm-memcontrol-remove-unnecessary-PCG_MEMSW-memory;

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: mm-memcontrol-uncharge-pages-on-swapout.

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: 
	mm-memcontrol-micro-optimize-mem_cgroup_split_huge]

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: memcg-remove-activate_kmem_mutex

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: mm-memcontrol-clarify-migration-where-old-page

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: 
	-mm-memcontrol-update-mem_cgroup_page_lruvec-document.

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: 
	memcg-simplify-unreclaimable-groups-handling-in-soft.

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/compaction.c, mm/page_alloc.c: 
	mm-compaction-more-focused-lru-and-pcplists-draining.

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/compaction.c, mm/internal.h: 
	mm-compaction-always-update-cached-scanner-positions

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/compaction.c: mm-compaction-defer-only-on-COMPACT_COMPLETE

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/compaction.h, mm/compaction.c, mm/page_alloc.c: 
	-mm-compaction-simplify-deferred-compaction

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/compaction.h, mm/compaction.c, mm/internal.h,
	mm/page_alloc.c, mm/vmscan.c:  mm, compaction: pass classzone_idx and alloc_flags to watermark
	 checking

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/vmscan.c: mm-vmscan-count-only-dirty-pages-as-congested.

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: mm-verify-compound-order-when-freeing-a-page

2017-09-17  robcore <robpatershuk@gmail.com>

	* drivers/base/Kconfig: cma-make-default-CMA-area-size-zero-for-x86

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memory-failure.c, mm/memory_hotplug.c: 
	mm-memory_hotplug-failure-drain-single-zone-pcplists.patch

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: -mm-cma-drain-single-zone-pcplists

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/page_isolation.c: mm-page_isolation-drain-single-zone-pcplists

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/gfp.h, mm/memory-failure.c, mm/memory_hotplug.c,
	mm/page_alloc.c, mm/page_isolation.c: 
	mm-introduce-single-zone-pcplists-drain

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/vmscan.c: mm-vmscan.c-replace-printk-with-pr_err

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/vmalloc.c: mm-vmalloc.c-replace-printk-with-pr_warn

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/page_alloc.c: 
	mm-page_alloc.c-convert-boot-printks-without-log-level

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: 
	mm-memcontrol-remove-synchronous-stock-draining-code

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: 
	mm-memcontrol-continue-cache-reclaim-from-offlined

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/memcontrol.c: 
	mm-memcontrol-convert-reclaim-iterator-to-simple-css

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/page_counter.h, mm/memcontrol.c:  mm: memcontrol: remove obsolete kmemcg pinning

2017-09-17  robcore <robpatershuk@gmail.com>

	* arch/arm/configs/canadefconfig, include/linux/cgroup.h,
	include/linux/percpu-refcount.h, mm/memcontrol.c: 
	mm-memcontrol-take-a-css-reference-for-each-charged

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/net/tcp_memcontrol.h: fix a thing

2017-09-17  robcore <robpatershuk@gmail.com>

	* Documentation/cgroups/memory.txt, arch/arm/configs/canadefconfig,
	init/Kconfig, kernel/Makefile, kernel/res_counter.c: remove
	rescounters

2017-09-17  robcore <robpatershuk@gmail.com>

	* Documentation/cgroups/hugetlb.txt,
	include/linux/hugetlb_cgroup.h, init/Kconfig, mm/hugetlb_cgroup.c: 
	-mm-hugetlb_cgroup-convert-to-lockless-page-counters.

2017-09-17  robcore <robpatershuk@gmail.com>

	* Documentation/cgroups/memory.txt, include/linux/memcontrol.h,
	include/linux/page_counter.h, include/net/sock.h, init/Kconfig,
	mm/Makefile, mm/memcontrol.c, net/ipv4/tcp_memcontrol.c: mm:
	memcontrol: lockless page counters

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/slab.h: slab-replace-smp_read_barrier_depends-with-lockless

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/slab.c, mm/slub.c: slab-improve-checking-for-invalid-gfp_flags

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/slub.c: mm-slub-fix-format-mismatches-in-slab_err-callers.

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/slab_common.c: mm-slab-reverse-iteration-on-find_mergeable

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/slab.c, mm/slab.h, mm/slab_common.c: dox

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/slab.c, mm/slub.c: dox

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/char_dev.c: 
	fs-char_dev.c-remove-pointless-assignment-from-__reg

2017-09-17  robcore <robpatershuk@gmail.com>

	* lib/dma-debug.c: dma-debug-prevent-early-callers-from-crashing

2017-09-17  robcore <robpatershuk@gmail.com>

	* lib/dma-debug.c: dma-debug-introduce-dma_debug_disabled.

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq-sysfs.c: 
	blk-mq-Fix-uninitialized-kobject-at-CPU-hotplugging

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq-cpumap.c: blk-mq-Use-all-available-hardware-queues

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq-tag.c: -blk-mq-Micro-optimize-bt_get.

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq-tag.c: 
	blk-mq-Fix-a-race-between-bt_clear_tag-and-bt_get

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq-tag.c: 
	blk-mq-Avoid-that-__bt_get_word-wraps-multiple-times.;

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-core.c, block/blk-sysfs.c: blk-mq-Fix-a-use-after-free.

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c, block/blk-mq.h: blk-mq: prevent unmapped hw queue
	from being scheduled

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/uio.h, mm/iov_iter.c: copy_from_iter_nocache

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/uio.h, mm/iov_iter.c: new-helper-iov_iter_kvec.

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/uio.h, mm/iov_iter.c: csum_and_copy_..._iter()

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/uio.h, mm/iov_iter.c: 
	iov_iter.c-handle-ITER_KVEC-directly

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq-tag.c: blk-mq: re-check for available tags after
	running the hardware queue

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq-tag.c: blk-mq-fix-hang-in-bt_get.

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/mount.h, fs/namespace.c, fs/proc/inode.c, fs/proc/internal.h,
	fs/proc/namespaces.c, include/linux/ipc_namespace.h,
	include/linux/ns_common.h, include/linux/pid_namespace.h,
	include/linux/proc_ns.h, include/linux/user_namespace.h,
	include/linux/utsname.h, include/net/net_namespace.h,
	init/version.c, ipc/msgutil.c, ipc/namespace.c, kernel/nsproxy.c,
	kernel/pid.c, kernel/pid_namespace.c, kernel/user.c,
	kernel/user_namespace.c, kernel/utsname.c,
	net/core/net_namespace.c, pos.sh: possed

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, fs/proc/internal.h, fs/proc/namespaces.c,
	include/linux/proc_ns.h, kernel/nsproxy.c, net/core/net_namespace.c: 
	gonna revert this one

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, fs/proc/inode.c, include/linux/ns_common.h,
	init/version.c, ipc/msgutil.c, ipc/namespace.c, kernel/nsproxy.c,
	kernel/pid.c, kernel/pid_namespace.c, kernel/user_namespace.c,
	kernel/utsname.c, net/core/net_namespace.c: 
	copy-address-of-proc_ns_ops-into-ns_common

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, include/linux/proc_ns.h, ipc/namespace.c,
	kernel/pid_namespace.c, kernel/user_namespace.c, kernel/utsname.c,
	net/core/net_namespace.c: new-helpers-ns_alloc_inum-ns_free_inum

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, fs/proc/inode.c, fs/proc/namespaces.c,
	include/linux/proc_ns.h, ipc/namespace.c, kernel/utsname.c,
	net/core/net_namespace.c: and others

2017-09-17  robcore <robpatershuk@gmail.com>

	* net/core/net_namespace.c: netns-switch-get-put-install-inum;

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/namespace.c: make-mntns-get-put-install-inum-work-with-mnt_ns

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/mount.h, fs/namespace.c, include/linux/ipc_namespace.h,
	include/linux/ns_common.h, include/linux/pid_namespace.h,
	include/linux/user_namespace.h, include/linux/utsname.h,
	include/net/net_namespace.h, init/version.c, ipc/msgutil.c,
	ipc/namespace.c, kernel/pid.c, kernel/pid_namespace.c,
	kernel/user.c, kernel/user_namespace.c, kernel/utsname.c,
	net/core/net_namespace.c: 
	common-object-embedded-into-various-struct-.ns

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/ext4/ialloc.c: couple of minor ext4 cleanups

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/ext4/Kconfig: dox

2017-09-17  robcore <robpatershuk@gmail.com>

	* lib/genalloc.c: cant export what we dont have

2017-09-17  robcore <robpatershuk@gmail.com>

	* lib/genalloc.c: 
	lib-genalloc.c-export-devm_gen_pool_create-for-modules

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/uapi/linux/Kbuild, include/{ => uapi}/linux/kcmp.h: kcmp:
	Move kcmp.h into uapi

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/namespace.c: mnt-Clear-mnt_expire-during-pivot_root

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/namespace.c: mnt-Carefully-set-CL_UNPRIVILEGED-in-clone_mnt

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/namespace.c, fs/pnode.c: 
	mnt-Move-the-clear-of-MNT_LOCKED-from-copy_tree

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/namespace.c: umount-Do-not-allow-unmounting-rootfs.

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c: 
	blk-mq-move-the-kdump-check-to-blk_mq_alloc_tag_set.

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/iov_iter.c: a bunch more iov_iter updates

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/iov_iter.c: iov_iter.c: convert iov_iter_npages() to
	iterate_all_kinds

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/exfat/exfat_super.c: exfat - cut out my middle man idea

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/debugfs/inode.c, include/linux/debugfs.h: forward declaration
	for struct device

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/iov_iter.c: iov_iter.c-iterate_and_advance.;

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/iov_iter.c: iov_iter.c-macros-for-iterating-over-iov_iter

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/debugfs/file.c, include/linux/debugfs.h: debugfs: add helper
	function to create device related seq_file

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq-tag.c: blk-mq-cleanup-tag-free-handling

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/lockd/svclock.c, include/linux/lockd/debug.h: 
	lockd-eliminate-LOCKD_DEBUG;

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq-cpumap.c: 
	blk-mq-use-nr_cpu_ids-as-highest-CPU-ID-count-for-hw

2017-09-17  robcore <robpatershuk@gmail.com>

	* lib/rhashtable.c: 
	rhashtable-Check-for-count-mismatch-while-iterating

2017-09-17  robcore <robpatershuk@gmail.com>

	* drivers/md/dm.c, drivers/md/md.c: 
	md-use-generic-io-stats-accounting-functions

2017-09-17  robcore <robpatershuk@gmail.com>

	* drivers/md/bcache/request.c: 
	md-bcache-use-generic-io-stats-accounting-functions

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c: blk-mq-handle-the-single-queue-case-in-blk_mq_hctx

2017-09-17  robcore <robpatershuk@gmail.com>

	* crypto/crypto_user.c: 
	crypto-user-Allow-get-request-with-empty-driver-name

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/percpu-refcount.h: percpu-ref: fix DEAD flag
	contamination of percpu pointer

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/binfmt_elf.c: binfmt_elf: Hoist ELF program header loading to a
	function

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/ext4/extents.c: reverted extents

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/ext4/extents.c: this was a bad idea

2017-09-17  robcore <robpatershuk@gmail.com>

	* arch/arm/kernel/Makefile, arch/arm/kernel/entry-common.S,
	arch/arm/kernel/entry-ftrace.S: 
	ARM-move-ftrace-assembly-code-to-separate-file.

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/ext4/extents.c: ext4: fix partial cluster initialization

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c, include/linux/blk-mq.h: 
	blk-mq-add-blk_mq_free_hctx_request

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c: blk-mq-export-blk_mq_free_request

2017-09-17  robcore <robpatershuk@gmail.com>

	* arch/microblaze/include/asm/tlb.h, include/asm-generic/tlb.h,
	mm/memory.c: mmu_gather: move minimal range calculations into
	generic code

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/rhashtable.h, lib/rhashtable.c: rhashtable: Drop
	gfp_flags arg in insert/remove functions

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/rhashtable.h, lib/rhashtable.c: rhashtable: Add
	parent argument to mutex_is_held

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/cpuidle.h, include/linux/rhashtable.h,
	lib/rhashtable.c: rhashtable-Move-mutex_is_held-under-PROVE_LOCKING

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq-tag.c, block/blk-mq.c, include/linux/blk-mq.h: 
	blk-mq-add-blk_mq_unique_tag

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c: blkmq - use get_cpu/put_cpu instead of preempt
	funcs

2017-09-17  robcore <robpatershuk@gmail.com>

	* block/blk-mq.c: blk_mq: call preempt_disable/enable in  blk_mq_run_hw_queue, and only if needed

2017-09-17  robcore <robpatershuk@gmail.com>

	* kernel/trace/blktrace.c, kernel/trace/ring_buffer.c: kill trace
	crap

2017-09-17  robcore <robpatershuk@gmail.com>

	* drivers/char/tty_io.c, drivers/gpu/msm/kgsl.c,
	drivers/gpu/msm/kgsl_drm.c, drivers/media/isdbtmm/tuner_spi.c,
	drivers/media/video/msm_wfd/wfd-ioctl.c, drivers/misc/pmem.c,
	drivers/staging/android/ashmem.c, drivers/video/msm/mdp4_overlay.c,
	drivers/video/msm/mdp_ppp.c, fs/ecryptfs/inode.c,
	security/selinux/sec/secfs.c: convert other legacy things too

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/ecryptfs/file.c: fix it in ecryptfs too

2017-09-17  robcore <robpatershuk@gmail.com>

	* drivers/char/msm_rotator.c: fix msm rotator using f_dentry

2017-09-17  robcore <robpatershuk@gmail.com>

	* arch/arm/common/sa1111.c, arch/arm/kernel/bios32.c,
	arch/arm/kernel/etm.c, arch/arm/kernel/fiq.c,
	arch/arm/kernel/irq.c, arch/arm/kernel/machine_kexec.c,
	arch/arm/kernel/module.c, arch/arm/kernel/swp_emulate.c,
	arch/arm/kernel/thumbee.c, arch/arm/kernel/traps.c,
	arch/arm/kernel/xscale-cp0.c, arch/arm/mm/alignment.c,
	arch/arm/mm/cache-feroceon-l2.c, arch/arm/mm/cache-tauros2.c,
	arch/arm/mm/fault-armv.c, arch/arm/mm/mmu.c,
	arch/arm/nwfpe/fpmodule.c, arch/arm/vfp/vfpsingle.c: dox

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/ext4/ext4.h, fs/ext4/mballoc.c, fs/ext4/resize.c,
	fs/ext4/super.c: ext4: kill ext4_kvfree()

2017-09-17  robcore <robpatershuk@gmail.com>

	* kernel/trace/ring_buffer.c: 
	ring-buffer-Remove-check-of-trace_seq_-puts-printf

2017-09-17  robcore <robpatershuk@gmail.com>

	* kernel/trace/blktrace.c: 
	blktrace-tracing-Use-trace_seq_has_overflowed-helper

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/isofs/inode.c: bs

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/exfat/exfat_super.c: introducing mxdentry - a (maybe temporary)
	solution for exfat woes

2017-09-17  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/porting, include/linux/fs.h: 
	kill-f_dentry-macro.

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/dcache.c: dcache-fix-kmemcheck-warning-in-switch_names.

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/open.c, fs/xattr.c, include/linux/audit.h, ipc/mqueue.c,
	kernel/auditsc.c: new helper: audit_file()

2017-09-17  robcore <robpatershuk@gmail.com>

	* drivers/scsi/lpfc/lpfc_debugfs.c, fs/ceph/dir.c,
	fs/ecryptfs/crypto.c, fs/ecryptfs/mmap.c, fs/sync.c,
	include/linux/cgroup.h, kernel/auditsc.c, kernel/events/core.c,
	kernel/taskstats.c, mm/memcontrol.c, security/commoncap.c: kill
	f_dentry uses

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/lockd/svcsubs.c: lockd-get-rid-of-f_path.dentry-d_sb

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/proc/base.c: procfs-get-rid-of-f_dentry

2017-09-17  robcore <robpatershuk@gmail.com>

	* arch/x86/ia32/ia32_aout.c, drivers/scsi/lpfc/lpfc_debugfs.c,
	fs/9p/vfs_inode_dotl.c, fs/afs/dir.c, fs/afs/inode.c,
	fs/afs/mntpt.c, fs/afs/write.c, fs/autofs4/expire.c,
	fs/autofs4/root.c, fs/binfmt_aout.c, fs/cachefiles/namei.c,
	fs/cachefiles/xattr.c, fs/ceph/debugfs.c, fs/ceph/dir.c,
	fs/ceph/file.c, fs/configfs/dir.c, fs/fuse/file.c, fs/jfs/namei.c,
	fs/ntfs/namei.c, fs/ocfs2/dcache.c, fs/ocfs2/dlmfs/dlmfs.c,
	fs/ocfs2/dlmglue.c, fs/reiserfs/xattr.c: assorted conversions to
	%p[dD]

2017-09-17  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/porting, fs/ceph/inode.c,
	fs/fuse/dir.c, fs/kernfs/dir.c, fs/nfs/dir.c, fs/nfs/getroot.c,
	include/linux/dcache.h: 
	switch-d_materialise_unique-users-to-d_splice_alias

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/dcache.c, include/linux/dcache.h: 
	merge-d_materialise_unique-into-d_splice_alias

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/dcache.c: d_add_ci() should just accept a hashed exact match if
	it finds one

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/jbd/journal.c: 
	jbd-Deletion-of-an-unnecessary-check-before-the-func

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/read_write.c, include/linux/fs.h: VFS: refactor vfs_read()

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/block_dev.c, fs/ioctl.c, include/linux/fs.h: 
	fs-add-freeze_super-thaw_super-fs-hooks

2017-09-17  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/hash.h, arch/x86/lib/hash.c,
	include/asm-generic/hash.h, include/linux/hash.h, lib/Makefile,
	lib/hash.c: Revert "fast_hash: avoid indirect function calls"

2017-09-17  robcore <robpatershuk@gmail.com>

	* drivers/video/console/fbcon.c: 
	fbcon-Change-fbcon_init-from-module_init-to-fs_init

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/hugetlb.h, mm/gup.c: mm: Update generic gup
	implementation to handle | hugepage directory

2017-09-17  robcore <robpatershuk@gmail.com>

	* kernel/trace/ftrace.c: 
	ftrace-Have-the-control_ops-get-a-trampoline.

2017-09-17  robcore <robpatershuk@gmail.com>

	* MAINTAINERS: bs

2017-09-17  robcore <robpatershuk@gmail.com>

	* lib/rhashtable.c: lib: rhashtable - Remove weird non-ASCII
	characters from comments

2017-09-17  robcore <robpatershuk@gmail.com>

	* mm/zbud.c, mm/zswap.c: dox

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/ext2/ext2.h, fs/ext2/super.c, fs/ext3/ext3.h, fs/ext3/super.c,
	fs/ext4/ext4.h, fs/ext4/super.c, fs/inode.c, fs/jfs/jfs_incore.h,
	fs/jfs/super.c, fs/quota/dquot.c, fs/super.c, include/linux/fs.h: fs
	- convert to using i_dquot field and remove from inode

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/quota/dquot.c, include/linux/fs.h: 
	quota-Use-function-to-provide-i_dquot-pointers

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/quota/quota.c, fs/super.c, include/linux/fs.h,
	include/linux/quota.h: quota-Allow-each-filesystem-to-specify-quota

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/quota/dquot.c, include/linux/quotaops.h: 
	quota-Remove-const-from-function-declarations.

2017-09-17  robcore <robpatershuk@gmail.com>

	* drivers/staging/android/ashmem.c, fs/ioctl.c, fs/open.c,
	include/linux/fs.h, mm/madvise.c: 
	VFS-Rename-do_fallocate-to-vfs_fallocate.

2017-09-17  robcore <robpatershuk@gmail.com>

	* include/linux/io.h, lib/devres.c: 
	devres-support-sizes-greater-than-an-unsigned-long

2017-09-17  robcore <robpatershuk@gmail.com>

	* fs/lockd/mon.c: lockd-ratelimit-lockd-cannot-monitor-messages

2017-09-16  robcore <robpatershuk@gmail.com>

	* include/net/bluetooth/l2cap.h, net/bluetooth/l2cap_core.c,
	net/bluetooth/l2cap_sock.c:  Bluetooth: Properly check L2CAP config option output buffer length

2017-09-16  robcore <robpatershuk@gmail.com>

	* fs/notify/inotify/inotify_user.c: bring back the inotify user
	thing now maybe?

2017-09-16  robcore <robpatershuk@gmail.com>

	* include/linux/fs.h: well fuck it was easy as changing it in the
	fucking header

2017-09-16  robcore <robpatershuk@gmail.com>

	* fs/notify/inotify/inotify_user.c: i removed inotify_show_fdinfo
	from the user file...i guess?

2017-09-16  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/seq_file.txt, fs/seq_file.c,
	include/linux/seq_file.h:  seq_file: Rename seq_overflow() to seq_has_overflowed() and make
	 public

2017-09-16  robcore <robpatershuk@gmail.com>

	* arch/x86/include/asm/hash.h, arch/x86/lib/hash.c,
	include/asm-generic/hash.h, include/linux/hash.h, lib/Makefile,
	lib/hash.c: fast_hash: avoid indirect function calls

2017-09-16  robcore <robpatershuk@gmail.com>

	* Documentation/filesystems/debugfs.txt, fs/debugfs/file.c,
	include/linux/debugfs.h: debugfs: Have debugfs_print_regs32() return
	void

2017-09-16  robcore <robpatershuk@gmail.com>

	* fs/eventfd.c, fs/eventpoll.c, fs/notify/fdinfo.c,
	fs/notify/fdinfo.h, fs/proc/fd.c, fs/signalfd.c, fs/timerfd.c: fs:
	Convert show_fdinfo functions to void

2017-09-16  robcore <robpatershuk@gmail.com>

	* fs/ext4/move_extent.c: 
	ext4-move_extent-improve-bh-vanishing-success-factor

2017-09-16  robcore <robpatershuk@gmail.com>

	* fs/quota/dquot.c: quota - add log level to printk

2017-09-16  robcore <robpatershuk@gmail.com>

	* fs/coda/coda_linux.c, fs/coda/coda_linux.h, fs/coda/dir.c,
	fs/ncpfs/dir.c, include/linux/fs.h: -new-helper-is_root_inode.

2017-09-16  robcore <robpatershuk@gmail.com>

	* arch/alpha/kernel/osf_sys.c, fs/afs/dir.c, fs/compat.c,
	fs/ecryptfs/file.c, fs/exportfs/expfs.c, fs/fat/dir.c,
	fs/gfs2/export.c, fs/hppfs/hppfs.c, fs/nfsd/nfs4recover.c,
	fs/nfsd/vfs.c, fs/nfsd/vfs.h, fs/ocfs2/dir.c, fs/ocfs2/journal.c,
	fs/readdir.c, fs/reiserfs/xattr.c, include/linux/fs.h: 
	vfs-make-first-argument-of-dir_context.actor-typed

2017-09-16  robcore <robpatershuk@gmail.com>

	* drivers/char/raw.c: 
	Return-short-read-or-0-at-end-of-a-raw-device-not-EINVAL

2017-09-16  robcore <robpatershuk@gmail.com>

	* bs

